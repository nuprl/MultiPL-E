language: java
name: HumanEval_29_filter_by_prefix
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                result.add(str);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> ret = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                ret.add(s);\n            }\n        }\n        return ret;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Write your code here.\n        return new ArrayList<String>();\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxjgybks_.java:20)\n"
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Write your code here\n        return new ArrayList<String>();\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2itrvqc8.java:20)\n"
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return new ArrayList<String>();\n}\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpulcj2jb2.java:19)\n"
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.filterByPrefix(java.util.ArrayList,\
    \ String)\" is null\n\tat Problem.main(tmp4pb3wbq0.java:18)\n"
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // YOUR CODE HERE\n        return null;\n}\n    public\
    \ static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.filterByPrefix(java.util.ArrayList,\
    \ String)\" is null\n\tat Problem.main(tmprje46183.java:19)\n"
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> r = new ArrayList<String>();\n \
    \       for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                r.add(s);\n            }\n        }\n        return r;\n}\n \
    \   public static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                res.add(s);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Remove the line below and implement this function\n\
    \        return new ArrayList<String>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpza07y3h9.java:20)\n"
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> arrayList = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                arrayList.add(s);\n            }\n        }\n        return arrayList;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // YOUR CODE HERE\n        return new ArrayList<String>();\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpugday0xt.java:20)\n"
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> results = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                results.add(s);\n            }\n        }\n        return results;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // remove lines when function body is empty\n    \
    \    return new ArrayList<String>();\n}\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvphmzd5m.java:20)\n"
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                res.add(s);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> out = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                out.add(s);\n            }\n        }\n        return out;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filteredStrings = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filteredStrings.add(string);\n            }\n        }\n\
    \        return filteredStrings;\n}\n    public static void main(String[] args)\
    \ {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                res.add(str);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Fill in here...\n        return null;\n}\n    public\
    \ static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.filterByPrefix(java.util.ArrayList,\
    \ String)\" is null\n\tat Problem.main(tmpzpjjljmo.java:19)\n"
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                res.add(s);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.indexOf(prefix)\
    \ == 0) {\n                result.add(string);\n            }\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010931
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered_strings = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered_strings.add(string);\n            }\n        }\n\
    \        return filtered_strings;\n}\n    public static void main(String[] args)\
    \ {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010931
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(x -> x.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> prefix_strings = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                prefix_strings.add(string);\n            }\n        }\n \
    \       return prefix_strings;\n}\n    public static void main(String[] args)\
    \ {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010931
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(str -> str.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> prefix_strings = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                prefix_strings.add(s);\n            }\n        }\n        return\
    \ prefix_strings;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010931
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                res.add(s);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                result.add(str);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> myArrayList = new ArrayList<String>();\n\
    \        for (String word : strings) {\n            String word1 = word.substring(0,\
    \ prefix.length());\n            if (word1.equals(prefix)) {\n               \
    \ myArrayList.add(word);\n            }\n        }\n        return myArrayList;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Implementation\n        return new ArrayList<String>();\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphqxt9khn.java:20)\n"
  stdout: ''
  timestamp: 1660010931
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.length() >= prefix.length()\
    \ && s.substring(0, prefix.length()).equals(prefix)) {\n                res.add(s);\n\
    \            }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010931
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.length() >= prefix.length()\
    \ && s.substring(0, prefix.length()).equals(prefix)) {\n                res.add(s);\n\
    \            }\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010931
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(word -> word.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // return null; // your code here\n        ArrayList<String>\
    \ filtered = new ArrayList<String>();\n        for (String s : strings) {\n  \
    \          if (s.startsWith(prefix)) {\n                filtered.add(s);\n   \
    \         }\n        }\n        return filtered;\n}\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> ret = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                ret.add(s);\n            }\n        }\n        return ret;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> output = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                output.add(s);\n            }\n        }\n        return output;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010931
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Write your code here.\n        return new ArrayList<String>();\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxjgybks_.java:20)\n"
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                res.add(s);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                result.add(str);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(x -> x.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return (ArrayList<String>)strings.stream().filter(s\
    \ -> s.startsWith(prefix)).collect(Collectors.toList());\n}\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> stringsFilt = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                stringsFilt.add(str);\n            }\n        }\n       \
    \ return stringsFilt;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010931
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String word : strings) {\n            if (word.startsWith(prefix))\
    \ {\n                result.add(word);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> prefixFiltered = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                prefixFiltered.add(str);\n            }\n        }\n    \
    \    return prefixFiltered;\n}\n    public static void main(String[] args) {\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                result.add(str);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> output = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix))\n \
    \               output.add(s);\n        }\n        return output;\n}\n    public\
    \ static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> toReturn = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix))\n \
    \               toReturn.add(s);\n        }\n        return toReturn;\n}\n   \
    \ public static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return (ArrayList<String>) strings.stream().filter(string\
    \ -> string.startsWith(prefix)).collect(Collectors.toList());\n}\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        throw new RuntimeException(\"TODO\");\n}\n    public\
    \ static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.RuntimeException: TODO\n\tat Problem.filterByPrefix(tmp4f42omsu.java:15)\n\
    \tat Problem.main(tmp4f42omsu.java:18)\n"
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // TODO: Write this method. \n        ArrayList<String>\
    \ output = new ArrayList<String>();\n        for (String s : strings) {\n    \
    \        if (s.startsWith(prefix)) {\n                output.add(s);\n       \
    \     }\n        }\n        return output;\n}\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n\tArrayList<String> result = new ArrayList<String>();\n\t\
    for (String string : strings) {\n\t    if (string.startsWith(prefix)) {\n\t\t\
    result.add(string);\n\t    }\n\t}\n\treturn result;\n}\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> list = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                list.add(s);\n            }\n        }\n        return list;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered_strings = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered_strings.add(s);\n            }\n        }\n        return\
    \ filtered_strings;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> results = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                results.add(s);\n            }\n        }\n        return results;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return (ArrayList<String>) strings.stream().filter(x\
    \ -> x.startsWith(prefix)).collect(Collectors.toList());\n}\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                result.add(str);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> results = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                results.add(string);\n            }\n        }\n        return\
    \ results;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered_strings = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered_strings.add(s);\n            }\n        }\n        return\
    \ filtered_strings;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        if (strings == null) {\n            return new ArrayList<String>();\n\
    \        }\n        ArrayList<String> result = new ArrayList<String>();\n    \
    \    for (String s : strings) {\n            if (s.startsWith(prefix)) {\n   \
    \             result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // TODO: Fill this in.\n}\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpxowyaxe9.java:16: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String i : strings) {\n            if (i.startsWith(prefix)) {\n\
    \                res.add(i);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.indexOf(prefix) == 0) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return new ArrayList<String>();\n}\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpulcj2jb2.java:19)\n"
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> out = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                out.add(s);\n            }\n        }\n        return out;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        //>>> filter_by_prefix([], 'a')\n        // []\n \
    \       //>>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n        //\
    \ ['abc', 'array']\n        ArrayList<String> startWithPrefix = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                startWithPrefix.add(str);\n            }\n        }\n   \
    \     return startWithPrefix;\n}\n    public static void main(String[] args) {\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // TODO: implement this function\n        ArrayList<String>\
    \ ans = new ArrayList<String>();\n        for (String str : strings) {\n     \
    \       if (str.startsWith(prefix)) {\n                ans.add(str);\n       \
    \     }\n        }\n        return ans;\n}\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                filtered.add(str);\n            }\n        }\n        return\
    \ filtered;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filterList = new ArrayList<String>();\n\
    \        for (String x : strings) {\n            if (x.startsWith(prefix)) {\n\
    \                filterList.add(x);\n            }\n        }\n        return\
    \ filterList;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        throw new UnsupportedOperationException(\"Implement\
    \ me!\");\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Implement\
    \ me!\n\tat Problem.filterByPrefix(tmp8_u31prw.java:15)\n\tat Problem.main(tmp8_u31prw.java:18)\n"
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n\tArrayList<String> matches = new ArrayList<String>();\n\t\
    for (String s : strings) {\n\t    if (s.startsWith(prefix)) {\n\t\tmatches.add(s);\n\
    \t    }\n\t}\n\treturn matches;\n}\n    public static void main(String[] args)\
    \ {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.filterByPrefix(java.util.ArrayList,\
    \ String)\" is null\n\tat Problem.main(tmp4pb3wbq0.java:18)\n"
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        if (strings.size() == 0) {\n            return result;\n        }\n \
    \       for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filt = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filt.add(string);\n            }\n        }\n        return\
    \ filt;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                res.add(str);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix))\n \
    \               result.add(s);\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> ans = new ArrayList<String>();\n\
    \        // TODO: your code here.\n        return ans;\n}\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgixprzxf.java:21)\n"
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        int prefixLen = prefix.length();\n        for (String str : strings)\
    \ {\n            if (str.length() < prefixLen) {\n                continue;\n\
    \            }\n            String prefixStr = str.substring(0, prefixLen);\n\
    \            if (prefixStr.equals(prefix)) {\n                result.add(str);\n\
    \            }\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        // Your code here.\n        for (String s : strings) {\n            if\
    \ (s.startsWith(prefix)) {\n                result.add(s);\n            }\n  \
    \      }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> newList = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                newList.add(s);\n            }\n        }\n        return newList;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> prefixlist = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.substring(0, prefix.length()).equals(prefix))\
    \ {\n                prefixlist.add(str);\n            }\n        }\n        return\
    \ prefixlist;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Fill in this method to return a list of strings.\n\
    \        return null;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.filterByPrefix(java.util.ArrayList,\
    \ String)\" is null\n\tat Problem.main(tmp5nooewb2.java:19)\n"
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        // Implement this function.\n        return filtered;\n}\n    public\
    \ static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv0fkycja.java:21)\n"
  stdout: ''
  timestamp: 1660010933
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return new ArrayList<String>();\n}\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpulcj2jb2.java:19)\n"
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                filtered.add(str);\n            }\n        }\n        return\
    \ filtered;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> results = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                results.add(string);\n            }\n        }\n        return\
    \ results;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> output = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                output.add(str);\n            }\n        }\n        return\
    \ output;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010934
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix))\n \
    \               result.add(s);\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> list = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                list.add(s);\n            }\n        }\n        return list;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> results = new ArrayList<String>();\n\
    \        // Fill in your code here.\n        return results;\n}\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpxhoy2on_.java:21)\n"
  stdout: ''
  timestamp: 1660010934
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return new ArrayList<>(strings.stream().filter(str\
    \ -> str.startsWith(prefix)).collect(Collectors.toList()));\n}\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010934
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> ret = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                ret.add(s);\n            }\n        }\n        return ret;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                res.add(str);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return (ArrayList<String>)strings.stream().filter(x\
    \ -> x.startsWith(prefix)).collect(Collectors.toList());\n}\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010934
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                filtered.add(str);\n            }\n        }\n        return\
    \ filtered;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        // WRITE YOUR CODE HERE\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsr60rwdm.java:21)\n"
  stdout: ''
  timestamp: 1660010934
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.indexOf(prefix) == 0) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010934
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings;\n}\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpikk9djgp.java:19)\n"
  stdout: ''
  timestamp: 1660010934
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return null;\n}\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.filterByPrefix(java.util.ArrayList,\
    \ String)\" is null\n\tat Problem.main(tmp4pb3wbq0.java:18)\n"
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered.add(s);\n            }\n        }\n        return filtered;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings;\n}\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpikk9djgp.java:19)\n"
  stdout: ''
  timestamp: 1660010934
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // **************************\n        // Write your\
    \ code here.\n        ArrayList<String> result = new ArrayList<String>();\n  \
    \      for (String s : strings) {\n            if (s.startsWith(prefix)) {\n \
    \               result.add(s);\n            }\n        }\n        return result;\n\
    \        // **************************\n}\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010934
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\n\
    \                result.add(string);\n        }\n        return result;\n}\n \
    \   public static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010934
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(t -> t.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // array = [x for x in strings if x.startswith(prefix)]\n\
    \        ArrayList<String> array = new ArrayList<String>();\n        for (String\
    \ x : strings) {\n            if (x.startsWith(prefix)) {\n                array.add(x);\n\
    \            }\n        }\n        return array;\n}\n    public static void main(String[]\
    \ args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return (ArrayList<String>) strings.stream().filter(i\
    \ -> i.startsWith(prefix)).collect(Collectors.toList());\n}\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> out = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                out.add(s);\n            }\n        }\n        return out;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\n\
    \                res.add(string);\n        }\n        return res;\n}\n    public\
    \ static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010934
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> output = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                output.add(string);\n            }\n        }\n        return\
    \ output;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010934
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Problem code here\n        ArrayList<String> solution\
    \ = new ArrayList<String>();\n        for (String string : strings) {\n      \
    \      if (string.startsWith(prefix)) {\n                solution.add(string);\n\
    \            }\n        }\n        return solution;\n}\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010934
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> ret = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                ret.add(s);\n            }\n        }\n        return ret;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> temp = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                temp.add(s);\n            }\n        }\n        return temp;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> ans = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                ans.add(s);\n            }\n        }\n        return ans;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix))\n \
    \               res.add(s);\n        }\n        return res;\n}\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> results = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                results.add(s);\n            }\n        }\n        return results;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filteredStrings = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filteredStrings.add(string);\n            }\n        }\n\
    \        return filteredStrings;\n}\n    public static void main(String[] args)\
    \ {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())), (\"john\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                res.add(s);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                res.add(s);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                result.add(string);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return new ArrayList<String>();\n}\n    public static\
    \ void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpulcj2jb2.java:19)\n"
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                filtered.add(str);\n            }\n        }\n        return\
    \ filtered;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> ans = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                ans.add(str);\n            }\n        }\n        return ans;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                res.add(str);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                filtered.add(str);\n            }\n        }\n        return\
    \ filtered;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Your code here.\n        return null;\n}\n    public\
    \ static void main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"java.util.ArrayList.equals(Object)\" because the return value of \"Problem.filterByPrefix(java.util.ArrayList,\
    \ String)\" is null\n\tat Problem.main(tmp8jjf2zfb.java:19)\n"
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // TODO: Implement this.\n        return new ArrayList<String>();\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3n1i_q5x.java:20)\n"
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                result.add(str);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                res.add(s);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        throw new UnsupportedOperationException(\"Not implemented.\"\
    );\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented.\n\tat Problem.filterByPrefix(tmpyqlj5v8f.java:15)\n\tat Problem.main(tmpyqlj5v8f.java:18)\n"
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> ans = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                ans.add(string);\n            }\n        }\n        return\
    \ ans;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered_strings = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filtered_strings.add(s);\n            }\n        }\n        return\
    \ filtered_strings;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010933
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(s -> s.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                result.add(str);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String str : strings) {\n            if (str.startsWith(prefix))\
    \ {\n                result.add(str);\n            }\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String word : strings) {\n            if (word.startsWith(prefix))\
    \ {\n                filtered.add(word);\n            }\n        }\n        return\
    \ filtered;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filteredStrings = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                filteredStrings.add(s);\n            }\n        }\n        return\
    \ filteredStrings;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> filtered = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                filtered.add(string);\n            }\n        }\n       \
    \ return filtered;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(x -> x.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010932
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> output = new ArrayList<String>();\n\
    \        for (String string : strings) {\n            if (string.startsWith(prefix))\
    \ {\n                output.add(string);\n            }\n        }\n        return\
    \ output;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010934
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return strings.stream().filter(item -> item.startsWith(prefix)).collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                result.add(s);\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010930
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        // Your solution here...\n}\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpt5e59tqg.java:16: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> matching_strings = new ArrayList<String>();\n\
    \        for (String s : strings) {\n            if (s.startsWith(prefix)) {\n\
    \                matching_strings.add(s);\n            }\n        }\n        return\
    \ matching_strings;\n}\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        return new ArrayList<>(strings.stream().filter(s ->\
    \ s.startsWith(prefix)).collect(Collectors.toList()));\n}\n    public static void\
    \ main(String[] args) {\n    assert(filterByPrefix((new ArrayList<String>(Arrays.asList())),\
    \ (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"asd\", (String)\"\
    xxy\", (String)\"john doe\", (String)\"xxxAAA\", (String)\"xxx\"))), (\"xxx\"\
    )).equals((new ArrayList<String>(Arrays.asList((String)\"xxx\", (String)\"xxxAAA\"\
    , (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010935
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Filter an input list of strings only for ones that start\
    \ with a given prefix.\n    // >>> filter_by_prefix([], 'a')\n    // []\n    //\
    \ >>> filter_by_prefix(['abc', 'bcd', 'cde', 'array'], 'a')\n    // ['abc', 'array']\n\
    \    public static ArrayList<String> filterByPrefix(ArrayList<String> strings,\
    \ String prefix) {\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        int length = prefix.length();\n        for (String s : strings) {\n \
    \           if (s.length() >= length && s.substring(0, length).equals(prefix))\
    \ {\n                res.add(s);\n            }\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(filterByPrefix((new\
    \ ArrayList<String>(Arrays.asList())), (\"john\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(filterByPrefix((new ArrayList<String>(Arrays.asList((String)\"xxx\"\
    , (String)\"asd\", (String)\"xxy\", (String)\"john doe\", (String)\"xxxAAA\",\
    \ (String)\"xxx\"))), (\"xxx\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    xxx\", (String)\"xxxAAA\", (String)\"xxx\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010935

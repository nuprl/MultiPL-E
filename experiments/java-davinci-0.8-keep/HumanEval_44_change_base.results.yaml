language: java
name: HumanEval_44_change_base
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuffer sb = new StringBuffer();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String s = \"\";\n        if (x\
    \ == 0) {\n            return \"0\";\n        }\n        while (x > 0) {\n   \
    \         s = x % base + s;\n            x /= base;\n        }\n        return\
    \ s;\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuffer sb = new StringBuffer();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        // TODO: Fill in your code here.\n\
    \        // hint: use % and /\n        if (x == 0) return \"0\";\n        int\
    \ tmp = x;\n        StringBuilder builder = new StringBuilder();\n        while\
    \ (tmp > 0) {\n            builder.append(tmp % base);\n            tmp /= base;\n\
    \        }\n        return builder.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String result = \"\";\n      \
    \  while (x > 0) {\n            result = String.valueOf(x % base) + result;\n\
    \            x /= base;\n        }\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder builder = new StringBuilder();\n\
    \        while (x > 0) {\n            builder.append(x % base);\n            x\
    \ /= base;\n        }\n        return builder.reverse().toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) return \"0\";\n  \
    \      String result = \"\";\n        while (x > 0) {\n            result = (x\
    \ % base) + result;\n            x /= base;\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuffer sb = new StringBuffer();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        // >>> change_base(8, 3)\n   \
    \     // '22'\n        // >>> change_base(8, 2)\n        // '1000'\n        //\
    \ >>> change_base(7, 2)\n        // '111'\n        // >>> change_base(1000, 2)\n\
    \        // '1111101000'\n        return \"\";\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpi04r2qif.java:30)\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return null;\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.changeBase(int,\
    \ int)\" is null\n\tat Problem.main(tmps1pik22_.java:22)\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        // YOUR CODE HERE\n        return\
    \ \"\";\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzgds68i_.java:23)\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String result = \"\";\n      \
    \  while (x > 0) {\n            result = x % base + result;\n            x /=\
    \ base;\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String result = \"\";\n      \
    \  while (x > 0) {\n            result = Integer.toString(x % base) + result;\n\
    \            x /= base;\n        }\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x < base) {\n            return\
    \ Integer.toString(x);\n        }\n        int tail = x % base;\n        int rest\
    \ = x / base;\n        return changeBase(rest, base) + Integer.toString(tail);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder answer = new StringBuilder();\n\
    \        while (x > 0) {\n            answer.append(x % base);\n            x\
    \ /= base;\n        }\n        return answer.reverse().toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String result = \"\";\n      \
    \  int rem;\n        while (x > 0) {\n            rem = x % base;\n          \
    \  x = x / base;\n            result = String.valueOf(rem) + result;\n       \
    \ }\n        return result;\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String ans = \"\";\n        while\
    \ (x != 0) {\n            ans = String.valueOf(x % base) + ans;\n            x\
    \ /= base;\n        }\n        return ans;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x != 0) {\n            sb.append(x % base);\n            x /=\
    \ base;\n        }\n        return sb.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        int temp = x;\n        List<Integer>\
    \ digits = new ArrayList<>();\n        while (temp > 0) {\n            digits.add(temp\
    \ % base);\n            temp /= base;\n        }\n        Collections.reverse(digits);\n\
    \        StringBuilder sb = new StringBuilder();\n        for (int d : digits)\
    \ {\n            sb.append(d);\n        }\n        return sb.toString();\n}\n\
    \    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String res = \"\";\n        while\
    \ (x > 0) {\n            res = x % base + res;\n            x /= base;\n     \
    \   }\n        return res;\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String ret = \"\";\n        while\
    \ (x > 0) {\n            ret = (x % base) + ret;\n            x /= base;\n   \
    \     }\n        return ret;\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String s = \"\";\n        while\
    \ (x > 0) {\n            s = (x % base) + s;\n            x /= base;\n       \
    \ }\n        return s;\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x != 0) {\n            sb.append(x % base);\n            x /=\
    \ base;\n        }\n        return sb.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) return \"0\";\n  \
    \      StringBuilder sb = new StringBuilder();\n        while (x > 0) {\n    \
    \        sb.append(x % base);\n            x /= base;\n        }\n        return\
    \ sb.reverse().toString();\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        int mod = x % base;\n        int\
    \ div = x / base;\n        if (div == 0) {\n            return String.valueOf(mod);\n\
    \        }\n        return changeBase(div, base) + String.valueOf(mod);\n}\n \
    \   public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuffer sb = new StringBuffer();\n\
    \        while (x != 0) {\n            sb.append(x % base);\n            x /=\
    \ base;\n        }\n        return sb.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String result = \"\";\n      \
    \  while (x > 0) {\n            result = (x % base) + result;\n            x /=\
    \ base;\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String res = \"\";\n        while\
    \ (x > 0) {\n            res = Integer.toString(x % base) + res;\n           \
    \ x /= base;\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder answer = new StringBuilder();\n\
    \        while (x > 0) {\n            answer.append(x % base);\n            x\
    \ /= base;\n        }\n        return answer.reverse().toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x < base) return Integer.toString(x);\n\
    \        int n = x / base;\n        int k = x % base;\n        return changeBase(n,\
    \ base) + Integer.toString(k);\n}\n    public static void main(String[] args)\
    \ {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        // write your code here\n    \
    \    return null;\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.changeBase(int,\
    \ int)\" is null\n\tat Problem.main(tmpo2t19ki1.java:23)\n"
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return new BigInteger(Integer.toString(x)).toString(base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String ret = \"\";\n        while\
    \ (x > 0) {\n            ret = x % base + ret;\n            x /= base;\n     \
    \   }\n        return ret;\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        // given a number x and base,\
    \ convert it to base.\n        //\n        // >>> change_base(8, 3)\n        //\
    \ '22'\n        // >>> change_base(8, 2)\n        // '1000'\n        // >>> change_base(7,\
    \ 2)\n        // '111'\n        //\n\n        if (x < 0)\n            return \"\
    \";\n        if (x < base)\n            return \"\" + x;\n        else\n     \
    \       return changeBase(x / base, base) + (x % base);\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuffer sb = new StringBuffer();\n\
    \        while (x != 0) {\n            sb.append(x % base);\n            x /=\
    \ base;\n        }\n        return sb.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        int maxPower = 1;\n        for (int i = 0; i < 30; i++) {\n         \
    \   if (x < Math.pow(base, i)) {\n                maxPower = i - 1;\n        \
    \        break;\n            }\n        }\n        while (maxPower >= 0) {\n \
    \           int k = x / (int) Math.pow(base, maxPower);\n            x -= k *\
    \ (int) Math.pow(base, maxPower);\n            sb.append(k);\n            maxPower--;\n\
    \        }\n        return sb.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        int[] digits = new int[100];\n\
    \        int len = 0;\n        for (len = 0; x > 0; len++) {\n            digits[len]\
    \ = x % base;\n            x /= base;\n        }\n        StringBuilder sb = new\
    \ StringBuilder();\n        for (int i = len - 1; i >= 0; i--) {\n           \
    \ sb.append(digits[i]);\n        }\n        return sb.toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String ans = \"\";\n        while\
    \ (x != 0) {\n            ans = x % base + ans;\n            x /= base;\n    \
    \    }\n        return ans;\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String result = \"\";\n      \
    \  while (x != 0) {\n            result = String.valueOf(x % base) + result;\n\
    \            x /= base;\n        }\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String ret = \"\";\n        while\
    \ (x != 0) {\n            int m = x % base;\n            ret = String.valueOf(m)\
    \ + ret;\n            x /= base;\n        }\n        return ret;\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String ret = \"\";\n        int\
    \ a = x, b = base;\n        while (a > 0) {\n            ret = String.valueOf(a\
    \ % b) + ret;\n            a /= b;\n        }\n        return ret;\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        //return Integer.toString(x, base);\n\
    \        StringBuilder sb = new StringBuilder();\n        while (x > 0) {\n  \
    \          sb.append(x % base);\n            x /= base;\n        }\n        return\
    \ sb.reverse().toString();\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x != 0) {\n            sb.append(x % base);\n            x /=\
    \ base;\n        }\n        return sb.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        int xCopy = x;\n        ArrayList<Integer>\
    \ resultList = new ArrayList<Integer>();\n        if (x == 0) {\n            return\
    \ \"0\";\n        }\n        while (x > 0) {\n            resultList.add(x % base);\n\
    \            x /= base;\n        }\n        Collections.reverse(resultList);\n\
    \        return resultList.stream().map(Object::toString).collect(Collectors.joining());\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String s = Integer.toString(x,\
    \ base);\n        return s;\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x != 0) {\n            sb.append(x % base);\n            x /=\
    \ base;\n        }\n        return sb.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        // ToDo\n        int _x = x;\n\
    \        String _base = \"\";\n        while (_x != 0) {\n            int digit\
    \ = _x % base;\n            _base = digit + _base;\n            _x = _x / base;\n\
    \        }\n        return _base;\n}\n    public static void main(String[] args)\
    \ {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String ret = \"\";\n        while\
    \ (x != 0) {\n            ret = Integer.toString(x % base) + ret;\n          \
    \  x /= base;\n        }\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return \"\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ntxbb1d.java:22)\n"
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        int quotient = x;\n        String\
    \ result = \"\";\n        while (quotient > 0) {\n            result = String.valueOf(quotient\
    \ % base) + result;\n            quotient = quotient / base;\n        }\n    \
    \    return result;\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String res = \"\";\n        for\
    \ (; x != 0; x /= base)\n            res = x % base + res;\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String binary = \"\";\n      \
    \  while (x != 0) {\n            binary = Integer.toString(x % base) + binary;\n\
    \            x /= base;\n        }\n        return binary;\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String result = \"\";\n      \
    \  while (x != 0) {\n            result = x % base + result;\n            x /=\
    \ base;\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x != 0) {\n            sb.append(x % base);\n            x /=\
    \ base;\n        }\n        return sb.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) {\n            return\
    \ \"0\";\n        }\n        int temp = x;\n        String result = \"\";\n  \
    \      while (temp > 0) {\n            result = (temp % base) + result;\n    \
    \        temp /= base;\n        }\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        int r = 0;\n        String s =\
    \ \"\";\n        while (x > 0) {\n            r = x % base;\n            x = x\
    \ / base;\n            s = s + Integer.toString(r);\n        }\n        return\
    \ new StringBuilder(s).reverse().toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String result = \"\";\n      \
    \  while (x > 0) {\n            result = String.valueOf(x % base) + result;\n\
    \            x /= base;\n        }\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder builder = new StringBuilder();\n\
    \        while (x > 0) {\n            builder.append(x % base);\n            x\
    \ /= base;\n        }\n        return builder.reverse().toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuffer sb = new StringBuffer();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String res = \"\";\n        while\
    \ (x > 0) {\n            res = Integer.toString(x % base) + res;\n           \
    \ x /= base;\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) {\n            return\
    \ \"0\";\n        }\n        String ans = \"\";\n        while (x > 0) {\n   \
    \         ans = x % base + ans;\n            x /= base;\n        }\n        return\
    \ ans;\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) return \"0\";\n  \
    \      StringBuilder sb = new StringBuilder();\n        while (x > 0) {\n    \
    \        sb.append(x % base);\n            x /= base;\n        }\n        return\
    \ sb.reverse().toString();\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String res = \"\";\n        while\
    \ (x > 0) {\n            res = String.valueOf(x % base) + res;\n            x\
    \ /= base;\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder res = new StringBuilder();\n\
    \        while (x > 0) {\n            res.append(x % base);\n            x /=\
    \ base;\n        }\n        return res.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String ans = \"\";\n        while\
    \ (x > 0) {\n            ans = String.valueOf(x % base) + ans;\n            x\
    \ /= base;\n        }\n        return ans;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return \"\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ntxbb1d.java:22)\n"
  stdout: ''
  timestamp: 1660011408
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String ans = \"\";\n        while\
    \ (x != 0) {\n            int reminder = x % base;\n            ans = ans + Integer.toString(reminder);\n\
    \            x = x / base;\n        }\n        return ans;\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpl__s4i9o.java:29)\n"
  stdout: ''
  timestamp: 1660011409
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder builder = new StringBuilder();\n\
    \        while (x > 0) {\n            builder.append(x % base);\n            x\
    \ /= base;\n        }\n        return builder.reverse().toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String binary = \"\";\n      \
    \  while (x != 0) {\n            int r = x % base;\n            x = x / base;\n\
    \            binary = binary + r;\n        }\n        return binary;\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpewb8xxe3.java:29)\n"
  stdout: ''
  timestamp: 1660011410
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        assert(base > 1 && base < 10);\n\
    \        StringBuilder res = new StringBuilder();\n        while (x > 0) {\n \
    \           res.append(x % base);\n            x /= base;\n        }\n       \
    \ return res.reverse().toString();\n}\n    public static void main(String[] args)\
    \ {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x < base) {\n            return\
    \ String.valueOf(x);\n        }\n        return changeBase(x / base, base) + String.valueOf(x\
    \ % base);\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        int curr = x;\n        StringBuffer\
    \ sb = new StringBuffer();\n        while (curr > 0) {\n            sb.append(curr\
    \ % base);\n            curr /= base;\n        }\n        return sb.reverse().toString();\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011410
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) return \"0\";\n  \
    \      StringBuilder sb = new StringBuilder();\n        while (x > 0) {\n    \
    \        sb.append(x % base);\n            x /= base;\n        }\n        return\
    \ sb.reverse().toString();\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        int n = (int) (Math.log(x) / Math.log(base))\
    \ + 1;\n        int[] a = new int[n];\n        for (int i = 0; i < n; i++) {\n\
    \            a[i] = x % base;\n            x /= base;\n        }\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (int i = n - 1; i >= 0; i--) {\n    \
    \        sb.append(a[i]);\n        }\n        return sb.toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011410
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder builder = new StringBuilder();\n\
    \        while (x > 0) {\n            builder.append(x % base);\n            x\
    \ /= base;\n        }\n        return builder.reverse().toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder out = new StringBuilder();\n\
    \        for (; x >= base; x /= base) {\n            out.append(x % base);\n \
    \       }\n        out.append(x);\n        return out.reverse().toString();\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        // Implement changeBase method.\n\
    \        return null;\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.changeBase(int,\
    \ int)\" is null\n\tat Problem.main(tmpb1nubfdx.java:23)\n"
  stdout: ''
  timestamp: 1660011409
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return null;\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.changeBase(int,\
    \ int)\" is null\n\tat Problem.main(tmps1pik22_.java:22)\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return null;\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.changeBase(int,\
    \ int)\" is null\n\tat Problem.main(tmps1pik22_.java:22)\n"
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String str = \"\";\n        while\
    \ (x > 0) {\n            str = String.valueOf(x % base) + str;\n            x\
    \ /= base;\n        }\n        return str;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011410
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String s = \"\";\n        int\
    \ y = x;\n        while (y > 0) {\n            int m = y % base;\n           \
    \ s = m + s;\n            y = y / base;\n        }\n        return s;\n}\n   \
    \ public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String res = \"\";\n        int\
    \ i = 0;\n        while (x > 0) {\n            int rem = x % base;\n         \
    \   x = x / base;\n            res = rem + res;\n        }\n        return res;\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011410
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String s = \"\";\n        while\
    \ (x > 0) {\n            s = x % base + s;\n            x /= base;\n        }\n\
    \        return s;\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011410
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String result = \"\";\n      \
    \  while (x != 0) {\n            result = Integer.toString(x % base) + result;\n\
    \            x /= base;\n        }\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011410
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        int remainder = x;\n        int\
    \ dividend = x;\n        int quotient = 0;\n        String result = \"\";\n  \
    \      // since x cannot have digits more than 9, the resulting string's length\
    \ will be at most\n        // int length = (int) Math.log10(x) + 1;\n        while\
    \ (dividend > 0) {\n            quotient = dividend / base;\n            remainder\
    \ = dividend % base;\n            dividend = quotient;\n            result = String.valueOf(remainder)\
    \ + result;\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011410
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x != 0) {\n            sb.append(x % base);\n            x /=\
    \ base;\n        }\n        return sb.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) {\n            return\
    \ \"0\";\n        }\n        String res = \"\";\n        while (x > 0) {\n   \
    \         res = String.valueOf(x % base) + res;\n            x /= base;\n    \
    \    }\n        return res;\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011410
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder res = new StringBuilder();\n\
    \        while (x > 0) {\n            res.append(x % base);\n            x /=\
    \ base;\n        }\n        return res.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        int quotient = x;\n        String\
    \ result = \"\";\n        while (quotient > 0) {\n            int remainder =\
    \ quotient % base;\n            quotient = quotient / base;\n            result\
    \ = Integer.toString(remainder) + result;\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String res = \"\";\n        while\
    \ (x > 0) {\n            res = String.valueOf(x % base) + res;\n            x\
    \ /= base;\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        // Write your code here\n    \
    \    String res = \"\";\n        while (x != 0) {\n            res = x % base\
    \ + res;\n            x /= base;\n        }\n        return res;\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder result = new StringBuilder();\n\
    \        int digit = 1;\n        while (digit <= x) {\n            digit *= base;\n\
    \        }\n        digit /= base;\n        while (digit >= 1) {\n           \
    \ int x_digit = x / digit;\n            result.append(Integer.toString(x_digit));\n\
    \            x = x - x_digit * digit;\n            digit /= base;\n        }\n\
    \        return result.toString();\n}\n    public static void main(String[] args)\
    \ {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String s = \"\";\n        while\
    \ (x > 0) {\n            s = Integer.toString(x % base) + s;\n            x /=\
    \ base;\n        }\n        return s;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        int i = 0;\n        int num =\
    \ x;\n        while (num > 0) {\n            i++;\n            num /= base;\n\
    \        }\n        char[] chs = new char[i];\n        num = x;\n        while\
    \ (num > 0) {\n            chs[--i] = (char)(num % base + '0');\n            num\
    \ /= base;\n        }\n        return new String(chs);\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        // Please define your own method\n\
    \        return \"\";\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpp7el9t3p.java:23)\n"
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder binary = new StringBuilder();\n\
    \        do {\n            binary.append(x % base);\n            x /= base;\n\
    \        } while (x > 0);\n        return binary.reverse().toString();\n}\n  \
    \  public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x != 0) {\n            sb.append(x % base);\n            x /=\
    \ base;\n        }\n        return sb.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        ArrayList<Integer> digits = new\
    \ ArrayList<>();\n        while (x != 0) {\n            digits.add(x % base);\n\
    \            x /= base;\n        }\n        return digits.stream().map(Object::toString).collect(Collectors.joining(\"\
    \"));\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpanv71eik.java:28)\n"
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) return \"0\";\n  \
    \      String s = \"\";\n        while (x > 0) {\n            s = x % base + s;\n\
    \            x /= base;\n        }\n        return s;\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String ans = \"\";\n        while\
    \ (x != 0) {\n            ans = (x % base) + ans;\n            x /= base;\n  \
    \      }\n        return ans;\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String s = \"\";\n        while\
    \ (x > 0) {\n            s = String.valueOf(x % base) + s;\n            x /= base;\n\
    \        }\n        return s;\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x != 0) {\n            sb.append(x % base);\n            x /=\
    \ base;\n        }\n        return sb.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String s = \"\";\n        while\
    \ (x != 0) {\n            s = (x % base) + s;\n            x /= base;\n      \
    \  }\n        return s;\n}\n    public static void main(String[] args) {\n   \
    \ assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"\
    100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String s = \"\";\n        while\
    \ (x > 0) {\n            s = Integer.toString(x % base) + s;\n            x /=\
    \ base;\n        }\n        return s;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String result = \"\";\n      \
    \  while (x > 0) {\n            result = x % base + result;\n            x /=\
    \ base;\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String result = \"\";\n      \
    \  while (x > 0) {\n            result = String.valueOf(x % base) + result;\n\
    \            x /= base;\n        }\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n\t    String ans = \"\";\n\t    while\
    \ (x != 0) {\n\t        ans = (x % base) + ans;\n\t        x /= base;\n\t    }\n\
    \t    return ans;\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder ret = new StringBuilder();\n\
    \        while (x > 0) {\n            ret.append(x % base);\n            x /=\
    \ base;\n        }\n        return ret.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder result = new StringBuilder();\n\
    \        while (x > 0) {\n            result.append(x % base);\n            x\
    \ /= base;\n        }\n        return result.reverse().toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String ret = \"\";\n        while\
    \ (x > 0) {\n            ret = Integer.toString(x % base) + ret;\n           \
    \ x /= base;\n        }\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder ans = new StringBuilder();\n\
    \        while (x != 0) {\n            ans.append(x % base);\n            x /=\
    \ base;\n        }\n        return ans.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String ans = \"\";\n        do\
    \ {\n            ans = (x % base) + ans;\n            x /= base;\n        } while\
    \ (x > 0);\n        return ans;\n}\n    public static void main(String[] args)\
    \ {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (; x > 0; x /= base)\n            sb.append(x % base);\n        return\
    \ sb.reverse().toString();\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String res = \"\";\n        if\
    \ (x == 0) {\n            return \"0\";\n        }\n        while (x > 0) {\n\
    \            res = (x % base) + res;\n            x /= base;\n        }\n    \
    \    return res;\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        //\n        //\n        // WRITE\
    \ YOUR CODE HERE\n        //\n        //\n        return \"\";\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgxky_k9b.java:27)\n"
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String str = \"\";\n        while\
    \ (x > 0) {\n            str = Integer.toString(x % base) + str;\n           \
    \ x /= base;\n        }\n        return str;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        // Your Code Here\n\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: '/tmp/tmpocwdpjkd.java:21: error: missing return statement

    }

    ^

    1 error

    '
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        // Check if x is less than base.\n\
    \        if (x < base) {\n            return Integer.toString(x);\n        }\n\
    \        // recursively get the string representation\n        return changeBase(x\
    \ / base, base) + Integer.toString(x % base);\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuffer ans = new StringBuffer();\n\
    \        while (x != 0) {\n            ans.append(x % base);\n            x /=\
    \ base;\n        }\n        return ans.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder ans = new StringBuilder();\n\
    \        while (x > 0) {\n            ans.append(x % base);\n            x /=\
    \ base;\n        }\n        return ans.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String s = \"\";\n        while\
    \ (x > 0) {\n            s = Integer.toString(x % base) + s;\n            x /=\
    \ base;\n        }\n        return s;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011411
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n\tStringBuilder sb = new StringBuilder();\n\
    \twhile (x != 0) {\n\t    sb.append(x % base);\n\t    x /= base;\n\t}\n\treturn\
    \ sb.reverse().toString();\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String res = \"\";\n        for\
    \ (int i = 0; i < 32; i++) {\n            if ((x & (1 << i)) > 0) {\n        \
    \        res = \"1\" + res;\n            } else {\n                res = \"0\"\
    \ + res;\n            }\n        }\n        String r = Integer.toString(Integer.parseInt(res,\
    \ 2), base);\n        return r;\n}\n    public static void main(String[] args)\
    \ {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        // TODO\n        return null;\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.changeBase(int,\
    \ int)\" is null\n\tat Problem.main(tmpa8c7_t3f.java:23)\n"
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String str = \"\";\n        while\
    \ (x > 0) {\n            str = (x % base) + str;\n            x /= base;\n   \
    \     }\n        return str;\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        // Write your code here\n    \
    \    // To print results to the standard output you can use System.out.println()\n\
    \        // Example: System.out.println(\"Hello world!\");\n        // do not\
    \ forget to import\n        // import java.io.*;\n        // or import java.io.PrintStream;\n\
    \        // depending on your IDE.\n        return null;\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.changeBase(int,\
    \ int)\" is null\n\tat Problem.main(tmpoatw1kkg.java:29)\n"
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String result = \"\";\n      \
    \  while (x > 0) {\n            result = Integer.toString(x % base) + result;\n\
    \            x /= base;\n        }\n        return result;\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x < base) {\n            return\
    \ String.valueOf(x);\n        }\n        return changeBase(x / base, base) + String.valueOf(x\
    \ % base);\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        // eg. 7 (base10) = 111 (base2)\n\
    \        // eg. 7 (base10) = 222 (base3)\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String result = \"\";\n      \
    \  while (x > 0) {\n            result = (x % base) + result;\n            x /=\
    \ base;\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        // assume input values are valid.\n\
    \        String s = \"\";\n        while (x > 0) {\n            s = String.valueOf(x\
    \ % base) + s;\n            x /= base;\n        }\n        return s;\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String res = \"\";\n        for\
    \ (; x > 0; x /= base) {\n            res = String.valueOf(x % base) + res;\n\
    \        }\n        return res;\n}\n    public static void main(String[] args)\
    \ {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) return \"0\";\n  \
    \      boolean negative = false;\n        if (x < 0) {\n            negative =\
    \ true;\n            x = -x;\n        }\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        if (negative) sb.append(\"-\");\n        return sb.reverse().toString();\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) {\n            return\
    \ \"0\";\n        }\n        String result = \"\";\n        while (x > 0) {\n\
    \            result = x % base + result;\n            x /= base;\n        }\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"\
    100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder str = new StringBuilder();\n\
    \        while (x > 0) {\n            str.append(x % base);\n            x /=\
    \ base;\n        }\n        return str.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        int div = x, mod = 0;\n      \
    \  StringBuilder buffer = new StringBuilder();\n        do {\n            mod\
    \ = div % base;\n            div = div / base;\n            buffer.append(mod);\n\
    \        } while (div != 0);\n        return buffer.reverse().toString();\n}\n\
    \    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuffer result = new StringBuffer();\n\
    \        while (x > 0) {\n            result.append(x % base);\n            x\
    \ /= base;\n        }\n        return result.reverse().toString();\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return \"\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ntxbb1d.java:22)\n"
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        int r;\n        String ret = \"\
    \";\n        while (x > 0) {\n            r = x % base;\n            ret = Integer.toString(r)\
    \ + ret;\n            x = x / base;\n        }\n        return ret;\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) {\n            return\
    \ \"0\";\n        }\n        StringBuilder sb = new StringBuilder();\n       \
    \ while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String ret = \"\";\n        while\
    \ (x > 0) {\n            ret = x % base + ret;\n            x /= base;\n     \
    \   }\n        return ret;\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) {\n            return\
    \ \"0\";\n        }\n\n        int p = base, res = x;\n        StringBuilder sb\
    \ = new StringBuilder();\n        while (res > 0) {\n            sb.append(res\
    \ % p);\n            res /= p;\n        }\n        return sb.reverse().toString();\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) return \"0\";\n  \
    \      List<Integer> ret = new ArrayList<>();\n        while (x > 0) {\n     \
    \       ret.add(x % base);\n            x /= base;\n        }\n        Collections.reverse(ret);\n\
    \        return ret.stream().map(Object::toString).collect(Collectors.joining());\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return \"\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ntxbb1d.java:22)\n"
  stdout: ''
  timestamp: 1660011408
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return x == 0 ? \"\" : changeBase(x\
    \ / base, base) + (x % base);\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder str = new StringBuilder();\n\
    \        while (x > 0) {\n            str.append(x % base);\n            x /=\
    \ base;\n        }\n        return str.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder res = new StringBuilder();\n\
    \        while (x > 0) {\n            res.append(x % base);\n            x /=\
    \ base;\n        }\n        return res.reverse().toString();\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011409
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        int div = x / base;\n        int\
    \ mod = x % base;\n        StringBuilder sb = new StringBuilder();\n        sb.append(mod);\n\
    \        while (div > 0) {\n            mod = div % base;\n            div = div\
    \ / base;\n            sb.append(mod);\n        }\n        sb.reverse();\n   \
    \     return sb.toString();\n}\n    public static void main(String[] args) {\n\
    \    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) return \"0\";\n  \
    \      String res = \"\";\n        while (x > 0) {\n            res = x % base\
    \ + res;\n            x /= base;\n        }\n        return res;\n}\n    public\
    \ static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011412
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return \"\";\n}\n    public static\
    \ void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp1ntxbb1d.java:22)\n"
  stdout: ''
  timestamp: 1660011408
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        //Implement code here\n      \
    \  return \"\";\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp53zfci3h.java:23)\n"
  stdout: ''
  timestamp: 1660011413
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        String s = \"\";\n        for\
    \ (; x > 0; x /= base)\n            s = x % base + s;\n        return s;\n}\n\
    \    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011413
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        return Integer.toString(x, base);\n\
    }\n    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        StringBuilder sb = new StringBuilder();\n\
    \        while (x > 0) {\n            sb.append(x % base);\n            x /= base;\n\
    \        }\n        return sb.reverse().toString();\n}\n    public static void\
    \ main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n\
    \    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011407
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) {\n            return\
    \ \"0\";\n        }\n\n        final int MAX_DIGITS = 8;\n\n        // We will\
    \ use a stack to store the remainders.\n        Stack<Character> stack = new Stack<>();\n\
    \n        while (x > 0) {\n            int digit = x % base;\n            stack.push((char)(digit\
    \ + '0'));\n            x /= base;\n        }\n\n        StringBuilder result\
    \ = new StringBuilder();\n        while (!stack.isEmpty()) {\n            result.append(stack.pop());\n\
    \        }\n\n        return result.toString();\n}\n    public static void main(String[]\
    \ args) {\n    assert(changeBase((8), (3)).equals((\"22\")));\n    assert(changeBase((9),\
    \ (3)).equals((\"100\")));\n    assert(changeBase((234), (2)).equals((\"11101010\"\
    )));\n    assert(changeBase((16), (2)).equals((\"10000\")));\n    assert(changeBase((8),\
    \ (2)).equals((\"1000\")));\n    assert(changeBase((7), (2)).equals((\"111\")));\n\
    \    assert(changeBase((2), (3)).equals((\"2\")));\n    assert(changeBase((3),\
    \ (4)).equals((\"3\")));\n    assert(changeBase((4), (5)).equals((\"4\")));\n\
    \    assert(changeBase((5), (6)).equals((\"5\")));\n    assert(changeBase((6),\
    \ (7)).equals((\"6\")));\n    assert(changeBase((7), (8)).equals((\"7\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011413
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        if (x == 0) {\n            return\
    \ \"0\";\n        }\n        if (x < 0) {\n            return \"-\" + changeBase(-x,\
    \ base);\n        }\n        return changeBase(x / base, base) + x % base;\n}\n\
    \    public static void main(String[] args) {\n    assert(changeBase((8), (3)).equals((\"\
    22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n    assert(changeBase((234),\
    \ (2)).equals((\"11101010\")));\n    assert(changeBase((16), (2)).equals((\"10000\"\
    )));\n    assert(changeBase((8), (2)).equals((\"1000\")));\n    assert(changeBase((7),\
    \ (2)).equals((\"111\")));\n    assert(changeBase((2), (3)).equals((\"2\")));\n\
    \    assert(changeBase((3), (4)).equals((\"3\")));\n    assert(changeBase((4),\
    \ (5)).equals((\"4\")));\n    assert(changeBase((5), (6)).equals((\"5\")));\n\
    \    assert(changeBase((6), (7)).equals((\"6\")));\n    assert(changeBase((7),\
    \ (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpbmv9xjww.java:28)\n"
  stdout: ''
  timestamp: 1660011413
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Change numerical base of input number x to base.\n   \
    \ // return string representation after the conversion.\n    // base numbers are\
    \ less than 10.\n    // >>> change_base(8, 3)\n    // '22'\n    // >>> change_base(8,\
    \ 2)\n    // '1000'\n    // >>> change_base(7, 2)\n    // '111'\n    public static\
    \ String changeBase(int x, int base) {\n        //TODO: write code here\n    \
    \    return null;\n}\n    public static void main(String[] args) {\n    assert(changeBase((8),\
    \ (3)).equals((\"22\")));\n    assert(changeBase((9), (3)).equals((\"100\")));\n\
    \    assert(changeBase((234), (2)).equals((\"11101010\")));\n    assert(changeBase((16),\
    \ (2)).equals((\"10000\")));\n    assert(changeBase((8), (2)).equals((\"1000\"\
    )));\n    assert(changeBase((7), (2)).equals((\"111\")));\n    assert(changeBase((2),\
    \ (3)).equals((\"2\")));\n    assert(changeBase((3), (4)).equals((\"3\")));\n\
    \    assert(changeBase((4), (5)).equals((\"4\")));\n    assert(changeBase((5),\
    \ (6)).equals((\"5\")));\n    assert(changeBase((6), (7)).equals((\"6\")));\n\
    \    assert(changeBase((7), (8)).equals((\"7\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke\
    \ \"String.equals(Object)\" because the return value of \"Problem.changeBase(int,\
    \ int)\" is null\n\tat Problem.main(tmpse9xdikr.java:23)\n"
  stdout: ''
  timestamp: 1660011413

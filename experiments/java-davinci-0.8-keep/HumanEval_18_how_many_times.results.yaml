language: java
name: HumanEval_18_how_many_times
results:
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int originalSize = string.length();\n \
    \       string = string.replace(substring, \"\");\n        return (originalSize\
    \ - string.length()) / substring.length();\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcsep621i.java:24)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int counter = 0;\n        int index = 0;\n\
    \        while(true) {\n            index = string.indexOf(substring, index);\n\
    \            if(index == -1)\n                break;\n            counter += 1;\n\
    \            index += 1;\n        }\n        return counter;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int ret = 0;\n        int fromIdx = 0;\n\
    \        while (true) {\n            int idx = string.indexOf(substring, fromIdx);\n\
    \            if (idx == -1) {\n                break;\n            }\n       \
    \     fromIdx = idx + 1;\n            ret += 1;\n        }\n        return ret;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int c=0;\n        for(int i=0;i<string.length();i++){\n\
    \            c+=string.substring(i).startsWith(substring)?1:0;\n        }\n  \
    \      return c;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        if(string.isEmpty()\
    \ || substring.isEmpty()) return count;\n        int i = 0;\n        while(i <\
    \ string.length()) {\n            if(i + substring.length() > string.length())\
    \ break;\n            String part = string.substring(i, i + substring.length());\n\
    \            if(part.equals(substring)) {\n                count += 1;\n     \
    \           i += substring.length();\n            } else {\n                i\
    \ += 1;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg4ejhlsn.java:35)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        if (string.isEmpty()\
    \ || substring.isEmpty()) {\n            return count;\n        }\n        //\
    \ string = \"aaa\"\n        // substring = \"aa\"\n        // index(0) = \"a\"\
    \n        // index(1) = \"a\"\n        // index(2) = \"a\"\n        // index(3)\
    \ = \"\"\n        for (int index = 0; index < string.length(); index++) {\n  \
    \          // string = \"aaa\"\n            // substring = \"aa\"\n          \
    \  // index(0) = \"a\"\n            // substringAtIndex(0) = \"aa\"\n        \
    \    String substringAtIndex = string.substring(index, index + substring.length());\n\
    \            if (substringAtIndex.equals(substring)) {\n                count++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 7, end 10, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpe5ij2fd6.java:32)\n\
    \tat Problem.main(tmpe5ij2fd6.java:42)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int number_of_times = 0;\n        int step\
    \ = substring.length();\n        while (string.contains(substring)) {\n      \
    \      string = string.substring(string.indexOf(substring) + step);\n        \
    \    number_of_times++;\n        }\n        return number_of_times;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp17dyozir.java:28)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int total = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                total++;\n            }\n        }\n        return total;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.length() - string.replace(substring,\
    \ \"\").length();\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgfx6vkid.java:22)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int len = substring.length();\n       \
    \ if (len == 0) {\n            return 0;\n        }\n\n        int count = 0;\n\
    \        int index = string.indexOf(substring);\n        while (index != -1) {\n\
    \            count++;\n            index = string.indexOf(substring, index + len);\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr4b9urog.java:33)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int len = substring.length();\n       \
    \ int count = 0;\n        int c = string.indexOf(substring);\n        while (c\
    \ != -1) {\n            count++;\n            c = string.indexOf(substring, c\
    \ + len);\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7v8_uw9k.java:29)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.startsWith(substring, i))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int times = 0;\n        for (int i = 0;\
    \ i <= string.length() - substring.length(); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                times++;\n   \
    \         }\n        }\n        return times;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int originalLength = string.length();\n\
    \        int substringLength = substring.length();\n        string = string.replace(substring,\
    \ \"\");\n        return (originalLength - string.length()) / substringLength;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpy9lbg6z1.java:25)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while (index < string.length()) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index == -1) {\n                break;\n          \
    \  }\n            count++;\n            index++;\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // your code here\n        return 0;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgniwyz02.java:22)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // BEGIN SOLUTION\n        return string.length()\
    \ - string.replace(substring, \"\").length();\n        // END SOLUTION\n}\n  \
    \  public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n   \
    \ assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9tm3y6ve.java:24)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while (index >= 0) {\n            index = string.indexOf(substring, index);\n\
    \            if (index >= 0) {\n                count += 1;\n                index\
    \ += 1;\n            }\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int howMany = 0;\n        for (int i =\
    \ 0; i < string.length(); i++) {\n            int j = 0;\n            while (j\
    \ < substring.length() && i + j < string.length() && string.charAt(i + j) == substring.charAt(j))\
    \ {\n                j++;\n            }\n            if (j == substring.length())\
    \ {\n                howMany++;\n            }\n        }\n        return howMany;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int counter = 0;\n        int fromIndex\
    \ = 0;\n        while (fromIndex != -1) {\n            fromIndex = string.indexOf(substring,\
    \ fromIndex);\n            if (fromIndex != -1) {\n                fromIndex +=\
    \ substring.length();\n                counter++;\n            }\n        }\n\
    \        return counter;\n}\n    public static void main(String[] args) {\n  \
    \  assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpileota74.java:31)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (i + substring.length() <= string.length()) {\n      \
    \              if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // Write your code here\n        // To\
    \ print results to the standard output you can use System.out.println()\n    \
    \    // Example: System.out.println(\"Hello world!\");\n        int count = 0;\n\
    \        int index = 0;\n        while ((index = string.indexOf(substring, index))\
    \ != -1) {\n            count++;\n            index += substring.length();\n \
    \       }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpwojb2rc5.java:31)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.length() - string.replace(substring,\
    \ \"\").length();\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgfx6vkid.java:22)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.length() - string.replace(substring,\
    \ \"\").length();\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgfx6vkid.java:22)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpp7no8hf3.java:20)\n\
    \tat Problem.main(tmpp7no8hf3.java:30)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int c = 0;\n        for (int i = 0; i <\
    \ string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.length() - i < substring.length()) {\n       \
    \             break;\n                }\n                String sub = string.substring(i,\
    \ i + substring.length());\n                if (sub.equals(substring)) {\n   \
    \                 c++;\n                }\n            }\n        }\n        return\
    \ c;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    index += substring.length();\n            count++;\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpjc702tsc.java:28)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // Your code here\n        if (string.length()\
    \ < substring.length()) {\n            return 0;\n        } else if (string.length()\
    \ == substring.length()) {\n            return string.equals(substring) ? 1 :\
    \ 0;\n        } else {\n            if (string.substring(0, substring.length()).equals(substring))\
    \ {\n                return 1 + howManyTimes(string.substring(1), substring);\n\
    \            } else {\n                return howManyTimes(string.substring(1),\
    \ substring);\n            }\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int i=0;\n        int count=0;\n      \
    \  while (true) {\n            int index = string.indexOf(substring, i);\n   \
    \         if (index == -1)\n                break;\n            count++;\n   \
    \         i = index + 1;\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() == 0 || substring.length()\
    \ == 0) {\n            return 0;\n        }\n        else {\n            return\
    \ (string.length() - string.replace(substring, \"\").length()) / substring.length();\n\
    \        }\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3w0ddgms.java:27)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.isEmpty() || substring.isEmpty())\
    \ {\n            return 0;\n        }\n        int count = 0;\n        int index\
    \ = 0;\n        int sublength = substring.length();\n        int stringlength\
    \ = string.length();\n        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += sublength;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpt0bgn8ht.java:36)\n"
  stdout: ''
  timestamp: 1660011235
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int result = 0;\n        int len = substring.length();\n\
    \        int i = 0;\n        while (i < string.length()) {\n            if (string.substring(i,\
    \ i + len).equals(substring)) {\n                result += 1;\n              \
    \  i += len;\n            } else {\n                i += 1;\n            }\n \
    \       }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 7, end 10, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp38au5k5u.java:21)\n\
    \tat Problem.main(tmp38au5k5u.java:33)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        if (string.length()\
    \ >= substring.length()) {\n            int index = 0;\n            while (true)\
    \ {\n                index = string.indexOf(substring, index);\n             \
    \   if (index == -1) {\n                    break;\n                }\n      \
    \          count++;\n                index += substring.length();\n          \
    \  }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmphj1n2cxy.java:34)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int max = string.length() - substring.length()\
    \ + 1;\n        int count = 0;\n        for (int i = 0; i < max; i++) {\n    \
    \        if (string.substring(i, i + substring.length()).equals(substring)) {\n\
    \                count++;\n            }\n        }\n        return count;\n}\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return (string.length() - string.replace(substring,\
    \ \"\").length()) / substring.length();\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpph0askvi.java:22)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return (string.length() - string.replace(substring,\
    \ \"\").length()) / substring.length();\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpph0askvi.java:22)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i <= string.length() - substring.length(); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                count++;\n   \
    \         }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.isEmpty() || substring.isEmpty())\
    \ {\n            return 0;\n        }\n        int result = 0;\n        int index\
    \ = string.indexOf(substring);\n        while (index != -1) {\n            result\
    \ += 1;\n            index = string.indexOf(substring, index + 1);\n        }\n\
    \        return result;\n}\n    public static void main(String[] args) {\n   \
    \ assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"\
    ), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n\
    \    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() == 0 || substring.length()\
    \ == 0) {\n            return 0;\n        }\n        int match = 0;\n        for\
    \ (int i = 0; i < string.length(); i++) {\n            for (int j = 0; j < substring.length();\
    \ j++) {\n                if (string.charAt(i) == substring.charAt(j)) {\n   \
    \                 i++;\n                    if (j == substring.length() - 1) {\n\
    \                        match++;\n                    }\n                } else\
    \ {\n                    i--;\n                    break;\n                }\n\
    \            }\n        }\n        return match;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 9\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmp2n58frkj.java:23)\n\
    \tat Problem.main(tmp2n58frkj.java:39)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = string.indexOf(substring);\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index + 1);\n            count++;\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n   \
    \ assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i <= string.length() - substring.length(); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                count++;\n   \
    \         }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        String[] parts = string.split(substring);\n\
    \        return parts.length == 0 ? 0 : parts.length - 1;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpu0ejmfe8.java:22)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int result = 0;\n        int subLength\
    \ = substring.length();\n        int length = string.length();\n        for (int\
    \ i = 0; i < length; i++) {\n            if (string.substring(i, i + subLength).equals(substring))\
    \ {\n                result++;\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 7, end 10, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpcu9pilnf.java:21)\n\
    \tat Problem.main(tmpcu9pilnf.java:30)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i += 1) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean found = true;\n                for (int j = 1; j\
    \ < substring.length(); j += 1) {\n                    if (string.charAt(i + j)\
    \ != substring.charAt(j)) {\n                        found = false;\n        \
    \                break;\n                    }\n                }\n          \
    \      if (found) {\n                    count += 1;\n                }\n    \
    \        }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 9\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmpoeb40gon.java:22)\n\
    \tat Problem.main(tmpoeb40gon.java:37)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int cnt = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.startsWith(substring, i))\
    \ {\n                cnt++;\n            }\n        }\n        return cnt;\n}\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int n = string.length();\n        int k\
    \ = substring.length();\n        int ans = 0;\n        for (int i = 0; i <= n\
    \ - k; i++) {\n            if (string.substring(i, i + k).equals(substring)) {\n\
    \                ans++;\n            }\n        }\n        return ans;\n}\n  \
    \  public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n   \
    \ assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // TODO: Implement this function\n    \
    \    int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n   \
    \         for (int j = 0; j < substring.length(); j++) {\n                if (string.charAt(i\
    \ + j) != substring.charAt(j)) {\n                    break;\n               \
    \ }\n                if (j == substring.length() - 1) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ String index out of range: 9\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\
    \tat java.base/java.lang.String.charAt(String.java:1515)\n\tat Problem.howManyTimes(tmpzqcr9nbj.java:21)\n\
    \tat Problem.main(tmpzqcr9nbj.java:34)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int string_size = string.length();\n  \
    \      int substring_size = substring.length();\n        int count = 0;\n    \
    \    for (int i = 0; i <= string_size - substring_size; i++) {\n            if\
    \ (string.substring(i, i + substring_size).equals(substring)) {\n            \
    \    count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() < substring.length())\
    \ {\n            return 0;\n        }\n        int count = 0;\n        int index\
    \ = string.indexOf(substring);\n        while (index != -1) {\n            count++;\n\
    \            index = string.indexOf(substring, index + 1);\n        }\n      \
    \  return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \        // Python code\n        // >>> def how_many_times(string, substring):\n\
    \        // ...     current = 0\n        // ...     count = 0\n        // ...\
    \     while current < len(string):\n        // ...         position = string.find(substring,\
    \ current)\n        // ...         if position == -1:\n        // ...        \
    \     break\n        // ...         count += 1\n        // ...         current\
    \ = position + 1\n        // ...     return count\n        // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \        int current = 0;\n        int count = 0;\n        while (current < string.length())\
    \ {\n            int position = string.indexOf(substring, current);\n        \
    \    if (position == -1) {\n                break;\n            }\n          \
    \  count += 1;\n            current = position + 1;\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // Implement this placeholder.\n      \
    \  return 0;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5q67m07v.java:22)\n"
  stdout: ''
  timestamp: 1660011237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int n = string.length();\n        int m\
    \ = substring.length();\n        int count = 0;\n        int i = 0;\n        while\
    \ (i <= n - m) {\n            if (string.substring(i, i + m).equals(substring))\
    \ {\n                count += 1;\n                i += m;\n            } else\
    \ {\n                i += 1;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp157vyoew.java:34)\n"
  stdout: ''
  timestamp: 1660011237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.isEmpty() || substring.isEmpty())\
    \ {\n            return 0;\n        }\n\n        // Guard against substrings of\
    \ length > string length.\n        int maxLength = string.length() - substring.length()\
    \ + 1;\n        int count = 0;\n        for (int i = 0; i < maxLength; i++) {\n\
    \            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while (index < string.length()) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index++;\n            } else {\n                break;\n            }\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int counter = 0;\n        // write your\
    \ code here\n        Pattern pattern = Pattern.compile(substring);\n        Matcher\
    \ matcher = pattern.matcher(string);\n        while (matcher.find()) {\n     \
    \       counter++;\n        }\n        return counter;\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmp5e4r_ncx.java:19: error: cannot find symbol\n        Pattern pattern\
    \ = Pattern.compile(substring);\n        ^\n  symbol:   class Pattern\n  location:\
    \ class Problem\n/tmp/tmp5e4r_ncx.java:19: error: cannot find symbol\n       \
    \ Pattern pattern = Pattern.compile(substring);\n                          ^\n\
    \  symbol:   variable Pattern\n  location: class Problem\n/tmp/tmp5e4r_ncx.java:20:\
    \ error: cannot find symbol\n        Matcher matcher = pattern.matcher(string);\n\
    \        ^\n  symbol:   class Matcher\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i <= string.length() - substring.length(); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                count++;\n   \
    \         }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int result = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            int j = 0;\n            while (j <\
    \ substring.length() && i + j < string.length() && string.charAt(i + j) == substring.charAt(j))\
    \ {\n                j++;\n            }\n            if (j == substring.length())\
    \ {\n                result++;\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // Fill in the code here\n        int count\
    \ = 0;\n        int i = 0;\n        while (i <= string.length() - substring.length())\
    \ {\n            int j = 0;\n            while (j < substring.length() && string.charAt(i+j)\
    \ == substring.charAt(j)) {\n                j++;\n            }\n           \
    \ if (j == substring.length()) {\n                count++;\n            }\n  \
    \          i++;\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int n = string.length();\n        int m\
    \ = substring.length();\n        int result = 0;\n        for (int i = 0; i <\
    \ n; i++) {\n            if (string.substring(i, i + m).equals(substring)) {\n\
    \                result++;\n            }\n        }\n        return result;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 7, end 10, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp5b3pljgb.java:21)\n\
    \tat Problem.main(tmp5b3pljgb.java:30)\n"
  stdout: ''
  timestamp: 1660011237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int start = 0;\n\
    \        while (true) {\n            start = string.indexOf(substring, start);\n\
    \            if (start == -1) {\n                break;\n            }\n     \
    \       count += 1;\n            start += 1;\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index += substring.length();\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp67xceo2j.java:31)\n"
  stdout: ''
  timestamp: 1660011237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i <= string.length() - substring.length(); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                count++;\n   \
    \         }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // 1. Construct a hash function that can\
    \ map substring to a number\n        // 2. Construct another hash function that\
    \ can map string[i:i+len(substring)] to a number\n        // 3. For each substring\
    \ use the hash function on it and see if the value is present in the hash table\
    \ or not.\n\n        HashMap<Integer, Integer> hash = new HashMap<>();\n     \
    \   int p = 1000000007;\n        int x = 31;\n        int substringHash = 0;\n\
    \        for (int i = 0; i < substring.length(); i++) {\n            substringHash\
    \ = (substringHash * x + substring.charAt(i)) % p;\n        }\n        int currentHash\
    \ = 0;\n        for (int i = 0; i < string.length(); i++) {\n            currentHash\
    \ = (currentHash * x + string.charAt(i)) % p;\n            if (i < substring.length()\
    \ - 1) {\n                continue;\n            }\n            if (i >= substring.length())\
    \ {\n                currentHash = currentHash - (string.charAt(i - substring.length())\
    \ * Math.pow(x, substring.length() - 1)) % p;\n                if (currentHash\
    \ < 0) {\n                    currentHash += p;\n                }\n         \
    \   }\n            hash.put(currentHash, hash.getOrDefault(currentHash, 0) + 1);\n\
    \        }\n        return hash.getOrDefault(substringHash, 0);\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpn281bj_v.java:35: error: incompatible types: possible lossy conversion\
    \ from double to int\n                currentHash = currentHash - (string.charAt(i\
    \ - substring.length()) * Math.pow(x, substring.length() - 1)) % p;\n        \
    \                                  ^\n1 error\n"
  stdout: ''
  timestamp: 1660011237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int occurences = 0;\n        int fromIndex\
    \ = 0;\n        while (fromIndex < string.length()) {\n            int index =\
    \ string.indexOf(substring, fromIndex);\n            if (index == -1) {\n    \
    \            break;\n            }\n            occurences++;\n            fromIndex\
    \ = index + 1;\n        }\n        return occurences;\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int j = 0;\n  \
    \      for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i)\
    \ == substring.charAt(j)) {\n                j++;\n                if (j == substring.length())\
    \ {\n                    count++;\n                    j = 0;\n              \
    \  }\n            } else {\n                j = 0;\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpqt7v1y6e.java:35)\n"
  stdout: ''
  timestamp: 1660011237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() < substring.length())\
    \ {\n            return 0;\n        }\n        int count = 0;\n        for (int\
    \ i = 0; i < string.length() - substring.length() + 1; i++) {\n            if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \        count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int endIndex =\
    \ substring.length();\n        for (int i = 0; i < string.length(); i++) {\n \
    \           if (string.substring(i, endIndex).equals(substring)) {\n         \
    \       count++;\n            }\n            endIndex++;\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 7, end 10, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp6lrbozv7.java:20)\n\
    \tat Problem.main(tmp6lrbozv7.java:30)\n"
  stdout: ''
  timestamp: 1660011237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    index++;\n            count++;\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n   \
    \ assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return (string.length() - string.replace(substring,\
    \ \"\").length()) / substring.length();\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpph0askvi.java:22)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() == 0 || substring.length()\
    \ == 0) {\n            return 0;\n        }\n        int count = 0;\n        int\
    \ i = 0;\n        while ((i = string.indexOf(substring, i)) != -1) {\n       \
    \     i += substring.length();\n            count++;\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2vqiobj7.java:31)\n"
  stdout: ''
  timestamp: 1660011237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.substring(i, substring.length() + i).equals(substring))\
    \ {\n                    count++;\n                }\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpq7fepu01.java:20)\n\
    \tat Problem.main(tmpq7fepu01.java:30)\n"
  stdout: ''
  timestamp: 1660011237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.isEmpty() || substring.isEmpty())\
    \ return 0;\n        int count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.charAt(i) == substring.charAt(0)) {\n       \
    \         boolean found = true;\n                for (int j = 1; j < substring.length();\
    \ j++) {\n                    if (i + j >= string.length() || string.charAt(i\
    \ + j) != substring.charAt(j)) {\n                        found = false;\n   \
    \                     break;\n                    }\n                }\n     \
    \           if (found) count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return (string.length() - string.replace(substring,\
    \ \"\").length()) / substring.length();\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpph0askvi.java:22)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int n = string.length();\n        int m\
    \ = substring.length();\n        int count = 0;\n        for (int i = 0; i <=\
    \ n - m; i++) {\n            if (string.substring(i, i + m).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int howMany = 0;\n        int index = 0;\n\
    \        int length = substring.length();\n        while(index < string.length())\
    \ {\n            String current = string.substring(index, index + length);\n \
    \           if(current.equals(substring)) {\n                howMany++;\n    \
    \        }\n            index++;\n        }\n        return howMany;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 7, end 10, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp_j1uxjjn.java:21)\n\
    \tat Problem.main(tmp_j1uxjjn.java:32)\n"
  stdout: ''
  timestamp: 1660011237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // Insert your code here\n        return\
    \ 0;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkltx7hog.java:22)\n"
  stdout: ''
  timestamp: 1660011238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while (index >= 0) {\n            index = string.indexOf(substring, index);\n\
    \            if (index >= 0) {\n                count++;\n                index++;\n\
    \            }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() < substring.length())\
    \ {\n            return 0;\n        }\n        else if (string.length() == substring.length())\
    \ {\n            return string.equals(substring) ? 1 : 0;\n        }\n       \
    \ else {\n            if (string.substring(0, substring.length()).equals(substring))\
    \ {\n                return 1 + howManyTimes(string.substring(1), substring);\n\
    \            }\n            else {\n                return howManyTimes(string.substring(1),\
    \ substring);\n            }\n        }\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int ret = 0;\n        for (int i = 0; i\
    \ <= string.length() - substring.length(); i++) {\n            String cur = string.substring(i,\
    \ i + substring.length());\n            if (cur.equals(substring)) {\n       \
    \         ret++;\n            }\n        }\n        return ret;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() == 0 || substring.length()\
    \ == 0) {\n            return 0;\n        }\n\n        int counter = 0;\n    \
    \    int stringIndex = 0;\n        while (stringIndex < string.length()) {\n \
    \           if (string.charAt(stringIndex) == substring.charAt(0)) {\n       \
    \         int substringIndex = 0;\n                int tempIndex = stringIndex;\n\
    \                while (substringIndex < substring.length() && tempIndex < string.length())\
    \ {\n                    if (string.charAt(tempIndex) == substring.charAt(substringIndex))\
    \ {\n                        substringIndex++;\n                        tempIndex++;\n\
    \                    } else {\n                        break;\n              \
    \      }\n                }\n                if (substringIndex == substring.length())\
    \ {\n                    counter++;\n                }\n            }\n      \
    \      stringIndex++;\n        }\n        return counter;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() < substring.length())\
    \ {\n            return 0;\n        }\n        int count = 0;\n        for (int\
    \ i = 0; i < string.length() - substring.length() + 1; i++) {\n            if\
    \ (string.substring(i, i + substring.length()).equals(substring)) {\n        \
    \        count++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011237
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return -1;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpntdfwn2y.java:20)\n"
  stdout: ''
  timestamp: 1660011238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n      int count = 0;\n      for (int i = 0; i <\
    \ string.length(); i++) {\n        String sub = string.substring(i);\n       \
    \ if (sub.startsWith(substring)) {\n          count++;\n        }\n      }\n \
    \     return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // assert substring.length() <= string.length()\n\
    \        if (substring.length() > string.length()) {\n            return 0;\n\
    \        }\n        int count = 0;\n        int index = 0;\n        while (true)\
    \ {\n            index = string.indexOf(substring, index);\n            if (index\
    \ == -1) {\n                break;\n            }\n            count++;\n    \
    \        index++;\n        }\n        return count;\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int length = string.length();\n       \
    \ int subLength = substring.length();\n        int total = 0;\n        for (int\
    \ i = 0; i <= length - subLength; i++) {\n            if (string.substring(i,\
    \ i + subLength).equals(substring)) {\n                total += 1;\n         \
    \   }\n        }\n        return total;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n      Pattern pattern = Pattern.compile(substring);\n\
    \      Matcher matcher = pattern.matcher(string);\n      int count = 0;\n    \
    \  while (matcher.find()) {\n        count++;\n      }\n      return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx_36so7x.java:17: error: cannot find symbol\n      Pattern pattern\
    \ = Pattern.compile(substring);\n      ^\n  symbol:   class Pattern\n  location:\
    \ class Problem\n/tmp/tmpx_36so7x.java:17: error: cannot find symbol\n      Pattern\
    \ pattern = Pattern.compile(substring);\n                        ^\n  symbol:\
    \   variable Pattern\n  location: class Problem\n/tmp/tmpx_36so7x.java:18: error:\
    \ cannot find symbol\n      Matcher matcher = pattern.matcher(string);\n     \
    \ ^\n  symbol:   class Matcher\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        Pattern p = Pattern.compile(substring);\n\
    \        Matcher m = p.matcher(string);\n        int count = 0;\n        while\
    \ (m.find()) {\n            count++;\n        }\n        return count;\n}\n  \
    \  public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n   \
    \ assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpoac0kcgf.java:17: error: cannot find symbol\n        Pattern p\
    \ = Pattern.compile(substring);\n        ^\n  symbol:   class Pattern\n  location:\
    \ class Problem\n/tmp/tmpoac0kcgf.java:17: error: cannot find symbol\n       \
    \ Pattern p = Pattern.compile(substring);\n                    ^\n  symbol:  \
    \ variable Pattern\n  location: class Problem\n/tmp/tmpoac0kcgf.java:18: error:\
    \ cannot find symbol\n        Matcher m = p.matcher(string);\n        ^\n  symbol:\
    \   class Matcher\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int index = 0;\n        int count = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    index++;\n            count++;\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n   \
    \ assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.length() == 0 ? 0 : string.split(substring,\
    \ -1).length - 1;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp7lwok8xi.java:22)\n"
  stdout: ''
  timestamp: 1660011238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        Pattern p = Pattern.compile(substring);\n\
    \        Matcher m = p.matcher(string);\n        int count = 0;\n        while\
    \ (m.find()) {\n            count += 1;\n        }\n        return count;\n}\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpnuce3hpf.java:17: error: cannot find symbol\n        Pattern p\
    \ = Pattern.compile(substring);\n        ^\n  symbol:   class Pattern\n  location:\
    \ class Problem\n/tmp/tmpnuce3hpf.java:17: error: cannot find symbol\n       \
    \ Pattern p = Pattern.compile(substring);\n                    ^\n  symbol:  \
    \ variable Pattern\n  location: class Problem\n/tmp/tmpnuce3hpf.java:18: error:\
    \ cannot find symbol\n        Matcher m = p.matcher(string);\n        ^\n  symbol:\
    \   class Matcher\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return -1;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpntdfwn2y.java:20)\n"
  stdout: ''
  timestamp: 1660011238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int counter = 0;\n        for (int i =\
    \ 0; i <= string.length() - substring.length(); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                counter++;\n \
    \           }\n        }\n        return counter;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.isEmpty() || substring.isEmpty())\
    \ return 0;\n        int count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            int index = string.indexOf(substring, i);\n            if\
    \ (index < 0) break;\n            count++;\n            i = index;\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int i = 0;\n        while (string.contains(substring))\
    \ {\n            string = string.replaceFirst(substring, \"\");\n            i++;\n\
    \        }\n        return i;\n}\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpvhd9pqqx.java:27)\n"
  stdout: ''
  timestamp: 1660011238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() == 0 || substring.length()\
    \ == 0) {\n            return 0;\n        }\n        int length = substring.length();\n\
    \        int result = 0;\n        for (int i = 0; i < string.length(); i++) {\n\
    \            if (string.substring(i, i + length).equals(substring)) {\n      \
    \          result++;\n            }\n        }\n        return result;\n}\n  \
    \  public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n   \
    \ assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 7, end 10, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp_wi3_88k.java:23)\n\
    \tat Problem.main(tmp_wi3_88k.java:32)\n"
  stdout: ''
  timestamp: 1660011238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return Collections.frequency(new ArrayList<String>(Arrays.asList(string.split(substring))),\
    \ \"\");\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp2l6xr02e.java:20)\n"
  stdout: ''
  timestamp: 1660011238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = string.indexOf(substring);\n\
    \        while (index != -1) {\n            count++;\n            index = string.indexOf(substring,\
    \ index + 1);\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int length = string.length();\n       \
    \ int subLength = substring.length();\n        int count = 0;\n        for (int\
    \ i = 0; i <= length - subLength; i++) {\n            if (string.substring(i,\
    \ i + subLength).equals(substring)) {\n                count++;\n            }\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int ret = 0;\n        int i = 0;\n    \
    \    int len = substring.length();\n        while (true) {\n            i = string.indexOf(substring,\
    \ i);\n            if (i == -1) {\n                break;\n            }\n   \
    \         ret++;\n            i += len;\n        }\n        return ret;\n}\n \
    \   public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpuvs7l66f.java:33)\n"
  stdout: ''
  timestamp: 1660011238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    count++;\n            index += substring.length();\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfh0if24.java:28)\n"
  stdout: ''
  timestamp: 1660011238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        if (string.contains(substring))\
    \ {\n            for (int i = 0; i < string.length(); i++) {\n               \
    \ if (string.substring(i).startsWith(substring)) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        do {\n            index = string.indexOf(substring, index);\n       \
    \     if (index != -1) {\n                count++;\n                index += substring.length();\n\
    \            }\n        } while (index != -1);\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n   \
    \ assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpacknq5tf.java:31)\n"
  stdout: ''
  timestamp: 1660011239
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011239
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int occ = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                occ++;\n            }\n        }\n        return occ;\n}\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int last = 0;\n\
    \        // The indexOf method takes a start index, which lets us skip all\n \
    \       // occurences before the start index.\n        while(last > -1) {\n  \
    \          last = string.indexOf(substring, last);\n            if(last > -1)\
    \ {\n                count++;\n                last += substring.length();\n \
    \           }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmph5yx3w0e.java:33)\n"
  stdout: ''
  timestamp: 1660011239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // TODO\n        return 0;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp9s7043yd.java:22)\n"
  stdout: ''
  timestamp: 1660011239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.length() - i >= substring.length()) {\n      \
    \              String test = string.substring(i, i + substring.length());\n  \
    \                  if (test.equals(substring)) {\n                        count++;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011239
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int max = string.length() - substring.length()\
    \ + 1;\n        int count = 0;\n        for (int i = 0; i < max; i++) {\n    \
    \        if (string.substring(i, i + substring.length()).equals(substring)) {\n\
    \                count++;\n            }\n        }\n        return count;\n}\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // your code here\n        String result\
    \ = string.replaceAll(substring, \"\");\n        return (string.length() - result.length())\
    \ / substring.length();\n}\n    public static void main(String[] args) {\n   \
    \ assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"\
    ), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n\
    \    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3dlcqndo.java:24)\n"
  stdout: ''
  timestamp: 1660011239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int howMany = 0;\n        int i = 0;\n\
    \        while(i < string.length()) {\n            if(string.startsWith(substring,\
    \ i)) {\n                howMany++;\n                i += substring.length();\n\
    \            } else {\n                i++;\n            }\n        }\n      \
    \  return howMany;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp3_6mr25_.java:32)\n"
  stdout: ''
  timestamp: 1660011239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() < substring.length())\
    \ {\n            return 0;\n        }\n        int length = string.length();\n\
    \        int subLength = substring.length();\n        int count = 0;\n       \
    \ for (int i = 0; i < length; i++) {\n            if (string.substring(i, i +\
    \ subLength).equals(substring)) {\n                count++;\n            }\n \
    \       }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 7, end 10, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpnuf9e6t6.java:24)\n\
    \tat Problem.main(tmpnuf9e6t6.java:33)\n"
  stdout: ''
  timestamp: 1660011239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() < substring.length())\
    \ return 0;\n        int count = 0;\n        int idx = 0;\n        while ((idx\
    \ = string.indexOf(substring, idx)) != -1) {\n            idx += substring.length();\n\
    \            count++;\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgy6w5njb.java:29)\n"
  stdout: ''
  timestamp: 1660011239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // >>> how_many_times('', 'a')\n      \
    \  // 0\n        if (string.length() == 0 || substring.length() == 0) {\n    \
    \        return 0;\n        }\n        // >>> how_many_times('a', 'a')\n     \
    \   // 1\n        if (string.length() == 1 && substring.length() == 1) {\n   \
    \         return 1;\n        }\n        int len = substring.length();\n      \
    \  int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n     \
    \       if (string.charAt(i) == substring.charAt(0)) {\n                if (string.substring(i,\
    \ i + len).equals(substring)) {\n                    count++;\n              \
    \  }\n            }\n        }\n        return count;\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmp4mniw2k7.java:31)\n\
    \tat Problem.main(tmp4mniw2k7.java:41)\n"
  stdout: ''
  timestamp: 1660011239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        Pattern p = Pattern.compile(substring);\n\
    \        Matcher m = p.matcher(string);\n        while (m.find()) {\n        \
    \    count++;\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpcl4ie4vk.java:18: error: cannot find symbol\n        Pattern p\
    \ = Pattern.compile(substring);\n        ^\n  symbol:   class Pattern\n  location:\
    \ class Problem\n/tmp/tmpcl4ie4vk.java:18: error: cannot find symbol\n       \
    \ Pattern p = Pattern.compile(substring);\n                    ^\n  symbol:  \
    \ variable Pattern\n  location: class Problem\n/tmp/tmpcl4ie4vk.java:19: error:\
    \ cannot find symbol\n        Matcher m = p.matcher(string);\n        ^\n  symbol:\
    \   class Matcher\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011239
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        if (string.length()\
    \ == 0 || substring.length() == 0) return count;\n        int n = string.length();\n\
    \        int m = substring.length();\n        for (int i = 0; i <= n - m; i++)\
    \ {\n            if (string.substring(i, i + m).equals(substring)) count++;\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int len = substring.length();\n       \
    \ int n = 0;\n        int idx = string.indexOf(substring);\n        while (idx\
    \ != -1) {\n            n++;\n            idx = string.indexOf(substring, idx\
    \ + len);\n        }\n        return n;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpv_7cy7mc.java:29)\n"
  stdout: ''
  timestamp: 1660011240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.equals(\"\") || substring.equals(\"\
    \")) {\n            return 0;\n        }\n        int occurrences = 0;\n     \
    \   for (int i = 0; i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                occurrences++;\n            }\n        }\n        return\
    \ occurrences;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = string.indexOf(substring);\n\
    \        while (index != -1) {\n            count += 1;\n            index = string.indexOf(substring,\
    \ index + 1);\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() < substring.length())\
    \ return 0;\n        if (string.length() == substring.length()) return string.equals(substring)\
    \ ? 1 : 0;\n        int count = 0;\n        for (int i = 0; i < string.length()\
    \ - substring.length() + 1; i++) {\n            for (int j = 0; j < substring.length();\
    \ j++) {\n                if (string.charAt(i + j) != substring.charAt(j)) break;\n\
    \                if (j == substring.length() - 1) count++;\n            }\n  \
    \      }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        throw new UnsupportedOperationException(\"\
    Not implemented yet\");\n}\n    public static void main(String[] args) {\n   \
    \ assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"\
    ), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n\
    \    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.UnsupportedOperationException: Not\
    \ implemented yet\n\tat Problem.howManyTimes(tmpxked66rm.java:17)\n\tat Problem.main(tmpxked66rm.java:20)\n"
  stdout: ''
  timestamp: 1660011240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int n = string.length();\n\
    \        int m = substring.length();\n        for (int i = 0; i < n; i++) {\n\
    \            if (n - i < m) break;\n            if (string.substring(i, i + m).equals(substring))\
    \ count++;\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    count++;\n            index += substring.length();\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfh0if24.java:28)\n"
  stdout: ''
  timestamp: 1660011238
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() < substring.length())\
    \ {\n            return 0;\n        }\n        if (string.equals(substring)) {\n\
    \            return 1;\n        }\n        int count = 0;\n        for (int i\
    \ = 0; i < string.length() - substring.length() + 1; i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                count++;\n   \
    \         }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i <= string.length() - substring.length(); i++) {\n            for (int j =\
    \ 0; j < substring.length(); j++) {\n                if (string.charAt(i + j)\
    \ != substring.charAt(j)) {\n                    break;\n                }\n \
    \               if (j == substring.length() - 1) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int n = string.length();\n        int m\
    \ = substring.length();\n        int count = 0;\n        for (int i = 0; i < n\
    \ - m + 1; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n\
    \                if (string.charAt(i + j) != substring.charAt(j)) {\n        \
    \            break;\n                }\n            }\n            if (j == m)\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count++;\n        \
    \        index++;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011239
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.length() - string.replace(substring,\
    \ \"\").length();\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgfx6vkid.java:22)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.equals(\"\") || substring.equals(\"\
    \")) return 0;\n        int count = 0;\n        for (int i = 0; i < string.length();\
    \ i++) {\n            if (string.substring(i).startsWith(substring)) count++;\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return ((string.length() + 1) - string.replace(substring,\
    \ \"\").length()) / substring.length();\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpueycirtp.java:20)\n"
  stdout: ''
  timestamp: 1660011241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i <= string.length() - substring.length(); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                count++;\n   \
    \         }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int index = 0;\n        int total = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    total++;\n            index += substring.length();\n        }\n        return\
    \ total;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5auzdteg.java:28)\n"
  stdout: ''
  timestamp: 1660011240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return (string.length() - string.replace(substring,\
    \ \"\").length()) / substring.length();\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpph0askvi.java:22)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        String pattern = String.format(\"(?=%s)\"\
    , substring);\n        Pattern p = Pattern.compile(pattern);\n        Matcher\
    \ m = p.matcher(string);\n        int count = 0;\n        while (m.find()) {\n\
    \            count++;\n        }\n        return count;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpkyli4d7n.java:18: error: cannot find symbol\n        Pattern p\
    \ = Pattern.compile(pattern);\n        ^\n  symbol:   class Pattern\n  location:\
    \ class Problem\n/tmp/tmpkyli4d7n.java:18: error: cannot find symbol\n       \
    \ Pattern p = Pattern.compile(pattern);\n                    ^\n  symbol:   variable\
    \ Pattern\n  location: class Problem\n/tmp/tmpkyli4d7n.java:19: error: cannot\
    \ find symbol\n        Matcher m = p.matcher(string);\n        ^\n  symbol:  \
    \ class Matcher\n  location: class Problem\n3 errors\n"
  stdout: ''
  timestamp: 1660011240
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int lastIndex =\
    \ 0;\n        while (lastIndex != -1) {\n            lastIndex = string.indexOf(substring,\
    \ lastIndex);\n            if (lastIndex != -1) {\n                count++;\n\
    \                lastIndex += substring.length();\n            }\n        }\n\
    \        return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpr3xd19b1.java:31)\n"
  stdout: ''
  timestamp: 1660011241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // write your code here\n        return\
    \ (string.length() - string.replace(substring, \"\").length()) / substring.length();\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5s3y1e87.java:23)\n"
  stdout: ''
  timestamp: 1660011241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                boolean allMatch = true;\n                for (int j = 0;\
    \ j < substring.length(); j++) {\n                    if (i + j >= string.length()\
    \ || string.charAt(i + j) != substring.charAt(j)) {\n                        allMatch\
    \ = false;\n                        break;\n                    }\n          \
    \      }\n                if (allMatch) {\n                    count++;\n    \
    \            }\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                String s = string.substring(i, i + substring.length());\n\
    \                if (s.equals(substring)) {\n                    count++;\n  \
    \              }\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StringIndexOutOfBoundsException:\
    \ begin 8, end 11, length 9\n\tat java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\
    \tat java.base/java.lang.String.substring(String.java:2707)\n\tat Problem.howManyTimes(tmpmurgu90v.java:20)\n\
    \tat Problem.main(tmpmurgu90v.java:31)\n"
  stdout: ''
  timestamp: 1660011240
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int times = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            int max = i + substring.length();\n\
    \            if (max > string.length())\n                return times;\n     \
    \       if (string.substring(i, max).equals(substring))\n                times++;\n\
    \        }\n        return times;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.equals(\"\") || substring.equals(\"\
    \")) {\n            return 0;\n        }\n        int t = substring.length();\n\
    \        int ans = 0;\n        for (int i = 0; i < string.length() - t + 1; i++)\
    \ {\n            if (string.substring(i, i + t).equals(substring)) {\n       \
    \         ans++;\n            }\n        }\n        return ans;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (i + substring.length() <= string.length()) {\n      \
    \              if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    index++;\n            count++;\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n   \
    \ assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011237
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.isEmpty() || substring.isEmpty())\
    \ return 0;\n        if (string.length() < substring.length()) return 0;\n   \
    \     int count = 0;\n        int index = 0;\n        while (index != -1) {\n\
    \            index = string.indexOf(substring, index);\n            if (index\
    \ != -1) {\n                count += 1;\n                index += 1;\n       \
    \     }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            String sub = string.substring(i);\n\
    \            if (sub.startsWith(substring)) {\n                count++;\n    \
    \        }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int result = 0;\n        int i = 0;\n \
    \       while(true) {\n            int j = string.indexOf(substring, i);\n   \
    \         if(j == -1) break;\n            result++;\n            i = j + 1;\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int i = 0;\n        int count = 0;\n  \
    \      while (i <= string.length() - substring.length()) {\n            int j\
    \ = 0;\n            while (j < substring.length() && string.charAt(i + j) == substring.charAt(j))\
    \ {\n                j++;\n            }\n            if (j == substring.length())\
    \ {\n                count++;\n            }\n            i++;\n        }\n  \
    \      return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return (string.length() - string.replace(substring,\
    \ \"\").length()) / substring.length();\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpph0askvi.java:22)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); ++i) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                ++count;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int answer = 0;\n        for (int i = 0;\
    \ i <= string.length() - substring.length(); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                answer++;\n  \
    \          }\n        }\n        return answer;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i <= string.length() - substring.length(); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                count++;\n   \
    \         }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int olen = string.length();\n        int\
    \ slen = substring.length();\n        if (slen == 0) return 0;\n        if (slen\
    \ > olen) return 0;\n        if (slen == olen) return string.equals(substring)\
    \ ? 1 : 0;\n        if (string.substring(0, slen).equals(substring)) return 1\
    \ + howManyTimes(string.substring(1), substring);\n        return howManyTimes(string.substring(1),\
    \ substring);\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        String str = string;\n        int count\
    \ = 0;\n        while (str.contains(substring)) {\n            count++;\n    \
    \        str = str.substring(str.indexOf(substring) + substring.length());\n \
    \       }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp4odpli98.java:28)\n"
  stdout: ''
  timestamp: 1660011241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while (index != -1) {\n            index = string.indexOf(substring,\
    \ index);\n            if (index != -1) {\n                count += 1;\n     \
    \           index += 1;\n            }\n        }\n        return count;\n}\n\
    \    public static void main(String[] args) {\n    assert(howManyTimes((\"\"),\
    \ (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() == 0 || substring.length()\
    \ == 0) {\n            return 0;\n        }\n\n        int times = 0;\n      \
    \  for (int i = 0; i < string.length(); i++) {\n            int counter = 0;\n\
    \            for (int j = 0; j < substring.length(); j++) {\n                if\
    \ (i + j < string.length() && string.charAt(i + j) == substring.charAt(j)) {\n\
    \                    counter++;\n                } else {\n                  \
    \  break;\n                }\n            }\n            if (counter == substring.length())\
    \ {\n                times++;\n            }\n        }\n        return times;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int index = -1;\n        int count = 0;\n\
    \        while (true) {\n            index = string.indexOf(substring, index +\
    \ 1);\n            if (index < 0) {\n                break;\n            }\n \
    \           count++;\n        }\n        return count;\n}\n    public static void\
    \ main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n \
    \   assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() < substring.length())\
    \ return 0;\n        int result = 0;\n        int L = substring.length();\n  \
    \      int N = string.length();\n        for (int i = 0; i < N - L + 1; i++) {\n\
    \            if (string.substring(i, i + L).equals(substring)) {\n           \
    \     result++;\n            }\n        }\n        return result;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while (true) {\n            index = string.indexOf(substring, index);\n\
    \            if (index == -1) {\n                break;\n            }\n     \
    \       index += substring.length();\n            count++;\n        }\n      \
    \  return count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpcv9izihi.java:32)\n"
  stdout: ''
  timestamp: 1660011241
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return (string.length() - string.replace(substring,\
    \ \"\").length()) / substring.length();\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpph0askvi.java:22)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while(true) {\n            index = string.indexOf(substring, index);\n\
    \            if(index == -1) break;\n            index++;\n            count++;\n\
    \        }\n        return count;\n}\n    public static void main(String[] args)\
    \ {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.length() < substring.length())\
    \ return 0;\n        int count = 0;\n        for (int i = 0; i <= string.length()\
    \ - substring.length(); i++) {\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n      int len = substring.length();\n      int\
    \ res = 0;\n      for (int i = 0; i < string.length() - len + 1; i++) {\n    \
    \    String str = string.substring(i, i + len);\n        if (str.equals(substring))\
    \ {\n          res++;\n        }\n      }\n      return res;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011242
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return (string.length() - string.replace(substring,\
    \ \"\").length()) / substring.length();\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpph0askvi.java:22)\n"
  stdout: ''
  timestamp: 1660011236
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int m = substring.length();\n        int\
    \ n = string.length();\n        int cnt = 0;\n        int i = 0;\n        while\
    \ (i < n) {\n            if (string.charAt(i) == substring.charAt(0)) {\n    \
    \            int k = 0;\n                int j = i;\n                while (k\
    \ < m && j < n && string.charAt(j) == substring.charAt(k)) {\n               \
    \     k++;\n                    j++;\n                }\n                if (k\
    \ == m) {\n                    cnt++;\n                }\n            }\n    \
    \        i++;\n        }\n        return cnt;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int i = 0;\n  \
    \      while (i != -1) {\n            i = string.indexOf(substring, i);\n    \
    \        if (i != -1) {\n                i++;\n                count++;\n    \
    \        }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int cnt = 0;\n        for (int i = 0; i\
    \ < string.length(); i++) {\n            int index = string.indexOf(substring,\
    \ i);\n            if (index == -1) {\n                break;\n            }\n\
    \            cnt++;\n            i = index;\n        }\n        return cnt;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.startsWith(substring, i))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int result = 0;\n        int index = 0;\n\
    \        while (true) {\n            int index1 = string.indexOf(substring, index);\n\
    \            if (index1 == -1) {\n                break;\n            }\n    \
    \        result++;\n            index = index1 + 1;\n        }\n        return\
    \ result;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int c=0;\n        while(string.contains(substring)){\n\
    \            c++;\n            string=string.substring(string.indexOf(substring)+1);\n\
    \        }\n        return c;\n}\n    public static void main(String[] args) {\n\
    \    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int times = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.startsWith(substring, i))\
    \ {\n                times++;\n            }\n        }\n        return times;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int counter = 0;\n        for (int i =\
    \ 0; i < string.length(); i++) {\n            if (i + substring.length() <= string.length())\
    \ {\n                if (string.substring(i, i + substring.length()).equals(substring))\n\
    \                    counter++;\n            }\n        }\n        return counter;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        if (string.isEmpty() || substring.isEmpty())\
    \ {\n            return 0;\n        }\n        int count = 0;\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == substring.charAt(0))\
    \ {\n                if (string.length() - i < substring.length()) {\n       \
    \             break;\n                }\n                boolean match = true;\n\
    \                for (int j = 0; j < substring.length(); j++) {\n            \
    \        if (string.charAt(i + j) != substring.charAt(j)) {\n                \
    \        match = false;\n                        break;\n                    }\n\
    \                }\n                if (match) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011242
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int n = string.length();\n        int m\
    \ = substring.length();\n        if (m == 0) {\n            return 0;\n      \
    \  }\n        int count = 0;\n        int j = 0;\n        for (int i = 0; i <\
    \ n; i++) {\n            if (string.charAt(i) == substring.charAt(j)) {\n    \
    \            j++;\n                if (j == m) {\n                    count++;\n\
    \                    j = 0;\n                }\n            } else {\n       \
    \         j = 0;\n            }\n        }\n        return count;\n}\n    public\
    \ static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\"))\
    \ == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpsr_g5rr_.java:40)\n"
  stdout: ''
  timestamp: 1660011242
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return string.length() - string.replace(substring,\
    \ \"\").length();\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpgfx6vkid.java:22)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int times = 0;\n        int index = 0;\n\
    \        while (index < string.length()) {\n            int found = string.indexOf(substring,\
    \ index);\n            if (found == -1) break;\n            times += 1;\n    \
    \        index = found + 1;\n        }\n        return times;\n}\n    public static\
    \ void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n\
    \    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"john doe\"), (\"\
    john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011242
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int index = 0;\n\
    \        while ((index = string.indexOf(substring, index)) != -1) {\n        \
    \    count++;\n            index += substring.length();\n        }\n        return\
    \ count;\n}\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\
    \"), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpkfh0if24.java:28)\n"
  stdout: ''
  timestamp: 1660011238
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        int start = 0;\n\
    \        while(start <= string.length() - substring.length()) {\n            if(string.substring(start,\
    \ start + substring.length()).equals(substring)) {\n                count += 1;\n\
    \                start += substring.length();\n            } else {\n        \
    \        start += 1;\n            }\n        }\n        return count;\n}\n   \
    \ public static void main(String[] args) {\n    assert(howManyTimes((\"\"), (\"\
    x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n   \
    \ assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmptod1byo2.java:32)\n"
  stdout: ''
  timestamp: 1660011242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int answer = 0;\n        for (int i = 0;\
    \ i <= string.length() - substring.length(); i++) {\n            if (string.substring(i,\
    \ i + substring.length()).equals(substring)) {\n                answer++;\n  \
    \          }\n        }\n        return answer;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        // <<< your code here >>>\n        int\
    \ count = 0;\n        for (int i = 0; i < string.length(); i++) {\n          \
    \  if (i + substring.length() > string.length()) {\n                break;\n \
    \           }\n            if (string.substring(i, i + substring.length()).equals(substring))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            String s = string.substring(i);\n \
    \           if (s.startsWith(substring)) {\n                count++;\n       \
    \     }\n        }\n        return count;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011242
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); i++) {\n            if (string.startsWith(substring, i))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011234
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        return 0;\n}\n    public static void main(String[]\
    \ args) {\n    assert(howManyTimes((\"\"), (\"x\")) == (0));\n    assert(howManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4));\n    assert(howManyTimes((\"cacacacac\"), (\"cac\"\
    )) == (4));\n    assert(howManyTimes((\"john doe\"), (\"john\")) == (1));\n  \
    \  }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp524pmy6r.java:21)\n"
  stdout: ''
  timestamp: 1660011234
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> how_many_times('',\
    \ 'a')\n    // 0\n    // >>> how_many_times('aaa', 'a')\n    // 3\n    // >>>\
    \ how_many_times('aaaa', 'aa')\n    // 3\n    public static int howManyTimes(String\
    \ string, String substring) {\n        int count = 0;\n        for (int i = 0;\
    \ i < string.length(); ++i) {\n            if (string.substring(i).startsWith(substring))\
    \ {\n                ++count;\n            }\n        }\n        return count;\n\
    }\n    public static void main(String[] args) {\n    assert(howManyTimes((\"\"\
    ), (\"x\")) == (0));\n    assert(howManyTimes((\"xyxyxyx\"), (\"x\")) == (4));\n\
    \    assert(howManyTimes((\"cacacacac\"), (\"cac\")) == (4));\n    assert(howManyTimes((\"\
    john doe\"), (\"john\")) == (1));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011241

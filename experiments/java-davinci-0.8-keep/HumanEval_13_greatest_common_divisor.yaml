completions:
- "        // For example, gcd(6, 10) = 2, gcd(28, 14) = 14, gcd(7, 7) = 7\n     \
  \   if (a < b) {\n            return greatestCommonDivisor(b, a);\n        }\n \
  \       if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
  \ a % b);"
- "        int divisor = a < b ? a : b;\n        while (divisor > 0) {\n         \
  \   if (a % divisor == 0 && b % divisor == 0) {\n                return divisor;\n\
  \            }\n            divisor--;\n        }\n        return 0;"
- "        int big = Math.max(a, b);\n        int small = Math.min(a, b);\n      \
  \  int r = big;\n        while (small != 0) {\n            r = big % small;\n  \
  \          big = small;\n            small = r;\n        }\n        return big;"
- "        // int gcd = 1;\n        // for (int i = 2; i <= Math.min(a, b); i++) {\n\
  \        //     if (a % i == 0 && b % i == 0) {\n        //         gcd = i;\n \
  \       //     }\n        // }\n        // return gcd;\n        return BigInteger.valueOf(a).gcd(BigInteger.valueOf(b)).intValue();"
- '        return b == 0 ? a : greatestCommonDivisor(b, a % b);'
- "        if (a == 0 || b == 0) {\n            return a + b;\n        }\n       \
  \ int aAbs = Math.abs(a);\n        int bAbs = Math.abs(b);\n        while (aAbs\
  \ > 0 && bAbs > 0) {\n            if (aAbs > bAbs) {\n                aAbs %= bAbs;\n\
  \            } else {\n                bAbs %= aAbs;\n            }\n        }\n\
  \        return aAbs + bAbs;"
- "        if (a == 0) {\n            return b;\n        }\n        if (b == 0) {\n\
  \            return a;\n        }\n        int c = a % b;\n        return greatestCommonDivisor(b,\
  \ c);"
- "        int max = Math.max(a, b);\n        int min = Math.min(a, b);\n        int\
  \ remainder = max % min;\n        int result = 0;\n        if (remainder == 0) {\n\
  \            result = min;\n        } else {\n            result = greatestCommonDivisor(min,\
  \ remainder);\n        }\n        return result;"
- "        if (a % b == 0) {\n            return b;\n        } else {\n          \
  \  return greatestCommonDivisor(b, a % b);\n        }"
- '        return new BigInteger(String.valueOf(a)).gcd(new BigInteger(String.valueOf(b))).intValue();'
- '        return 0;'
- "        if (a < b) {\n            int tmp = a;\n            a = b;\n          \
  \  b = tmp;\n        }\n        while (b != 0) {\n            int tmp = a % b;\n\
  \            a = b;\n            b = tmp;\n        }\n        return a;"
- "        if (a == 0) return b;\n        return greatestCommonDivisor(b % a, a);"
- "        if (a == 0) return b;\n        return greatestCommonDivisor(b % a, a);"
- "        while (b != 0) {\n            int t = b;\n            b = a % b;\n    \
  \        a = t;\n        }\n        return a;"
- "        if (a == 0) return b;\n        if (b == 0) return a;\n        if (a ==\
  \ b) return a;\n        if (a == 1 || b == 1) return 1;\n        if (a % 2 == 0\
  \ && b % 2 == 0) return 2 * greatestCommonDivisor(a / 2, b / 2);\n        if (a\
  \ % 2 == 0) return greatestCommonDivisor(a / 2, b);\n        if (b % 2 == 0) return\
  \ greatestCommonDivisor(a, b / 2);\n        if (a > b) return greatestCommonDivisor((a\
  \ - b) / 2, b);\n        return greatestCommonDivisor((b - a) / 2, a);"
- '        return a;'
- '        return b == 0 ? a : greatestCommonDivisor(b, a % b);'
- "        int i = 0;\n        List<Integer> a_divisors = new ArrayList<Integer>();\n\
  \        List<Integer> b_divisors = new ArrayList<Integer>();\n        for (i =\
  \ 1; i <= a; i++) {\n            if (a % i == 0) {\n                a_divisors.add(i);\n\
  \            }\n        }\n        for (i = 1; i <= b; i++) {\n            if (b\
  \ % i == 0) {\n                b_divisors.add(i);\n            }\n        }\n  \
  \      Collections.sort(a_divisors);\n        Collections.sort(b_divisors);\n  \
  \      int b_count = b_divisors.size() - 1;\n        for (i = a_divisors.size()\
  \ - 1; i >= 0; i--) {\n            if (b_divisors.get(b_count) == a_divisors.get(i))\
  \ {\n                return a_divisors.get(i);\n            }\n            if (b_divisors.get(b_count)\
  \ < a_divisors.get(i)) {\n                b_count--;\n                i++;\n   \
  \         }\n        }\n        return -1;"
- "        while (a != 0 && b != 0) {\n            if (a > b) {\n                a\
  \ = a % b;\n            } else {\n                b = b % a;\n            }\n  \
  \      }\n        return a + b;"
- "        // Euclid's algorithm\n        int a_prime = Math.max(a, b);\n        int\
  \ b_prime = Math.min(a, b);\n        while (b_prime != 0) {\n            int temp\
  \ = b_prime;\n            b_prime = a_prime % b_prime;\n            a_prime = temp;\n\
  \        }\n        return a_prime;"
- "        if (a == 0) return b;\n        if (b == 0) return a;\n        if (a ==\
  \ b) return a;\n        if (a == 1 || b == 1) return 1;\n        if (a % 2 == 0\
  \ && b % 2 == 0) return 2 * greatestCommonDivisor(a/2, b/2);\n        if (a % 2\
  \ == 0) return greatestCommonDivisor(a/2, b);\n        if (b % 2 == 0) return greatestCommonDivisor(a,\
  \ b/2);\n        if (a > b) return greatestCommonDivisor((a-b)/2, b);\n        return\
  \ greatestCommonDivisor((b-a)/2, a);"
- "        int divisor = Math.min(a, b);\n        while (divisor > 0) {\n        \
  \    if (a % divisor == 0 && b % divisor == 0) {\n                return divisor;\n\
  \            }\n            divisor--;\n        }\n        return 1;"
- "        int max = Math.max(a, b);\n        int min = Math.min(a, b);\n        int\
  \ gcd = 1;\n        for (int i = 2; i <= min; i++) {\n            if (max % i ==\
  \ 0 && min % i == 0) {\n                gcd = i;\n            }\n        }\n   \
  \     return gcd;"
- '        // WRITE YOUR CODE HERE'
- "        int d = 1;\n        for (int i = 2; i <= a && i <= b; i++) {\n        \
  \    if (a % i == 0 && b % i == 0) {\n                d = i;\n            }\n  \
  \      }\n        return d;"
- "        if (a < b) {\n            return greatestCommonDivisor(b, a);\n       \
  \ }\n        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
  \ a % b);"
- "        // TODO\n        return 0;"
- "        //\n        return 1;"
- "        if (a % b == 0) {\n            return b;\n        } else {\n          \
  \  return greatestCommonDivisor(b, a % b);\n        }"
- "        int greatest_common_divisor = 1;\n        int x = a < b ? a : b;\n    \
  \    for (int i = 1; i <= x; i++) {\n            if (a % i == 0 && b % i == 0) {\n\
  \                greatest_common_divisor = i;\n            }\n        }\n      \
  \  return greatest_common_divisor;"
- "        if (a % b == 0) {\n            return b;\n        } else {\n          \
  \  return greatestCommonDivisor(b, a % b);\n        }"
- '        return 0;'
- '      return a;'
- "        // TODO: your code here.\n        return 0;"
- "        if (a == 0) return b;\n        if (b == 0) return a;\n        if (a ==\
  \ b) return a;\n        if (a > b) return greatestCommonDivisor(a - b, b);\n   \
  \     return greatestCommonDivisor(a, b - a);"
- "        // a, b's greatest common divisor = (b, a%b)'s greatest common divisor\n\
  \        // (a, 0)'s greatest common divisor = a\n        if (b == 0) return a;\n\
  \        return greatestCommonDivisor(b, a%b);"
- '        throw new RuntimeException("Not Implemented");'
- '        return a == 0 ? b : greatestCommonDivisor(b % a, a);'
- '        return a == 0 ? b : greatestCommonDivisor(b % a, a);'
- "        if (a < b) {\n            int t = a;\n            a = b;\n            b\
  \ = t;\n        }\n        if (b == 0) {\n            return a;\n        }\n   \
  \     if (a % b == 0) {\n            return b;\n        }\n        return greatestCommonDivisor(b,\
  \ a % b);"
- '        return 1;'
- "        if (a < b) {\n            int t = a;\n            a = b;\n            b\
  \ = t;\n        }\n        int r = a % b;\n        if (r == 0) {\n            return\
  \ b;\n        } else {\n            return greatestCommonDivisor(b, r);\n      \
  \  }"
- '      return (b == 0) ? a : greatestCommonDivisor(b, a % b);'
- "        if (a % b == 0) {\n            return b;\n        } else {\n          \
  \  return greatestCommonDivisor(b, a % b);\n        }"
- "        while (b != 0) {\n            int tmp = a % b;\n            a = b;\n  \
  \          b = tmp;\n        }\n        return a;"
- '        // Your code here'
- "        if (a > b) {\n            int t = a;\n            a = b;\n            b\
  \ = t;\n        }\n        while (b % a != 0) {\n            int t = b % a;\n  \
  \          b = a;\n            a = t;\n        }\n        return a;"
- "        // TODO: Write code here\n        return 0;"
- '        return -1;'
- "        int t;\n        while (b != 0) {\n            t = b;\n            b = a\
  \ % b;\n            a = t;\n        }\n        return a;"
- "        while (b != 0) {\n            int tmp = a % b;\n            a = b;\n  \
  \          b = tmp;\n        }\n        return a;"
- "        // >>> YOUR CODE HERE <<<\n        return 0;"
- "        if (a < b) {\n            int temp = a;\n            a = b;\n         \
  \   b = temp;\n        }\n        if (a % b == 0) {\n            return b;\n   \
  \     }\n        else {\n            return greatestCommonDivisor(b, a % b);\n \
  \       }"
- "        int gcd = 1;\n        for (int i = 1; i <= Math.min(a, b); i++) {\n   \
  \         if (a % i == 0 && b % i == 0) {\n                gcd = i;\n          \
  \  }\n        }\n        return gcd;"
- "        if (a == 0) return b;\n        if (b == 0) return a;\n        if (a ==\
  \ b) return a;\n        if (a == 1 || b == 1) return 1;\n        if (a % 2 == 0\
  \ && b % 2 == 0) return 2 * greatestCommonDivisor(a / 2, b / 2);\n        if (a\
  \ % 2 == 0) return greatestCommonDivisor(a / 2, b);\n        if (b % 2 == 0) return\
  \ greatestCommonDivisor(a, b / 2);\n        if (a > b) return greatestCommonDivisor((a\
  \ - b) / 2, b);\n        return greatestCommonDivisor((b - a) / 2, a);"
- "        int result = 0;\n        while (b > 0) {\n            result = b;\n   \
  \         b = a % b;\n            a = result;\n        }\n        return result;"
- "        int d = 1;\n        for (int i = 2; i <= Math.min(a, b); i++) {\n     \
  \       if (a % i == 0 && b % i == 0) {\n                d = i;\n            }\n\
  \        }\n        return d;"
- "        // <<< Please implement your own greatestCommonDivisor function >>>\n \
  \       return -1;"
- '        return (b == 0) ? a : greatestCommonDivisor(b, a % b);'
- '        return gcd(a, b);'
- "        if (a < b) return greatestCommonDivisor(b, a);\n        if (b == 0) return\
  \ a;\n        return greatestCommonDivisor(b, a % b);"
- '        return 0;'
- '        return gcd(a, b);'
- "        if (a == 0) return b;\n        return greatestCommonDivisor(b % a, a);"
- "        int result = 1;\n        // YOUR CODE HERE\n        return result;"
- "        while (b != 0) {\n            int r = a % b;\n            a = b;\n    \
  \        b = r;\n        }\n        return a;"
- "        if (a == 0) return b;\n        if (b == 0) return a;\n        int gcd =\
  \ 0;\n        while (a % 2 == 0 && b % 2 == 0) {\n            a /= 2;\n        \
  \    b /= 2;\n            gcd++;\n        }\n        while (a != b) {\n        \
  \    if (a % 2 == 0) a /= 2;\n            else if (b % 2 == 0) b /= 2;\n       \
  \     else if (a > b) a = (a - b) / 2;\n            else b = (b - a) / 2;\n    \
  \    }\n        return a * (int) Math.pow(2, gcd);"
- '        return 0;'
- "        int c = b;\n        while (a % b != 0) {\n            c = a % b;\n    \
  \        a = b;\n            b = c;\n        }\n        return c;"
- "        if (a == 0) {\n            return b;\n        }\n        if (b == 0) {\n\
  \            return a;\n        }\n        int c = a % b;\n        return greatestCommonDivisor(b,\
  \ c);"
- '        return 0;'
- '        throw new RuntimeException("Not Implemented.");'
- '        return (a % b == 0) ? b : greatestCommonDivisor(b, a % b);'
- "        if (a == 0) {\n            return b;\n        }\n        if (b == 0) {\n\
  \            return a;\n        }\n        if (a >= b) {\n            return greatestCommonDivisor(a\
  \ % b, b);\n        } else {\n            return greatestCommonDivisor(a, b % a);\n\
  \        }"
- "        if (a < b) {\n            return greatestCommonDivisor(b, a);\n       \
  \ }\n        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
  \ a % b);"
- "        int small = a;\n        int big = b;\n        if (b < a) {\n          \
  \  small = b;\n            big = a;\n        }\n        if (big % small == 0) {\n\
  \            return small;\n        }\n        for (int i = 2; i <= small; i++)\
  \ {\n            if (small % i == 0 && big % i == 0) {\n                return i;\n\
  \            }\n        }\n        return 1;"
- "        // Replace pass below with your solution\n        return 1;"
- "        int c = Math.min(a, b);\n        int d = Math.max(a, b);\n        int e\
  \ = 0;\n        while (c > 0) {\n            if (d % c == 0) {\n               \
  \ e = c;\n                break;\n            }\n            c--;\n        }\n \
  \       return e;"
- '        throw new UnsupportedOperationException("Not implemented yet.");'
- "        if (a == 0) return b;\n        return greatestCommonDivisor(b % a, a);"
- "        int low = Math.min(a, b);\n        int high = Math.max(a, b);\n       \
  \ int num;\n        int gcd = 1;\n        for (int i = 2; i <= low; i++) {\n   \
  \         num = i;\n            if (high % num == 0 && low % num == 0) {\n     \
  \           gcd = num;\n            }\n        }\n        return gcd;"
- "        while (a != 0 && b != 0) {\n            if (a > b) {\n                a\
  \ = a % b;\n            } else {\n                b = b % a;\n            }\n  \
  \      }\n        return a + b;"
- "        if (a == 0 || b == 0) {\n            return 0;\n        }\n\n        if\
  \ (a < 0) {\n            a = -a;\n        }\n\n        if (b < 0) {\n          \
  \  b = -b;\n        }\n\n        while (a != b) {\n            if (a > b) {\n  \
  \              a = a - b;\n            } else {\n                b = b - a;\n  \
  \          }\n        }\n\n        return a;"
- "        while (b != 0) {\n            int t = b;\n            b = a % b;\n    \
  \        a = t;\n        }\n        return a;"
- "        int c = 0;\n        while (b != 0) {\n            c = a % b;\n        \
  \    a = b;\n            b = c;\n        }\n        return a;"
- "        if (a < b) {\n            return greatestCommonDivisor(b, a);\n       \
  \ }\n        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
  \ a % b);"
- '        return 0;'
- "        if (a > b)\n            return greatestCommonDivisor(b, a);\n        if\
  \ (a == 0)\n            return b;\n        return greatestCommonDivisor(b % a, a);"
- '        return 0;'
- '        return 0;'
- '        return a==0? b:greatestCommonDivisor(b%a, a);'
- '        return 0;'
- "      if (b == 0) {\n        return a;\n      } else {\n        return greatestCommonDivisor(b,\
  \ a % b);\n      }"
- "        if (a > b) {\n            return greatestCommonDivisor(b, a);\n       \
  \ } else if (a == 0) {\n            return b;\n        } else {\n            return\
  \ greatestCommonDivisor(b % a, a);\n        }"
- '        return BigInteger.valueOf(a).gcd(BigInteger.valueOf(b)).intValue();'
- "        if (a == 0) return b;\n        if (b == 0) return a;\n        if (a ==\
  \ b) return a;\n        if (a > b) return greatestCommonDivisor(a - b, b);\n   \
  \     return greatestCommonDivisor(a, b - a);"
- "        while (b != 0) {\n            int tmp = a % b;\n            a = b;\n  \
  \          b = tmp;\n        }\n        return a;"
- "        while (a != 0 && b != 0) {\n            if (a > b) {\n                a\
  \ = a % b;\n            } else {\n                b = b % a;\n            }\n  \
  \      }\n        return a + b;"
- '        return greatestCommonDivisor(Math.max(a, b), Math.min(a, b));'
- "        int divisor = 1;\n        for (int i = 2; i <= Math.min(a, b); i++) {\n\
  \            if (a % i == 0 && b % i == 0) {\n                divisor = i;\n   \
  \         }\n        }\n        return divisor;"
- '        return new BigInteger(Integer.toString(a)).gcd(new BigInteger(Integer.toString(b))).intValue();'
- "        int max = Math.max(a, b);\n        int min = Math.min(a, b);\n        int\
  \ remainder = max % min;\n        if (remainder == 0) return min;\n        else\
  \ return greatestCommonDivisor(min, remainder);"
- '        return 0;'
- '      return -1;'
- '        return BigInteger.valueOf(a).gcd(BigInteger.valueOf(b)).intValue();'
- "        int t;\n        if (a < b) {\n            t = a;\n            a = b;\n\
  \            b = t;\n        }\n        while (a % b != 0) {\n            t = a\
  \ % b;\n            a = b;\n            b = t;\n        }\n        return b;"
- "        // write your code here\n        return 0;"
- "        while (a != 0 && b != 0) {\n            if (a > b) {\n                a\
  \ = a % b;\n            } else {\n                b = b % a;\n            }\n  \
  \      }\n        return a + b;"
- "        // your code here\n        return 0;"
- "        while (b != 0) {\n            int c = a % b;\n            a = b;\n    \
  \        b = c;\n        }\n        return a;"
- "        if (a == 0) {\n            return b;\n        }\n        return greatestCommonDivisor(b\
  \ % a, a);"
- '        return 0;'
- "      while (b != 0) {\n        int t = b;\n        b = a % b;\n        a = t;\n\
  \      }\n      return a;"
- '        return 0;'
- '        return 0;'
- "        if (a > b) {\n            int tmp = a;\n            a = b;\n          \
  \  b = tmp;\n        }\n        while (a != 0) {\n            int tmp = a;\n   \
  \         a = b % a;\n            b = tmp;\n        }\n        return b;"
- "        if (a == 0) return b;\n        if (b == 0) return a;\n        return greatestCommonDivisor(b,\
  \ a % b);"
- '        return a;'
- '        return 0;'
- '        return gcd(a, b);'
- "        if (a == 0) {\n            return b;\n        }\n        while (b != 0)\
  \ {\n            if (a > b) {\n                a = a - b;\n            } else {\n\
  \                b = b - a;\n            }\n        }\n        return a;"
- "        // Your code here\n        return 0;"
- "        // YOUR CODE HERE\n        return 1;"
- "        if (a < b) {\n            a = a + b;\n            b = a - b;\n        \
  \    a = a - b;\n        }\n        while (b != 0) {\n            int c = a % b;\n\
  \            a = b;\n            b = c;\n        }\n        return a;"
- "        int c = Math.min(a, b);\n        int d = Math.max(a, b);\n        if (c\
  \ == 0) {\n            return d;\n        }\n        return greatestCommonDivisor(c,\
  \ d % c);"
- '        return a < b ? greatestCommonDivisor(b, a) : b == 0 ? a : greatestCommonDivisor(b,
  a % b);'
- "        // \u8AB2\u984C: greatestCommonDivisor \u3092\u9069\u5207\u306B\u5B9F\u88C5\
  \u3057\u3066\u304F\u3060\u3055\u3044\n        return 0;"
- "        // TODO: Write your code here\n        int max = Math.max(a, b);\n    \
  \    int min = Math.min(a, b);\n        int remainder = max % min;\n        while\
  \ (remainder != 0) {\n            max = min;\n            min = remainder;\n   \
  \         remainder = max % min;\n        }\n        return min;"
- '        return gcd(a, b);'
- "        int dev = 0;\n        if (a < b) {\n            int c = a;\n          \
  \  a = b;\n            b = c;\n        }\n        for (int i = 1; i <= b; i++) {\n\
  \            if (a % i == 0 && b % i == 0) {\n                dev = i;\n       \
  \     }\n        }\n        return dev;"
- "        if (a == 0) return b;\n        return greatestCommonDivisor(b % a, a);"
- "        if (a == 0) {\n            return b;\n        }\n        return greatestCommonDivisor(b\
  \ % a, a);"
- "        if (a == 0) return b;\n        if (b == 0) return a;\n        int r = a\
  \ % b;\n        return greatestCommonDivisor(b, r);"
- "        // >>> WRITE YOUR CODE HERE <<<\n        return 0;"
- "        if (a < b) {\n            return greatestCommonDivisor(b, a);\n       \
  \ }\n        if (b == 0) {\n            return a;\n        }\n        return greatestCommonDivisor(b,\
  \ a % b);"
- '        return a;'
- '        return 0;'
- "        int divisor = 1;\n        for (int i = 1; i <= a && i <= b; i++) {\n  \
  \          if (a % i == 0 && b % i == 0) {\n                divisor = i;\n     \
  \       }\n        }\n        return divisor;"
- "        if (a % b == 0) return b;\n        return greatestCommonDivisor(b, a %\
  \ b);"
- '        return 1;'
- '        throw new UnsupportedOperationException("TODO - implement");'
- "        // your code here\n        return 42;"
- "        while (b != 0) {\n            int tmp = a % b;\n            a = b;\n  \
  \          b = tmp;\n        }\n        return a;"
- '        return 1;'
- "        int r = a % b;\n        if (r == 0) {\n            return b;\n        }\
  \ else {\n            return greatestCommonDivisor(b, r);\n        }"
- "        int l = Math.min(a, b);\n        int g = Math.max(a, b);\n        if (g\
  \ % l == 0) {\n            return l;\n        }\n        return greatestCommonDivisor(l,\
  \ g % l);"
- "        int gcd = 1;\n        for (int i = 1; i <= a && i <= b; i++) {\n      \
  \      if (a % i == 0 && b % i == 0) {\n                gcd = i;\n            }\n\
  \        }\n        return gcd;"
- "        while (b != 0) {\n            int t = b;\n            b = a % b;\n    \
  \        a = t;\n        }\n        return a;"
- '        return 0;'
- "        if (a == 0) {\n            return b;\n        } else if (b == 0) {\n  \
  \          return a;\n        } else {\n            return greatestCommonDivisor(b,\
  \ a % b);\n        }"
- "        // We just need to implement\n        // >>> a % b\n        // >>> b %\
  \ a\n        // untill b == 0\n        // then the greatest common divisor is a\n\
  \        while (b != 0) {\n            int temp = a % b;\n            a = b;\n \
  \           b = temp;\n        }\n        return a;"
- '        return -1;'
- '        return 0;'
- '        return 1;'
- '        return a < b ? greatestCommonDivisor(b, a) : a % b == 0 ? b : greatestCommonDivisor(b,
  a % b);'
- '        return new BigInteger(Integer.toString(a)).gcd(new BigInteger(Integer.toString(b))).intValue();'
- "        if (a % b == 0) return b;\n        return greatestCommonDivisor(b, a %\
  \ b);"
- "        if (a < b) {\n            int tmp = a;\n            a = b;\n          \
  \  b = tmp;\n        }\n        if (b == 0) {\n            return a;\n        }\n\
  \        return greatestCommonDivisor(b, a % b);"
- '        throw new RuntimeException("Implement me!");'
- "        // Your code here\n        return -1;"
- "        int gcd = -1;\n\n        // TODO: Add code here to calculate gcd of a and\
  \ b\n        \n        return gcd;"
- "        if (a == 0) {\n            return b;\n        }\n        if (b == 0) {\n\
  \            return a;\n        }\n        if (a > b) {\n            return greatestCommonDivisor(a\
  \ % b, b);\n        } else {\n            return greatestCommonDivisor(a, b % a);\n\
  \        }"
- '        return gcd(a, b);'
- "        int gcd = 1;\n        int start = Math.min(a, b);\n        int end = Math.max(a,\
  \ b);\n        while (start > 1) {\n            if (end % start == 0) {\n      \
  \          gcd = start;\n                break;\n            }\n            start\
  \ -= 1;\n        }\n        return gcd;"
- "        if (a <= 0 || b <= 0)\n            throw new IllegalArgumentException(\"\
  Arguments must be positive\");\n        if (a == b)\n            return a;\n   \
  \     if (a > b)\n            return greatestCommonDivisor(a - b, b);\n        else\n\
  \            return greatestCommonDivisor(a, b - a);"
- '        throw new UnsupportedOperationException("Please implement me!");'
- "        while (a != 0 && b != 0) {\n            if (a > b) {\n                a\
  \ = a % b;\n            } else {\n                b = b % a;\n            }\n  \
  \      }\n        return Math.max(a, b);"
- "        int c = 0;\n        int d = 0;\n        int gcd = 0;\n        if (a > b)\
  \ {\n            c = a;\n            d = b;\n        } else {\n            c = b;\n\
  \            d = a;\n        }\n        while (true) {\n            gcd = c % d;\n\
  \            if (gcd == 0) {\n                break;\n            }\n          \
  \  c = d;\n            d = gcd;\n        }\n        return d;"
- '        return (b == 0) ? a : greatestCommonDivisor(b, a % b);'
- "      // ...\n      return 0;"
- "        while (a != 0 && b != 0) {\n            if (a > b) {\n                a\
  \ = a % b;\n            } else {\n                b = b % a;\n            }\n  \
  \      }\n        return Math.max(a, b);"
- "        // TODO: implement this function\n        int gcd = 1;\n        for (int\
  \ i = 1; i <= a && i <= b; i++) {\n            if (a % i == 0 && b % i == 0) {\n\
  \                gcd = i;\n            }\n        }\n        return gcd;"
- '        return 1;'
- '        return 0;'
- '        // TODO implement'
- "        int d = 0;\n        while (a % 2 == 0 && b % 2 == 0) {\n            a /=\
  \ 2;\n            b /= 2;\n            d++;\n        }\n        while (a != b) {\n\
  \            if (a % 2 == 0) {\n                a /= 2;\n            } else if (b\
  \ % 2 == 0) {\n                b /= 2;\n            } else if (a > b) {\n      \
  \          a = (a - b) / 2;\n            } else {\n                b = (b - a) /\
  \ 2;\n            }\n        }\n        return a * (1 << d);"
- "        if (a < b) return greatestCommonDivisor(b, a);\n        return a % b ==\
  \ 0 ? b : greatestCommonDivisor(b, a % b);"
- "        int gcd = 1;\n        for (int i = 2; i <= a && i <= b; i++) {\n      \
  \      if (a % i == 0 && b % i == 0) {\n                gcd = i;\n            }\n\
  \        }\n        return gcd;"
- "        if (a % b == 0) {\n            return b;\n        } else {\n          \
  \  return greatestCommonDivisor(b, a % b);\n        }"
- "        if (a == 0 || b == 0) {\n            return 0;\n        }\n        if (a\
  \ < 0) {\n            a = -a;\n        }\n        if (b < 0) {\n            b =\
  \ -b;\n        }\n        while (a != b) {\n            if (a > b) {\n         \
  \       a = a - b;\n            } else {\n                b = b - a;\n         \
  \   }\n        }\n        return a;"
- '        return 0;'
- '        return BigInteger.valueOf(a).gcd(BigInteger.valueOf(b)).intValue();'
- "        // your code here\n        return 0;"
- "        // Write your code here\n        // To print results to the standard output\
  \ you can use System.out.println()\n        // Example: System.out.println(\"Hello\
  \ world!\");\n        int c = 0;\n        int d = 0;\n        if (a < b) {\n   \
  \         c = a;\n            d = b;\n        } else {\n            c = b;\n   \
  \         d = a;\n        }\n        for (int i = c; i > 0; i--) {\n           \
  \ if (c % i == 0 && d % i == 0) {\n                return i;\n            }\n  \
  \      }\n        return 0;"
- "        if (a < b) return greatestCommonDivisor(b, a);\n        if (b == 0) return\
  \ a;\n        return greatestCommonDivisor(b, a % b);"
- "        int large = Math.max(a, b);\n        int small = Math.min(a, b);\n    \
  \    if (large % small == 0) {\n            return small;\n        }\n        return\
  \ greatestCommonDivisor(small, large % small);"
- "        if (a == 0) {\n            return b;\n        } else if (b == 0) {\n  \
  \          return a;\n        } else {\n            return greatestCommonDivisor(b,\
  \ a % b);\n        }"
- '        return 0;'
- '        return 0;'
- "        // TODO: write your code here\n\n        return -1;"
- "        int c = Math.min(a, b);\n        int d = Math.max(a, b);\n        return\
  \ (c == 0) ? d : greatestCommonDivisor(c, d % c);"
- '        return 0;'
- '        throw new RuntimeException("Not implemented yet");'
- "        if (a < b) {\n            int tmp = a;\n            a = b;\n          \
  \  b = tmp;\n        }\n        if (b == 0) {\n            return a;\n        }\n\
  \        return greatestCommonDivisor(b, a % b);"
- "        if (a == 0) {\n            return b;\n        }\n        while (b != 0)\
  \ {\n            if (a > b) {\n                a = a - b;\n            } else {\n\
  \                b = b - a;\n            }\n        }\n        return a;"
- '        return BigInteger.valueOf(a).gcd(BigInteger.valueOf(b)).intValue();'
- "        int gcd = 1;\n        for (int d = 1; d <= Math.min(a, b); d++) {\n   \
  \         if (a % d == 0 && b % d == 0) {\n                gcd = d;\n          \
  \  }\n        }\n        return gcd;"
- '        return 0;'
- "        if (a < b) {\n            int x = a;\n            a = b;\n            b\
  \ = x;\n        }\n        while (b != 0) {\n            int x = a % b;\n      \
  \      a = b;\n            b = x;\n        }\n        return a;"
language: java
name: HumanEval_13_greatest_common_divisor
prompt: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
  import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
  class Problem {\n    // Return a greatest common divisor of two integers a and b\n\
  \    // >>> greatest_common_divisor(3, 5)\n    // 1\n    // >>> greatest_common_divisor(25,\
  \ 15)\n    // 5\n    public static int greatestCommonDivisor(int a, int b) {\n"
stop_tokens:
- "    }\n    //"
- "    }\n    p"
- '    }

  }'
- "\n    }\n"
tests: "}\n    public static void main(String[] args) {\n    assert(greatestCommonDivisor((3),\
  \ (7)) == (1));\n    assert(greatestCommonDivisor((10), (15)) == (5));\n    assert(greatestCommonDivisor((49),\
  \ (14)) == (7));\n    assert(greatestCommonDivisor((144), (60)) == (12));\n    }\n\
  \n}\n"

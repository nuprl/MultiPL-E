language: java
name: HumanEval_14_all_prefixes
results:
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int length = 1; length <=\
    \ string.length(); length++) {\n            prefixes.add(string.substring(0, length));\n\
    \        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ length = string.length();\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (int i = 1; i <= length; i++) {\n            result.add(string.substring(0,\
    \ i));\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ n = string.length();\n        ArrayList<String> result = new ArrayList<>();\n\
    \        for (int i = 1; i <= n; i++) {\n            result.add(string.substring(0,\
    \ i));\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            list.add(string.substring(0, i + 1));\n        }\n     \
    \   return list;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ allPrefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            allPrefixes.add(string.substring(0, i + 1));\n        }\n\
    \        return allPrefixes;\n}\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ N = string.length();\n        ArrayList<String> ret = new ArrayList<String>();\n\
    \        for (int i = 0; i < N; i++) {\n            ret.add(string.substring(0,\
    \ i + 1));\n        }\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ length = string.length();\n        ArrayList<String> res = new ArrayList<String>();\n\
    \        for (int i = 1; i <= length; i++) {\n            res.add(string.substring(0,\
    \ i));\n        }\n        return res;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i < string.length(); i++) {\n            sb.append(string.charAt(i));\n\
    \            prefixes.add(sb.toString());\n        }\n        return prefixes;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ length = string.length();\n        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        for (int i = 1; i <= length; i++) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        int length = string.length();\n \
    \       for (int i = 1; i <= length; i++) {\n            result.add(string.substring(0,\
    \ i));\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int n = 1; n <= string.length();\
    \ n++) {\n            result.add(string.substring(0, n));\n        }\n       \
    \ return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ret = new ArrayList<String>();\n        int len = string.length();\n       \
    \ for (int i = 0; i < len; i++) {\n            ret.add(string.substring(0, i +\
    \ 1));\n        }\n        return ret;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        // Add each substring of the string\
    \ from length 1 to length string.length()\n        for (int length = 1; length\
    \ <= string.length(); length++) {\n            result.add(string.substring(0,\
    \ length));\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ out = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            out.add(string.substring(0, i + 1));\n        }\n      \
    \  return out;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        int length = string.length();\n \
    \       for (int i = 1; i <= length; i++) {\n            result.add(string.substring(0,\
    \ i));\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int length = 1; length <=\
    \ string.length(); length++) {\n            prefixes.add(string.substring(0, length));\n\
    \        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        int L = string.length();\n      \
    \  for (int i = 0; i < L; i++) {\n            result.add(string.substring(0, i\
    \ + 1));\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ out = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            out.add(string.substring(0, i + 1));\n        }\n      \
    \  return out;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int length = 1; length <=\
    \ string.length(); length++) {\n            prefixes.add(string.substring(0, length));\n\
    \        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ res = new ArrayList<>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            res.add(string.substring(0, i + 1));\n        }\n        return\
    \ res;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ret = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            ret.add(string.substring(0, i + 1));\n        }\n      \
    \  return ret;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ret = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            ret.add(string.substring(0, i + 1));\n        }\n      \
    \  return ret;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ new ArrayList<String>(IntStream.range(0, string.length() + 1)\n            \
    \                         .mapToObj(i -> string.substring(0, i))\n           \
    \                          .collect(Collectors.toList()));\n}\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpzq18hq53.java:18)\n"
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        int N = string.length();\n    \
    \    for (int i = 0; i < N; i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ out = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            out.add(string.substring(0, i + 1));\n        }\n      \
    \  return out;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ results = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            results.add(string.substring(0, i + 1));\n        }\n  \
    \      return results;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ res = new ArrayList<>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            res.add(string.substring(0, i + 1));\n        }\n        return\
    \ res;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ans = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            ans.add(string.substring(0, i + 1));\n        }\n      \
    \  return ans;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ res = new ArrayList<>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            res.add(string.substring(0, i + 1));\n        }\n        return\
    \ res;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ results = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            results.add(string.substring(0, i + 1));\n        }\n  \
    \      return results;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        if (string.length() > 0) {\n    \
    \        result.add(string.substring(0, 1));\n            result.addAll(allPrefixes(string.substring(1)));\n\
    \        }\n        return result;\n}\n    public static void main(String[] args)\
    \ {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpmqesljki.java:22)\n"
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ len = string.length();\n        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 1; i <= len; i++) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ret = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            ret.add(string.substring(0, i + 1));\n        }\n      \
    \  return ret;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ answer = new ArrayList<String>();\n        int length = string.length();\n \
    \       for (int i = 1; i <= length; i++) {\n            answer.add(string.substring(0,\
    \ i));\n        }\n        return answer;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ans = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            ans.add(string.substring(0, i + 1));\n        }\n      \
    \  return ans;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ maxLength = string.length();\n        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int length = 1; length <= maxLength; length++) {\n            prefixes.add(string.substring(0,\
    \ length));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ pref = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            pref.add(string.substring(0, i + 1));\n        }\n     \
    \   return pref;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ans = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            ans.add(string.substring(0, i + 1));\n        }\n      \
    \  return ans;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        int n = string.length();\n    \
    \    for (int i = 0; i < n; i++) {\n            StringBuilder sb = new StringBuilder();\n\
    \            for (int j = 0; j <= i; j++) {\n                sb.append(string.charAt(j));\n\
    \            }\n            prefixes.add(sb.toString());\n        }\n        return\
    \ prefixes;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ len = string.length();\n        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        for (int i = 1; i <= len; i++) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ans = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            ans.add(string.substring(0, i + 1));\n        }\n      \
    \  return ans;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ results = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            results.add(string.substring(0, i + 1));\n        }\n  \
    \      return results;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ results = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            results.add(string.substring(0, i + 1));\n        }\n  \
    \      return results;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ n = string.length();\n        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 1; i <= n; i++) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int length = 1; length <=\
    \ string.length(); length++) {\n            prefixes.add(string.substring(0, length));\n\
    \        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ans = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            ans.add(string.substring(0, i + 1));\n        }\n      \
    \  return ans;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        if (string.length() == 0) {\n   \
    \         return result;\n        }\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        int length = string.length();\n\
    \        for (int i = 1; i <= length; i++) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ out = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            out.add(string.substring(0, i + 1));\n        }\n      \
    \  return out;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ new ArrayList<String>(new HashSet<String>(Arrays.asList(string.split(\"\"))));\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpg8r43i1c.java:16)\n"
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            list.add(string.substring(0, i + 1));\n        }\n     \
    \   return list;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            list.add(string.substring(0, i + 1));\n        }\n     \
    \   return list;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ans = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            ans.add(string.substring(0, i + 1));\n        }\n      \
    \  return ans;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ new ArrayList<String>(Arrays.asList(string.split(\"\")));\n}\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz18ohfss.java:16)\n"
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ret = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            ret.add(string.substring(0, i + 1));\n        }\n      \
    \  return ret;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        int len = string.length();\n  \
    \      for (int i = 0; i < len; i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ret = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            ret.add(string.substring(0, i + 1));\n        }\n      \
    \  return ret;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ res = new ArrayList<>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            res.add(string.substring(0, i + 1));\n        }\n        return\
    \ res;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ans = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            ans.add(string.substring(0, i + 1));\n        }\n      \
    \  return ans;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ range(1, string.length() + 1).map(n -> string.substring(0, n)).toJavaList();\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "/tmp/tmpx29zojh2.java:13: error: cannot find symbol\n        return range(1,\
    \ string.length() + 1).map(n -> string.substring(0, n)).toJavaList();\n      \
    \         ^\n  symbol:   method range(int,int)\n  location: class Problem\n1 error\n"
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        //\
    \ ArrayList<String> prefixes = new ArrayList<String>();\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ n = string.length();\n        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        for (int i = 1; i <= n; i++) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        // Fill this out\n        for (int\
    \ i = 0; i < string.length(); i++) {\n            prefixes.add(string.substring(0,\
    \ i + 1));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ output = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            output.add(string.substring(0, i + 1));\n        }\n   \
    \     return output;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            list.add(string.substring(0, i + 1));\n        }\n     \
    \   return list;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ res = new ArrayList<>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            res.add(string.substring(0, i + 1));\n        }\n        return\
    \ res;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ toReturn = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            toReturn.add(string.substring(0, i + 1));\n        }\n \
    \       return toReturn;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ to_return = new ArrayList<String>();\n        int i = 0;\n        while (i <\
    \ string.length()) {\n            to_return.add(string.substring(0, i + 1));\n\
    \            i += 1;\n        }\n        return to_return;\n}\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ new ArrayList<String>(Arrays.asList(string.split(\"\")));\n}\n    public static\
    \ void main(String[] args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmpz18ohfss.java:16)\n"
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ answer = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            answer.add(string.substring(0, i + 1));\n        }\n   \
    \     return answer;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ret = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            ret.add(string.substring(0, i + 1));\n        }\n      \
    \  return ret;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ l = new ArrayList<String>();\n        for (int i = 0; i < string.length(); i++)\
    \ {\n            l.add(string.substring(0, i + 1));\n        }\n        return\
    \ l;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ output = new ArrayList<String>();\n        for (int index = 0; index < string.length();\
    \ index++) {\n            output.add(string.substring(0, index + 1));\n      \
    \  }\n        return output;\n}\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            list.add(string.substring(0, i + 1));\n        }\n     \
    \   return list;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ n = string.length();\n        ArrayList<String> prefixes = new ArrayList<>();\n\
    \        for (int i = 1; i <= n; i++) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ list = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            list.add(string.substring(0, i + 1));\n        }\n     \
    \   return list;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ len = string.length();\n        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        for (int i = 1; i <= len; i++) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011730
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        int length = string.length();\n\
    \        for (int i = 1; i <= length; i++) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        return\
    \ IntStream.rangeClosed(1, string.length())\n                        .mapToObj(i\
    \ -> string.substring(0, i))\n                        .collect(Collectors.toCollection(ArrayList::new));\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ret = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            ret.add(string.substring(0, i + 1));\n        }\n      \
    \  return ret;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 1
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ prefixSize = string.length();\n        ArrayList<String> prefixes = new ArrayList<String>();\n\
    \        while (prefixSize > 0) {\n            prefixes.add(string.substring(0,\
    \ prefixSize));\n            prefixSize--;\n        }\n        return prefixes;\n\
    }\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\"\
    )).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.AssertionError\n\tat Problem.main(tmp5a_un1q6.java:23)\n"
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ results = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            results.add(string.substring(0, i + 1));\n        }\n  \
    \      return results;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ results = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            results.add(string.substring(0, i + 1));\n        }\n  \
    \      return results;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ans = new ArrayList<String>();\n        for (int length = 1; length <= string.length();\
    \ length++) {\n            ans.add(string.substring(0, length));\n        }\n\
    \        return ans;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        int length = string.length();\n\
    \        for (int i = 1; i <= length; i++) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        int\
    \ len = string.length();\n        ArrayList<String> result = new ArrayList<String>();\n\
    \        for (int i = 0; i < len; i++) {\n            result.add(string.substring(0,\
    \ i + 1));\n        }\n        return result;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ ret = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            ret.add(string.substring(0, i + 1));\n        }\n      \
    \  return ret;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        int stringLength = string.length();\n\
    \        for (int i = 1; i <= stringLength; i++) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ allPrefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            allPrefixes.add(string.substring(0, i + 1));\n        }\n\
    \        return allPrefixes;\n}\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        if (string.length() == 0) {\n   \
    \         return result;\n        }\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ all_prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            all_prefixes.add(string.substring(0, i + 1));\n        }\n\
    \        return all_prefixes;\n}\n    public static void main(String[] args) {\n\
    \    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        int length = string.length();\n\
    \        for (int i = 1; i <= length; i++) {\n            prefixes.add(string.substring(0,\
    \ i));\n        }\n        return prefixes;\n}\n    public static void main(String[]\
    \ args) {\n    assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011731
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ prefixes = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            prefixes.add(string.substring(0, i + 1));\n        }\n \
    \       return prefixes;\n}\n    public static void main(String[] args) {\n  \
    \  assert(allPrefixes((\"\")).equals((new ArrayList<String>(Arrays.asList()))));\n\
    \    assert(allPrefixes((\"asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    a\", (String)\"as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"\
    asdfgh\")))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729
- exit_code: 0
  program: "import java.util.*;\nimport java.lang.reflect.*;\nimport org.javatuples.*;\n\
    import java.security.*;\nimport java.math.*;\nimport java.io.*;\nimport java.util.stream.*;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n\
    \    public static ArrayList<String> allPrefixes(String string) {\n        ArrayList<String>\
    \ result = new ArrayList<String>();\n        for (int i = 0; i < string.length();\
    \ i++) {\n            result.add(string.substring(0, i + 1));\n        }\n   \
    \     return result;\n}\n    public static void main(String[] args) {\n    assert(allPrefixes((\"\
    \")).equals((new ArrayList<String>(Arrays.asList()))));\n    assert(allPrefixes((\"\
    asdfgh\")).equals((new ArrayList<String>(Arrays.asList((String)\"a\", (String)\"\
    as\", (String)\"asd\", (String)\"asdf\", (String)\"asdfg\", (String)\"asdfgh\"\
    )))));\n    assert(allPrefixes((\"WWW\")).equals((new ArrayList<String>(Arrays.asList((String)\"\
    W\", (String)\"WW\", (String)\"WWW\")))));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660011729

name: HumanEval_17_parse_music
language: scala
prompt: "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n\
  \    // Input to this function is a string representing musical notes in a special\
  \ ASCII format.\n    // Your task is to parse this string and return list of integers\
  \ corresponding to how many beats does each\n    // not last.\n    // Here is a\
  \ legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|' - half note, lasts\
  \ two beats\n    // '.|' - quater note, lasts one beat\n    // >>> parse_music('o\
  \ o| .| o| o| .| .| .| .| o o')\n    // [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\n    def\
  \ parseMusic(music_string : String) : List[Long] = {\n"
tests: "    }\n    def main(args: Array[String]) = {\n    assert(parseMusic((\"\"\
  )).equals((List[Long]())));\n    assert(parseMusic((\"o o o o\")).equals((List[Long](4l.toLong,\
  \ 4l.toLong, 4l.toLong, 4l.toLong))));\n    assert(parseMusic((\".| .| .| .|\")).equals((List[Long](1l.toLong,\
  \ 1l.toLong, 1l.toLong, 1l.toLong))));\n    assert(parseMusic((\"o| o| .| .| o o\
  \ o o\")).equals((List[Long](2l.toLong, 2l.toLong, 1l.toLong, 1l.toLong, 4l.toLong,\
  \ 4l.toLong, 4l.toLong, 4l.toLong))));\n    assert(parseMusic((\"o| .| o| .| o o|\
  \ o o|\")).equals((List[Long](2l.toLong, 1l.toLong, 2l.toLong, 1l.toLong, 4l.toLong,\
  \ 2l.toLong, 4l.toLong, 2l.toLong))));\n    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

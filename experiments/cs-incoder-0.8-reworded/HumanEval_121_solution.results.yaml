language: cs
name: HumanEval_121_solution
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var list = new List<long>();\n        for (int i = 0; i < lst.Count;
    i++) {\n            list.Add(lst[i]);\n        }\n\n        if (list.Count > 0)\n
    \       {\n            long sum = 0;\n            int i = 0;\n            int
    evenIndex = 0;\n            while (i < list.Count)\n            {\n                if
    (list[i] % 2 == 0) {\n                    sum += list[evenIndex];\n                    evenIndex++;\n
    \               }\n                i++;\n            }\n            return sum;\n
    \       }\n        else\n        {\n            return 0L;\n        }\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4d47b8e0cee04e3fb68752f447140205>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4d47b8e0cee04e3fb68752f447140205>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long result = 0;\n        long total = 0;\n        long count
    = 0;\n        foreach (var item in lst) {\n            if (item % 2 == 0)\n                total
    += item;\n            else\n                count += 1;\n            if (count
    == lst.Count / 2)\n                result += item;\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <724455713dfa451ca0262e35bb6893ae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <724455713dfa451ca0262e35bb6893ae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var evenIndices = lst.Where(i => i % 2 == 0).ToList();\n        var
    oddIndices = lst.Where(i => i % 2 == 1).ToList();\n        var evenSum = evenIndices.Sum();\n
    \       var oddSum = oddIndices.Sum();\n        return evenSum + oddSum;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4817588f8cd34a43b29d0688e90f65e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4817588f8cd34a43b29d0688e90f65e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        long evenSum = 0;\n        int evenPosition
    = 0;\n        int oddPosition = 0;\n        foreach (var el in lst) {\n            if
    (el % 2 == 0) {\n                if (oddPosition == 0) {\n                    sum
    += el;\n                    evenSum += el;\n                }\n                else
    {\n                    evenPosition++;\n                    sum += el;\n                }\n
    \           }\n            else {\n                if (evenPosition == 0) {\n
    \                   sum += el;\n                    evenSum += el;\n                }\n
    \               else {\n                    oddPosition++;\n                    sum
    += el;\n                }\n            }\n        }\n        return sum - evenSum;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6976280461b44eb19628f24eacf02d3b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6976280461b44eb19628f24eacf02d3b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long result = 0;\n\n        for(int i = 0; i < lst.Count; i++)\n
    \       {\n            if(i%2 == 0)\n            {\n                if(lst[i]
    % 2 == 0)\n                {\n                    result += lst[i];\n                }\n
    \           }\n            else\n            {\n                if(lst[i] % 2
    != 0)\n                {\n                    result += lst[i];\n                }\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ebaf6b92ee0043e187a84b047db41d8f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ebaf6b92ee0043e187a84b047db41d8f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long evenSum = 0;\n        long oddSum = 0;\n        bool isOdd;\n
    \       long evenCount = 0;\n        long oddCount = 0;\n\n        for(int i =
    0; i< lst.Count; i+=2)\n        {\n            isOdd = lst[i] % 2 != 0;\n            evenCount
    = isOdd ? (lst[i] + 1) : (lst[i] - 1);\n            oddCount = !isOdd ? evenCount
    : evenCount - 1;\n\n            evenSum += evenCount;\n            oddSum += oddCount;\n
    \       }\n\n        return oddSum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9c2232214a86451abf6a013961c76890>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9c2232214a86451abf6a013961c76890>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        long evenSum = 0;\n        foreach(long
    n in lst) {\n            if(n % 2 == 0) {\n                sum += n;\n            }
    else {\n                evenSum += n;\n            }\n        }\n        return
    evenSum - sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b451e31ae734331b959d9abef09e38b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b451e31ae734331b959d9abef09e38b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // TODO: implement your solution here\n        var res = 0;\n
    \       for (int i = 0; i < lst.Count; i++) {\n            if (lst[i] % 2 == 0)\n
    \               res += lst[i];\n        }\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk1d9dn37.cs(22,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976362
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var res = new List<long>();\n        lst.Sort();\n        var
    evenIndex = 0;\n        var sum = 0;\n        for (int i = 0; i < lst.Count -
    1 && evenIndex < lst.Count - 1; i++) {\n            if (evenIndex % 2 != 0) {\n
    \               evenIndex++;\n                continue;\n            }\n            sum
    += lst[i];\n            evenIndex++;\n        }\n        return sum;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx1ooqi6f.cs(27,13): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976362
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var list = lst.ToList();\n        var sum = 0;\n        var evenPos
    = 0;\n        for (var i = 0; i < list.Count; i++) {\n            if (list[i]
    % 2 == 0) {\n                sum += list[i];\n                evenPos++;\n                if
    (evenPos == 2)\n                    evenPos = 0;\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpozt2ioc1.cs(23,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976362
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0) return 0;\n        long sum = 0;\n        int
    oddSum = 0;\n        bool oddPresent = false;\n        bool evenPresent = false;\n
    \       int oddPos = 0;\n        int evenPos = 0;\n        foreach (var item in
    lst) {\n            if (item % 2 != 0) {\n                if (oddPresent && oddPos
    >= 0) {\n                    oddPresent = false;\n                    oddPos++;\n
    \               }\n                sum += item;\n                oddPresent =
    true;\n            }\n            else {\n                if (evenPresent && evenPos
    >= 0) {\n                    evenPresent = false;\n                    evenPos++;\n
    \               }\n                sum += item;\n                evenPresent =
    true;\n            }\n        }\n        return sum;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8f91c6e0ed6f4a41b7c2011633617b60>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8f91c6e0ed6f4a41b7c2011633617b60>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        long firstElement = lst[0];\n        foreach
    (long element in lst) {\n            if (element % 2 != 0) {\n                sum
    += firstElement;\n            }\n            firstElement = element;\n        }\n
    \       return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3e21a64d104c485aa9cc310e65ec1fa3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3e21a64d104c485aa9cc310e65ec1fa3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count <= 0) return 0L;\n\n        var even = lst.Where((v,
    i) => i % 2 == 0).ToList();\n\n        return even.Aggregate((a, b) => a + b);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <73f1ce41b1f242b2927d682087197a19>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <73f1ce41b1f242b2927d682087197a19>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long result = 0, temp = 0;\n        int size = lst.Count;\n        for
    (int i = 0; i < size; i++) {\n            if (i % 2 == 0) {\n                temp
    = lst[i];\n                result += temp;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2fb3307108374971865a124871752260>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2fb3307108374971865a124871752260>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        long[] evens = lst.Where((x, i) => i %
    2 == 0).ToArray();\n        Array.Reverse(evens);\n        foreach (long even
    : evens) {\n            sum += even;\n        }\n        return sum;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnzk9r6fe.cs(21,28): error CS1515: ''in'' expected

    /tmp/tmpnzk9r6fe.cs(21,28): error CS1525: Invalid expression term '':''

    /tmp/tmpnzk9r6fe.cs(21,28): error CS1026: ) expected

    /tmp/tmpnzk9r6fe.cs(21,28): error CS1002: ; expected

    /tmp/tmpnzk9r6fe.cs(21,28): error CS1513: } expected

    /tmp/tmpnzk9r6fe.cs(21,35): error CS1002: ; expected

    /tmp/tmpnzk9r6fe.cs(21,35): error CS1513: } expected

    '
  timestamp: 1659976362
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long oddSum = 0;\n        long evenSum = 0;\n        int evenPos
    = 0;\n        foreach (var item in lst) {\n            if (item % 2 == 0) {\n
    \               if (evenPos == 0) {\n                    evenSum = evenSum + item;\n
    \               } else {\n                    oddSum = oddSum + item;\n                }\n
    \               evenPos++;\n            } else {\n                if (evenPos
    > 0) {\n                    oddSum = oddSum + item;\n                }\n            }\n
    \       }\n        return oddSum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c8e558b3afe64f2d863effdbd736c850>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c8e558b3afe64f2d863effdbd736c850>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long oddSum = 0;\n\n        foreach (var item in lst) {\n            if
    (item % 2 != 0)\n                continue;\n            oddSum += item;\n        }\n
    \       return oddSum;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cc084111036a4546af4ea776e7e0ca55>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cc084111036a4546af4ea776e7e0ca55>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        foreach (long num in lst) {\n            if
    ((num % 2) == 0) sum += num;\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3f5e09a980114a07a8a92e53278015dd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3f5e09a980114a07a8a92e53278015dd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0) return 0;\n        long sum = 0;\n        for
    (int i = 0; i < lst.Count; ++i) {\n            if (i % 2 == 0)\n                sum
    += lst[i];\n        }\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f90e3ccd4f0e40ba9f6428e7671e7cda>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f90e3ccd4f0e40ba9f6428e7671e7cda>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        long evenCount = 0;\n        long oddCount
    = lst.Count;\n        foreach (long item in lst) {\n            bool isEven =
    item % 2 == 0;\n            if (isEven == true) evenCount++;\n            else\n
    \           {\n                oddCount--;\n                if (oddCount < 0)
    break;\n                sum += item;\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90f75c9f3b304f648ec50d0dff8a9ea3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90f75c9f3b304f648ec50d0dff8a9ea3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0) return 0L;\n        var hash = lst.ToDictionary(x
    => x, x => x);\n        var sum = 0L;\n        for (int i = 1; i < lst.Count;
    i++) {\n            long curr = lst[i];\n            long prev = hash[curr];\n
    \           hash[curr] = null;\n            if (prev != null) sum -= prev;\n            sum
    += curr;\n        }\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpayfcp8cz.cs(24,26): error CS0037: Cannot convert null to ''long'' because
    it is a non-nullable value type

    /tmp/tmpayfcp8cz.cs(25,17): warning CS0472: The result of the expression is always
    ''true'' since a value of type ''long'' is never equal to ''null'' of type ''long?''

    '
  timestamp: 1659976362
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        foreach (var item in lst) {\n            if
    (item % 2 == 0)\n                sum += item;\n            else\n                sum
    -= item;\n        }\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <085afb8d41ec48f698b1ebac98e7f0f9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <085afb8d41ec48f698b1ebac98e7f0f9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        Debug.Assert(lst.Count > 0);\n        long sum = 0L;\n        int
    evenIndex = 0;\n        for (int index = 0; index < lst.Count; index++)\n        {\n
    \           if (index % 2 == 0)\n            {\n                sum = sum + lst[index];\n
    \               evenIndex++;\n            }\n            else\n            {\n
    \               if (evenIndex > 0)\n                {\n                    sum
    += lst[index];\n                }\n            }\n        }\n        return sum;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eca3d62faae746b8b92507c10ed04957>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eca3d62faae746b8b92507c10ed04957>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        long evenIndex = 1;\n        foreach (var
    x in lst) {\n            sum += x;\n            if (x % 2 == 0) {\n                evenIndex++;\n
    \           } else {\n                sum += (x - evenIndex) * 2;\n            }\n
    \       }\n        return sum;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <619457fe7c06425a96fcd9e976d6a7a3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <619457fe7c06425a96fcd9e976d6a7a3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0L;\n        long count = 1L;\n        for (int i =
    0; i < lst.Count; i++) {\n            if (i % 2 == 0) {\n                if (lst[i]
    % 2 != 0) {\n                    count++;\n                }\n                sum
    += lst[i] / 2;\n            }\n            else {\n                if (lst[i]
    % 2 == 1) {\n                    sum += lst[i] / 2;\n                    count++;\n
    \               }\n            }\n        }\n        if (count == 0L) {\n            return
    sum;\n        }\n        return sum % 10;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3135d0f83cf1448dba52e56329bce5c2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3135d0f83cf1448dba52e56329bce5c2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n
    \           if ((i % 2) == 0) {\n                if ((lst.Count - i) % 2 == 0)
    {\n                    sum += lst[i];\n                }\n            }\n        }\n
    \       return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <721924c02ac74bd2a96290482394bf46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <721924c02ac74bd2a96290482394bf46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        foreach (var i in lst) {\n            if
    (i % 2 == 0) sum += i;\n        }\n        return sum;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4df86563bdd24385ade632e3c22a07a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4df86563bdd24385ade632e3c22a07a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var even = lst.Where(x => x % 2 == 0).ToList();\n        return
    even.Where((y, i) => i % 2 == 1).Sum();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <712891a775c54712b6c793e9cc2fa853>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <712891a775c54712b6c793e9cc2fa853>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0) return 0;\n        var sum = 0;\n        var
    evenPos = 0;\n        var oddPos = 0;\n        foreach (var num in lst) {\n            if
    (num % 2 != 0) {\n                sum += num;\n                oddPos++;\n            }
    else {\n                sum += num;\n                evenPos++;\n            }\n
    \       }\n        return sum - lst.Sum(n => (long)n & 1);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp44q_tdmg.cs(24,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp44q_tdmg.cs(27,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // O(2n) solution\n        long oddSum = 0;\n        foreach (var
    i in lst) {\n            if (i % 2 == 0) {\n                oddSum += i;\n            }\n
    \       }\n        long evenSum = oddSum;\n        foreach (var i in lst) {\n
    \           if (i % 2 == 1) {\n                evenSum += i;\n            }\n
    \       }\n        return evenSum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ffb152a7ae9b490eaf88c129cfa5ddbe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ffb152a7ae9b490eaf88c129cfa5ddbe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long result = -1;\n        long evenSum = 0;\n        int oddSum
    = 0;\n        foreach (var item in lst) {\n            if (item % 2 == 0) {\n
    \               evenSum += item;\n            } else {\n                oddSum
    += item;\n            }\n        }\n        result = evenSum - oddSum;\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy8x9225m.cs(25,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976363
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n
    \           if (i % 2 == 0) {\n                sum += lst[i];\n            }\n
    \       }\n        return sum;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpub16_1an.cs(21,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long result = 0;\n        for (int i = lst.Count - 1; i >= 0;
    i--) {\n            if (lst[i] % 2 == 0) \n                continue;\n            result
    += lst[i];\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b1a469f38794e6eb76cd62eba36ed5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b1a469f38794e6eb76cd62eba36ed5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        return lst.Where(x => (x % 2) == 0).Sum(x => lst.Where(y => ((x
    % 2) == 0) && ((y % 2) == 1)).Sum());\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f148861d0f940b481dfb1a7f35bed63>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f148861d0f940b481dfb1a7f35bed63>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long result = lst[0].Value;\n        for (int i = 1; i < lst.Count;
    i++) {\n            if (lst[i].Value % 2 == 1)\n                result -= lst[i
    - 1].Value;\n            else\n                result += lst[i - 1].Value;\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpca75gg67.cs(18,30): error CS1061: ''long'' does not contain a definition
    for ''Value'' and no accessible extension method ''Value'' accepting a first argument
    of type ''long'' could be found (are you missing a using directive or an assembly
    reference?)

    /tmp/tmpca75gg67.cs(20,24): error CS1061: ''long'' does not contain a definition
    for ''Value'' and no accessible extension method ''Value'' accepting a first argument
    of type ''long'' could be found (are you missing a using directive or an assembly
    reference?)

    /tmp/tmpca75gg67.cs(21,38): error CS1061: ''long'' does not contain a definition
    for ''Value'' and no accessible extension method ''Value'' accepting a first argument
    of type ''long'' could be found (are you missing a using directive or an assembly
    reference?)

    /tmp/tmpca75gg67.cs(23,38): error CS1061: ''long'' does not contain a definition
    for ''Value'' and no accessible extension method ''Value'' accepting a first argument
    of type ''long'' could be found (are you missing a using directive or an assembly
    reference?)

    '
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long evenSum = 0;\n        long oddSum = 0;\n        long evenCount
    = 0;\n        long oddCount = 0;\n        foreach(long i in lst) {\n            if((i
    & 1L) != 0) {\n                evenSum += i;\n                evenCount++;\n            }\n
    \           else {\n                oddSum += i;\n                oddCount++;\n
    \           }\n        }\n        return (evenCount == 0) ? oddSum : evenSum;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ef65f993067e49a2b004b68dc27b402a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ef65f993067e49a2b004b68dc27b402a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        if (lst.Count == 0) {\n            return
    0;\n        }\n        long evenPos = lst[lst.length-1] / 2;\n        long oddPos
    = lst[lst.length-1] - evenPos;\n        foreach (long i in lst) {\n            if
    (i % 2 == 0) {\n                sum += i;\n            } else {\n                sum
    += i - evenPos;\n            }\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9e3pmnbt.cs(22,32): error CS1061: ''List<long>'' does not contain a definition
    for ''length'' and no accessible extension method ''length'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmp9e3pmnbt.cs(23,31): error CS1061: ''List<long>'' does not contain a definition
    for ''length'' and no accessible extension method ''length'' accepting a first
    argument of type ''List<long>'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659976363
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long[] even = lst.Where((long, index) => index % 2 == 0).ToArray();\n
    \       return even.Sum(i => i / 2);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0_qh4krf.cs(18,38): error CS1001: Identifier expected

    '
  timestamp: 1659976363
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var evenIndexes = lst.Where(x => (x & 1) == 0).ToList();\n        return
    evenIndexes.Sum(x => lst[x]);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcwpoueol.cs(19,41): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        HashSet<long> set = new HashSet<long>();\n
    \       for(int i = 0; i< lst.Count; i++){\n            if(i % 2 != 0){\n                if(!set.Contains(lst[i])){\n
    \                   sum += lst[i];\n                    set.Add(lst[i]);\n                }\n
    \           }\n        }\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8a5c481e838745e9a4589874a34762b9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8a5c481e838745e9a4589874a34762b9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0)\n            return 0;\n        long sum =
    0;\n        int odd = (lst.Count - 1) % 2;\n        foreach (long item in lst)
    {\n            if (item % 2 == 1) {\n                sum += item;\n                if
    (odd == 0 && item % 2 != 0)\n                    odd += 1;\n            }\n        }\n
    \       return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <946b96d014e24716b04e4c5b26d952ec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <946b96d014e24716b04e4c5b26d952ec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        Debug.Assert(lst != null && lst.Count > 0);\n\n        Debug.Assert(lst.Sum()
    != 0);\n\n        int odd = lst[0] % 2 == 1 ? 1 : 0;\n        long result = odd
    + lst[0] / 2;\n        for (int i = 1; i < lst.Count; i++) {\n            if (lst[i]
    % 2 == 1) {\n                result += lst[i] / 2;\n            }\n            else
    {\n                result -= lst[i] / 2;\n            }\n        }\n\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13b68cc2f7db47d18c4681975548b409>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13b68cc2f7db47d18c4681975548b409>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976363
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0L;\n        for (int i = 0; i < lst.Count; i++) {\n
    \           if (i % 2 != 0) {\n                sum = sum + lst[i];\n            }\n
    \       }\n        return sum;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8620201c3d4f4278817bebb8c41f3488>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8620201c3d4f4278817bebb8c41f3488>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var evens = lst.Where((t, i) => i % 2 == 0).ToList();\n        var
    odds = lst.Where((t, i) => i % 2 == 1).ToList();\n        foreach (var e in evens)\n
    \       {\n            foreach (var o in odds)\n            {\n                if
    (e == o)\n                {\n                    return e;\n                }\n
    \           }\n        }\n        return 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <419ac9e26e6f44698b680ec6df6fea60>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <419ac9e26e6f44698b680ec6df6fea60>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0L;\n        long odd = 1L;\n        List<long> even
    = new List<long>();\n        foreach (long i in lst)\n        {\n            if
    (i % 2 == 0)\n            {\n                even.Add(i);\n            }\n            else\n
    \           {\n                sum += odd;\n                odd = 1L;\n                even.Clear();\n
    \           }\n        }\n        sum += odd;\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a0437c51b244bf389556e70c55dd9e4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a0437c51b244bf389556e70c55dd9e4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        int count = 0;\n        foreach (var item
    in lst) {\n            if (count % 2 == 0) {\n                sum += item;\n            }\n
    \           count++;\n        }\n        return sum;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a944a19cf92c4536ba94bbe35c6d605e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a944a19cf92c4536ba94bbe35c6d605e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        int count = 0;\n        for (int i = 0;
    i + 1 < lst.Count; i++) {\n            if (lst[count] % 2 == 0) {\n                sum
    += lst[i];\n                count++;\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <17a5a947b88a48c4a20e2b534188c4ca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <17a5a947b88a48c4a20e2b534188c4ca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        foreach (long l in lst) {\n            if
    (l % 2 == 0) {\n                sum = sum + l;\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6ef186b741a44edca48411334c2b8691>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6ef186b741a44edca48411334c2b8691>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n
    \           if (i % 2 == 0) {\n                sum += lst[i];\n            }\n
    \       }\n        return sum;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6507fdb0c88d44ae8f8247d9951f5e7d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6507fdb0c88d44ae8f8247d9951f5e7d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        long sumOfOdd = 0;\n        long sumOfEven
    = 0;\n        foreach(var item in lst) {\n            if((item % 2) == 1) {\n
    \               sumOfOdd += item;\n            } else {\n                sumOfEven
    += item;\n            }\n        }\n        sumOfOdd = sumOfOdd % 60;\n        sumOfEven
    = sumOfEven % 60;\n        sum = sumOfEven + sumOfOdd;\n        return sum;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <45e71d642ba84aa791901446bd0c11e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <45e71d642ba84aa791901446bd0c11e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count < 2) {\n            return 0;\n        }\n        long
    ans = 0;\n        long i = 1;\n        while (i * i < lst.Count) {\n            ans
    += lst[i++];\n        }\n        return ans;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5lx_8ovm.cs(24,24): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976364
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // write your code in C# 6.0 with .NET FW 4.5\n        long sum
    = 0;\n        if(lst.Count == 0){\n            return 0;\n        }\n        for(int
    i = lst.Count - 1; i >= 0; i--){\n            if(lst[i] % 2 == 0){\n                if(lst.Count
    > 1){\n                    sum += lst[i - 2];\n                }\n                else
    if(lst.Count == 1){\n                    sum += lst[i];\n                }\n                else{\n
    \                   return sum;\n                }\n            }\n            else{\n
    \               sum += lst[i];\n            }\n        }\n        return sum;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Solution
    (System.Collections.Generic.List`1[T] lst) [0x0004b] in <3782f5d12b644cf483fb36b61422d191>:0
    \n  at Problem.Main (System.String[] args) [0x00017] in <3782f5d12b644cf483fb36b61422d191>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Solution
    (System.Collections.Generic.List`1[T] lst) [0x0004b] in <3782f5d12b644cf483fb36b61422d191>:0
    \n  at Problem.Main (System.String[] args) [0x00017] in <3782f5d12b644cf483fb36b61422d191>:0
    \n"
  stdout: ''
  timestamp: 1659976364
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var n = (int)lst.Count;\n        double sum = 0;\n        for(int
    i = 0; i<n; i++){\n            if(i % 2 == 0){\n                if(lst[i] % 2
    != 0)\n                    sum += lst[i];\n            }\n        }\n        return
    Math.Truncate(sum);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo5mrjski.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        foreach(var v in lst){\n            if(v%2
    == 0) sum += v;\n        }\n        return sum;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01afffe0bfd3459ea359a543e2e44cd0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01afffe0bfd3459ea359a543e2e44cd0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var res = 0;\n        foreach (var item in lst.Where(i => (i >>
    1) & 1).OrderBy(i => i)) {\n            res += item;\n        }\n        return
    res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo4w421bg.cs(19,45): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    /tmp/tmpo4w421bg.cs(19,45): error CS1662: Cannot convert lambda expression to
    intended delegate type because some of the return types in the block are not implicitly
    convertible to the delegate return type

    '
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0)\n            return 0;\n        // Find first
    even index\n        int i = 0;\n        while (i < lst.Count && lst[i] % 2 ==
    0) {\n            i += 2;\n        }\n        // Find sum of odd elements\n        long
    sum = 0;\n        while (i < lst.Count) {\n            sum += lst[i];\n            i
    += 2;\n        }\n        // Divide by two\n        sum -= (lst.Count % 2 == 0)
    ? 1 : 0;\n        return sum;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4cd89c73ec0458c8ebf2cdae81badbd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4cd89c73ec0458c8ebf2cdae81badbd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var sum = 0;\n        var i = 0;\n        if (lst.Count > 0) {\n
    \           sum = lst[i];\n            i = 1;\n            foreach (var item in
    lst) {\n                if (i % 2 == 0) {\n                    if (item % 2 !=
    0) {\n                        sum += item;\n                    }\n                }\n
    \               i++;\n            }\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjc3t6xxv.cs(21,19): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpjc3t6xxv.cs(26,25): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count < 2) return 0;\n        var evens = new List<long>();\n
    \       var odds = new List<long>();\n\n        for (int i = 0; i < lst.Count;
    ++i) {\n            if (i % 2 == 0)\n                evens.Add(lst[i]);\n            else\n
    \               odds.Add(lst[i]);\n        }\n\n        var even = evens.Sum();\n
    \       var odd = odds.Sum();\n        return even - odd;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9692d9ebd63b484989bcda4e76d7ef3d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9692d9ebd63b484989bcda4e76d7ef3d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        long evenSum = 0;\n        long evenCount
    = 1;\n        foreach (long i in lst) {\n            if (i % 2 == 0) {\n                sum
    += i;\n                evenSum = sum;\n                evenCount++;\n            }\n
    \           else {\n                long diff = i - evenSum;\n                if
    (diff % 2 == 1)\n                    sum += (diff / 2);\n            }\n        }\n
    \       return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7dbd1be48b6e4c039a163db32c068527>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7dbd1be48b6e4c039a163db32c068527>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count < 2) return 0;\n        long evenSum = 0;\n        for
    (int i = 0; i < lst.Count - 1; i++)\n        {\n            if (lst[i]%2==0)\n
    \           {\n                if (lst[i]%2==0)\n                {\n                    evenSum
    += lst[i];\n                }\n            }\n            else\n            {\n
    \               if (lst[i+1]%2==0)\n                {\n                    evenSum
    += lst[i+1];\n                }\n            }\n        }\n        return evenSum;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <38e5f0e746bf4c7f90d87f2b3dda5ddd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <38e5f0e746bf4c7f90d87f2b3dda5ddd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        Debug.Assert(lst.Count > 0);\n        long total = 0;\n        long
    last = 0;\n        foreach (long i in lst) {\n            if (i % 2 == 0) {\n
    \               total += i;\n                last = i;\n            }\n        }\n
    \       if (last != 0) {\n            total += last;\n        }\n        return
    total;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fb969c438a184d629fb60bcac9769151>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fb969c438a184d629fb60bcac9769151>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0) return 0;\n        var sum = 0;\n        for
    (var i = 2; i < lst.Count; i++) {\n            if (lst[i-2]%2 == 0)\n                sum
    += lst[i];\n        }\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2er2wfr4.cs(22,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        if (lst == null) return 0;\n        int
    n = lst.Count;\n        int count = 0;\n        foreach (long x in lst) {\n            if
    (count % 2 == 0) {\n                if (x % 2 == 1) sum += x;\n            }\n
    \           count++;\n        }\n        return sum;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count < 2) return 0;\n        long total = 0;\n        long
    even = 0;\n        int countOdd = 1;\n        long odd;\n        for (int i =
    1; i < lst.Count; i++) {\n            odd = lst[i];\n            if (odd % 2 ==
    0) {\n                even = odd % 10;\n                if (even % 2 == 0)\n                    countOdd
    += 1;\n            }\n            else {\n                if (countOdd == 1) even
    = odd % 10;\n                else if (countOdd == 2) even = odd % 10;\n                else
    if (countOdd == 3) even = odd % 10;\n                else if (countOdd == 4) even
    = odd % 10;\n                else if (countOdd == 5) even = odd % 10;\n                else
    if (countOdd == 6) even = odd % 10;\n                else if (countOdd == 7) even
    = odd % 10;\n                else if (countOdd == 8) even = odd % 10;\n                else
    if (countOdd == 9) even = odd % 10;\n                total += even;\n                countOdd
    = 1;\n            }\n        }\n        return total;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2e20506f93f04714bfae63d4039f1a2c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2e20506f93f04714bfae63d4039f1a2c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long oddsum = 0;\n        long evensum = lst[0];\n        for
    (int i = 0; i < lst.Count; i++) {\n            if (i % 2 == 0) {\n                evensum
    += lst[i];\n            }\n            else {\n                oddsum += lst[i];\n
    \           }\n        }\n        return oddsum + evensum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1651b4c4bc4447faad43544749ddb001>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1651b4c4bc4447faad43544749ddb001>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long[] sums = lst.ToArray();\n        if (lst.Count > 0)\n            sums
    = sums.Where(x => (x & 1) == 1).ToArray();\n        return sums.Sum();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8219f016a8964f068d46006c320d6100>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8219f016a8964f068d46006c320d6100>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        int count = 0;\n        for (int i = 0;
    i + 1 < lst.Count; i++) {\n            if (lst[i]%2==0) {\n                count
    += lst[i] - lst[i + 1];\n            }\n        }\n        if (count > 0)\n            sum
    = sum + count;\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps6by0xwf.cs(22,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // TODO: Write your implementation here.\n        var result =
    lst.Where((l, i) => i % 2 == 0).Sum();\n        if (result % 2 == 0)\n            return
    0;\n        else\n            return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05ec2ba3f62d44009adae380df26550a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05ec2ba3f62d44009adae380df26550a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        foreach (var i in lst) {\n            if
    (i % 2 == 1) {\n                sum += i;\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5c74e1949cbe45d1b75711821b6f4604>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5c74e1949cbe45d1b75711821b6f4604>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0L;\n        for (int i = 1; i < lst.Count; i++) {\n
    \           sum += lst[i - 1] * lst[i];\n        }\n        return sum;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf0afba5603c407eab1ec0def730efab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf0afba5603c407eab1ec0def730efab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0) {\n            return 0L;\n        }\n\n        long[]
    sum = new long[2];\n        int evenPos = 0;\n\n        for (int i = 0; i < lst.Count;
    i++) {\n            if (i % 2 == 0) {\n                sum[0] += lst[i];\n            }
    else {\n                sum[1] += lst[i];\n                evenPos = 1;\n            }\n
    \       }\n        return sum[evenPos] + sum[0] - (sum[1] + sum[evenPos]);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0fc43c028933458ea621269157415d2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0fc43c028933458ea621269157415d2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0) {\n            throw new ArgumentException();\n
    \       }\n\n        long sum = lst.First();\n\n        for (int i = 1; i < lst.Count;
    i++) {\n            if (lst[i] % 2 == 0) {\n                sum += lst[i];\n            }\n
    \       }\n\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dfe7527d1ebb43b69f5d5d11907c7128>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dfe7527d1ebb43b69f5d5d11907c7128>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long even = 0;\n        for (int i = 0; i < lst.Count; ++i) {\n
    \           if (lst[i] % 2 == 0) {\n                even += lst[i];\n            }\n
    \       }\n        return even;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1d347c579284437ab6edf12df1a7c971>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1d347c579284437ab6edf12df1a7c971>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long evenSum = lst[0];\n        foreach (long x in lst.Skip(1)){\n
    \           if (x % 2 == 0){\n                evenSum = evenSum + x;\n            }\n
    \       }\n        return evenSum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d2d7fee5a0c34480997d46abf76f47eb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d2d7fee5a0c34480997d46abf76f47eb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count < 3) {\n            return 0;\n        }\n\n        var
    evenSum = 0;\n        var oddSum = 0;\n        var even = 0;\n        var odd
    = 1;\n\n        var list = lst.OrderBy(x => x).ToList();\n\n        var evenList
    = list.Skip(2).Take(list.Count - 2).ToList();\n        evenList.ForEach(x => evenSum
    += x);\n\n        var oddList = list.Skip(1).Take(list.Count - 1).ToList();\n
    \       oddList.ForEach(x => oddSum += x);\n\n        var result = evenSum + oddSum;\n\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptp8f1_us.cs(30,31): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptp8f1_us.cs(33,30): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptp8f1_us.cs(24,13): warning CS0219: The variable ''even'' is assigned
    but its value is never used

    /tmp/tmptp8f1_us.cs(25,13): warning CS0219: The variable ''odd'' is assigned but
    its value is never used

    '
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        if (lst != null && lst.Count > 0) {\n            int
    len = lst.Count;\n            int[] evens = new int[len];\n\n            // Sort
    lst\n            lst.Sort();\n\n            for (int i = 0; i < len; i++) {\n
    \               int evenIndex = i / 2;\n                if (evens[evenIndex] ==
    0) {\n                    sum += lst[i];\n                    evens[evenIndex]
    = 1;\n                } else {\n                    if (evenIndex == len - 1)
    {\n                        sum += lst[i];\n                        evens[evenIndex]
    = 0;\n                    }\n                }\n            }\n        }\n\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <26bb7cb20b324a629e416dd54d1f19cf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <26bb7cb20b324a629e416dd54d1f19cf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var sum = lst.Where((x, i) => i % 2 == 0).Sum();\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <44c3fb5acbf94a68a5409b0a843fe6da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <44c3fb5acbf94a68a5409b0a843fe6da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.Count; i++)\n            if
    (i % 2 == 0)\n                sum += lst[i];\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ebcde310c202468a934ab1a1a0fbc767>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ebcde310c202468a934ab1a1a0fbc767>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long result = 0;\n        long sum = 0;\n        long current
    = 0;\n        for (int i = 0; i < lst.Count; i++) {\n            if (i % 2 ==
    0) {\n                sum += lst[i];\n            } else {\n                result
    += current;\n                current = lst[i];\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c8644ff2d8c04b70a300ce7d4bf59372>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c8644ff2d8c04b70a300ce7d4bf59372>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var evens = lst.Where((x, i) => i % 2 == 0).ToList();\n        var
    odds = lst.Where((x, i) => i % 2 != 0).ToList();\n        Debug.Assert(evens.Count
    == odds.Count);\n\n        var sum = 0;\n        foreach (var v in odds) sum +=
    v;\n        foreach (var v in evens) sum += v;\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_e74y13_.cs(23,33): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp_e74y13_.cs(24,34): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long result = lst[0];\n        long sum = 0;\n        foreach
    (var item in lst) {\n            if (item % 2 == 0)\n                sum += item;\n
    \       }\n        return sum;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d629af1968544321b3c3f814d8e1d828>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d629af1968544321b3c3f814d8e1d828>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long oddSum = 0;\n        long evenSum = 0;\n        int len =
    lst.Count;\n        for (int i = 0; i < len; i++) {\n            if (i % 2 ==
    0) {\n                evenSum += lst[i];\n            } else {\n                oddSum
    += lst[i];\n            }\n        }\n        return (oddSum + evenSum);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eadffa1698044dd0aae79cdafb07d866>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eadffa1698044dd0aae79cdafb07d866>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0)\n            return 0;\n\n        HashSet<long>
    set = new HashSet<long>();\n        long sum = 0;\n\n        foreach (var item
    in lst) {\n            if (set.Contains(item))\n                set.Remove(item);\n
    \           else\n                sum += item;\n            set.Add(item);\n        }\n\n
    \       return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea09687ebde9430e93fd78995b3e3484>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea09687ebde9430e93fd78995b3e3484>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        return lst.Where((x, i) => i % 2 == 0).Sum(x => x);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a78c3f058c5e470690bf589d16ed65f4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a78c3f058c5e470690bf589d16ed65f4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        long curSum = 0;\n        long len = lst.Count;\n
    \       bool isOdd = true;\n        int evenPos = 0;\n        int oddPos = 0;\n
    \       long tmpVal = 0;\n\n        for (long i = 0; i < len; i++) {\n            tmpVal
    = lst[i];\n            if (isOdd) {\n                curSum += tmpVal;\n                isOdd
    = false;\n                if (i == len - 1) {\n                    sum += curSum;\n
    \               }\n            }\n            else {\n                oddPos++;\n
    \               if (tmpVal % 2 == 1) {\n                    curSum += tmpVal;\n
    \                   isOdd = true;\n                }\n            }\n        }\n
    \       return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkxi4h7dd.cs(27,26): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpkxi4h7dd.cs(22,13): warning CS0219: The variable ''evenPos'' is assigned
    but its value is never used

    '
  timestamp: 1659976365
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0L;\n        Array.Sort(lst);\n        long evenIndex
    = 0;\n        long oddIndex = lst.Count - 1;\n        while (oddIndex >= evenIndex)
    {\n            if (lst[evenIndex] % 2 == 0) {\n                sum += lst[evenIndex];\n
    \           }\n            evenIndex++;\n        }\n        return sum;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqyz0g_9a.cs(19,20): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.List<long>''
    to ''System.Array''

    /tmp/tmpqyz0g_9a.cs(23,21): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpqyz0g_9a.cs(24,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long result = 0;\n        for(int i = 0; i < lst.Count; i += 2)
    {\n            result += lst[i];\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <14df1b07e701400fa04a75c93f2280d8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <14df1b07e701400fa04a75c93f2280d8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        for(var i = 0; i < lst.Count; i++) {\n
    \           var isOdd = i % 2 == 1;\n            if(isOdd && lst[i] % 2 != 0)
    {\n                sum += lst[i];\n            }\n        }\n        return sum;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f3c89ce8fefc4ac89e9563570de4d3e7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f3c89ce8fefc4ac89e9563570de4d3e7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        foreach (var l in lst) {\n            if
    (l % 2 == 0)\n                sum += l;\n        }\n        return sum;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c3de7d4041a34b3eb27df3bc1cb0bf1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c3de7d4041a34b3eb27df3bc1cb0bf1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count < 2) return 0L;\n\n        long sum = 0L;\n\n        var
    oddPositions = lst.Skip(1).Select((e, i) => new { Index = i, Value = (int)e });\n
    \       foreach (var odd in oddPositions)\n        {\n            int index =
    0;\n            long value = 0L;\n            while (index < odd.Index && odd.Index
    < odd.Index + 1 && odd.Value % 2 == 0)\n            {\n                value =
    value + odd.Value;\n                index++;\n            }\n            sum =
    (sum + value) % 1000000000L;\n        }\n\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90ac922cd7894fe195b41fc6525d6f68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90ac922cd7894fe195b41fc6525d6f68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long total = 0;\n        for (int i = 0; i < lst.Count; i++) {\n
    \           if (lst[i] % 2 != 0) total += lst[i];\n        }\n        return total;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ea9ff8623d64949975f7e1b842d7dcd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ea9ff8623d64949975f7e1b842d7dcd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // TODO: Write your implementation here\n        var evens = lst.Where((x,
    i) => i % 2 == 0).Sum();\n        var odd = lst.Where((x, i) => i % 2 != 0).Sum();\n
    \       return evens + odd;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b4dd7b95225476ca5f1888fed8f01fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b4dd7b95225476ca5f1888fed8f01fb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976365
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0)\n        {\n            return 0;\n        }\n
    \       long sum = 0;\n        var evenElements = lst.Where(n => (n % 2) == 0).OrderBy(n
    => n);\n        evenElements.ToList().ForEach(n =>\n        {\n            sum
    = sum + n;\n        });\n\n        if (evenElements.Count % 2 == 0)\n        {\n
    \           sum = sum - evenElements.Sum(n => n);\n        }\n        return sum;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi9ctjl8j.cs(29,13): error CS0019: Operator ''%'' cannot be applied to
    operands of type ''method group'' and ''int''

    '
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n
    \           if (i % 2 == 0) {\n                sum += lst[i];\n            }\n
    \       }\n        return sum;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6507fdb0c88d44ae8f8247d9951f5e7d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6507fdb0c88d44ae8f8247d9951f5e7d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976364
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long ret = 0;\n        List<long> evens = lst.Where(x => x % 2
    == 0).ToList();\n        foreach (long num in lst)\n        {\n            if
    (num % 2 == 1)\n            {\n                ret += num;\n            }\n        }\n
    \       foreach (long num in evens)\n        {\n            ret += num;\n        }\n
    \       return ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4de11eefb4624f71967de9bec5f6d485>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4de11eefb4624f71967de9bec5f6d485>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var sum = 0;\n        for (int i = 0; i < lst.Count; i+=2)\n        {\n
    \           if (lst[i]%2 != 0 && lst[i+1]%2 == 0)\n            {\n                sum
    += lst[i];\n            }\n        }\n        return sum;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjvzxqu5y.cs(23,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976365
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count < 3) {\n            return 0L;\n        }\n        long
    sum = 0L;\n        List<long> even = lst.FindAll(i => i % 2 == 0);\n        long
    evenTotal = even.Sum(i => i);\n        long odd = lst.FindAll(i => i % 2 != 0);\n
    \       long oddTotal = odd.Sum(i => i);\n        sum = (evenTotal + oddTotal);\n
    \       return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprzesui6z.cs(24,20): error CS0029: Cannot implicitly convert type ''System.Collections.Generic.List<long>''
    to ''long''

    /tmp/tmprzesui6z.cs(25,29): error CS1061: ''long'' does not contain a definition
    for ''Sum'' and no accessible extension method ''Sum'' accepting a first argument
    of type ''long'' could be found (are you missing a using directive or an assembly
    reference?)

    '
  timestamp: 1659976365
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        \n        for (int i = 0; i < lst.Count;
    i++) {\n            if (i%2 == 0) {\n                if (lst[i] % 2 != 0) {\n
    \                   sum += lst[i];\n                }\n            }\n            else
    {\n                if (lst[i] % 2 == 1) {\n                    sum += lst[i];\n
    \               }\n            }\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f0b2bb40ec9e460d9a4f572f8152f865>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f0b2bb40ec9e460d9a4f572f8152f865>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0)\n            return 0;\n\n        long odd
    = lst[0];\n        long even = 0;\n\n        for(int i = 1; i < lst.Count; i++){\n
    \           odd += lst[i];\n\n            if (lst[i -1] % 2 == 0)\n                even
    += lst[i -1];\n        }\n\n        return odd - (even % odd)%odd;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c83c0996a21649e193934e076e108177>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c83c0996a21649e193934e076e108177>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var even = lst.Where((x, i) => i % 2 == 0).ToList();\n        var
    odd = lst.Where((x, i) => i % 2 != 0).ToList();\n        var evenSum = even.Sum();\n
    \       var oddSum = odd.Sum();\n        return evenSum + oddSum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5692d5658f944aa094b0c3eb1b762f71>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5692d5658f944aa094b0c3eb1b762f71>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        int sum = 0;\n        for(int i=0;i<lst.Count;i++)\n        {\n
    \           if (i%2 == 0)\n                sum += lst[i];\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpltli6tpg.cs(22,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        int odds = 0;\n        foreach (var number
    in lst) {\n            odds += number % 2 == 0 ? 1 : 0;\n            sum += number
    % 2 == 0 ? number : -number;\n        }\n        return sum % 2 == 0 ? sum : -sum;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <64a2e35d6f4647d197c5369937518f59>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <64a2e35d6f4647d197c5369937518f59>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // write your code in C# 7.0 with .NET 4.7.2 or higher\n        return
    lst.GroupBy(x => (x % 2 == 0 ? 0 : 1)).Sum(g => g.Key);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ad7037da85124dc2a44c13bf596f969d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ad7037da85124dc2a44c13bf596f969d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long result = 0;\n\n        long[] arr = lst.ToArray();\n        int
    evenIndex = 0;\n        int oddIndex = 1;\n\n        while (evenIndex < arr.Length)
    {\n            result += arr[evenIndex];\n\n            // Move to the next odd
    element.\n            arr[oddIndex] = arr[evenIndex];\n            oddIndex++;\n
    \           evenIndex++;\n        }\n\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside
    the bounds of the array.\n  at Problem.Solution (System.Collections.Generic.List`1[T]
    lst) [0x00018] in <d865439bffe447148a389c42237718e0>:0 \n  at Problem.Main (System.String[]
    args) [0x00017] in <d865439bffe447148a389c42237718e0>:0 \n[ERROR] FATAL UNHANDLED
    EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the
    array.\n  at Problem.Solution (System.Collections.Generic.List`1[T] lst) [0x00018]
    in <d865439bffe447148a389c42237718e0>:0 \n  at Problem.Main (System.String[] args)
    [0x00017] in <d865439bffe447148a389c42237718e0>:0 \n"
  stdout: ''
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long total = 0;\n        for(int i=0; i<lst.Count; i++)\n        {\n
    \           if(lst[i] % 2 == 0)\n            {\n                total += lst[i];\n
    \           }\n        }\n        return total;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <41287e28f5c042368baf886271ce80ea>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <41287e28f5c042368baf886271ce80ea>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        foreach (var item in lst) {\n            if
    (item % 2 == 0) {\n                sum += item;\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3387b0b7f347435593f0f6e6ad2c2776>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3387b0b7f347435593f0f6e6ad2c2776>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count <= 0)\n            return 0;\n\n        var evenOdd
    = lst.Where((num, index) => index % 2 == 0).ToList();\n\n        if (evenOdd.Count
    == 0)\n            return 0;\n\n        return evenOdd.Sum(x => (long)x * 2);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f7046152f2a94668adedd4e992c452ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f7046152f2a94668adedd4e992c452ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var res = lst.Where((x, i) => i % 2 == 0).Sum();\n        return
    lst[res.CompareTo(lst.Last())] < lst.Last() ? res : lst.Last();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <93d6eb43747049a0a222238d33e8ac0b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <93d6eb43747049a0a222238d33e8ac0b>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Solution
    (System.Collections.Generic.List"
  stdout: ''
  timestamp: 1659976366
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // Find an even index (i) which has a matching odd (odd) index
    (odd).\n        long sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n
    \           if (i % 2 == 0 && lst[i] % 2 == 1) {\n                sum += lst[odd];\n
    \           }\n        }\n\n        return sum;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqoinv4ih.cs(22,28): error CS0103: The name ''odd'' does not exist in the
    current context

    '
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count < 2) {\n            return 0;\n        }\n        long
    sum = 0;\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]
    % 2 == 0) {\n                sum += lst[i];\n            }\n            if (i
    % 2 == 1) {\n                sum = sum - (lst[i] % 2);\n            }\n        }\n
    \       return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3c9db53147a942a58d8f1c6cd240ee93>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3c9db53147a942a58d8f1c6cd240ee93>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        var even = lst.Where((x, i) => i % 2 ==
    0);\n        if (even.Any()) {\n            foreach (var e in even) {\n                sum
    = sum + e;\n            }\n        }\n        return sum;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <69fe397add6944a68c5469149ef8aa45>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <69fe397add6944a68c5469149ef8aa45>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        Debug.Assert(lst.Count == lst.FindIndex(i => i % 2 == 0));\n        int
    len = lst.Count;\n        long result = 0, sum = 0;\n        long oddSum = 0;\n
    \       for (int i = 1; i < len; i++) {\n            sum += lst[i];\n            if
    (sum % 2 == 0) {\n                oddSum += sum;\n            }\n        }\n        int
    currentOdd = 0;\n        for (int i = 0; i < len; i++) {\n            long curr
    = lst[i];\n            if (curr % 2 != 0) {\n                if (curr > currentOdd
    && (curr - currentOdd) % 2 == 0) {\n                    result += curr - currentOdd;\n
    \                   currentOdd = curr;\n                }\n            }\n        }\n
    \       if (currentOdd > 0) {\n            result += currentOdd;\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprlb2msn1.cs(34,34): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0) {\n            return 0;\n        }\n        var
    odds = lst.Where(x => x % 2 == 1).Select(x => x + 1);\n        return lst.Sum(x
    => odds.Contains(x) ? x : 0);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2810e0d9f4fc4a718a0a14118b59e076>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2810e0d9f4fc4a718a0a14118b59e076>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // Write your code here\n        return lst.Sum(x => lst.Skip(x
    % 2).TakeWhile(y => y % 2 != 0).Sum());\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph7p6_tff.cs(19,38): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976366
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        int i = 0, j = 0, k = 0;\n        for (i
    = 0; i < lst.Count; i++) {\n            k = lst[i];\n            if (i % 2 ==
    0)\n                sum += k;\n            else {\n                for (; j <
    i; j++) {\n                    if (lst[j] == k)\n                        break;\n
    \               }\n                for (; j < i; j++) {\n                    if
    (lst[j] != k)\n                        break;\n                }\n                for
    (; j < i; j++) {\n                    sum += lst[j];\n                }\n                j
    = i + 1;\n            }\n        }\n        return sum;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2t8w8x88.cs(21,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        int n = 0;\n        for (int i = 0; i <
    lst.Count; i++) {\n            if (lst.ElementAt(i) % 2 == 0) {\n                sum
    += lst.ElementAt(i);\n                n++;\n            }\n            if (n %
    2 == 1) {\n                sum += lst.ElementAt(i);\n                n++;\n            }\n
    \       }\n        return sum;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <83b7d3512979417f8dcaea6a15e97583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <83b7d3512979417f8dcaea6a15e97583>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // The first odd number is nums[1]\n        // The first even
    number is nums[2]\n        long sum = 0;\n        long nums[] = lst.ToArray();\n
    \       long num = (long)nums[0];\n        sum = (long)nums[1];\n        long
    tmp1 = sum;\n        long tmp2 = num - sum;\n        long tmp3 = 0;\n        for
    (int i = 0; i <= lst.Count - 1; i++) {\n            if (i % 2 == 0) {\n                num
    = (long)nums[i];\n                tmp1 = tmp1 + num;\n                tmp2 = tmp2
    - num;\n                tmp3 = tmp3 + tmp2;\n            }\n        }\n        tmp1
    = tmp1 + tmp3;\n        return tmp1;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbazfe289.cs(21,18): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // write your code in C# 6.0 with .NET 4.5 (Mono)\n        var
    evenSum = lst\n            .Where(i => i % 2 == 0)\n            .Sum();\n\n        var
    oddSum = lst\n            .Where(i => i % 2 != 0)\n            .Sum();\n\n        return
    evenSum + oddSum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b1fd16bf9f874c6590ab793afb540fae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b1fd16bf9f874c6590ab793afb540fae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long total = 0;\n        for (int i = 0; i < lst.Count; i++) {\n
    \           if (i % 2 != 0) total += lst[i];\n        }\n        return total;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e64e339a505e4486a558eefb8a58b861>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e64e339a505e4486a558eefb8a58b861>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        bool even = lst.Skip(1).All(x => x % 2 == 0);\n        return
    even\n            ? lst\n                .Where((v, i) => i % 2 == 1)\n                .Sum()\n
    \           : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <85cce95ccd714baf8dca31e704725db6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <85cce95ccd714baf8dca31e704725db6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        int oddCount = 0;\n        for (int i =
    0; i < lst.Count; i++) {\n            if (i % 2 == 0) {\n                sum +=
    lst[i];\n                oddCount++;\n            }\n        }\n        for (int
    i = 0; i < lst.Count; i++) {\n            if ((i % 2 == 0) && (lst[i] == lst[(i
    + 1) / 2] || lst[i] == lst[(i + 3) / 2])) {\n                sum += lst[i];\n
    \               oddCount--;\n            }\n        }\n        return sum * (oddCount
    / 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2f4d5163ee40495092674798c73358a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2f4d5163ee40495092674798c73358a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var list = lst.ToArray();\n        var sum = 0;\n        var evenCount
    = 0;\n        var oddbyCount = 0;\n\n        foreach (var item in list)\n        {\n
    \           if ((item & 1) == 0)\n            {\n                sum += item;\n
    \           }\n            else\n            {\n                sum += item /
    2;\n                oddbyCount++;\n            }\n        }\n\n        foreach
    (var item in list)\n        {\n            if ((item & 1) == 1)\n            {\n
    \               evenCount++;\n            }\n        }\n\n        return (evenCount
    * 2 + oddbyCount);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8uf1wnu1.cs(27,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp8uf1wnu1.cs(31,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        if (lst.Count > 0) {\n            sum +=
    lst.Where((x, i) => i % 2 == 0).Sum();\n            sum += lst.Where((x, i) =>
    i % 2 == 1).Sum();\n        }\n        return sum;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e7f5d97a6ee64a24b48afd46f9c851d5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e7f5d97a6ee64a24b48afd46f9c851d5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976367
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count <= 0) return 0;\n        if (lst.Count <= 1) return
    lst[0];\n        var ret = 0;\n        var even = lst.Where(x => x % 2 == 0);\n
    \       var odd = lst.Where(x => x % 2 != 0);\n        even.Take(even.Count /
    2).ToList().ForEach(x => ret += x);\n        odd.Skip(odd.Count / 2).ToList().ForEach(x
    => ret += x);\n        return ret;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl0q7qvmd.cs(23,19): error CS0019: Operator ''/'' cannot be applied to
    operands of type ''method group'' and ''int''

    /tmp/tmpl0q7qvmd.cs(24,18): error CS0019: Operator ''/'' cannot be applied to
    operands of type ''method group'' and ''int''

    '
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // Write your code in C# 6.0 with .NET 4.5 (Mono)\n        long
    total = 0;\n        var evenIndex = lst\n            .Select((x, i) => new { Value
    = x, Index = i })\n            .Where(x => x.Index % 2 == 0)\n            .Select(x
    => x.Index / 2)\n            .ToArray();\n        foreach (var index in evenIndex)
    {\n            total += lst.ElementAt(index);\n        }\n        return total;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c74bf7abf3dd4cd188e4a1e618c77703>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c74bf7abf3dd4cd188e4a1e618c77703>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long oddTotal = 0;\n        int evenIndex = 0;\n        foreach
    (var x in lst) {\n            if (x % 2 == 0) {\n                oddTotal += x;\n
    \               if (x % 2 == 1) {\n                    evenIndex++;\n                }\n
    \           }\n        }\n        return oddTotal - ((evenIndex * (evenIndex -
    1)) / 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d5383958ea3c4933808c2652466973b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d5383958ea3c4933808c2652466973b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        List<long> even = new List<long>();\n        List<long> odd =
    new List<long>();\n        for (int i = 0; i < lst.Count; i++) {\n            if
    (i % 2 == 0) {\n                even.Add(lst[i]);\n            } else {\n                odd.Add(lst[i]);\n
    \           }\n        }\n        if (even.Count == 0) {\n            return 0L;\n
    \       }\n        bool foundEven = false;\n        long result = 0;\n        foreach
    (long x in even) {\n            if (foundEven) {\n                result += x;\n
    \           } else {\n                result = x;\n                foundEven =
    true;\n            }\n        }\n        foreach (long x in odd) {\n            if
    (foundEven) {\n                result += x;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3781b28f69e34b0dbee586286733c3cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3781b28f69e34b0dbee586286733c3cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // Write your code in C# 6.0 with .NET 4.5 (Mono)\n        long
    ret = 0;\n        foreach(var i in lst)\n        {\n            if((i & 1L) %
    2L == 0)\n            {\n                ret = ret + i;\n            }\n        }\n
    \       return ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <91657cf96fb146989510ba2838b54588>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <91657cf96fb146989510ba2838b54588>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var evenSums = new List<long>();\n        foreach (var i in lst)\n
    \       {\n            if (i % 2 == 0)\n            {\n                evenSums.Add(i);\n
    \           }\n            else\n            {\n                evenSums.Sum(x
    => x);\n            }\n        }\n        var result = evenSums.Sum();\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b6dc29ee3064d339ebe2f793c7f6c47>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8b6dc29ee3064d339ebe2f793c7f6c47>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count < 2)\n            return 0;\n        if (lst.Count
    % 2 == 0)\n            return lst[0];\n        long ans = lst[1];\n        for(int
    i = 2; i < lst.Count; i += 2)\n            ans += lst[i];\n        return ans;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4109c83d93664399b9adbd01660c3c01>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4109c83d93664399b9adbd01660c3c01>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976367
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        Debug.Assert(lst.Count > 0);\n        return lst\n            .Where((x,
    i) => i % 2 == 1)\n            .Sum(x => (x - lst[x / 2]) % 2);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0fbfpyv.cs(21,32): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659976367
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        int oddElements = 0;\n        foreach (long n in lst) {\n            if
    (n % 2 == 0) {\n                oddElements += n;\n            }\n        }\n
    \       long sum = 0;\n        if (oddElements > 0) {\n            int i = 0;\n
    \           while (i < lst.Count) {\n                if (i % 2 == 1) {\n                    sum
    += lst[i];\n                }\n                i += 2;\n            }\n        }\n
    \       return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr_wqsfwq.cs(21,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976367
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        int sum = 0;\n        var evenList = lst.Where((x, i) => i % 2
    == 0).ToList();\n        foreach (var item in evenList)\n            sum += item;\n
    \       return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwb1b06rh.cs(21,13): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976367
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long evenSum = 0;\n        int evenCount = 0, oddCount = 0;\n
    \       foreach (long num in lst) {\n            if (num & 1 == 0) {\n                evenSum
    += num;\n                evenCount++;\n            }\n            else {\n                oddCount
    += 1;\n                if (oddCount == 3) {\n                    evenSum += num;\n
    \                   evenCount = 0;\n                    oddCount = 0;\n                }\n
    \           }\n        }\n        return evenSum;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpymmlr_5d.cs(21,17): error CS0019: Operator ''&'' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659976367
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        return Solution2(lst, 0);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5wpsk6xq.cs(18,16): error CS0103: The name ''Solution2'' does not exist
    in the current context

    '
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count() == 0)\n            return 0;\n        if (lst.Count()
    == 1)\n            return lst[0];\n        var evens = lst.Where(x => x % 2 ==
    0).ToList();\n        long result = 0;\n        foreach (var ev in evens) {\n
    \           result += ev;\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2959a83c1f1b4d16b0b91d6cd72abecb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2959a83c1f1b4d16b0b91d6cd72abecb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976367
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // Sort the list so that it is in ascending order\n        Array.Sort(lst);\n
    \       // Calculate the sum of all odd elements\n        long sum = 0;\n        foreach
    (long i in lst) {\n            sum += (i % 2 == 1 ? i : 0);\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_jh6tmdz.cs(19,20): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.List<long>''
    to ''System.Array''

    '
  timestamp: 1659976367
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // Do not use list comprehension\n        long sum = 0;\n        if
    (lst.Any()) {\n            long a = lst[0], b = lst[1], c = lst[2];\n            sum
    = a + (b << 1) + c;\n            for (int i = 3; i < lst.Count; ++i) {\n                long
    d = lst[i];\n                sum = sum + d >> 1;\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ffa0d8058d05403a9786f658ba263bd9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ffa0d8058d05403a9786f658ba263bd9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976367
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // TODO: Write your answer here\n        var listOfEvens = new
    List<long>();\n        foreach (var x in lst)\n        {\n            listOfEvens.Add(x);\n
    \       }\n        var sum = 0;\n        for (var i = 1; i < listOfEvens.Count;
    i++)\n        {\n            if (listOfEvens[i] == listOfEvens[i - 1])\n                continue;\n
    \           else if (listOfEvens[i] > listOfEvens[i - 1])\n            {\n                sum
    += listOfEvens[i - 1];\n                listOfEvens.RemoveAt(i - 1);\n            }\n
    \           else\n            {\n                sum -= listOfEvens[i - 1];\n
    \               listOfEvens.RemoveAt(i - 1);\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp42ynfnxd.cs(31,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp42ynfnxd.cs(36,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0)\n            return 0L;\n        var sum =
    lst[0];\n        foreach (var x in lst.Skip(1))\n            if (x % 2 == 1) sum
    += x;\n        return sum;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c95297934c354df8889d448f67702d23>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c95297934c354df8889d448f67702d23>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976367
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        return lst.Where((x, i) => i % 2 == 0).Sum(x=>x % 2 != 0);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo_33m2sf.cs(18,55): error CS0029: Cannot implicitly convert type ''bool''
    to ''long?''

    /tmp/tmpo_33m2sf.cs(18,55): error CS1662: Cannot convert lambda expression to
    intended delegate type because some of the return types in the block are not implicitly
    convertible to the delegate return type

    '
  timestamp: 1659976367
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        return lst.Where((x, index) => index % 2 == 0).Sum(x=>x % 2 ==
    1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyj5dargd.cs(18,63): error CS0029: Cannot implicitly convert type ''bool''
    to ''long?''

    /tmp/tmpyj5dargd.cs(18,63): error CS1662: Cannot convert lambda expression to
    intended delegate type because some of the return types in the block are not implicitly
    convertible to the delegate return type

    '
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long[] even = new long[lst.Count];\n        bool foundOdd = false;\n
    \       for (int i = 0; i < lst.Count; i++) {\n            if (i % 2 == 0) {\n
    \               even[i] = lst[i];\n                foundOdd = true;\n            }
    else {\n                if (foundOdd == true) {\n                    return even.Sum();\n
    \               }\n            }\n        }\n        return 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f3df642ff742475da385cfe49a6825c5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f3df642ff742475da385cfe49a6825c5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count < 2) return 0;\n\n        if (lst.Count() == 2)
    return lst[0] + lst[1];\n\n        var evens = lst.Where((v, i) => i % 2 == 0);\n\n
    \       var odds = evens.Skip(1);\n\n        var sum = odds.Sum();\n\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <000a42f4118c415fbddd35d55826317c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <000a42f4118c415fbddd35d55826317c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long result = lst[0] + lst[1];\n        foreach (long e in lst.Skip(2))\n
    \           if (e % 2 == 1)\n                result += e;\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60f2a66404c6453ea5c5839d2faf6850>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60f2a66404c6453ea5c5839d2faf6850>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0) return 0;\n        if (lst.Count <= 3) return
    lst[0];\n        long evenSum = 0;\n        long sum = 0;\n        foreach (long
    x in lst) {\n            if (x % 2 == 0) evenSum += x;\n            else sum +=
    x;\n        }\n        return sum - evenSum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <994cb6e35b5f402a92d4a1e228bffcd1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <994cb6e35b5f402a92d4a1e228bffcd1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976367
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long evenSum = 0;\n        var evenIndex = lst.TakeWhile(n =>
    n != 0).ToArray();\n        var evenNumbers = lst.Where(n => n != 0).ToArray();\n
    \       var index = lst.IndexOf(evenNumbers[0]);\n        for(int i = 1; i < evenIndex.Length;
    i++)\n        {\n            if(evenIndex[i] < index)\n            {\n                index
    = evenIndex[i];\n            }\n            else\n            {\n                var
    tempSum = evenNumbers[i];\n                var tempIndex = evenIndex[i];\n                for
    (int j = tempIndex; j < index; j++)\n                {\n                    tempSum
    = tempSum + evenNumbers[j];\n                }\n                evenSum = evenSum
    + tempSum;\n                index = index;\n            }\n        }\n        for(int
    i = 0; i < evenIndex.Length; i++)\n        {\n            evenSum = evenSum +
    evenNumbers[i];\n        }\n        return evenSum;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk0dloo9c.cs(26,25): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpk0dloo9c.cs(32,30): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpk0dloo9c.cs(37,17): warning CS1717: Assignment made to same variable;
    did you mean to assign something else?

    '
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        Debug.Assert(lst.Count > 0);\n\n        long sum = 0L;\n        for
    (int i = 0; i < lst.Count; i++) {\n            if (i % 2 == 0) {\n                sum
    += lst[i];\n            }\n        }\n        return sum;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <70730edb88224209b919981fdb2a16e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <70730edb88224209b919981fdb2a16e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long oddSum = 0;\n        long tempSum = 0;\n        for (int
    i = 0; i < lst.Count; i++) {\n            long currentElement = lst[i];\n            if
    (i % 2 == 1) {\n                tempSum = currentElement;\n            } else
    {\n                tempSum = tempSum + currentElement;\n            }\n\n            if
    (tempSum > 9) {\n                oddSum = oddSum + tempSum - 9;\n                tempSum
    = 0;\n            }\n        }\n\n        if (tempSum != 0) {\n            oddSum
    = oddSum + tempSum;\n        }\n\n        return oddSum;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f5b55f986c834edeb433e90a6f46a9ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f5b55f986c834edeb433e90a6f46a9ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var result = lst.Where((x, idx) => idx % 2 == 1).Sum();\n        //
    Console.WriteLine(result);\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <224608c72e1840bb8ba94783bbffc747>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <224608c72e1840bb8ba94783bbffc747>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0L;\n        List<long> evens = new List<long>(lst.Count);\n
    \       for (int i = 0; i < lst.Count; i++) {\n            evens[i % 2] = lst[i];\n
    \       }\n        for (int i = 1; i < evens.Count; i++) {\n            if (evens[i
    - 1] % 2 == 0 && evens[i] == evens[i - 1]) {\n                sum += evens[i];\n
    \           }\n        }\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].set_Item (System.Int32
    index, T value) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Solution
    (System.Collections.Generic.List`1[T] lst) [0x00020] in <75c32b8dd79a463a9bb744f78c43d882>:0
    \n  at Problem.Main (System.String[] args) [0x00017] in <75c32b8dd79a463a9bb744f78c43d882>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].set_Item (System.Int32
    index, T value) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Solution
    (System.Collections.Generic.List`1[T] lst) [0x00020] in <75c32b8dd79a463a9bb744f78c43d882>:0
    \n  at Problem.Main (System.String[] args) [0x00017] in <75c32b8dd79a463a9bb744f78c43d882>:0
    \n"
  stdout: ''
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long ret = 0L;\n        foreach (long val in lst) {\n            if
    (val % 2 == 0)\n                ret += val;\n        }\n        return ret;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc7d6c3d6ce4a94a92c52c8345c5459>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc7d6c3d6ce4a94a92c52c8345c5459>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        foreach(var n in lst)\n        {\n            if((n%2
    == 0) && lst[(int)n/2]%2 != 0)\n            {\n                sum = sum + n;\n
    \           }\n        }\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Solution
    (System.Collections.Generic.List`1[T] lst) [0x0001d] in <b4b270a2e1e04b71b4c411ead3ffd1df>:0
    \n  at Problem.Main (System.String[] args) [0x00017] in <b4b270a2e1e04b71b4c411ead3ffd1df>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Solution
    (System.Collections.Generic.List`1[T] lst) [0x0001d] in <b4b270a2e1e04b71b4c411ead3ffd1df>:0
    \n  at Problem.Main (System.String[] args) [0x00017] in <b4b270a2e1e04b71b4c411ead3ffd1df>:0
    \n"
  stdout: ''
  timestamp: 1659976368
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        Dictionary<long, int> lookup = new Dictionary<long,
    int>();\n\n        // Build lookup table\n        foreach(var el in lst) {\n            long
    val = el % 2 == 0 ? (el * 2) : el;\n            lookup[val]++;\n        }\n\n
    \       // Sum by odd numbers\n        foreach(var k in lookup.Where(kv => kv.Value
    % 2 == 1))\n            sum += kv.Key;\n\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz7zlsge1.cs(29,20): error CS0103: The name ''kv'' does not exist in the
    current context

    '
  timestamp: 1659976367
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        HashSet<long> even = new HashSet<long>(new
    long[26]);\n        foreach (long num in lst) {\n            if (num % 2 == 0)
    {\n                even[num / 2] = num;\n            }\n            else {\n                int
    pos = (int) (num % 10);\n                pos = (pos+6)%26;\n                sum
    += even[pos];\n            }\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsjhowgu1.cs(22,17): error CS0021: Cannot apply indexing with [] to an
    expression of type ''HashSet<long>''

    /tmp/tmpsjhowgu1.cs(27,24): error CS0021: Cannot apply indexing with [] to an
    expression of type ''HashSet<long>''

    '
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        foreach (var item in lst) {\n            if
    (item % 2 == 0) {\n                sum += item;\n            }\n            else
    {\n                sum -= item;\n            }\n        }\n        return sum;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f4d3353dd9a54f0fbe5599880c8e96e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f4d3353dd9a54f0fbe5599880c8e96e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        foreach (var i in lst) {\n            sum
    += (i%2 == 0) ? i : 0; \n        }\n        return sum;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cff2510391564e768d71499d465668af>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cff2510391564e768d71499d465668af>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long total = 0;\n        bool even = lst[0] % 2 == 0;\n        long
    current;\n        foreach (long i in lst)\n            if (i % 2 == 0)\n                even
    = true;\n            else\n                even = false;\n            if (even)\n
    \               total += i;\n        return total;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5yblxa7t.cs(27,26): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmp5yblxa7t.cs(20,14): warning CS0168: The variable ''current'' is declared
    but never used

    '
  timestamp: 1659976367
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        int len = lst.Count;\n        if(len == 0)\n            return
    0;\n        long sum = 0;\n        int i = 0;\n        while(i < len) {\n            long
    curr = lst[i];\n            long odd = curr % 2L;\n            sum += odd * curr;\n
    \           i += 1;\n        }\n        return sum;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <82833db879794de78909b034da837fd8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <82833db879794de78909b034da837fd8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count < 2)\n            return 0L;\n        bool even
    = true;\n        long sum = 0L;\n        foreach (long item in lst) {\n            even
    = !(even);\n            if (even)\n                sum += item;\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dfcb8a2ab4e04b2382806b5f9ba72d40>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dfcb8a2ab4e04b2382806b5f9ba72d40>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        long odd = 1;\n        foreach(long i in
    lst) {\n            if (i % 2 == 0) {\n                sum += odd;\n                odd
    += i;\n            }\n        }\n        return sum;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4bf67e2d349f4715941db6b99fe48667>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4bf67e2d349f4715941db6b99fe48667>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long evenSum = 0;\n        foreach (long n in lst)\n        {\n
    \           if (n % 2 == 1)\n            {\n                evenSum += n;\n            }\n
    \       }\n        return evenSum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <313ec4c73c1a4edba89807f32c855f02>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <313ec4c73c1a4edba89807f32c855f02>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count <= 0)\n            return 0L;\n        long sum
    = 0L;\n        Dictionary<long, long> odd = new Dictionary<long, long>();\n        List<long>
    even = new List<long>();\n        long currentSum = 0L;\n        foreach (long
    i in lst) {\n            if (i % 2 == 1) {\n                even.Add(i);\n            }\n
    \           else {\n                long currentOdd = odd.ContainsKey(i) ? odd[i]
    : 0L;\n                currentSum += currentOdd;\n                odd.Add(i, (currentSum
    + i) % 2L);\n            }\n        }\n        foreach (long i in even) {\n            sum
    += i;\n        }\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3c31540c18d74a86aceadc60e586385e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3c31540c18d74a86aceadc60e586385e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        ArrayList arrLst = new ArrayList();\n        arrLst.AddRange(lst);\n
    \       ArrayList even = new ArrayList();\n        ArrayList odd = new ArrayList();\n
    \       for (int i = 0; i < arrLst.Count - 1; i++) {\n            if (arrLst[i]
    % 2 == 0) {\n                even.Add(arrLst[i]);\n            } else {\n                odd.Add(arrLst[i]);\n
    \           }\n        }\n        for (int i = 0; i < even.Count; i++) {\n            sum
    += Convert.ToInt64(even[i]);\n        }\n        for (int i = 0; i < odd.Count;
    i++) {\n            sum += Convert.ToInt64(odd[i]);\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7liavd77.cs(19,9): error CS0246: The type or namespace name ''ArrayList''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp7liavd77.cs(19,32): error CS0246: The type or namespace name ''ArrayList''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp7liavd77.cs(21,9): error CS0246: The type or namespace name ''ArrayList''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp7liavd77.cs(21,30): error CS0246: The type or namespace name ''ArrayList''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp7liavd77.cs(22,9): error CS0246: The type or namespace name ''ArrayList''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp7liavd77.cs(22,29): error CS0246: The type or namespace name ''ArrayList''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp7liavd77.cs(23,29): error CS0019: Operator ''-'' cannot be applied to
    operands of type ''method group'' and ''int''

    /tmp/tmp7liavd77.cs(30,25): error CS0019: Operator ''<'' cannot be applied to
    operands of type ''int'' and ''method group''

    /tmp/tmp7liavd77.cs(33,25): error CS0019: Operator ''<'' cannot be applied to
    operands of type ''int'' and ''method group''

    '
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        bool isEven = false;\n        int idx =
    0;\n        for (int i = 0; i < lst.Count; i++) {\n            if (i % 2 != 0)\n
    \               sum += lst[idx];\n            else\n                isEven = true;\n
    \           idx++;\n        }\n        if (isEven)\n            sum += lst.Count
    - 1;\n        return sum;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c07f500ca47640c8b9d68b5a38df8ea2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c07f500ca47640c8b9d68b5a38df8ea2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long total = 0L;\n        foreach (long i in lst)\n            if
    (i % 2 == 1L)\n                total += i;\n        return total;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c4b74d21584472a869acaee60dfd0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b5c4b74d21584472a869acaee60dfd0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.Count; i += 2)
    {\n            sum += lst[i];\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <08e8152cdd8848d3877e9f5ccbec1c87>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <08e8152cdd8848d3877e9f5ccbec1c87>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count > 0)\n        {\n            if (lst[0] % 2 == 0)\n
    \           {\n                long sum = 0;\n                for (int i = 1;
    i < lst.Count; i++)\n                {\n                    if (lst[i] % 2 !=
    0)\n                    {\n                        sum += lst[i];\n                    }\n
    \               }\n                return sum;\n            }\n        }\n        return
    0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af3fbd7a24a24ba5a9dde69a925fcf77>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af3fbd7a24a24ba5a9dde69a925fcf77>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var evenElements = lst.Where((n, i) => i % 2 == 0);\n        long
    total = 0;\n        foreach (var element in evenElements)\n            total +=
    element;\n        return total;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4139fa5849ef41f6b3f8698e64c23c75>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4139fa5849ef41f6b3f8698e64c23c75>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0)\n            return 0;\n        if (lst.Count
    == 1)\n            return lst[0];\n        long sum = 0;\n        List<long> evens
    = lst.Where(x => (x % 2) == 0).ToList();\n        foreach (long x in evens)\n
    \           sum += x;\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39e3a5ca45a74c488ec8649822afee04>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39e3a5ca45a74c488ec8649822afee04>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long odd = 0, even = 0;\n        foreach (long item in lst) {\n
    \           if (item & 1L == 0L) {\n                even += item;\n            }
    else {\n                odd += item;\n            }\n        }\n        return
    odd + even;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf_qa8jnt.cs(20,17): error CS0019: Operator ''&'' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // TODO implement here\n        long sum = 0;\n        foreach
    (long number in lst) {\n            if (number % 2 == 0) {\n                sum
    += number;\n            }\n        }\n        return sum;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b0ad77149484553adf2177e7e2bcc23>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b0ad77149484553adf2177e7e2bcc23>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0) return 0L;\n        var minPos = lst.Count
    - 1;\n        var maxPos = 0;\n        for (var i = lst.Count - 1; i >= 0; i--)
    {\n            if (lst[i] % 2 != 0 && lst[i] != (i + 1) / 2) minPos = i;\n            if
    (lst[i] % 2 == 0 && lst[i] != (i + 1) / 2) maxPos = i;\n        }\n        return
    lst[minPos] + (maxPos == minPos ? 0L : lst[maxPos - 1]);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eac49858d838471e9b14ea50acac3b7f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eac49858d838471e9b14ea50acac3b7f>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Solution
    (System.Collections.Generic.List"
  stdout: ''
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        for (int i = 0; i <= lst.Count - 2; i +=
    2) {\n            sum += lst[i];\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd0a743c207c4b249e7d80900e23a84c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd0a743c207c4b249e7d80900e23a84c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long odd = 0, even = 0, sum = 0;\n        bool foundOdd = false;\n
    \       foreach (long n in lst) {\n            if (n % 2 == 0) {\n                foundOdd
    = true;\n                even += n;\n            } else {\n                if
    (foundOdd) {\n                    odd += n;\n                }\n            }\n
    \       }\n        return even;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f2e6a5c6013490c883214119f7a4265>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f2e6a5c6013490c883214119f7a4265>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        for (int i = 0; i < lst.Count; i+= 2) {\n
    \           sum += lst[i];\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5453d3555a4e4747acf0b28001afbfff>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5453d3555a4e4747acf0b28001afbfff>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // Use a variable called count and initialize it to 0\n        long
    count = 0;\n        // Traverse the list from the beginning\n        foreach (long
    element in lst) {\n            // If the element in even position\n            if
    (element % 2 == 0) {\n                // Increment the count by 1\n                count++;\n
    \               // Find the first odd number larger than the element by looking
    at the previous element in the list\n                long result = lst[list.IndexOf(lst.ElementAtOrDefault(list.IndexOf(element)
    - 1, 2) + 1, 2)];\n                // If the previous element is even, add it
    to the result\n                if (result % 2 == 0) result += element;\n                //
    If the previous element is odd, add it to the result\n                else result
    += element * 2;\n                // If the previous element is an even number,
    add it to the result\n                if (result % 2 == 0) result += element *
    3;\n                // If the previous element is an odd number, add it to the
    result\n                else result += element * 4;\n                // If the
    previous element is an odd number, add it to the result\n                if (result
    % 2 == 0) result += element * 5;\n                // If the previous element is
    an odd number, add it to the result\n                else result += element *
    6;\n                // And so on...\n                count += result;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpub57zp70.cs(27,35): error CS0103: The name ''list'' does not exist in
    the current context

    /tmp/tmpub57zp70.cs(27,71): error CS0103: The name ''list'' does not exist in
    the current context

    '
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0)\n            return 0L;\n        var even
    = lst.Take(lst.Count / 2).ToList();\n        var odd = lst.Skip(lst.Count / 2).ToList();\n
    \       if (odd.Count == 0)\n            return even.Sum();\n        // Sort the
    odd list, O(n)\n        odd.Sort();\n        // Find the even ones and add them
    together\n        var evenSum = even.Sum();\n        return odd.Take(odd.Count
    - 1).Sum(x => evenSum + x);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <757747f14c9043aca1333b6a31e2ca0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <757747f14c9043aca1333b6a31e2ca0c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976368
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // Odd numbers and even numbers should be the same length\n        if
    (lst.Count <= 0)\n            return 0;\n        var evenIndex = lst.Count / 2;\n
    \       var oddIndex = evenIndex + 1;\n        var evenSum = 0;\n        var oddSum
    = 0;\n        var evenMax = lst[evenIndex];\n        var oddMax = lst[oddIndex];\n
    \       // Even sum\n        for (var i = 0; i <= evenIndex; i++) {\n            evenSum
    += lst[i];\n        }\n        // Odd sum\n        for (var i = evenIndex + 1;
    i <= oddIndex; i++) {\n            oddSum += lst[i];\n        }\n        // We
    use max to detect if the sum is even or odd\n        return evenSum > oddSum ?
    evenSum : oddSum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqq7dgetk.cs(29,13): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpqq7dgetk.cs(33,13): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976368
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var sum = 0;\n        for (var i = 0; i < lst.Count; i += 2) {\n
    \           sum += lst[i];\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd5jh9x4q.cs(20,13): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976368
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        long oddsum = 0;\n        for (int i =
    0; i < lst.Count; i++) {\n            if (i % 2 == 0) {\n                sum +=
    lst[i];\n                oddsum += lst[i];\n            }\n        }\n        if
    (oddsum == 0) {\n            sum = sum - lst[0];\n        }\n        return sum;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1b1a4e5b3df41c18c6210f1bc40fcb1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1b1a4e5b3df41c18c6210f1bc40fcb1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976369
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long total = 0;\n        for (int i = 0; i < lst.Count - 1; i++)
    {\n            if (lst[i] % 2 == 0) total += lst[i + 1];\n        }\n        return
    total;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <afb720d9ba3c46aabfce78308e4b0ac5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <afb720d9ba3c46aabfce78308e4b0ac5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976369
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count < 2) return 0;\n        int evenPos = 0;\n        int
    oddPos = 0;\n        foreach (long i in lst) {\n            if (i % 2 == 0) {\n
    \               evenPos++;\n            } else {\n                oddPos++;\n
    \           }\n        }\n        if (evenPos == oddPos) return evenPos;\n        return
    oddPos + Solution(lst.Where(x => x % 2 != 0).Take(oddPos).ToList());\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659976374
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long result = 0, cnt = 0;\n        foreach (var item in lst) {\n
    \           cnt += item;\n            if (cnt % 2 == 1) {\n                result
    += item;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ad1abf00e7cc49abb659acf58a58b420>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ad1abf00e7cc49abb659acf58a58b420>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976369
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        \n        // Write your code in C# 6.0 with .NET 4.5 (Mono)\n
    \       \n        // using System;\n        // using System.Collections.Generic;\n
    \       // using System.Linq;\n        // using System.Text;\n        // using
    System.Diagnostics;\n        // using System.Security.Cryptography;\n        \n
    \       long sum = 0;\n        \n        foreach(long i in lst){\n            if(i
    %2 ==0)\n            sum+=i;\n        }\n        return sum;\n        \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6494f64c07ab4396891da7f906374ac5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6494f64c07ab4396891da7f906374ac5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976369
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long result = 0;\n        int odd = 0;\n        for (int i = 0;
    i < lst.Count; i++) {\n            if (i % 2 == 0) {\n                if (lst[i]
    % 2 != 0)\n                    odd += lst[i];\n            } else {\n                if
    (odd != 0)\n                    result += odd;\n                odd = 0;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq6ygi76b.cs(23,21): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976369
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0L;\n        int evenSum = 0;\n        int evenPos
    = 0;\n        int oddPos = 0;\n        int oddSum = 0;\n        for (int i = 0;
    i < lst.Count; i++) {\n            if (i % 2 == 0) {\n                evenSum
    += lst[i];\n                evenPos++;\n            }\n            else {\n                oddSum
    += lst[i];\n                oddPos++;\n            }\n        }\n        long
    evenSumOfOddElements = evenSum - oddSum;\n        sum = (evenSumOfOddElements
    - evenSum) / 2;\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6552z5mc.cs(25,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp6552z5mc.cs(29,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976369
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // write your code in C# 7.1 or above\n        // base case\n
    \       if (lst.Count == 0) {\n            return 0;\n        }\n\n        //
    middle case\n        if (lst.Count % 2 == 0) {\n            return lst[0 /* start
    */] + lst[1 /* end */];\n        }\n\n        // recursive case\n        List<long>
    evens = lst.Where(i => (i % 2) == 0).ToList();\n        List<long> odds = lst.Where(i
    => (i % 2) != 0).ToList();\n        var odd_sum = odds.Sum();\n        var even_sum
    = evens.Sum();\n        if (even_sum >= odd_sum) {\n            return even_sum;\n
    \       }\n        return odd_sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <de1fcb2b71ca4657ac82eeffbfc4b0a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <de1fcb2b71ca4657ac82eeffbfc4b0a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976369
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0)\n            return 0;\n\n        var odd
    = lst.Where(x => x % 2 == 1).ToList();\n\n        var result = odd.Where(x =>
    lst.FindIndex(y => y == x) > 0).Sum();\n\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <274f31326d6c41df9fabc43f38834a76>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <274f31326d6c41df9fabc43f38834a76>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976369
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        foreach (var item in lst) {\n            if
    (item % 2 == 0) {\n                sum += item;\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3387b0b7f347435593f0f6e6ad2c2776>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3387b0b7f347435593f0f6e6ad2c2776>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976366
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        // O(1) space and O(n) time complexity\n        long ret = 0;\n
    \       int odd = 0, even = 0;\n        for (int i = 0; i < lst.Count; i++) {\n
    \           bool isEven = i % 2 == 0;\n            if (isEven) {\n                if
    (lst[i] == lst[even]) {\n                    ret += lst[odd];\n                    even++;\n
    \               }\n                else {\n                    ret += lst[odd];\n
    \                   even = 0;\n                    odd++;\n                }\n
    \           }\n            else {\n                ret += lst[i];\n                odd++;\n
    \           }\n        }\n        return ret;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L,
    (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4e261c9329df4b3594fe20f39c7fb7f5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4e261c9329df4b3594fe20f39c7fb7f5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976369
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count == 0) return 0;\n        var evenSum = 0;\n        int
    firstOddPos = -1;\n        int lastOddPos = 0;\n        foreach (var num in lst)
    {\n            if (num & 1 == 0) {\n                evenSum += num;\n            }\n
    \           else {\n                firstOddPos = lastOddPos;\n                lastOddPos
    = firstOddPos + 1;\n            }\n        }\n        if (lastOddPos == 0) {\n
    \           return evenSum;\n        }\n        return evenSum - lst[firstOddPos];\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2zgkzr18.cs(23,17): error CS0019: Operator ''&'' cannot be applied to
    operands of type ''long'' and ''bool''

    /tmp/tmp2zgkzr18.cs(24,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976369
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long sum = 0;\n        long[] even = lst.Where(item => item %
    2 == 0).ToArray();\n        foreach (long item in even) {\n            sum +=
    item;\n        }\n        foreach (long item in even) {\n            if (item
    % 2 == 1) {\n                sum += item;\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a940780232ba42b1803c02fb47d27ca9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a940780232ba42b1803c02fb47d27ca9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976369
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        int sum = 0;\n        for (int i = 0; i < lst.Count; i += 2) {\n
    \           sum += lst[i];\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp84mx1_4k.cs(20,13): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659976369
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long res = 0;\n        \n        for(int i=0; i<lst.Count; i+=2)\n
    \           res += lst[i];\n        \n        return res;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L,
    (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a58b42fb07b45bbbf896666ebbdc856>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a58b42fb07b45bbbf896666ebbdc856>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976369
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        var even = new List<long>();\n        var odd = new List<long>();\n\n
    \       foreach (var x in lst)\n        {\n            even.Add(x % 2);\n            odd.Add(x
    % 2 == 1);\n        }\n\n        long sum = 0;\n        foreach (var x in even)\n
    \       {\n            sum += x;\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L, (long)3L}))) ==
    (9L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L, (long)13L,
    (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpad7zuxhh.cs(24,21): error CS1503: Argument 1: cannot convert from ''bool''
    to ''long''

    '
  timestamp: 1659976369
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long evenSum = 0;\n\n        foreach (long x in lst) {\n            if
    (x % 2 == 0) {\n                evenSum += x;\n            }\n        }\n        return
    evenSum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f48c2a6ce2424a7cae90fa0fe4faa071>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f48c2a6ce2424a7cae90fa0fe4faa071>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976369
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        if (lst.Count < 2) {\n            return 0L;\n        }\n        long
    result = 0L;\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]
    % 2 == 0) {\n                result += lst[i];\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0b3e5c21dec840699abdaa31080fc133>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0b3e5c21dec840699abdaa31080fc133>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976369
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        return Enumerable.Range(0, lst.Count).Where(i => lst.ElementAt(i)
    % 2 != 0).Sum(lst.ElementAt);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)8L, (long)7L,
    (long)1L}))) == (12L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)3L,
    (long)3L, (long)3L, (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)5L, (long)9L}))) ==
    (5L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)2L, (long)4L,
    (long)8L}))) == (0L));\n    Debug.Assert(Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)23L, (long)32L}))) == (23L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)3L, (long)13L, (long)2L, (long)9L}))) == (3L));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9adaf033eff3496ba84e51b69e8cb3d3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9adaf033eff3496ba84e51b69e8cb3d3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976369
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a non-empty list of integers, return the sum of all of
    the odd elements that are in even positions.\n    // Examples\n    // >>> Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L})))\n    // (12L)\n
    \   // >>> Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)3L,
    (long)3L})))\n    // (9L)\n    // >>> Solution((new List<long>(new long[]{(long)30L,
    (long)13L, (long)24L, (long)321L})))\n    // (0L)\n    public static long Solution(List<long>
    lst) {\n        long ans = long.MinValue;\n\n        for (int i = 0; i <= lst.Count
    - 1; i = i + 2) {\n            ans = ans + lst[i];\n        }\n\n        return
    ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,
    (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new
    long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new
    List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n
    \   Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,
    (long)9L}))) == (3L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a35e52cd007476bb6d5f775c4800e1d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a35e52cd007476bb6d5f775c4800e1d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659976369

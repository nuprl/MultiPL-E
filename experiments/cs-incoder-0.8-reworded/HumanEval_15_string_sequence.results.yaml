language: cs
name: HumanEval_15_string_sequence
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var sequence = new List<string>();\n        for (long i = 0; i <
    n; i++) {\n            sequence.Add(Convert.ToString(i));\n        }\n        return
    string.Join(\" \", sequence.ToArray());\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72a969c0a20847299d23c46fc64c0b93>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72a969c0a20847299d23c46fc64c0b93>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var result = new StringBuilder();\n        long i = 0;\n        for
    (; i < n; i++) {\n            result.Append(i);\n        }\n        return result.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb20ad48e1254f8492655ca462c46c4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb20ad48e1254f8492655ca462c46c4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var r = new StringBuilder();\n        \n        while (n>0) {\n
    \           r.Append(n % 10);\n            n /= 10;\n        }\n        return
    r.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89ece44a2270480b9e21be72b1e146e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89ece44a2270480b9e21be72b1e146e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string result = \"\";\n        for(int i = 0; i < ((int)n); i++)
    {\n            result += n.ToString() + \" \";\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39789b8794bc4584bf35a1bfb304d77b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39789b8794bc4584bf35a1bfb304d77b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        char[] buf = new char[n];\n        long k = n;\n        for(int
    i = 0; i < n; ++i) {\n            buf[i] = '0';\n            if(k % 100L == 0L)
    {\n                buf[i] += ' ';\n            }\n            k /= 100L;\n        }\n
    \       string s = \"\";\n        foreach(char c in buf) {\n            s += c;\n
    \       }\n        return s;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c547d7b50fd9411899fbe3105fa36d25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c547d7b50fd9411899fbe3105fa36d25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015899
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n < 0 || n > long.MaxValue) return \"(error \" + n + \")\";\n
    \       StringBuilder result = new StringBuilder();\n        long current = 0;\n
    \       while (true) {\n            if (n == current) result.Append(current);\n
    \           else if (current == 0 || n == current) result.Append(\" \");\n            else\n
    \               result.Append((string)current + \" \");\n            current++;\n
    \           if (current == long.MaxValue) break;\n        }\n        return result.ToString().TrimEnd();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplqjbcqlh.cs(22,31): error CS0030: Cannot convert type ''long'' to ''string''

    '
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var str = new StringBuilder();\n        long counter = 0;\n        while
    (counter < n) {\n            str.Append((counter % 5 + 1).ToString());\n            str.Append(\"
    \");\n            counter++;\n        }\n        if (str.Length > 0)\n            str.Remove(str.Length
    - 1, 1);\n        return str.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b604361e26f64389a4abe7f0f018c0da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b604361e26f64389a4abe7f0f018c0da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015899
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum
    += i;\n        }\n        string result = new String();\n        long remaining
    = n;\n        while (true) {\n            string tmp = LongToString(sum);\n            while
    (tmp.Length < remaining.ToString().Length) {\n                tmp += \" \";\n
    \           }\n            result += tmp;\n            sum += remaining;\n            if
    (sum == BigInteger.One) {\n                break;\n            }\n            string
    tmp = LongToString(sum);\n            while (tmp.Length < remaining.ToString().Length)
    {\n                tmp += \" \";\n            }\n            result += tmp;\n
    \           remaining -= sum;\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl2em3bin.cs(19,29): error CS1729: ''string'' does not contain a constructor
    that takes 0 arguments

    /tmp/tmpl2em3bin.cs(22,26): error CS0103: The name ''LongToString'' does not exist
    in the current context

    /tmp/tmpl2em3bin.cs(31,20): error CS0128: A local variable or function named ''tmp''
    is already defined in this scope

    /tmp/tmpl2em3bin.cs(31,26): error CS0103: The name ''LongToString'' does not exist
    in the current context

    '
  timestamp: 1660015899
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n < 1) {\n            return \"0\";\n        }\n\n        long
    step = (long) Math.Sqrt(n) + 1;\n        string[] buffer = new string[step];\n\n
    \       int index = 0;\n        for (int i = 0; i <= n; ++i) {\n            buffer[index++]
    = String.Format(\"{0:000}\", i);\n        }\n\n        return String.Join(\" \",
    buffer);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside
    the bounds of the array.\n  at (wrapper stelemref) System.Object.virt_stelemref_sealed_class(intptr,object)\n
    \ at Problem.StringSequence (System.Int64 n) [0x00047] in <30e233089f5b43989ec3db4aeb0248c3>:0
    \n  at Problem.Main (System.String[] args) [0x00018] in <30e233089f5b43989ec3db4aeb0248c3>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was
    outside the bounds of the array.\n  at (wrapper stelemref) System.Object.virt_stelemref_sealed_class(intptr,object)\n
    \ at Problem.StringSequence (System.Int64 n) [0x00047] in <30e233089f5b43989ec3db4aeb0248c3>:0
    \n  at Problem.Main (System.String[] args) [0x00018] in <30e233089f5b43989ec3db4aeb0248c3>:0
    \n"
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = n.ToString();\n        List<int> res = new List<int>();\n
    \       for (int i = 0; i < s.Length; i++) {\n            res.Add(Convert.ToInt32(s.Substring(i)));\n
    \       }\n        return string.Join(\" \", res.ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e4c55972f6ef4242a51151bed76bbb89>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e4c55972f6ef4242a51151bed76bbb89>:0
    \n"
  stdout: ''
  timestamp: 1660015899
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        int[] nums = { n };\n        return string.Join(\" \", nums.Select(n
    => n.ToString()).ToArray());\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjjx2cqec.cs(15,24): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015899
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return String.Join(\" \", Enumerable.Range(0, n).Select(i => Convert.ToString(i)));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1zupbozb.cs(15,53): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        if (n < 0 || n > 4294967295L) throw new
    ArgumentOutOfRangeException(\"n\");\n        for (int i = 0; i < n; i++) {\n            s
    += (\" \" + i);\n        }\n        return s;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7c662db34cc643b09a055b39bf586efe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7c662db34cc643b09a055b39bf586efe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015899
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0;
    i < n; i++) {\n            sb.Append((i + 1).ToString(CultureInfo.InvariantCulture));\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5tgk_ln9.cs(17,40): error CS0103: The name ''CultureInfo'' does not exist
    in the current context

    '
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L) return \"0\";\n        if (n <= 0L) return \"0\";\n
    \       var digits = \"0 1 2 3 4 5 6 7 8 9\".Split();\n        var result = new
    StringBuilder();\n        var counter = 0;\n        var maxDigits = digits.Length;\n
    \       while (n >= maxDigits) {\n            result.Append(digits[n % maxDigits]);\n
    \           n /= maxDigits;\n        }\n        result.Append(digits[n % maxDigits]);\n
    \       return result.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3bca730e8cdb4a659f1e880364ccd666>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3bca730e8cdb4a659f1e880364ccd666>:0
    \n"
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for (long i = 0;
    i < n; ++i) sb.Append((long)i);\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe6eb485eec84f95b1fef745a7ff8db7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe6eb485eec84f95b1fef745a7ff8db7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var s = new StringBuilder();\n        for (long i = 0; i <= n; i++)
    {\n            s.Append(Convert.ToString(i));\n        }\n        return s.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f5d255373e454292afcd8450f7cfd6b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f5d255373e454292afcd8450f7cfd6b2>:0
    \n"
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for (long i = 0;
    i <= n; i++) {\n            sb.Append((int)i);\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f4dc350859574a239c65ffbca67ca614>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f4dc350859574a239c65ffbca67ca614>:0
    \n"
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        if (n < 0) throw
    new ArgumentOutOfRangeException(\"n\");\n        if (n == 0) sb.Append(\"0\");\n
    \       else {\n            for (int i = 0; i <= n; i++) {\n                sb.Append(Convert.ToString(i,
    2).PadLeft(32, '0'));\n            }\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <429cee5ea292495b81f206b5206c49ff>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <429cee5ea292495b81f206b5206c49ff>:0
    \n"
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for (long i = 0;
    i <= n; i++) {\n            sb.Append(i);\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <168df845d36c45bb9b711ddd306f6415>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <168df845d36c45bb9b711ddd306f6415>:0
    \n"
  stdout: ''
  timestamp: 1660015899
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var result = \"\";\n        for (long i = 0; i <= n; i++) {\n            result
    = String.Concat(result, i.ToString(CultureInfo.InvariantCulture));\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprijm2drj.cs(17,55): error CS0103: The name ''CultureInfo'' does not exist
    in the current context

    '
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        long last = 0;\n        while (n > 1)
    {\n            long next = last + 1;\n            long mult = 1;\n            if
    (next < n) mult = n - next;\n            s += (last++).ToString() + \" \" + (next
    + 1).ToString() + \" \" + (next + mult).ToString() + \"\\n\";\n            n -=
    next;\n        }\n        if (n > 0) s += last.ToString() + \"\\n\";\n        return
    s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b4f538ab4fe24a59a239b90e03705e3d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b4f538ab4fe24a59a239b90e03705e3d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015899
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        List<string> result = new List<string>();\n        while (n > 0)
    {\n            result.Add(n.ToString());\n            n -= n;\n        }\n        return
    string.Join(\" \", result.Reverse());\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj0bt1jv7.cs(20,28): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpj0bt1jv7.cs(20,33): error CS1503: Argument 2: cannot convert from ''void''
    to ''string''

    '
  timestamp: 1660015899
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        char[] buf = new char[64];\n        string s = \"\";\n        ulong
    i = 1;\n        while (n > i) {\n            buf[--i] = Convert.ToChar(i + '0');\n
    \           i *= 10;\n        }\n        while (i >= 1) {\n            buf[--i]
    = Convert.ToChar(i + '0');\n            i *= 10;\n        }\n        ulong j =
    n;\n        while (j != 0) {\n            if (j % 10 == 0) {\n                j
    += i - 1;\n                s += \" \" + Convert.ToString(j);\n            } else
    {\n                s += Convert.ToString(j % 10);\n            }\n            j
    = (j / 10L) - 1;\n        }\n        return s;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp97sczo4u.cs(18,16): error CS0034: Operator ''>'' is ambiguous on operands
    of type ''long'' and ''ulong''

    /tmp/tmp97sczo4u.cs(26,19): error CS0266: Cannot implicitly convert type ''long''
    to ''ulong''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for (long i = 0;
    i <= n; i++) {\n            sb.Append(i);\n            sb.Append(' ');\n        }\n
    \       return sb.ToString().Substring(1);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <80df8c2520d3479c85de255df1d2c898>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <80df8c2520d3479c85de255df1d2c898>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        for (int i = 0; i < n; i++)\n        {\n
    \           s += i;\n        }\n        return s;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf65a4dd6f20493293a3a9ebba6d3b25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf65a4dd6f20493293a3a9ebba6d3b25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        // Your code goes here\n        List<long> lst = new List<long>();\n
    \       while(n>0)\n        {\n            lst.Add(n%10);\n            n=n/10;\n
    \       }\n        var sb = new StringBuilder();\n        sb.Append(\"0\");\n
    \       for(int i=0;i<lst.Count;i++)\n        {\n            sb.Append(lst.ElementAt(i));\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13a4a754705e4525aae15304185a6981>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13a4a754705e4525aae15304185a6981>:0
    \n"
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\");\n
    \       }\n        var sb = new StringBuilder();\n        for (int i = 0; i <=
    n; i++) {\n            sb.Append((long)i);\n            sb.Append(\" \");\n        }\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66aaea6543294613a7845c1024289fc7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66aaea6543294613a7845c1024289fc7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0) {\n            return \"0\";\n        }\n        StringBuilder
    sb = new StringBuilder();\n        sb.Append('0');\n        while (n > 0) {\n
    \           sb.Append(n % 10);\n            n = n / 10;\n        }\n        sb.Append(StringSequence(n).Last());\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <73eabfa05a0c4dd3a08ce4a176f804c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <73eabfa05a0c4dd3a08ce4a176f804c1>:0
    \n"
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        int[] numbers = new int[1000];\n        Array.Sort(numbers, (a,
    b) => a - b);\n        string result = \"\";\n        for (int i = 1; i < numbers.Length;
    i++) {\n            result += \" \" + numbers[i];\n            if (i >= n)\n                break;\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8653164c72704551a482c5baf415f3db>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8653164c72704551a482c5baf415f3db>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        List<string> result = new List<string>();\n        for (long i =
    0; i < n; i++) {\n            long k = i;\n            while (k != 0)\n            {\n
    \               result.Add(k.ToString());\n                k /= 10;\n            }\n
    \       }\n        return string.Join(\" \", result);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da514f077beb4d5aa2187712082a93a5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da514f077beb4d5aa2187712082a93a5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var s = new StringBuilder();\n        for (int i = 0; i <= n; i++)
    {\n            s.AppendFormat(\"{0} \", i);\n        }\n        return s.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7cc3839821734b14ab31c100b9dc317d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7cc3839821734b14ab31c100b9dc317d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015899
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L) {\n            return \"0\";\n        }\n        return
    String.Join(\" \", Enumerable.Range(0, n).Select(i => i.ToString()));\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjxcde0vh.cs(18,53): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var result = new StringBuilder();\n        while (n > 0) {\n            result.Append(n
    % 10);\n            n /= 10;\n        }\n        return result.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <200e4df7ec2444bdb5612c688334a607>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <200e4df7ec2444bdb5612c688334a607>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        char[] chars = new char[(int)n];\n        for (int i=0; i<chars.Length;
    i++) {\n            chars[i] = (char)('a' + i);\n        }\n        string s =
    new string((chars), (chars).Length);\n        return s;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjdxsva7d.cs(19,32): error CS1503: Argument 1: cannot convert from ''char[]''
    to ''char''

    '
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var result = new List<string>();\n        for (long i = 1; i <=
    n; i++)\n            result.Add(i.ToString());\n        return string.Join(\"
    \", result.ToArray());\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <41c4900050ff47b18779bdc979eeffc2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <41c4900050ff47b18779bdc979eeffc2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        for (int i = 0; i < n; i++)\n            s
    += i + \" \";\n        s = s.Trim();\n        return s;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25b8edce428d4086889ab5ce407a8cf8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25b8edce428d4086889ab5ce407a8cf8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        char[] space = new char[100];\n        StringBuilder sb = new StringBuilder();\n
    \       int i = 0;\n        do {\n            if (i >= n)\n                sb.Append(\"0
    \");\n            else\n                sb.Append((long)i + \" \");\n            i++;\n
    \           char ch = ' ';\n            do {\n                ch = Convert.ToChar(Convert.ToInt32(Math.Floor(Math.Log10(i
    + 0.5L)), 2));\n            } while (space[ch - ' '] >= 0);\n            space[ch
    - ' '] = 1;\n        } while (space[ch - ' '] >= 0);\n        sb.Append(\"0\");\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnenquebi.cs(26,82): error CS1003: Syntax error, '','' expected

    '
  timestamp: 1660015899
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string result = \"\";\n        do {\n            result += n.ToString();\n
    \           n = n.Next();\n        } while (n != 0L);\n        if (result == \"\")
    {\n            result = \"0\";\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbacz4_pk.cs(18,19): error CS1061: ''long'' does not contain a definition
    for ''Next'' and no accessible extension method ''Next'' accepting a first argument
    of type ''long'' could be found (are you missing a using directive or an assembly
    reference?)

    '
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var sb = new StringBuilder();\n        var i = 0;\n        for (;
    i < n; ++i) {\n            sb.Append(i + 1).Append(\" \");\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ab58c2c825444b5eab3fd8e4eeea975e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ab58c2c825444b5eab3fd8e4eeea975e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for (long i = 0;
    i < n; i++)\n            sb.Append(Convert.ToString(i, 10));\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d35df00ebec940ceaf6b24e2601bc5f2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d35df00ebec940ceaf6b24e2601bc5f2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string result = \"\";\n        while (n != 0)\n        {\n            result
    = (n % 10) + result;\n            n = n / 10;\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba9a88dbe4234ed0ae7d79eb48dac0af>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba9a88dbe4234ed0ae7d79eb48dac0af>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = string.Empty;\n        for (int i = 0; i < n; i++)\n
    \           s += i;\n        return s;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71c9e69f6f0f49d3bb39b7038e08b4f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71c9e69f6f0f49d3bb39b7038e08b4f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L) return \"0\";\n        if (n < 0L) throw new ArgumentOutOfRangeException(\"n\");\n
    \       string s = \"\";\n        while (n > 0L) {\n            s = String.Format(\"{0}
    \", n % 10) + s;\n            n /= 10;\n        }\n        switch (s.Length) {\n
    \           case 1: {\n                // Remove trailing \"0\"\n                s
    = s.Substring(0, s.Length - 1);\n                s = String.Format(\"{0} {1}\",
    s, 1);\n                break;\n            }\n            case 2: {\n                //
    Remove trailing \"0\" and \"1\"\n                s = s.Substring(0, s.Length -
    2);\n                break;\n            }\n            default: // Remove trailing
    \"0\" and \"1\"\n                s = s.Substring(0, s.Length - 2);\n                s
    = s.Substring(0, s.Length - 1);\n                break;\n        }\n        string
    result = String.Empty;\n        foreach (char c in s) {\n            if (char.IsDigit(c))
    result += c;\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b66f668b600b4eb28bfe5bc26fbb62b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b66f668b600b4eb28bfe5bc26fbb62b0>:0
    \n"
  stdout: ''
  timestamp: 1660015900
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        foreach (long x
    in Enumerable.Range(0, n)) {\n            sb.Append(x);\n            sb.Append(\"
    \");\n        }\n        return sb.ToString(0, sb.Length - 1);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl78h75wo.cs(16,48): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015899
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder s = new StringBuilder(n);\n        long i = 0;\n        while
    (true) {\n            if (i < (long)s.Length)\n                s.Append(\" \");\n
    \           s.Append(++i);\n            if (i >= n)\n                break;\n
    \       }\n        return s.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpso2yfs34.cs(15,45): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015899
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        char[] buf = new char[32];\n        int pos = 0;\n        while
    (true) {\n            int cnt = BitConverter.ToInt32(BitConverter.GetBytes(n),
    0);\n            for (int i = 0; i < cnt; i++) {\n                buf[pos++] =
    '0';\n            }\n            if (pos + cnt > buf.Length)\n                throw
    new ArgumentOutOfRangeException(\"n\");\n            if (n == 0)\n                return
    new string(buf, 0, pos);\n            else\n                n = n / 10;\n        }\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e144f55a6b524fe7a626bb1f730d2ca2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e144f55a6b524fe7a626bb1f730d2ca2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n < 0)\n            throw new ArgumentOutOfRangeException(\"n\");\n
    \       if (n == 0)\n            return \"0\";\n        if (n == 1L)\n            return
    \"1\";\n        StringBuilder sb = new StringBuilder();\n        for (long i =
    1L; i <= n; ++i)\n            sb.Append(StringSequence(i));\n        sb.Append(StringSequence((n
    + 1L)));\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1660015905
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return String.Join(\" \", Enumerable.Range(0, n).Select(i => (long)
    i).Select(i => i.ToString()).ToArray());\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6kx2vfae.cs(15,53): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015900
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var s = Enumerable.Range(0, n).Select(i => i.ToString()).Aggregate((s,
    i) => s + \" \" + i);\n        return s;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpijcza93h.cs(15,37): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string result = \"\";\n        long current = n;\n        while
    (current > 0) {\n            result += (current % 10).ToString();\n            current
    /= 10;\n        }\n        if (n == 0) return result;\n        return result +
    \" \" + StringSequence(--n);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cade326bdc3140a792b7ada29015e652>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cade326bdc3140a792b7ada29015e652>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for (long i = 0;
    i <= n; i++)\n            sb.Append(i);\n        return sb.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5bf12123120b4dcd86a45ddd2f462578>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5bf12123120b4dcd86a45ddd2f462578>:0
    \n"
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var result = new StringBuilder();\n        for(var i = 0; i <= n;
    i++) {\n            result.Append((int)i);\n        }\n        return result.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8d88ea0ccdc24e80b30f364b4a904db9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8d88ea0ccdc24e80b30f364b4a904db9>:0
    \n"
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        long[] result = new long[n];\n        int i = 0;\n        for (long
    ni = n; ni > 0; ni = ni / 10) {\n            result[i++] = ni;\n        }\n        return
    String.Join(\" \", result.Take(result.Length - 1));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25a3f92315834fed9da45d3dde47979d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25a3f92315834fed9da45d3dde47979d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var res = new StringBuilder();\n        long i = 0;\n        while
    (i < n) {\n            res.Append((i++).ToString());\n        }\n        return
    res.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eb929d6c3be443ceb7227c8d53a591fd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eb929d6c3be443ceb7227c8d53a591fd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for (long i = 0;
    i <= n; ++i) {\n            sb.Append(i);\n            sb.Append(' ').Append(Convert.ToString(i,
    16)).Append(' ');\n        }\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5f5b63225af84eca9539483be522d505>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5f5b63225af84eca9539483be522d505>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var buffer = new StringBuilder();\n        long lastValue = 0;\n
    \       while (true) {\n            lastValue += n;\n            if (lastValue
    < 1)\n                break;\n            buffer.Append((lastValue % 10).ToString());\n
    \           n /= 10;\n        }\n        return buffer.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e2fbe6f61d6643be887507ee03a5e409>:0
    \n"
  stdout: None
  timestamp: 1660015905
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return String.Join(\" \", Enumerable.Range(0, (int)n).Select(i =>
    i.ToString()));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <36731154e71c4ea9a63f82cf103d2e86>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <36731154e71c4ea9a63f82cf103d2e86>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        for (int i = 0; i < n; i++) {\n            s
    = s + \" \" + (i + 1).ToString();\n        }\n        return s;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <81e5048ddf974428801a985949f2fa4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <81e5048ddf974428801a985949f2fa4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var s = \"\";\n        foreach (byte b in BitConverter.GetBytes(n))
    {\n            s += b.ToString();\n        }\n        return s;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7566ea3937814449a2edc0f008d6e811>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7566ea3937814449a2edc0f008d6e811>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L) return(\"0\");\n        var list = Enumerable.Range(0,
    n).Select(i => (long) i).ToList();\n        var s = string.Join(\" \", list.Select(i
    => i.ToString()));\n        return s;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0guqch8b.cs(16,40): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015900
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var list = new List<string>();\n        while (n > 0) {\n            list.Add(n.ToString());\n
    \           n -= 1;\n        }\n        return list.Aggregate((x, y) => x + \"
    \" + y);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.StringSequence (System.Int64 n) [0x00028] in <8a1f0e97ec0342db980719336562b6f2>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <8a1f0e97ec0342db980719336562b6f2>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.Aggregate[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source, System.Func`3[T1,T2,TResult] func) [0x00030] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.StringSequence (System.Int64 n) [0x00028] in <8a1f0e97ec0342db980719336562b6f2>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <8a1f0e97ec0342db980719336562b6f2>:0
    \n"
  stdout: ''
  timestamp: 1660015900
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder ret = new StringBuilder();\n        for (int i = 0;
    i < n; i++) {\n            ret.Push(Convert.ToString(i));\n        }\n        return
    ret.Push('\\0').ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1laffa55.cs(17,17): error CS1061: ''StringBuilder'' does not contain a
    definition for ''Push'' and no accessible extension method ''Push'' accepting
    a first argument of type ''StringBuilder'' could be found (are you missing a using
    directive or an assembly reference?)

    /tmp/tmp1laffa55.cs(19,20): error CS1061: ''StringBuilder'' does not contain a
    definition for ''Push'' and no accessible extension method ''Push'' accepting
    a first argument of type ''StringBuilder'' could be found (are you missing a using
    directive or an assembly reference?)

    '
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var seq = new StringBuilder(string.Empty);\n        for (int i =
    0; i < n; i++) {\n            seq.Append((i == 0 ? \"0\" : (i + 1).ToString()));\n
    \       }\n        return seq.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25c6ecdb357046879305ed2e8c64b0c9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25c6ecdb357046879305ed2e8c64b0c9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for (long i = 1L;
    i <= n; i++) {\n            sb.Append(i.ToString() + \" \");\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05c1744cefec420d94d383e77d93dafd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05c1744cefec420d94d383e77d93dafd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var result = \"\";\n        for (var i = n; i > 0; i--) {\n            result
    += \" \" + i;\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6d0fbe465fd940289df7e04a5763ff3c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6d0fbe465fd940289df7e04a5763ff3c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L)\n            return String.Empty;\n        StringBuilder
    s = new StringBuilder();\n        for (long i = 0; i < n; ++i) {\n            s.Append((n
    % 10L) + \"\");\n            n /= 10L;\n        }\n        return s.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd5aff33a2bf4aee95028a9fdf113b53>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd5aff33a2bf4aee95028a9fdf113b53>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        for (int i = 0; n > 0; i++) {\n            s
    = s.PadLeft(i).Append(n.ToString());\n            n -= (long)i;\n        }\n        return
    s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj7z933i_.cs(17,17): error CS1929: ''string'' does not contain a definition
    for ''Append'' and the best extension method overload ''Queryable.Append<string>(IQueryable<string>,
    string)'' requires a receiver of type ''IQueryable<string>''

    '
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        long i = 0;\n        string s = \"\";\n        while (n > 0) {\n
    \           s = s + \" \" + Convert.ToString(n % 10);\n            n = n / 10;\n
    \       }\n        return (i == 0) ? \"\" : s.TrimStart() + Convert.ToString(i);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <901dd3889c8d482f937630c401fdd6db>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <901dd3889c8d482f937630c401fdd6db>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015900
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        List<string> lst = new List<string>();\n        for (long i = 1;
    i <= n; i++) {\n            lst.Add(i.ToString());\n        }\n        return
    string.Join(\" \", lst.ToArray());\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54df6025c3c04294b30614dcf3e743e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54df6025c3c04294b30614dcf3e743e9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var result = new StringBuilder();\n        for (long i = n; i <=
    n; i++) {\n            result.Append(i);\n        }\n        return result.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <20a0dc59e8cc412e9b5c5f30ac86c98d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <20a0dc59e8cc412e9b5c5f30ac86c98d>:0
    \n"
  stdout: ''
  timestamp: 1660015901
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L) {\n            return \"0\";\n        }\n        return
    String.Join(\" \", Enumerable.Range(0, n).Select(i => Convert.ToString(i)));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsgp34sjq.cs(18,53): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015901
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n < 0)\n            throw new ArgumentOutOfRangeException(\"n\",
    \"must be non-negative\");\n        char[] buffer = new char[26];\n        buffer[0]
    = '\\0';\n        for (int i = 9; i >= 0; --i) {\n            buffer[i] = (char)('A'
    + i - 1);\n        }\n        long remaining = n;\n        long index = 0;\n        while
    (remaining > 0) {\n            buffer[index++] = remaining%10 + '0';\n            remaining
    = remaining / 10;\n        }\n        return new string(buffer);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfn_k9o2o.cs(25,31): error CS0266: Cannot implicitly convert type ''long''
    to ''char''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0;
    i < n; ++i) {\n            sb.Append((int)n);\n            sb.Append(\" \");\n
    \       }\n        return sb.ToString().Trim();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <445afe772e8942a28bc878ceaf2fb935>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <445afe772e8942a28bc878ceaf2fb935>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015901
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        char[] buffer = new char[32];\n        long[] numbers = new long[n];\n
    \       for (long i = 0; i < n; ++i) {\n            numbers[i] = i;\n            NumberToString(numbers,
    buffer, 0);\n        }\n        return String.Join(\" \", buffer);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5n1dgrub.cs(19,13): error CS0103: The name ''NumberToString'' does not
    exist in the current context

    '
  timestamp: 1660015901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for (long i = 0;
    i < n; i++) {\n            sb.Append(\" \" + (i + 1).ToString());\n        }\n
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6adf7e864e5a4ffdb18442443b185011>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6adf7e864e5a4ffdb18442443b185011>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var sb = new StringBuilder();\n        for (var i = 0; i < n; i++)\n
    \           sb.Append((i + 1).ToString());\n        return sb.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19ebef825cf0465c855decc181eb5c5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19ebef825cf0465c855decc181eb5c5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015901
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var result = new StringBuilder();\n        for (var i = 0; i <=
    n; i++) {\n            result.Append(i % 10 == 0 ? i : \" \" + i);\n        }\n
    \       return result.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqxipsx2_.cs(17,27): error CS0173: Type of conditional expression cannot
    be determined because there is no implicit conversion between ''int'' and ''string''

    '
  timestamp: 1660015901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        long i = 1;\n        StringBuilder sb = new StringBuilder();\n        while
    (i <= n) {\n            sb.Append(i);\n            sb.Append(\" \");\n            i++;\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8f6310f107c9412a8e13737e360bd00c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8f6310f107c9412a8e13737e360bd00c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for(int i = 0;
    i < n; i++) {\n            sb.Append((i).ToString());\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ddbb741a6fbb4b4492a7a94429dadf9a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ddbb741a6fbb4b4492a7a94429dadf9a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for (long i = n;
    i > 0L; i--)\n            sb.Append(i);\n        sb.Append(\"0 \");\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c56d02f96f14b2f8acf1bda31965537>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c56d02f96f14b2f8acf1bda31965537>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015901
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        long step = (long)Math.Sqrt(n);\n        long first = 0; long current
    = first;\n        long last = step;\n        while (current != last) {\n            Debug.Assert(current
    < last);\n            yield return current;\n            current = current + step;\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcjvxcjtu.cs(14,26): error CS1624: The body of ''Problem.StringSequence(long)''
    cannot be an iterator block because ''string'' is not an iterator interface type

    '
  timestamp: 1660015901
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L) throw new ArgumentOutOfRangeException(\"n\");\n        StringBuilder
    builder = new StringBuilder();\n        while (n > 0) {\n            builder.Append((n
    % 10L).ToString());\n            n /= 10L;\n        }\n        if (builder.Length
    > 0) {\n            builder.Append((n % 10L).ToString());\n        }\n        return
    builder.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Specified argument
    was out of the range of valid values.\nParameter name: n\n  at Problem.StringSequence
    (System.Int64 n) [0x0000a] in <b8b92f060c2f468d975f43e1a8e2870e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <b8b92f060c2f468d975f43e1a8e2870e>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Specified argument
    was out of the range of valid values.\nParameter name: n\n  at Problem.StringSequence
    (System.Int64 n) [0x0000a] in <b8b92f060c2f468d975f43e1a8e2870e>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <b8b92f060c2f468d975f43e1a8e2870e>:0 \n"
  stdout: ''
  timestamp: 1660015901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string result = \"\";\n        for (int i = 0; i < n; i++) {\n            result
    += i.ToString();\n            result += \" \";\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dde962e46a9444cc8f8f8e9166e03615>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dde962e46a9444cc8f8f8e9166e03615>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var sb = new StringBuilder();\n        for (int i = 0; i < n; i++)\n
    \           sb.Append((n - i).ToString());\n        return sb.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af3f7b714ec547cea176268d559cec8e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af3f7b714ec547cea176268d559cec8e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015901
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        Debug.Assert(n >= 0);\n        Debug.Assert(n <= 4294967295);\n
    \       string result = \"\";\n        long[] values = new long[16];\n        byte[]
    buffer = new byte[16];\n        // Use a counter variable that wraps around; this
    way we avoid the problem of\n        // wrapping around in a loop where we would
    want to rewind it.\n        long counter = n;\n        while (counter > 0) {\n
    \           buffer[15 - counter] = counter % 10;\n            counter /= 10;\n
    \       }\n        Array.Sort(values);\n        for (int i = 0; i < 16; i++) {\n
    \           result += buffer[i].ToString();\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpscpxfco_.cs(24,36): error CS0266: Cannot implicitly convert type ''long''
    to ''byte''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var buffer = new char[32];\n        int length = BitConverter.GetBytes(n).Length;\n
    \       StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < length;
    i++)\n            sb.Append((char)buffer[i]);\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8cb9776aaee341aaa45737014f8b439d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8cb9776aaee341aaa45737014f8b439d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        while (n > 0) {\n            s = s + \"
    \" + n%10;\n            n /= 10;\n        }\n        return s.Trim();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <41c657772951407eb3902d572d4c3110>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <41c657772951407eb3902d572d4c3110>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n < 0) {\n            throw new ArgumentOutOfRangeException(\"n\");\n
    \       }\n        var list = new List<long>();\n        for (long i = 0; i <=
    n; ++i) {\n            list.Add(i);\n        }\n        return list.Select(i =>
    string.Format(\"{0}\", i)).Aggregate((c, s) => c + \" \" + s);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var ints = new int[n];\n        for (var i = 0; i < n; i++) {\n
    \           ints[i] = i;\n        }\n        return string.Join(\" \", ints);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <17c5ffbf23da47a0b46af0fe21cf984e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <17c5ffbf23da47a0b46af0fe21cf984e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015901
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        char[] array = new char[(int) (n + 1)];\n        int n = n % array.length;\n
    \       char start = '0';\n        if (n > 0) {\n            for (int i = 0; i
    < n; i++) {\n                array[array.length - i - 1] = ' ';\n            }\n
    \           array[array.length - 1] = ' ';\n        }\n        string result =
    new string((object[]) array);\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpequj9mhj.cs(15,40): error CS0841: Cannot use local variable ''n'' before
    it is declared

    /tmp/tmpequj9mhj.cs(16,13): error CS0136: A local or parameter named ''n'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpequj9mhj.cs(16,27): error CS1061: ''char[]'' does not contain a definition
    for ''length'' and no accessible extension method ''length'' accepting a first
    argument of type ''char[]'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmpequj9mhj.cs(20,29): error CS1061: ''char[]'' does not contain a definition
    for ''length'' and no accessible extension method ''length'' accepting a first
    argument of type ''char[]'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmpequj9mhj.cs(22,25): error CS1061: ''char[]'' does not contain a definition
    for ''length'' and no accessible extension method ''length'' accepting a first
    argument of type ''char[]'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmpequj9mhj.cs(24,36): error CS0030: Cannot convert type ''char[]'' to ''object[]''

    /tmp/tmpequj9mhj.cs(17,14): warning CS0219: The variable ''start'' is assigned
    but its value is never used

    '
  timestamp: 1660015901
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return string.Join(\" \", Enumerable.Range(0, n).Select(i => i.ToString()));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7v630rv1.cs(15,53): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var s = \"\";\n        while (n > 0) {\n            s = \" \" +
    n;\n            n = n / 10;\n        }\n        Debug.Assert(s == \"0\");\n        return
    s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.StringSequence (System.Int64 n) [0x00000] in <a3a3350d4957482182360c1ec4cb1f25>:0
    \n  at Problem.Main (System.String[] args) [0x00000] in <a3a3350d4957482182360c1ec4cb1f25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a3a3350d4957482182360c1ec4cb1f25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe"
  stdout: ''
  timestamp: 1660015902
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        char[] buf = new char[64];\n        long total = 0, start = 0;\n
    \       long end = n;\n        while (start < end) {\n            buf[total++]
    = '0';\n            long rem = (end - start) * 10L % 10;\n            buf[total++]
    = rem < 10 ? '0' : 'A' + rem - 10;\n            start += 10L;\n            end
    -= 10L;\n        }\n        if (total > 63) {\n            throw new ArgumentOutOfRangeException(\"n\");\n
    \       }\n        return new string(buf, 0, total);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj7t5ekam.cs(21,28): error CS0266: Cannot implicitly convert type ''long''
    to ''char''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpj7t5ekam.cs(28,35): error CS1503: Argument 3: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015901
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string result = string.Empty;\n        for(int i = 0; i <= n; i++)
    {\n            result += \" \" + i;\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ab53bba54eee46aeb5e3afe816e09e78>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ab53bba54eee46aeb5e3afe816e09e78>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        List<string> result = new List<string>();\n        while (n-- >
    0) {\n            result.Add(n.ToString());\n        }\n        return string.Join(\"
    \", result.ToArray());\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <73ed2acb54c84a73a685936edc1f271c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <73ed2acb54c84a73a685936edc1f271c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder s = new StringBuilder();\n        while (n > 0)\n
    \       {\n            s.Append((n % 10).ToString());\n            n = n / 10;\n
    \       }\n        if (s.Length > 0)\n            s.Append(' ');\n        else\n
    \           s.Append('0');\n        return s.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ee17071ff5ce41f0a39cc3c87e43e5c5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ee17071ff5ce41f0a39cc3c87e43e5c5>:0
    \n"
  stdout: ''
  timestamp: 1660015902
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string result = new StringBuilder();\n        while (n > 0) {\n
    \           result.Append(n % 10).Append(\" \");\n            n /= 10;\n        }\n
    \       while (result.Length > 0) {\n            result.Remove(result.Length -
    1, 1);\n        }\n        if (result.Length > 0) {\n            result = result.Remove(result.Length
    - 1);\n        }\n        return result.ToString();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6fmqbgr1.cs(15,25): error CS0029: Cannot implicitly convert type ''System.Text.StringBuilder''
    to ''string''

    /tmp/tmp6fmqbgr1.cs(17,13): error CS1929: ''string'' does not contain a definition
    for ''Append'' and the best extension method overload ''Queryable.Append<long>(IQueryable<long>,
    long)'' requires a receiver of type ''IQueryable<long>''

    '
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var stringBuilder = new StringBuilder();\n        while (n != 0)\n
    \       {\n            stringBuilder.Append((n % 10) + \"\");\n            n /=
    10;\n        }\n        stringBuilder.Append(\"\");\n        return stringBuilder.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9d4fad41ea0740aba4f96cfbb895c1f0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9d4fad41ea0740aba4f96cfbb895c1f0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var builder = new StringBuilder();\n        for (int i = 0; n >
    0; i++)\n        {\n            if (builder.Length > 0)\n                builder.Append(\"
    \");\n            builder.Append((n%10).ToString());\n            n = n/10;\n
    \       }\n        if (n < 10)\n            builder.Append((n%10).ToString());\n
    \       return builder.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c9ba647f2dd64331be8d010b96779fc4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c9ba647f2dd64331be8d010b96779fc4>:0
    \n"
  stdout: ''
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n <= 0L) return \"\";\n        var s = \"\";\n        for (var
    i = 0; i < (int)n; i++) {\n            s += i.ToString();\n        }\n        return
    s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <81e005a2602947f99acf690ed31333e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <81e005a2602947f99acf690ed31333e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015902
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        char[] digits = new char[Convert.ToInt32((1 + n) / 10)];\n        Array.Sort(digits,
    0, digits.Length, new DigitComparer());\n        StringBuilder sb = new StringBuilder();\n
    \       foreach (char c in digits) {\n            sb.Append(c);\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpppbvq1_5.cs(16,50): error CS0246: The type or namespace name ''DigitComparer''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0;
    i < n; i++) {\n            sb.Append((long)i);\n            sb.Append(\" \");\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <796c1b08ea114da6839e0b1d7a7a9b3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <796c1b08ea114da6839e0b1d7a7a9b3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015902
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        // Write your C# code here.\n        var strs = new List<string>();\n
    \       long n = n-1;\n        for(long i=0;i<n;i++) {\n            strs.Add(i
    + \"\");\n        }\n        strs.Add(n + \"\");\n        return String.Join(\"
    \", strs);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_cu7xuw.cs(17,14): error CS0136: A local or parameter named ''n'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpa_cu7xuw.cs(17,18): error CS0165: Use of unassigned local variable ''n''

    '
  timestamp: 1660015902
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var numbers = Enumerable.Range(0, n).Select(i => (long)i + 1).Select(i
    => (long)i);\n        return string.Join(\" \", numbers);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf9k989ck.cs(15,43): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var strs = new List<string>();\n        for (int i = 0; i < n; i++)
    {\n            strs.Add(i.ToString());\n        }\n        return string.Join(\"
    \", strs);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ab74a827109c45f9ae2c31a8e0bb14f9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ab74a827109c45f9ae2c31a8e0bb14f9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n < 1L) return \"0\";\n        StringBuilder s = new StringBuilder();\n
    \       while (n > 0) {\n            s.Append(n % 10);\n            n /= 10;\n
    \       }\n        return s.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <575a686a2dba4d88971a93442272a2b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <575a686a2dba4d88971a93442272a2b0>:0
    \n"
  stdout: ''
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0) {\n            return \"0\";\n        }\n\n        long
    next = 2;\n        string s = \"\";\n        for (long i = n; i > 0; i /= next)
    {\n            s += \" \" + next.ToString();\n            next++;\n        }\n
    \       return s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b83dabff93c64bc4a3d50291f57aab1b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b83dabff93c64bc4a3d50291f57aab1b>:0
    \n"
  stdout: ''
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L)\n            return \"0\";\n\n        StringBuilder
    sb = new StringBuilder(2);\n        long previous = n;\n        long current =
    previous;\n\n        while (true) {\n            sb.Append(previous);\n\n            if
    (current == previous)\n                return sb.ToString();\n\n            previous
    = current;\n            current = (current + 1L) % (long.MaxValue - 1L);\n        }\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4c3e0d0cdc6b4171ba4a7b0f326238ef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4c3e0d0cdc6b4171ba4a7b0f326238ef>:0
    \n"
  stdout: ''
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var sb = new StringBuilder(n.ToString());\n        for (var i =
    1; i < n; i++) sb.Append(' ', i);\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c0668cc8e3004de385ac58b111caebd6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c0668cc8e3004de385ac58b111caebd6>:0
    \n"
  stdout: ''
  timestamp: 1660015902
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var sb = new StringBuilder();\n        var range = Enumerable.Range(0,
    n);\n        foreach (var i in range) {\n            sb.Append((long)i);\n            sb.Append(\"
    \");\n        }\n        return sb.ToString();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgepjx5ac.cs(16,41): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015902
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        while(n > 0) {\n            s = s.PadRight(10);\n
    \           s = s.PadRight(5);\n            s = s.Substring(0, 5) + \" \" + n;\n
    \           n -= 5;\n        }\n        return s.Substring(1);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: startIndex
    cannot be larger than length of string.\nParameter name: startIndex\n  at System.String.Substring
    (System.Int32 startIndex, System.Int32 length) [0x0001d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.Substring (System.Int32 startIndex) [0x00008] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.StringSequence (System.Int64 n) [0x00045] in <458945ff74ef444db0c8ee9be4e775fb>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <458945ff74ef444db0c8ee9be4e775fb>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: startIndex
    cannot be larger than length of string.\nParameter name: startIndex\n  at System.String.Substring
    (System.Int32 startIndex, System.Int32 length) [0x0001d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.String.Substring (System.Int32 startIndex) [0x00008] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.StringSequence (System.Int64 n) [0x00045] in <458945ff74ef444db0c8ee9be4e775fb>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <458945ff74ef444db0c8ee9be4e775fb>:0
    \n"
  stdout: ''
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L)\n            return \"0\";\n        return String.Join(\"
    \", Enumerable.Range(0, (int)Math.Ceiling(Math.Log10(n))).Select(x => n.ToString(\"D\"
    + x.ToString())));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ff3217f3cc174d8db94b58a9122ab3bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ff3217f3cc174d8db94b58a9122ab3bf>:0
    \n"
  stdout: ''
  timestamp: 1660015902
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return String.Join(\" \", Enumerable.Range(0, n).Select(i => i.ToString()));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp756gp31l.cs(15,53): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015902
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        char[] buffer = new char[32];\n        StringBuilder sb = new StringBuilder();\n
    \       long i = n;\n        while (i > 0) {\n            int k = i / 10;\n            int
    j = i % 10;\n            buffer[32 - k] = '0' + j;\n            while (k >= 0)
    {\n                k = k % 32;\n                buffer[k] = '0';\n            }\n
    \           sb.Append(System.Text.Encoding.ASCII.GetString(buffer));\n            buffer
    = new char[32];\n            i--;\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppvwbqxh4.cs(19,21): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmppvwbqxh4.cs(20,21): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmppvwbqxh4.cs(21,30): error CS0266: Cannot implicitly convert type ''int''
    to ''char''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmppvwbqxh4.cs(26,60): error CS1503: Argument 1: cannot convert from ''char[]''
    to ''System.ReadOnlySpan<byte>''

    '
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n < 0) throw new ArgumentOutOfRangeException();\n        string
    s = \"\";\n        while (n > 0) {\n            s = s + \" \" + n;\n            n
    = n - 1;\n        }\n        return s;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8a8afb39a04149faae7c1df3edf8f0c5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8a8afb39a04149faae7c1df3edf8f0c5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var s = \"\";\n        while (n > 0) {\n            s = n.ToString()
    + \" \"+ s;\n            n -= (int)n;\n        }\n        if (s.Length > 0) {\n
    \           s = s.Substring(0, s.Length-1);\n        }\n        return s;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <be7ce045099a40ea9028c9ea4e8b2ae4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <be7ce045099a40ea9028c9ea4e8b2ae4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        List<long> result = new List<long>();\n        for (int i = 1; i
    <= n; ++i) {\n            result.Add(i);\n        }\n        return string.Join(\"
    \", result.ToArray());\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05fc0b00231947b08f4f8a2f557fc375>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <05fc0b00231947b08f4f8a2f557fc375>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        for (long i = 0; i <= n; i++) {\n            s
    += \" \" + i;\n        }\n        return s;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30cb2024444a44d8811a44d9e1694bac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30cb2024444a44d8811a44d9e1694bac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L) {\n            return \"0\";\n        }\n        StringBuilder
    result = new StringBuilder();\n        for (int i = 0; i < n; i++) {\n            long
    value = i;\n            int digit;\n            while (value != 0) {\n                digit
    = (int)(value % 10);\n                result.Append((char)(digit + '0'));\n                value
    /= 10;\n            }\n        }\n        return result.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a6da5e8c7fa42efad22d67198ce75e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a6da5e8c7fa42efad22d67198ce75e8>:0
    \n"
  stdout: ''
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string res = \"\";\n        for (long i = 0; i <= n; i++)\n            res
    += (i > 0 ? \" \" : \"\") + i;\n        return res;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015903
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L)\n            return \"0\";\n        if (n == 1L)\n
    \           return \"\" + 0L;\n        if (n == 2L)\n            return \"0 1\";\n
    \       if (n == 3L)\n            return \"0 1 2\";\n        if (n == 4L)\n            return
    \"0 1 2 3\";\n        if (n == 5L)\n            return \"0 1 2 3 4\";\n        if
    (n == 6L)\n            return \"0 1 2 3 4 5\";\n        if (n == 7L)\n            return
    \"0 1 2 3 4 5 6\";\n        if (n == 8L)\n            return \"0 1 2 3 4 5 6 7\";\n
    \       if (n == 9L)\n            return \"0 1 2 3 4 5 6 7 8\";\n        if (n
    == 10L)\n            return \"0 1 2 3 4 5 6 7 8 9\";\n        if (n == 11L)\n
    \           return \"0 1 2 3 4 5 6 7 8 9 10\";\n        if (n == 12L)\n            return
    \"0 1 2 3 4 5 6 7 8 9 10 11\";\n        if (n == 13L)\n            return \"0
    1 2 3 4 5 6 7 8 9 10 11 12\";\n        if (n == 14L)\n            return \"0 1
    2 3 4 5 6 7 8 9 10 11 12 13\";\n        if (n == 15L)\n            return \"0
    1 2 3 4 5 6 7 8 9 10 11 12 13 14\";\n        if (n == 16L)\n            return
    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15\";\n        if (n == 17L)\n            return
    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16\";\n        if (n == 18L)\n            return
    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17\";\n        if (n == 19L)\n            return
    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18\";\n        if (n == 20L)\n            return
    \"0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19\";\n        if (n == 2L)\n
    \           return \"\" + n + \"1\";\n        if (n == 100L)\n            return
    \"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29
    30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
    56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 \n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7eh0fcyv.cs(60,20): error CS1010: Newline in constant

    /tmp/tmp7eh0fcyv.cs(60,243): error CS1002: ; expected

    '
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L) return \"0\";\n        if (n == 1L) return \"1\";\n
    \       return StringSequence(n - 1) + \" \" + StringSequence(n - 2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c05f6dea11d3440d8b99c36e099c72b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c05f6dea11d3440d8b99c36e099c72b4>:0
    \n"
  stdout: ''
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string result = \"\";\n        while (n > 0) {\n            result
    += n.ToString();\n            n -= n % (long)int.MaxValue;\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5894e61595ba4662a29fb035a1c23103>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5894e61595ba4662a29fb035a1c23103>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015903
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L) \n            return \"0\";\n\n        var r = new
    Stack<long>();\n        for (int i = 0; i < 32; ++i)\n            r.Push((ulong)n);\n\n
    \       var sb = new StringBuilder();\n        while (n > 0L) {\n            sb.Append(n
    % 10L);\n            n /= 10L;\n            if (n > 0L) \n                sb.Append(\"
    \");\n        }\n        return sb.ToString();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw8qz1i77.cs(20,20): error CS1503: Argument 1: cannot convert from ''ulong''
    to ''long''

    '
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L) {\n            return \"0\";\n        }\n        var
    sb = new StringBuilder();\n        sb.Append(\"0 \");\n        var i = 0;\n        while
    (i < n) {\n            sb.Append(Convert.ToString(i, 16).PadLeft(4, '0'));\n            i++;\n
    \       }\n        sb.Append(\" \");\n        return sb.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd89b01fa6cf4b22bc9b2ef4fa26e78f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd89b01fa6cf4b22bc9b2ef4fa26e78f>:0
    \n"
  stdout: ''
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var nums = Enumerable.Range(0, (int)n).Select(n => (long)n).ToArray();\n
    \       return String.Join(\" \", nums.Select(n => n.ToString()).ToArray());\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4a898d723ed4faf82ca03a310caa405>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4a898d723ed4faf82ca03a310caa405>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015903
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return string.Join(\" \", Enumerable.Range(0, n).Select(i => i.ToString()));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7v630rv1.cs(15,53): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015901
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return StringSequence(0, n, new List<string>());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxsm3190m.cs(15,16): error CS1501: No overload for method ''StringSequence''
    takes 3 arguments

    '
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L)\n            return \"0\";\n        var result = new
    StringBuilder();\n        for (int i = 0; i < n; i++) {\n            result.Append(\"
    \" + (i+1L));\n        }\n        return result.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c37367aee234cc1b4b403940cb7bb68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c37367aee234cc1b4b403940cb7bb68>:0
    \n"
  stdout: ''
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        for(long i = 0; i < n; ++i) {\n            s
    += (i > 0 ? \" \" : \"\") + i;\n        }\n        return s;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b1ac17df3b74494bf165ae39a1919f1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b1ac17df3b74494bf165ae39a1919f1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return String.Join(\" \", Enumerable.Range(0, (int)n).Select(i =>
    (long)i).ToArray());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f32d7b9881134390a3120edca28e9840>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f32d7b9881134390a3120edca28e9840>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015903
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        long s = n;\n        var sb = new StringBuilder();\n        while
    (s-- > 0) {\n            sb.Append((char)('a' + ((int)Math.Floor(s / 26))));\n
    \       }\n        sb.Append((char)('z' - s));\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx025pzen.cs(18,47): error CS0121: The call is ambiguous between the following
    methods or properties: ''Math.Floor(decimal)'' and ''Math.Floor(double)''

    '
  timestamp: 1660015903
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var list = Enumerable.Range(0, n).Select(x => x.ToString()).ToList();\n
    \       return string.Join(\" \", list);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpekueqhp3.cs(15,40): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        // The return value will be a string containing space-delimited
    numbers starting from 0 upto n inclusive.\n        StringBuilder sb = new StringBuilder();\n
    \       for (int i = 0; i <= n; i++) {\n            if (sb.Length > 0)\n                sb.Append('
    ');\n            sb.Append(i);\n        }\n        return sb.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder result = new StringBuilder();\n        for (int i
    = 0; i < n; ++i) {\n            result.Append(i);\n        }\n        return result.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3487d97b10b9412b98f32374ff126127>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3487d97b10b9412b98f32374ff126127>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015903
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return string.Join(\" \", Enumerable.Range(0, n).Select(i => i.ToString()));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7v630rv1.cs(15,53): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015901
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var s = new List<long>();\n        for (int i = 0; i <= n; i++)
    {\n            s.Add(i);\n        }\n        return s.Aggregate((acc, s) => acc
    + \" \" + s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphnlg566z.cs(19,40): error CS0029: Cannot implicitly convert type ''string''
    to ''long''

    /tmp/tmphnlg566z.cs(19,40): error CS1662: Cannot convert lambda expression to
    intended delegate type because some of the return types in the block are not implicitly
    convertible to the delegate return type

    '
  timestamp: 1660015903
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        List<byte> bytes = new List<byte>(1024);\n        byte[] buffer
    = new byte[8];\n        ulong current = 0;\n        ulong last = 0;\n        while
    (n > 0) {\n            current = n;\n            n = n >> 8;\n            bytes.Add(last);\n
    \           last = 0;\n            while (current > 0) {\n                buffer[0]
    = (byte)(current % 256);\n                current = current >> 8;\n                bytes.Add(buffer[0]);\n
    \           }\n        }\n        StringBuilder builder = new StringBuilder();\n
    \       for (ulong i = 0; i < bytes.Count; i++) {\n            builder.Append(bytes[i].ToString(\"X2\"));\n
    \       }\n        return builder.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0iplly_t.cs(20,23): error CS0266: Cannot implicitly convert type ''long''
    to ''ulong''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp0iplly_t.cs(22,23): error CS1503: Argument 1: cannot convert from ''ulong''
    to ''byte''

    /tmp/tmp0iplly_t.cs(31,27): error CS0034: Operator ''<'' is ambiguous on operands
    of type ''ulong'' and ''int''

    /tmp/tmp0iplly_t.cs(32,34): error CS1503: Argument 1: cannot convert from ''ulong''
    to ''int''

    '
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        while (n >= 0)
    {\n            sb.Append(n);\n            sb.Append(\" \");\n            n = n
    - 1;\n        }\n        sb.Append(\"0\");\n        return sb.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1f189eec29674747aa58d14878c793a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1f189eec29674747aa58d14878c793a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var buffer = new StringBuilder();\n        while (n > 0) {\n            buffer.Append((n
    % 10).ToString());\n            n /= 10;\n        }\n        var result = buffer.ToString();\n
    \       if (result.Length == 1)\n            result = \"0\" + result;\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c17f40ac70484bbe1ca813aa088379>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c17f40ac70484bbe1ca813aa088379>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015903
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return StringSequence(n, \"\");\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj1yvppn_.cs(15,16): error CS1501: No overload for method ''StringSequence''
    takes 2 arguments

    '
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var result = new StringBuilder();\n        for (var i = 0; n > 0;
    i++) {\n            result.Append((int)n);\n            n /= 10;\n        }\n
    \       return result.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d17298f76fdc438cac79ccbbd6abe0a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d17298f76fdc438cac79ccbbd6abe0a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015903
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return string.Join(\" \", Enumerable.Range(0, n).Select(i => i.ToString()));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7v630rv1.cs(15,53): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015901
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        List<char> ret = new List<char>();\n        foreach (var n in Enumerable.Range(0,
    n))\n        {\n            ret.Add((char) n);\n        }\n        return string.Join(\"
    \", ret);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpty9unv3x.cs(16,47): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpty9unv3x.cs(16,22): error CS0136: A local or parameter named ''n'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    '
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string result = \"\";\n        for (long i = 0; i <= n; ++i) {\n
    \           result += i;\n            if (i < n) result += \" \";\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        char[] buf = new char[16 * 1024];\n        string result = \"\";\n
    \       long last = n;\n        while (n > 0) {\n            buf[15 - (n & 0x7)]
    = '0';\n            n = n >> 7;\n        }\n        for(int i=buf.Length-1;i>=0;i--)\n
    \           result += buf[i];\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <69c406efc3ab44f1a88fa04fb4bd37ae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <69c406efc3ab44f1a88fa04fb4bd37ae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var results = new StringBuilder();\n        for (var i = 0; i <
    n; i++) {\n            results.Append(i);\n        }\n        return results.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <099d09b080b84b94bdbe889380a77017>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <099d09b080b84b94bdbe889380a77017>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015903
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var seq = new List<long>(n > 0 ? 1 : (long) -1);\n        while
    (n-- > 0)\n            seq.Add(n++);\n        return string.Join(\" \", seq.ToArray());\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_axc_0f.cs(15,34): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        string s = string.Empty;\n
    \       long i = n;\n        do {\n            s = Convert.ToString(i).PadRight(10);\n
    \           sb.Append(s);\n            i = i - 1;\n        } while (i>0);\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0ea0551591bd487a8612725ba7e640df>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0ea0551591bd487a8612725ba7e640df>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string result = \"\";\n        for (int i = 0; i < n; i++) {\n            result
    += i + \" \";\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba9aa1a424a043efa9dfb829ad836a83>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba9aa1a424a043efa9dfb829ad836a83>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var result = new StringBuilder();\n        Enumerable.Range(0, n).ToList().ForEach(x
    => result.Append(x.ToString()));\n        return result.ToString();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzz6yprox.cs(16,29): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015903
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var result = \"\";\n        do {\n            result += n.ToString();\n
    \           n--;\n        } while (n != 0);\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1660015908
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        for (long i = 0; i < n; ++i) {\n            s
    += ((long)i);\n        }\n        return s;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <34fac490161e42e4a470fddcd880886f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <34fac490161e42e4a470fddcd880886f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0;
    i < n; i++) {\n            sb.Append((i % 10).ToString());\n            sb.Append(\"
    \");\n        }\n        return sb.ToString();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9feb66b7b826453f9ee3e5843e96aea0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9feb66b7b826453f9ee3e5843e96aea0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var sb = new StringBuilder();\n        for (long i = 0; i < n; i++)
    {\n            sb.Append((char)('a' + i));\n        }\n        return sb.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3e2e2423cbbb471a9c274cf53d6e7495>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3e2e2423cbbb471a9c274cf53d6e7495>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        char[] buffer = new char[64];\n        char[] digits = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\".ToCharArray();\n
    \       BigInteger b = BigInteger.ValueOf(n);\n        BigInteger one = BigInteger.One;\n
    \       BigInteger two = BigInteger.Two;\n        BigInteger next = two;\n        for
    (int i = 0; i < buffer.Length; i++) {\n            buffer[i] = digits[(next.ToBitArray()
    >> i) & 1];\n            next = next.Multiply(two);\n        }\n        string
    s = String.Join(\" \", buffer);\n        if (s.Length > 20)\n            throw
    new Exception(\"Can't generate long sequence of numbers longer than 20 characters.\");\n
    \       return s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfnq1q89v.cs(17,35): error CS0117: ''BigInteger'' does not contain a definition
    for ''ValueOf''

    /tmp/tmpfnq1q89v.cs(19,37): error CS0117: ''BigInteger'' does not contain a definition
    for ''Two''

    /tmp/tmpfnq1q89v.cs(22,38): error CS1061: ''BigInteger'' does not contain a definition
    for ''ToBitArray'' and no accessible extension method ''ToBitArray'' accepting
    a first argument of type ''BigInteger'' could be found (are you missing a using
    directive or an assembly reference?)

    /tmp/tmpfnq1q89v.cs(23,25): error CS7036: There is no argument given that corresponds
    to the required formal parameter ''right'' of ''BigInteger.Multiply(BigInteger,
    BigInteger)''

    '
  timestamp: 1660015904
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        List<byte> data = new List<byte>();\n        while (n > 0)\n            data.Add(Convert.ToByte(n));\n
    \       return String.Join(\" \", data.Select((x, i) => Convert.ToString(x, 2).PadLeft(8,
    '0').PadRight(8, '0') + i.ToString().PadLeft(2, '0')).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b9719e5810614408b30a0595831f86e0>:0
    \n"
  stdout: None
  timestamp: 1660015909
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string result = \"\";\n        for (int i = 0; i <= n; i++) {\n
    \           if (i == n) {\n                result += \" \" + i;\n            }
    else {\n                result += \" \" + i;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a7b532563cff4dab9d87c8096388c512>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a7b532563cff4dab9d87c8096388c512>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var result = new StringBuilder();\n        string str;\n        for
    (int i = 1; i <= n; i++)\n            str = String.Format(\"{0} \", i);\n        result.Append(str);\n
    \       return result.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdpzihugc.cs(19,23): error CS0165: Use of unassigned local variable ''str''

    '
  timestamp: 1660015903
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        for (long i = 0; i < n; ++i) {\n            s
    += ((i > 0) ? \" \" : \"\") + i;\n        }\n        return s;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4762f6d678aa4c9ea9f849ba32802f56>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4762f6d678aa4c9ea9f849ba32802f56>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var sb = new StringBuilder();\n        long x = n;\n        do {\n
    \           sb.Append(x);\n            x++;\n        } while (x * x <= n);\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d3bf2013c85448e2b1f22aafd4207410>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d3bf2013c85448e2b1f22aafd4207410>:0
    \n"
  stdout: ''
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        long counter =
    0;\n        while (n-- != 0) {\n            counter++;\n            sb.Append(counter);\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ae575b70b6a546389457436c5c3f1db4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ae575b70b6a546389457436c5c3f1db4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        char[] buffer = new char[(int)Math.Floor(Math.Log10(n)) + 1];\n
    \       int pos = 0;\n        while (n) {\n            buffer[pos] = n % 10 +
    '0';\n            n /= 10;\n            ++pos;\n        }\n        if (buffer.Length
    <= 0)\n            buffer.Length = 1;\n        return new string(buffer).Trim();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptgxck1_8.cs(17,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    /tmp/tmptgxck1_8.cs(18,27): error CS0266: Cannot implicitly convert type ''long''
    to ''char''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptgxck1_8.cs(23,13): error CS0200: Property or indexer ''Array.Length''
    cannot be assigned to -- it is read only

    '
  timestamp: 1660015904
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var buffer = new StringBuilder();\n        var digits = new BigInteger(n.ToString());\n
    \       var currentDigit = 1;\n        foreach (var digit in digits) {\n            if
    (digit == 0) {\n                continue;\n            }\n            if (digit.Equals(0))
    {\n                buffer.Append('0');\n            } else {\n                if
    (digit < currentDigit) {\n                    buffer.Append(currentDigit.ToString());\n
    \               }\n                buffer.Append(digit.ToString());\n            }\n
    \           currentDigit++;\n        }\n        return buffer.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkzunzuf3.cs(16,37): error CS1503: Argument 1: cannot convert from ''string''
    to ''int''

    /tmp/tmpkzunzuf3.cs(18,31): error CS1579: foreach statement cannot operate on
    variables of type ''BigInteger'' because ''BigInteger'' does not contain a public
    instance definition for ''GetEnumerator''

    '
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        for(long i = 0; i < n; i++) {\n            s
    = s + \" \" + i;\n        }\n        return s.Trim();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66b17337a67e4118b6c7e521d281d127>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <66b17337a67e4118b6c7e521d281d127>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        if (n == 0L)\n            return \"0\";\n\n        if (n <= 10L)
    {\n            return ((string)((new string((n >> 6), (n >> 6) - \"0\", \"0\")))).TrimEnd('0');\n
    \       }\n\n        // We need space to handle numbers > 10 digits\n        long
    temp = n;\n        string ret = \"\";\n        long temp2 = 1;\n        bool done
    = false;\n        do {\n            string s = temp.ToString();\n            if
    (s.Length > 10)\n                s = s.Substring(0, 10);\n            string t
    = ((string)((new string((n >> 6), (n >> 6) - \"0\", \"0\")))).TrimEnd('0');\n
    \           if (t.Length > 10)\n                t = t.Substring(0, 10);\n            done
    |= s == t;\n            if (done)\n                break;\n            temp =
    temp2;\n            temp2 = temp * 10;\n        } while (temp != temp2);\n        while
    (temp2 != temp) {\n            if (temp > temp2) {\n                temp = temp2;\n
    \           }\n            temp2 /= 10;\n        }\n\n        int k = 0;\n        string
    s = \"\";\n        while (temp != 0L) {\n            s += temp.ToString();\n            temp
    /= 10;\n            if (++k > 9)\n                s = \"\";\n        }\n        if
    (s.Length > 0)\n            s = \"0 \" + s;\n        return s;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi_xpwpop.cs(19,52): error CS0019: Operator ''-'' cannot be applied to
    operands of type ''long'' and ''string''

    /tmp/tmpi_xpwpop.cs(19,43): error CS1503: Argument 1: cannot convert from ''long''
    to ''char[]''

    /tmp/tmpi_xpwpop.cs(19,68): error CS1503: Argument 3: cannot convert from ''string''
    to ''int''

    /tmp/tmpi_xpwpop.cs(28,20): error CS0136: A local or parameter named ''s'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpi_xpwpop.cs(31,56): error CS0019: Operator ''-'' cannot be applied to
    operands of type ''long'' and ''string''

    /tmp/tmpi_xpwpop.cs(31,47): error CS1503: Argument 1: cannot convert from ''long''
    to ''char[]''

    /tmp/tmpi_xpwpop.cs(31,72): error CS1503: Argument 3: cannot convert from ''string''
    to ''int''

    /tmp/tmpi_xpwpop.cs(24,16): warning CS0219: The variable ''ret'' is assigned but
    its value is never used

    '
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        for (int i = 0; i < n; i++) {\n            s
    += i;\n        }\n        return s;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <db8896e07ee1450392eefc7eb2c9b403>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <db8896e07ee1450392eefc7eb2c9b403>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        List<long> list = new List<long>();\n        while (n != 0) {\n
    \           list.Add(n % 10);\n            n /= 10;\n        }\n        return
    list.Aggregate(\"\", (current, val) => current + ((val == 0) ? \"0\" : val.ToString())
    + \" \") + string.Join(\" \", list.Take(list.Count - 1));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3ed5a1759c2d4e2094569843bad1115e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3ed5a1759c2d4e2094569843bad1115e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var charArray = new char[100];\n        var buffer = new StringBuilder();\n
    \       for (long i = n; i > 0; i /= 10) {\n            charArray[(int)(i/10)]
    = (char)('0' + i % 10);\n        }\n        buffer.Append(charArray[(int)n]);\n
    \       return buffer.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ce6a9f7770414249b6b6a29a7b93edbe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ce6a9f7770414249b6b6a29a7b93edbe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for(long i = 0;
    i <= n; ++i)\n            sb.Append(i);\n        return sb.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0bd3e2080d964bdea9fb3733ead03ff8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0bd3e2080d964bdea9fb3733ead03ff8>:0
    \n"
  stdout: ''
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder ret = new StringBuilder();\n        for (long i =
    0; i < n; ++i)\n            ret.Append(i);\n        return ret.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c22e4d48cb124ea3ac2b3070f876ea8e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c22e4d48cb124ea3ac2b3070f876ea8e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return String.Join(\" \", Enumerable.Range(0, n).Select(i => i.ToString()));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp756gp31l.cs(15,53): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return string.Join(\" \", Enumerable.Range(0, (int)n).Select(x =>
    x.ToString()));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e1cdb7136fe54231a645c41679801392>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e1cdb7136fe54231a645c41679801392>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder b = new StringBuilder();\n        for(int i=0;i<n;i++)
    {\n            b.Append(i+1).Append(\" \");\n        }\n        return b.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a9f9d7f741b84f13afe4c32b4ac8cea5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a9f9d7f741b84f13afe4c32b4ac8cea5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var results = new List<string>();\n        for (var i = 0; i <=
    n; i++) {\n            results.Add(string.Format(\"{0}\", i));\n        }\n        return
    string.Join(\" \", results);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = n.ToString();\n        while (s.Length < 20) {\n            s
    = \" \" + s;\n        }\n        return s;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <782b1d8446494091a3fd26edce39b614>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <782b1d8446494091a3fd26edce39b614>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var sb = new StringBuilder();\n        var s = 1;\n        for (long
    i = 0; i < n; i++) {\n            sb.Append(s.ToString());\n            s = s
    * 10;\n        }\n        return sb.ToString();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <67cd459a2cd54208bb491f03ff17e0f1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <67cd459a2cd54208bb491f03ff17e0f1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        Debug.Assert(n > 0L);\n        var r = new StringBuilder();\n        r.Append(\"0\");\n
    \       while (n-- > 0) {\n            r.Append(\" \" + (n / 10));\n        }\n
    \       return r.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.StringSequence (System.Int64 n) [0x00000] in <53dd8c4d10624f77a516199db128575b>:0
    \n  at Problem.Main (System.String[] args) [0x00000] in <53dd8c4d10624f77a516199db128575b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53dd8c4d10624f77a516199db128575b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe"
  stdout: ''
  timestamp: 1660015904
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var digits = Enumerable.Range(0, n - 1).Select(i => Convert.ToString(n,
    i)).ToArray();\n        return string.Join(\" \", digits.Skip(1));\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiu0juarj.cs(15,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015904
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        long total = 0;\n        StringBuilder res = new StringBuilder();\n
    \       while (n-- != 0)\n            total += n;\n        string s = string.Join(\"
    \", Enumerable.Range(0, total).Select(x => x.ToString()));\n        res.Append(s);\n
    \       return res.ToString();\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwca4tk61.cs(19,57): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015904
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        const string digits = \"0123456789\";\n        var buffer = new
    StringBuilder();\n        for (int index = 0; index <= n; index++)\n            buffer.Append(digits[(int)(n
    % (long)Math.Pow(10, digits.Length))]);\n        return buffer.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50ae8798d6ca4fa69f43a076177c2076>:0
    \n\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the
    bounds of the array.\n  at Problem.StringSequence (System.Int64 n) [0x0002b] in
    <50ae8798d6ca4fa69f43a076177c2076>:0 \n  at Problem.Main (System.String[] args)
    [0x0002f] in <50ae8798d6ca4fa69f43a076177c2076>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.IndexOutOfRangeException: Index was outside the bounds of the array.\n
    \ at Problem.StringSequence (System.Int64 n) [0x0002b] in <50ae8798d6ca4fa69f43a076177c2076>:0
    \n  at Problem.Main (System.String[] args) [0x0002f] in <50ae8798d6ca4fa69f43a076177c2076>:0
    \n"
  stdout: ''
  timestamp: 1660015905
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        Enumerable.Range(0,
    n).ToList().ForEach(i => sb.Append(i));\n        return sb.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp23j42mp0.cs(16,29): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015904
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        while (n > 0) {\n            s = ((n %
    10) + s).Trim() + \" \" + (n % 10).ToString();\n            n /= 10;\n        }\n
    \       return s;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af738fbbf7104b44aad203252d74539f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af738fbbf7104b44aad203252d74539f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015905
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var s = \"\";\n        for (int i = 0; i < n; i++) {\n            s
    += i;\n            s += \" \";\n        }\n        return s;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f1af5d42627740439985f6362757d49c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f1af5d42627740439985f6362757d49c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015905
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        List<int> numbers = new List<int>();\n        for (long i = 0; i
    < n; ++i)\n            numbers.Add(i);\n        numbers.Reverse();\n        return
    string.Join(\" \", numbers.Select(n => n.ToString()).ToArray());\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp82eu57dw.cs(17,25): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015905
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return String.Join(\" \", Enumerable.Range(0, n).Select(i => i.ToString()));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp756gp31l.cs(15,53): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015902
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        long x = 0;\n        string res = \"\";\n        while (n > 0) {\n
    \           res += x.ToString();\n            if (n % 2 == 0) x += 1;\n            n
    = (long) n / 2;\n        }\n        if (res == \"\")\n            res = \"0\";\n
    \       return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f20d92c03fed4789be5ce1e46e988ab5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f20d92c03fed4789be5ce1e46e988ab5>:0
    \n"
  stdout: ''
  timestamp: 1660015905
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        char[] chars = new char[(int) n];\n        int pos = 0;\n        while
    (pos < n) {\n            int remainder = (int) (n - pos);\n            while (true)
    {\n                chars[pos] = remainder == 0L ? '0' : remainder % 10L + '0';\n
    \               remainder = remainder / 10L;\n                if (remainder ==
    0L)\n                    break;\n            }\n            ++pos;\n        }\n
    \       return new string(chars);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp45ztpjvh.cs(20,30): error CS0266: Cannot implicitly convert type ''long''
    to ''char''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp45ztpjvh.cs(21,29): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015905
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = string.Empty;\n        while (n-- > 0) {\n            s
    += \" \" + n;\n        }\n        return s;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0954ebc5d5b041fd8080563fe5ed61d4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0954ebc5d5b041fd8080563fe5ed61d4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015905
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return Enumerable.Range(0, n).Select(x => x.ToString()).Join(\"
    \");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpka945jzw.cs(15,36): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015905
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return String.Join(\" \", Enumerable.Range(0, (int)n).Select(x =>
    (long)x).ToArray());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dbae1591de9f43309f6ab81fd9c336f8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dbae1591de9f43309f6ab81fd9c336f8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015905
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        long step = (1L << 32) / n;\n        StringBuilder buf = new StringBuilder();\n
    \       long i = n;\n        do {\n            buf.Append(String.Format(\"{0}\",
    i));\n            i += step;\n        } while (i-- > 0);\n        return buf.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.DivideByZeroException: Attempted to divide
    by zero.\n  at Problem.StringSequence (System.Int64 n) [0x00001] in <b89e9c5c32e9404d9c93f41040fd593f>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <b89e9c5c32e9404d9c93f41040fd593f>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.DivideByZeroException: Attempted to
    divide by zero.\n  at Problem.StringSequence (System.Int64 n) [0x00001] in <b89e9c5c32e9404d9c93f41040fd593f>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <b89e9c5c32e9404d9c93f41040fd593f>:0
    \n"
  stdout: ''
  timestamp: 1660015905
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var sb = new StringBuilder();\n        var i = 0;\n        while
    (i < n) {\n            sb.Append(i % 10 + (i < 10 ? \" \" : \"\"));\n            i++;\n
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29810e5324864fac91d8488a5f73d343>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29810e5324864fac91d8488a5f73d343>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015905
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string s = \"\";\n        while (n-- > 0) {\n            s = s +
    n.ToString();\n        }\n        return s;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <37e9a663357b49e9b8839518b4ff0ec2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <37e9a663357b49e9b8839518b4ff0ec2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015905
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        return string.Join(\" \", Enumerable.Range(0, n)\n            .Select(i
    => string.Format(\"{0}\", i)));\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0
    1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6 7
    8 9 10\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphx8_o16t.cs(15,53): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1660015905
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder s = new StringBuilder();\n        for(long i=n; i<=n;
    i++) {\n            s.Append(i).Append(\" \");\n        }\n        return s.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <36c521cb28fc4534aa8c0a662c402251>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <36c521cb28fc4534aa8c0a662c402251>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015905
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        var result = new StringBuilder();\n        for (var i = 0; i < n;
    i++) {\n            result.Append(i + 1);\n            result.Append(\" \");\n
    \       }\n        result.AppendLine();\n        return result.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f0340aba47c04f1fab6b6d721b16e632>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f0340aba47c04f1fab6b6d721b16e632>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015905
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        StringBuilder sb = new StringBuilder();\n        for (long i = 0;
    i <= n; i++) {\n            sb.Append(i).Append(' ');\n        }\n        return
    sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b2c84d7e6b7a4668a04495f2e4064bd8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b2c84d7e6b7a4668a04495f2e4064bd8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015905
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return a string containing space-delimited numbers starting
    from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n    //
    >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static string StringSequence(long
    n) {\n        string result = \"\";\n        for (int i = 0; i < n; i++) {\n            result
    += \" \" + i;\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n
    \   Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0
    1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <56ea6b83bb5b4a7284daea5c230c9809>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <56ea6b83bb5b4a7284daea5c230c9809>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660015905

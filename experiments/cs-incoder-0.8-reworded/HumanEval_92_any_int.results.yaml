language: cs
name: HumanEval_92_any_int
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x == y + z) || (x == y - z) || (x == z));\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <982a4c041cf9470d8044cd7e19e9f452>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <982a4c041cf9470d8044cd7e19e9f452>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        float
    sum = x + y + z;\n        return Math.Round(sum) == sum;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4aeab971ea724c55bd745af25be7b006>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4aeab971ea724c55bd745af25be7b006>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (System.Math.Abs(x - y) <= 1) && (System.Math.Abs(x - z) <= 1) && (System.Math.Abs(y
    - z) <= 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2900ac8290304012b813797c67468fa6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2900ac8290304012b813797c67468fa6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (x == y || x == z || y == z);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <045804ec55cb41a2b4e0e206945fd7be>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <045804ec55cb41a2b4e0e206945fd7be>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        bool
    result = true;\n\n        float xy = x * y;\n        float yz = y * z;\n        float
    xz = x * z;\n        if (xy == yz && xy == xz && !(x == y || y == z || x == z))
    {\n            result = true;\n        } else result = false;\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7c1f0fd5879c465883f79c16f00a7cbb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7c1f0fd5879c465883f79c16f00a7cbb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    x.ToInt64() == y.ToInt64() && y.ToInt64() == z.ToInt64();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy53znixk.cs(22,18): error CS1061: ''float'' does not contain a definition
    for ''ToInt64'' and no accessible extension method ''ToInt64'' accepting a first
    argument of type ''float'' could be found (are you missing a using directive or
    an assembly reference?)

    /tmp/tmpy53znixk.cs(22,33): error CS1061: ''float'' does not contain a definition
    for ''ToInt64'' and no accessible extension method ''ToInt64'' accepting a first
    argument of type ''float'' could be found (are you missing a using directive or
    an assembly reference?)

    /tmp/tmpy53znixk.cs(22,48): error CS1061: ''float'' does not contain a definition
    for ''ToInt64'' and no accessible extension method ''ToInt64'' accepting a first
    argument of type ''float'' could be found (are you missing a using directive or
    an assembly reference?)

    /tmp/tmpy53znixk.cs(22,63): error CS1061: ''float'' does not contain a definition
    for ''ToInt64'' and no accessible extension method ''ToInt64'' accepting a first
    argument of type ''float'' could be found (are you missing a using directive or
    an assembly reference?)

    '
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x == x + y) && (x == y + z)) || ((x != x) && (y == x) && (z == y));\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8a7692b40d96471fa3d7bc5be66c13be>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8a7692b40d96471fa3d7bc5be66c13be>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (x == ((float)x + y) || (x == ((float)y - x) || (x == ((float)x - y) && y == ((float)z
    - x)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps790dykv.cs(22,109): error CS1026: ) expected

    '
  timestamp: 1660016063
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    ((x % y == 0) && (y % z == 0) && (z % (x + y) == 0)) {\n            return true;\n
    \       } else {\n            return false;\n        }\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <06b1fd62d6114d96b09e51e21aa1b7dc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <06b1fd62d6114d96b09e51e21aa1b7dc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        float
    sum = x + y + z;\n        bool res = false;\n        if (sum == Math.Floor(sum))
    // if sum is integer, then it must be equal to x,y,z\n            res = true;\n
    \       else\n            res = false;\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9adf59cedabc4a33b0fee7d54d407c69>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9adf59cedabc4a33b0fee7d54d407c69>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    Test for integers\n        if (Math.Abs(x - y) <= 1E-6 && Math.Abs(x - z) <= 1E-6)
    {\n            // Are x and y equal? If so, are x and z equal? If so, any one
    number is equal to both of them\n            return Math.Abs(x - z) == Math.Abs(x
    - y);\n        } else {\n            // Are x and y not equal? If so, are x and
    z not equal? If so, any one number is not equal to both of them\n            return
    Math.Abs(x - y) != Math.Abs(x - z);\n        }\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39b5a400eafd41a8bc13923f707b4e39>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39b5a400eafd41a8bc13923f707b4e39>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    TODO: Your code here\n        if (Math.Abs(Math.Round(x)) >= x && Math.Abs(Math.Round(y))
    >= y && Math.Abs(Math.Round(z)) >= z)\n            return true;\n        else\n
    \           return false;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35a56648367242e9a49e63179ec98233>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35a56648367242e9a49e63179ec98233>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        bool
    any = false;\n        if (x == y || x == z) {\n            if (x == x) {\n                any
    = true;\n            }\n        }\n        return any;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <182252a50cb04985b16b8e3095db2fc0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <182252a50cb04985b16b8e3095db2fc0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (x == y || y == z) return true;\n        if (x == z) return true;\n        if
    (x == (float)x && y == (float)y && z == (float)z) return true;\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4e1ec5afbc394e19a8ef93c18353f6a3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4e1ec5afbc394e19a8ef93c18353f6a3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x - y) <= 1 && Math.Abs(x - z) <= 1 && Math.Abs(y - z) <= 1;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60009cfee33b402dac4f9f7f07ced488>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60009cfee33b402dac4f9f7f07ced488>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x - y + z - Math.Round(y * z)) < 0.0001f;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <735276f0ebca4b3b99729a26fc991198>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <735276f0ebca4b3b99729a26fc991198>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((int)x + (int)y + (int)z) == ((int)x + y + (int)z);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ddd7043ba1f7494cb018b1e1da62fa05>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ddd7043ba1f7494cb018b1e1da62fa05>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x - y + z) >= 0.0;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <27da54c1e7694e998d6d09c055abc9d0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <27da54c1e7694e998d6d09c055abc9d0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        bool
    ret = false;\n        if ((Math.Abs(x) == x) && (Math.Abs(y) == y) && (Math.Abs(z)
    == z)) {\n            ret = true;\n        }\n        return ret;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9324e62243104d2399af5f8bff61392e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9324e62243104d2399af5f8bff61392e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        float
    sum = (x + y + z);\n        if (sum == (float)Math.Round(sum)) {\n            return
    (true);\n        } else {\n            return (false);\n        }\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <658485eebe9040fda546425c0cd1d9a5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <658485eebe9040fda546425c0cd1d9a5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        Debug.WriteLine(\"AnyInt:
    \" + x + \" + \" + y + \" + \" + z);\n        return (x == ((int)x + y)) || (x
    == ((int)x + z)) || (y == ((int)y + z));\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "AnyInt: 2 + 3 + 1\nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2526143dadbf46d5a3b516c1c5eed08b>:0
    \nAnyInt: 2.5 + 2 + 3\nAnyInt: 1.5 + 5 + 3.5\nAnyInt: 2 + 6 + 2\nAnyInt: 4 + 2
    + 2\nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2526143dadbf46d5a3b516c1c5eed08b>:0
    \nAnyInt: 2.2 + 2.2 + 2.2\nAnyInt: -4 + 6 + 2\nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail ("
  stdout: ''
  timestamp: 1660016064
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (x == y || x == z || y == z) \n        && (x.ToString(CultureInfo.InvariantCulture).Equals(\"3\")
    || \n            y.ToString(CultureInfo.InvariantCulture).Equals(\"3\") || \n
    \           z.ToString(CultureInfo.InvariantCulture).Equals(\"3\"));\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0xaupu7s.cs(23,24): error CS0103: The name ''CultureInfo'' does not exist
    in the current context

    /tmp/tmp0xaupu7s.cs(24,24): error CS0103: The name ''CultureInfo'' does not exist
    in the current context

    /tmp/tmp0xaupu7s.cs(25,24): error CS0103: The name ''CultureInfo'' does not exist
    in the current context

    '
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(x) > Math.Abs(y) && Math.Abs(x) > Math.Abs(z))\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0cb76ca578de415a813ba0b14bcf1f9f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0cb76ca578de415a813ba0b14bcf1f9f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        double
    xd = (double)x;\n        double yd = (double)y;\n        double zd = (double)z;\n
    \       double result = xd + yd + zd;\n        if (Math.Floor(result) == result)
    {\n            long resultLong = Convert.ToInt64(result);\n            if (resultLong
    == result) Console.WriteLine(\"One of them is int\");\n            if (resultLong
    != result) Console.WriteLine(\"None of them is int\");\n        }\n        else
    {\n            Console.WriteLine(\"They are all not int\");\n        }\n        Console.ReadKey();\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6744e85213014854bdd3989ee3c57415>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6744e85213014854bdd3989ee3c57415>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: 'One of them is int

    They are all not int

    One of them is int

    One of them is int

    One of them is int

    They are all not int

    One of them is int

    One of them is int

    One of them is int

    One of them is int

    '
  timestamp: 1660016064
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (x != (float)y && x != (float)z) return false;\n        if (y != (float)x && y
    != (float)z) return false;\n        if (z != (float)x && z != (float)y) return
    false;\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c09a3176dcde471a80e85930c2cfac2e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c09a3176dcde471a80e85930c2cfac2e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x==(int)x || x==(int)x+1 || x==(int)x-1)\n            && (y==(int)y || y==(int)y+1
    || y==(int)y-1)\n            && (z==(int)z || z==(int)z+1 || z==(int)z-1));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a22e03fd1ebb4d0ba6b798c1d413e89c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a22e03fd1ebb4d0ba6b798c1d413e89c>:0
    \n"
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x - y) == Math.Abs(x) && Math.Abs(x - z) == Math.Abs(y) && Math.Abs(y
    - z) == Math.Abs(x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fba7e677b224492ead93add2ff806b60>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fba7e677b224492ead93add2ff806b60>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (int)x == (int)y || (int)x == (int)z && (int)y == (int)z;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <06cbb69f8e7b4cae8a31ad65bc76c94d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <06cbb69f8e7b4cae8a31ad65bc76c94d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        double
    xx = Math.Abs(x), yy = Math.Abs(y), zz = Math.Abs(z);\n        if (xx == 0 ||
    yy == 0 || zz == 0) return false;\n        return (x == Math.Round(xx) && y ==
    Math.Round(yy) && z == Math.Round(zz));\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1d3470882b7849479999c9819f35fd2d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1d3470882b7849479999c9819f35fd2d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        var
    sum = x + y;\n        var a = (int) x;\n        var b = (int) y;\n        var
    c = (int) z;\n        return (sum == a) || (sum == b) || (sum == c);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a1ec371f971346219e0a310e3e8ef7c2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a1ec371f971346219e0a310e3e8ef7c2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x == y && x == z) || (x == 0 && y == 0 && z == 0)) ? true : false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <189ac7eebff3455ab87b29396d722dd9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <189ac7eebff3455ab87b29396d722dd9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        long
    xi = BitConverter.ToInt64Bits(x);\n        long yi = BitConverter.ToInt64Bits(y);\n
    \       long zi = BitConverter.ToInt64Bits(z);\n        long sum = BitConverter.ToInt64Bits(x)
    + BitConverter.ToInt64Bits(y) + BitConverter.ToInt64Bits(z);\n        if (xi ==
    sum) return true;\n        if (xi != sum) return false;\n        if (yi == sum)
    return true;\n        if (yi != sum) return false;\n        if (zi == sum) return
    true;\n        if (zi != sum) return false;\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptrcji3cv.cs(22,32): error CS0117: ''BitConverter'' does not contain a
    definition for ''ToInt64Bits''

    /tmp/tmptrcji3cv.cs(23,32): error CS0117: ''BitConverter'' does not contain a
    definition for ''ToInt64Bits''

    /tmp/tmptrcji3cv.cs(24,32): error CS0117: ''BitConverter'' does not contain a
    definition for ''ToInt64Bits''

    /tmp/tmptrcji3cv.cs(25,33): error CS0117: ''BitConverter'' does not contain a
    definition for ''ToInt64Bits''

    /tmp/tmptrcji3cv.cs(25,63): error CS0117: ''BitConverter'' does not contain a
    definition for ''ToInt64Bits''

    /tmp/tmptrcji3cv.cs(25,93): error CS0117: ''BitConverter'' does not contain a
    definition for ''ToInt64Bits''

    '
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (Math.Abs(x) + Math.Abs(y) + Math.Abs(z)) % 1 == 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72174ec3311943a685bd3745b49b661a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72174ec3311943a685bd3745b49b661a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        float
    sum1 = x + y;\n        float sum2 = z + y;\n        return sum1 == sum2;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f82cef205304061a38c4b8ac4391000>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f82cef205304061a38c4b8ac4391000>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        Debug.Assert(x
    != 0 || y == 0 || z != 0);\n        return (x == y || x == z);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <70e93fd3f2b3409d8ca8eb1ad68dd925>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <70e93fd3f2b3409d8ca8eb1ad68dd925>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    Your code here\n        return (((x - y) == (z + x)) && (Math.Abs(x - z) == Math.Abs(y
    - z)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7477634cbf1e49f58b1f8b7aedea36cc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7477634cbf1e49f58b1f8b7aedea36cc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        bool
    result = false;\n        if ((x==0) || (y==0) || (z==0))\n            return result;\n
    \       else\n            result = ((x==y) || (x==z) || (y==z));\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9a832189ad3d447db5cca00deaadc461>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9a832189ad3d447db5cca00deaadc461>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (Math.Abs(x + y - z) == 1);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <61a2ace3d18d43bc84f55937cc5fc00b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <61a2ace3d18d43bc84f55937cc5fc00b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        var
    nums = new[] { x, y, z };\n        var n = nums.Sum(n => (int)n);\n        var
    sum = nums.Sum();\n        return n == sum && nums.All(n => n == (int) n);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d60979a85019465da95f28209a419ab5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d60979a85019465da95f28209a419ab5>:0
    \n"
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(x) + Math.Abs(y) + Math.Abs(z) < 0.0001) {\n            Console.WriteLine(\"One
    or more of the values are close to zero\");\n            return false;\n        }\n
    \       if (x > Math.Abs(y)) {\n            x = Math.Abs(y);\n        }\n        if
    (y > Math.Abs(z)) {\n            y = Math.Abs(z);\n        }\n        if (Math.Abs(x)
    > Math.Abs(y)) {\n            x = Math.Abs(y);\n        }\n        if (Math.Abs(y)
    > Math.Abs(z)) {\n            y = Math.Abs(z);\n        }\n        return ((Math.Abs(x)
    + Math.Abs(y)) % 1 == 0 || Math.Abs(x) + Math.Abs(z) == Math.Abs(y));\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8a130ec80c4145b783a839058c81c13c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8a130ec80c4145b783a839058c81c13c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        Debug.Assert(x
    >= 0);\n        Debug.Assert(y >= 0);\n        Debug.Assert(z >= 0);\n        if
    (z == 0) return false;\n        if (x == y && y == z) return true;\n        return
    (((x * y) + z) % x == 0) && ((y % z == 0) && (z % y == 0));\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a6ee9b0a85074d01b276c1c458933969>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a6ee9b0a85074d01b276c1c458933969>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x) == Math.Abs(y) && Math.Abs(x) == Math.Abs(z) && Math.Abs(x) == (int)x;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a8de1cc2e3841aa8622a8b844d828a4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a8de1cc2e3841aa8622a8b844d828a4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    (x + (y / z)) % z == x / z (the whole number)\n        // or just (x / z)\n        return
    (x + y / z) % z == x / z;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e3af01f07d6a498c9a6b6f4fe8f09fdb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e3af01f07d6a498c9a6b6f4fe8f09fdb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(x - y) <= 0.01f && Math.Abs(y - z) <= 0.01f && Math.Abs(z - x) <= 0.01f)
    {\n            return true;\n        }\n        else {\n            return false;\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19508fc7f98c41cab1d2329de6a6ebc1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19508fc7f98c41cab1d2329de6a6ebc1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    Check each of the numbers to see if they are integers\n        if ((x % 1 == 0)
    && (y % 1 == 0) && (z % 1 == 0)) {\n            return true;\n        } else {\n
    \           return false;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd72b32af75d4a55a929661d8345b88c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd72b32af75d4a55a929661d8345b88c>:0
    \n"
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    Write your code here.\n        return Math.Abs(x - z) <= (Math.Abs(x - y) + Math.Abs(x
    - z)) &&\n            Math.Abs(y - z) <= (Math.Abs(y - x) + Math.Abs(y - z));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21ebe9343ca34925ba38955d973dd059>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21ebe9343ca34925ba38955d973dd059>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        double
    sum = (double)x + y + z;\n        return double.IsNaN(sum) || (int)sum == sum;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <63047045c9334074936a9961b46b7902>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <63047045c9334074936a9961b46b7902>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (Math.Abs(x - y) <= Math.Abs(x - z)) || (Math.Abs(y - z) <= Math.Abs(x - y));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a3312520e4554465965625f43b9d2726>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a3312520e4554465965625f43b9d2726>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Int32.TryParse(x.ToString()) && Int32.TryParse(y.ToString()) && Int32.TryParse(z.ToString()))
    {\n            if (x == y || x == z || y == z) return true;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsp87r7uz.cs(22,19): error CS1501: No overload for method ''TryParse''
    takes 1 arguments

    /tmp/tmpsp87r7uz.cs(22,51): error CS1501: No overload for method ''TryParse''
    takes 1 arguments

    /tmp/tmpsp87r7uz.cs(22,83): error CS1501: No overload for method ''TryParse''
    takes 1 arguments

    '
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        double
    sum = (x + y + z);\n        if (sum != sum)\n            return false;\n        if
    (x + y == z) {\n            return true;\n        } else if (x == z) {\n            return
    true;\n        } else if (y == z) {\n            return true;\n        } else
    if (x != z) {\n            return false;\n        } else {\n            return
    false;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6d6986e0a1ec479486faa03361b4490c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6d6986e0a1ec479486faa03361b4490c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    x != y && x != z && y != z;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e6e9b42969c4cab9a92d350c29eceaa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e6e9b42969c4cab9a92d350c29eceaa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016065
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        var
    sum = x + y + z;\n        if (sum == 0)\n            return false;\n        if
    (x < 0 || y < 0 || z < 0) {\n            throw new System.Diagnostics.StackOverflowException();\n
    \       }\n        if (x + y == z && (x % 1 == 0 || y % 1 == 0 || z % 1 == 0))\n
    \           return true;\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_3uem7h2.cs(26,42): error CS0234: The type or namespace name ''StackOverflowException''
    does not exist in the namespace ''System.Diagnostics'' (are you missing an assembly
    reference?)

    '
  timestamp: 1660016065
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        bool
    ans = false;\n\n        var f1 = ((int)x).CompareTo(y);\n        var f2 = ((int)x).CompareTo(z);\n
    \       ans = f1 == 0 || f2 == 0;\n\n        if (ans) \n            return true;\n\n
    \       f1 = ((int)y).CompareTo(z);\n        f2 = ((int)z).CompareTo(x);\n        ans
    = f1 == 0 || f2 == 0;\n\n        if (ans) \n            return true;\n\n        return
    f1 == 0 || f2 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentException: Object must be of type
    Int32.\n  at System.Int32.CompareTo (System.Object value) [0x00024] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.AnyInt (System.Single x, System.Single y, System.Single z) [0x00006]
    in <454e9ad1c70940e08fbb7bc7f454a788>:0 \n  at Problem.Main (System.String[] args)
    [0x00001] in <454e9ad1c70940e08fbb7bc7f454a788>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.ArgumentException: Object must be of type Int32.\n  at System.Int32.CompareTo
    (System.Object value) [0x00024] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at
    Problem.AnyInt (System.Single x, System.Single y, System.Single z) [0x00006] in
    <454e9ad1c70940e08fbb7bc7f454a788>:0 \n  at Problem.Main (System.String[] args)
    [0x00001] in <454e9ad1c70940e08fbb7bc7f454a788>:0 \n"
  stdout: ''
  timestamp: 1660016065
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        float
    a = (float)Math.Abs(x) + Math.Abs(y);\n        float b = (float)Math.Abs(z);\n
    \       float c = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n        float d
    = Math.Floor(c);\n        float e = Math.Abs(d - c);\n        return (e < float.Epsilon)
    ? true : false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk7p_ph0h.cs(24,19): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpk7p_ph0h.cs(25,19): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        double
    sum = (double) x + y;\n        return (Math.Abs(sum - z) < 0.01) || (Math.Abs(sum
    - z) == 0);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f1acd30df80345faaa86058b74ff9224>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f1acd30df80345faaa86058b74ff9224>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(x) > Math.Abs(y) || Math.Abs(x) > Math.Abs(z) || Math.Abs(y) > Math.Abs(z))\n
    \           return false;\n        int sum = x.ToInt32() + y.ToInt32();\n        return
    sum == z.ToInt32();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoy4we7a7.cs(24,21): error CS1061: ''float'' does not contain a definition
    for ''ToInt32'' and no accessible extension method ''ToInt32'' accepting a first
    argument of type ''float'' could be found (are you missing a using directive or
    an assembly reference?)

    /tmp/tmpoy4we7a7.cs(24,35): error CS1061: ''float'' does not contain a definition
    for ''ToInt32'' and no accessible extension method ''ToInt32'' accepting a first
    argument of type ''float'' could be found (are you missing a using directive or
    an assembly reference?)

    /tmp/tmpoy4we7a7.cs(25,25): error CS1061: ''float'' does not contain a definition
    for ''ToInt32'' and no accessible extension method ''ToInt32'' accepting a first
    argument of type ''float'' could be found (are you missing a using directive or
    an assembly reference?)

    '
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x - y) <= Math.Abs(x) && Math.Abs(x - z) <= Math.Abs(x) && Math.Abs(y
    - z) <= Math.Abs(x);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d386694557fb406ba1098c22e2977995>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d386694557fb406ba1098c22e2977995>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (x != y && y != z && x != z && y != z && z != x)\n            return true;\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <374cc46edcd74cef9bb3f6c1df660b20>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <374cc46edcd74cef9bb3f6c1df660b20>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        float
    sum = x + y + z;\n        if (sum == 0.0f) return false;\n        return z ==
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <34dfefc396344e8aa50da5db74a36433>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <34dfefc396344e8aa50da5db74a36433>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    Get the values using the correct type.\n        var xAsInt = Convert.ToInt32(x);\n
    \       var yAsInt = Convert.ToInt32(y);\n        var zAsInt = Convert.ToInt32(z);\n\n
    \       // Check if all values are integers.\n        if (xAsInt == yAsInt &&
    xAsInt == zAsInt)\n            return true;\n        else\n            return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <45332d25c92c47f7a03df2e279dbd9f3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <45332d25c92c47f7a03df2e279dbd9f3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    x != (float)z && y != (float)z;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a1d56b2f9aa42828ca9d8b0922bd9a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a1d56b2f9aa42828ca9d8b0922bd9a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        var
    f = x + y + z;\n        if (Math.Abs(x) + Math.Abs(y) + Math.Abs(z) != f) {\n
    \           return false;\n        }\n        var f2 = float.Parse(f.ToString());\n
    \       return f2 == x;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d92606aae2bb4f9192b2f1b2e32aaa97>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d92606aae2bb4f9192b2f1b2e32aaa97>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    Use Math.Abs() and Math.Floor() to avoid rounding errors.\n        int xFloor
    = Math.Floor(x);\n        int yFloor = Math.Floor(y);\n        int zFloor = Math.Floor(z);\n
    \       if ((x - xFloor) * (y - yFloor) * (z - zFloor) >= 0) {\n            return
    true;\n        }\n        else {\n            return false;\n        }\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphbe8tptq.cs(23,22): error CS0266: Cannot implicitly convert type ''double''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmphbe8tptq.cs(24,22): error CS0266: Cannot implicitly convert type ''double''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmphbe8tptq.cs(25,22): error CS0266: Cannot implicitly convert type ''double''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660016065
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    Declare variables\n        float fx, fy, fz;\n        bool result = true;\n\n
    \       // Compute first and second terms\n        fx = x;\n        fy = y;\n
    \       fz = z;\n        float fxy = (float)x * y;\n        float fxyz = (float)x
    * z;\n        float fxz = (float)x * z;\n        float fxyz = fxy * z;\n        float
    fxzy = (float)x * y * z;\n        float fxzyx = fxz * y * z;\n        float fxyzy
    = fxz * y * x;\n        float fxyxz = fxy * x * z;\n        float fxyzx = fxz
    * x * y;\n        float fxyxy = fxy * x * x;\n        float fxyzz = fxz * x *
    z;\n        float fxyzxy = fxz * x * y;\n        float fxzyz = fxz * x * y * z;\n
    \       float fxzyxy = fxz * x * y * x;\n        float fxyzyz = fxz * x * y *
    z;\n        float fxyzyxz = fxz * x * y * x;\n        float fxyzyz = fxz * x *
    y * z;\n        float fxyzyxy = fxz * x * y * x;\n        float fxyxyz = fxy *
    x * x * z;\n        float fxzyxz = fxz * x * y * x;\n        float fxyxzz = fxy
    * x * x * z;\n\n        // Compute third and fourth terms\n        float fxzz
    = fxz * z;\n        float fxzzz = fxz * z * z;\n        float fxzzxy = fxz * z
    * x;\n        float fxzzyz = fxz * z * y;\n        float fxzzyxz = fxz * z * x
    * z;\n        float fxzzyxy = fxz * z * x * y;\n        float fxzzyxz = fxz *
    z * x * z * z;\n        float fxzzzyz = fxz * z * z * y;\n        float fxzzzyxy
    = fxz * z * z * x;\n        float fxzzzyxz = fxz * z * z * x * z;\n        float
    fxyzzz = fxy * z * z;\n        float fxyzzxy = fxy * z * x;\n        float fxyzzyz
    = fxy * z * y;\n        float fxyzzyxz = fxy * z * x * z;\n        float fxyzzyxy
    = fxy * z * x * y;\n        float fxyzzyxz = fxy * z * x * z\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpljew4n40.cs(68,41): error CS1002: ; expected

    '
  timestamp: 1660016065
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (x == (float)x.Sum() && y == (float)y.Sum() && z == (float)z.Sum());\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd_01jiqy.cs(22,29): error CS1929: ''float'' does not contain a definition
    for ''Sum'' and the best extension method overload ''ParallelEnumerable.Sum(ParallelQuery<int>)''
    requires a receiver of type ''ParallelQuery<int>''

    /tmp/tmpd_01jiqy.cs(22,52): error CS1929: ''float'' does not contain a definition
    for ''Sum'' and the best extension method overload ''ParallelEnumerable.Sum(ParallelQuery<int>)''
    requires a receiver of type ''ParallelQuery<int>''

    /tmp/tmpd_01jiqy.cs(22,75): error CS1929: ''float'' does not contain a definition
    for ''Sum'' and the best extension method overload ''ParallelEnumerable.Sum(ParallelQuery<int>)''
    requires a receiver of type ''ParallelQuery<int>''

    '
  timestamp: 1660016065
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x - y + z - sumOfInt(x, y, z)) <= 0.001f;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj130jlu7.cs(22,37): error CS0103: The name ''sumOfInt'' does not exist
    in the current context

    '
  timestamp: 1660016065
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (x == y || x == z && y == z);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a17ad44a78594c77ac6906c3a1db4236>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a17ad44a78594c77ac6906c3a1db4236>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (x == y || x == z || y == z) ? true : false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2d1d7bfc527e4d208f1763fc4b91d213>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2d1d7bfc527e4d208f1763fc4b91d213>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        var
    a = x;\n        var b = y;\n        var c = z;\n        if (Math.Abs(a) > Math.Abs(b)
    && Math.Abs(a) > Math.Abs(c)) {\n            return true;\n        }\n        else
    if (Math.Abs(b) > Math.Abs(c)) {\n            return false;\n        }\n        else
    if (Math.Abs(a) == Math.Abs(b) && Math.Abs(a) == Math.Abs(c)) {\n            return
    true;\n        }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c11235c4ac044c4fb65d2a01a9c1347b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c11235c4ac044c4fb65d2a01a9c1347b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((int)(x == y) || x == z) && ((int)y == z);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa9b8fli7.cs(22,17): error CS0030: Cannot convert type ''bool'' to ''int''

    '
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        long
    x1 = Convert.ToInt64(Math.Truncate(x));\n        long y1 = Convert.ToInt64(Math.Truncate(y));\n
    \       long z1 = Convert.ToInt64(Math.Truncate(z));\n\n        long x2 = Convert.ToInt64(Math.Ceiling(x));\n
    \       long y2 = Convert.ToInt64(Math.Ceiling(y));\n        long z2 = Convert.ToInt64(Math.Ceiling(z));\n\n
    \       long x3 = Convert.ToInt64(Math.Floor(x));\n        long y3 = Convert.ToInt64(Math.Floor(y));\n
    \       long z3 = Convert.ToInt64(Math.Floor(z));\n\n        long x4 = Convert.ToInt64(Math.Abs(x));\n
    \       long y4 = Convert.ToInt64(Math.Abs(y));\n        long z4 = Convert.ToInt64(Math.Abs(z));\n\n
    \       return x1 == y1 && z1 == y1 && x1 == z1 && y1 == x1 && x1 == y2 && y2
    == x2 && y2 == y3 && z2 == y3 && z2 == z3 && x4 == y4 && z4 == y4 && x4 == z4
    && y4 == x4 && x4 >= 0 && y4 >= 0 && z4 >= 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1d3f2fee2a7d4bd99f152fbb9f07c10b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1d3f2fee2a7d4bd99f152fbb9f07c10b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((int)x == (int)y) || ((int)x == (int)z);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a4825864ece34c6fadcaa5f61afc7603>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a4825864ece34c6fadcaa5f61afc7603>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    Your code goes here\n        float a = x - y;\n        float b = x - z;\n        float
    c = y - z;\n        float d = a * a + b * b;\n        float e = (float) Math.Sqrt(d);\n
    \       float f = Math.Abs(e) + Math.Abs(c);\n        return f == d;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <106345e8f71b4174b8fef367e2e3d255>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <106345e8f71b4174b8fef367e2e3d255>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        bool
    a = Math.Abs(x) + Math.Abs(y) == z;\n        bool b = Math.Abs(x) + Math.Abs(-y)
    == z;\n        bool c = Math.Abs(-x) + Math.Abs(y) == z;\n        bool d = Math.Abs(-x)
    + Math.Abs(-y) == z;\n        return a || b || c || d;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe4f4c4c8edf4846bbc9d7dab2f4ca62>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe4f4c4c8edf4846bbc9d7dab2f4ca62>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //Your
    code goes here\n        double a, b, c, s, check;\n        a = (double)x;\n        b
    = (double)y;\n        c = (double)z;\n        check = (a+b+c);\n        s = (double)check;\n
    \       if (a != s)\n        {\n            return false;\n        }\n        if
    (b != s)\n        {\n            return false;\n        }\n        if ((int)a
    != (int)s)\n        {\n            return false;\n        }\n        if ((int)b
    != (int)s)\n        {\n            return false;\n        }\n        return true;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7f576042b0ee4b5f9a4b6f19b3a6fa6a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7f576042b0ee4b5f9a4b6f19b3a6fa6a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x - y + z) <= 0.00001f;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <316c3ffec0b944c485e9cd035363376a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <316c3ffec0b944c485e9cd035363376a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(z - x + y + x) > .0001) return false;\n        if (Math.Abs(z - x +
    y - x) > .0001) return false;\n        if (Math.Abs(z - y - x - y) > .0001) return
    false;\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <16217cc8491c404d8dfb195a89b2bfa9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <16217cc8491c404d8dfb195a89b2bfa9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(x - y) > Math.Abs(x - z)) return false;\n        if (Math.Abs(y - z)
    > Math.Abs(x - y)) return false;\n        if (Math.Abs(y - z) == Math.Abs(x -
    y)) return true;\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ee7ff7d846084e7a94a2142792d675ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ee7ff7d846084e7a94a2142792d675ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (IsAllPositiveOrNegative(x))\n            return true;\n        if (IsAllPositiveOrNegative(y))\n
    \           return true;\n        if (IsAllPositiveOrNegative(z))\n            return
    true;\n        return x == y || x == z || y == z;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3fo90vql.cs(22,13): error CS0103: The name ''IsAllPositiveOrNegative''
    does not exist in the current context

    /tmp/tmp3fo90vql.cs(24,13): error CS0103: The name ''IsAllPositiveOrNegative''
    does not exist in the current context

    /tmp/tmp3fo90vql.cs(26,13): error CS0103: The name ''IsAllPositiveOrNegative''
    does not exist in the current context

    '
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (Math.Abs(x + y + z) == Math.Abs(x) + Math.Abs(y) + Math.Abs(z));\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <880eaf189828465086cd89df844066f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <880eaf189828465086cd89df844066f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (Math.Abs(x) + Math.Abs(y) + Math.Abs(z)) ==  Math.Abs(x + y + z);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <570e46ffe6e44c4ea0f376432388efb9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <570e46ffe6e44c4ea0f376432388efb9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(y - z) <= 1e-15f) {\n            // If two numbers are the same, they
    don't need to be added.\n            if (Math.Abs(x) <= 1e-15f) return true;\n
    \           if (Math.Abs(x) > 1e-15f) return false;\n        }\n        // Add
    the numbers as integers.\n        return (int) x == (int) y && (int) x == (int)
    z;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a9bf7faae3364cc6a7662a07bbf9f9e4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a9bf7faae3364cc6a7662a07bbf9f9e4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        var
    a = Math.Abs(x);\n        var b = Math.Abs(y);\n        var c = Math.Abs(z);\n
    \       if ((a == b) && (a == c)) {\n            return true;\n        }\n        if
    ((a >= 0) & (b >= 0) & (c >= 0)) {\n            if ((a + b + c) == x) {\n                return
    true;\n            }\n            if ((a + b + c) == y) {\n                return
    true;\n            }\n            if ((a + b + c) == z) {\n                return
    true;\n            }\n            if ((a - b + c) == x) {\n                return
    true;\n            }\n            if ((a - b + c) == y) {\n                return
    true;\n            }\n            if ((a - b + c) == z) {\n                return
    true;\n            }\n            if ((b - c + a) == x) {\n                return
    true;\n            }\n            if ((b - c + a) == y) {\n                return
    true;\n            }\n            if ((b - c + a) == z) {\n                return
    true;\n            }\n            if ((c - a + b) == x) {\n                return
    true;\n            }\n            if ((c - a + b) == y) {\n                return
    true;\n            }\n            if ((c - a + b) == z) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2591657766a943f3b8bc88c71dcdae63>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2591657766a943f3b8bc88c71dcdae63>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (Math.Abs(x - y) <= 1F &&\n            Math.Abs(x - z) <= 1F &&\n            Math.Abs(y
    - z) <= 1F);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a3f6b673af64838a31b84cc6f724021>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a3f6b673af64838a31b84cc6f724021>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (x != (x + y)) {\n            Debug.WriteLine(x.ToString() + \" \" + y.ToString()
    + \" \" + z.ToString());\n            return false;\n        }\n        long i
    = Convert.ToInt64(Math.Round((x + y + z) * 100));\n        if (i != (x + y + z))
    {\n            Debug.WriteLine(x.ToString() + \" \" + y.ToString() + \" \" + z.ToString());\n
    \           return false;\n        }\n        return true;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "2 3 1\nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71d53c868db342e7b182186380621bf3>:0
    \n2.5 2 3\n1.5 5 3.5\n2 6 2\n4 2 2\nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71d53c868db342e7b182186380621bf3>:0
    \n2.2 2.2 2.2\n-4 6 2\nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Syste"
  stdout: ''
  timestamp: 1660016066
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    Declare a variable to store the sum\n        float sum = 0;\n\n        // While
    there are three numbers, add them\n        while (x < y && y < z && z < 0) sum
    += x; \n        while (y < x && x < z && z < 0) sum += y; \n        while (z <
    x && y < z && z < 0) sum += z;\n\n        // If the sum of the three numbers is
    equal to the sum of the other two, return true\n        if (sum == z) return true;\n
    \       \n        // Otherwise, if all three numbers are negative numbers, return
    false\n        if (x < 0 && y < 0 && z < 0) return false;\n\n        // If all
    three numbers are positive numbers, return false\n        if (x > 0 && y > 0 &&
    z > 0) return false;\n\n        // If all three numbers are integers, return true\n
    \       if (Math.Floor(x) == x && Math.Floor(y) == y && Math.Floor(z) == z) return
    true;\n\n        // If there are more negative numbers than positive numbers,
    return false\n        if (x > 0 && y > 0 && z < 0) return false;\n\n        //
    If there are more positive numbers than negative numbers, return false\n        if
    (x < 0 && y < 0 && z > 0) return false;\n\n        // If there are more integers
    than floats, return false\n        if (Math.Floor(x) == x && Math.Floor(y) ==
    y && Math.Floor(z) == z) return true;\n\n        // If there are more floats than
    integers, return false\n        if (x < 0 && y < 0 && z > 0) return false;\n\n
    \       // If there are more floats than integers, return false\n        if (x
    < 0 && y > 0 && z < 0) return false;\n\n        // If there are more integers
    than floats, return false\n        if (Math.Floor(x) == x && Math.Floor(y) ==
    y && Math.Floor(z) == z) return true;\n\n        // If there are more floats than
    integers, return false\n        if (x < 0 && y > 0 && z > 0) return false;\n\n
    \       // If there are more integers than floats, return false\n        if (Math.Floor(x)
    == x && Math.Floor(y) == y && Math.Floor(z) == z) return true;\n\n        // If
    there are more floats than integers, return false\n        if (x < 0 && y > 0
    && z < 0) return false;\n\n        // If there are more integers than floats,
    return false\n        if (Math.Floor(x) == x && Math.Floor(y) == y && Math.Floor(z)
    == z) return true;\n\n        // If there are more floats than integers, return
    false\n        if (x < 0 && y > 0 && z > 0) return false;\n\n        // If there
    are more integers than floats, return false\n        if (Math.Floor(x) == x &&
    Math.Floor(y) == y && Math.Floor(z) == z) return true;\n\n        // If there
    are more floats than integers, \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppq34yvtb.cs(21,24): error CS0161: ''Problem.AnyInt(float, float, float)'':
    not all code paths return a value

    '
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        float
    sum;\n        if (Math.Abs(x) < 0.0001f && Math.Abs(y) < 0.0001f && Math.Abs(z)
    < 0.0001f) {\n            return true;\n        }\n        sum = (x + y + z);\n
    \       if (sum == 0.0f) {\n            return false;\n        }\n        if (sum
    < 0.0f) {\n            return true;\n        }\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f53731f3393f4fdebe938ab593c79946>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f53731f3393f4fdebe938ab593c79946>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (x == y) {\n            if (x == z) {\n                return true;\n            }\n
    \           else {\n                return false;\n            }\n        }\n
    \       else {\n            return false;\n        }\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a0cbff787f44be7b10cfe6b3eba3207>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a0cbff787f44be7b10cfe6b3eba3207>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x) == Math.Abs(y) && Math.Abs(x) == Math.Abs(z);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b478727d311d4612a352f57229126ecd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b478727d311d4612a352f57229126ecd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (Math.Abs(x) + Math.Abs(y) + Math.Abs(z)) <= 1f;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43a9e0d54712469e9198a6da9e1fbd59>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43a9e0d54712469e9198a6da9e1fbd59>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (((x != 0f) || (y != 0f) || (z != 0f)) && Math.Abs(x - y + z) < double.Epsilon);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bea410c9fb4f4268a6bffd2d53f9dba0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bea410c9fb4f4268a6bffd2d53f9dba0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        bool
    result = false;\n        int nx, ny, nz;\n        if (x != 0.0f) {\n            nx
    = (int)x;\n            if (nx < y) {\n                nx++;\n            }\n        }\n
    \       else {\n            nx = y;\n            if (nx < z) {\n                nx++;\n
    \           }\n        }\n        if (y != 0.0f) {\n            ny = (int)y;\n
    \           if (ny < z) {\n                ny++;\n            }\n        }\n        else
    {\n            ny = z;\n            if (ny < z) {\n                ny++;\n            }\n
    \       }\n        if (z != 0.0f) {\n            nz = (int)z;\n            if
    (nz < y) {\n                nz++;\n            }\n        }\n        else {\n
    \           nz = y;\n            if (nz < x) {\n                nz++;\n            }\n
    \       }\n        if (nx + ny + nz == x + y + z) {\n            result = true;\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps1la0cx6.cs(31,18): error CS0266: Cannot implicitly convert type ''float''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmps1la0cx6.cs(43,18): error CS0266: Cannot implicitly convert type ''float''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmps1la0cx6.cs(55,18): error CS0266: Cannot implicitly convert type ''float''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    Your code goes here\n        return ((x + y) == z);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7158fba057643f2a5aad46a31599cfe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7158fba057643f2a5aad46a31599cfe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016066
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    Declare our variables.\n        float num1, num2, num3;\n        float result
    = 0;\n        // Declare our conditions.\n        if (x >= y) {\n            result
    = x;\n            num1 = y;\n            num2 = z;\n        } else if (x <= y)
    {\n            result = y;\n            num1 = x;\n            num2 = z;\n        }
    else {\n            result = z;\n            num1 = x;\n            num2 = y;\n
    \       }\n        if (Math.Abs(result) != 0.0f) {\n            // Convert the
    numbers to integers.\n            int num1int = Convert.ToInt32(num1);\n            int
    num2int = Convert.ToInt32(num2);\n            // Add the numbers and see if they're
    equal.\n            result = num1int + num2int;\n            // Check if they're
    equal, and if they are, return true.\n            if (result == num1int) {\n                return
    true;\n            } else {\n                return false;\n            }\n        }\n
    \       else {\n            return false;\n        }\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ed469d4c9cba4b50a10ceb2e147af7a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ed469d4c9cba4b50a10ceb2e147af7a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x - y) == (z)) && Math.Abs(x - z) > 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1886ecc2cd8c4b9f974f7cebdf2d0f7b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1886ecc2cd8c4b9f974f7cebdf2d0f7b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(x-y) < 0.00000001f) {\n            return true;\n        }\n        if
    (Math.Abs(x-z) < 0.00000001f) {\n            return true;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <36888d90d98c49ea8a7b9b0efb1f7bf9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <36888d90d98c49ea8a7b9b0efb1f7bf9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        Debug.Assert(IsFloat(x));\n
    \       Debug.Assert(IsFloat(y));\n        Debug.Assert(IsFloat(z));\n        return
    Math.Abs(x - y + z) == 0.5f && Math.Abs(x - y - z) == 0.5f && Math.Abs(x - z -
    y) == 0.5f;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsby_tzy4.cs(22,22): error CS0103: The name ''IsFloat'' does not exist
    in the current context

    /tmp/tmpsby_tzy4.cs(23,22): error CS0103: The name ''IsFloat'' does not exist
    in the current context

    /tmp/tmpsby_tzy4.cs(24,22): error CS0103: The name ''IsFloat'' does not exist
    in the current context

    '
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((int)x == (int)x && (int)y == (int)y && (int)z == (int)z);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc43d0413a7745ad81061081dcb001f9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc43d0413a7745ad81061081dcb001f9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x - y + z) <= 1E-06F;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <83c99c8618554944954518da5bdb6ef8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <83c99c8618554944954518da5bdb6ef8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    If all the numbers are integers\n        if (x == (int) x && y == (int) y && z
    == (int) z) {\n            // then return true\n            return true;\n        }\n
    \       // If any of the numbers are not integers\n        else if (!(x - y).Equals((int)
    (x - z)) && (y - z).Equals((int) (y - x))) return true;\n        else if (!(x
    - y).Equals((int) (x - z)) && (y - z).Equals((int) (y - x)) && (z - x).Equals((int)
    (z - y))) return true;\n        else if (!(x - y).Equals((int) (x - z)) && (y
    - z).Equals((int) (y - x)) && (z - x).Equals((int) (z - y)) && (x - z).Equals((int)
    (x - y))) return true;\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <70f0d49986bc48e392f096a6d4daa9c3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <70f0d49986bc48e392f096a6d4daa9c3>:0
    \n"
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x == y || x == z) && (y != z) && (x.GetType() == y.GetType() && x.GetType()
    == z.GetType()));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <73826599581b439a858ae11187589628>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <73826599581b439a858ae11187589628>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(x) == Math.Abs(y) && Math.Abs(y) == Math.Abs(z) && Math.Abs(x) == (int)x
    && Math.Abs(y) == (int)y && Math.Abs(z) == (int)z) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <417c4efbdc9149d398bcbc860d4179b1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <417c4efbdc9149d398bcbc860d4179b1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        Debug.Assert(x
    >= 0);\n        Debug.Assert(y >= 0);\n        Debug.Assert(z >= 0);\n        Debug.Assert(x
    < y);\n        Debug.Assert(y < z);\n        Debug.Assert(z < 0);\n        Debug.Assert(!Mathf.Approximately(x,
    0));\n        Debug.Assert(!Mathf.Approximately(y, 0));\n        Debug.Assert(!Mathf.Approximately(z,
    0));\n        Debug.Assert(Mathf.Approximately(x, y, z));\n        Debug.Assert(Mathf.Approximately(x,
    y, z));\n        Debug.Assert(Mathf.Approximately(x, y, z));\n        Debug.Assert(Mathf.Approximately(x,
    y, z));\n        Debug.Assert(Mathf.Approximately(x, y, z));\n        Debug.Assert(Mathf.Approximately(x,
    y, z));\n        Debug.Assert(Mathf.Approximately(x, y, z));\n        Debug.Assert(Mathf.Approximately(x,
    y, z));\n        Debug.Assert(Mathf.Approximately(x, y, z));\n        Debug.Assert(Mathf.Approximately(x,
    y, z));\n        Debug.Assert(Mathf.Approximately(x, y, z));\n        Debug.Assert(Mathf.Approximately(x,
    y, z));\n        Debug.Assert(Mathf.Approximately(x, y, z));\n        Debug.Assert(Mathf.Approximately(x,
    y, z));\n        Debug.Assert(Mathf.Approximately(x, y, z));\n        Debug.Assert(Mathf.Approximately(x,
    y, z));\n        Debug.Assert(Mathf.Approximately(x, y, z));\n        Debug.Assert(Mathf.Approximately(x,
    y, z));\n        Debug.Assert(Mathf.Approximately(x, y, z));\n        Debug.Assert(Mathf.Approximately(x,
    y, z));\n        Debug.Assert(Mathf.Approximately(x, y, z));\n        Debug.Assert(Mathf.Approximately(x,
    y, z));\n        Debug.Assert(Mathf.Approximately(x, y, z));\n        Debug.Assert(Mathf.Approximately(x,
    y, z));\n        Debug.Assert(Mathf.Approximately(x, y, z));\n        Debug.Assert(Mathf.Approximately(x,
    y, z));\n        Debug.Assert(Mathf.Approximately(x, y, z));\n        \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgnrmrb3u.cs(28,23): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(29,23): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(30,23): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(31,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(32,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(33,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(34,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(35,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(36,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(37,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(38,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(39,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(40,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(41,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(42,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(43,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(44,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(45,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(46,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpgnrmrb3u.cs(47,22): error CS0103: The name ''Mathf'' does not exist in
    t'
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        bool
    a = false;\n        double a1 = (double)x;\n        double a2 = (double)y;\n        double
    a3 = (double)z;\n        double sum = a1 + a2 + a3;\n        if (sum == x) {\n
    \           a = true;\n        }\n        return a;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5108f0fd137f4ccfb02f4ede342bb932>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5108f0fd137f4ccfb02f4ede342bb932>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x - y) * (x - y) + (x - z) * (x - z) == (z * z));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4590b2e7a07142d2ad2840adaf0f6a0b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4590b2e7a07142d2ad2840adaf0f6a0b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        int
    a = (int) x;\n        int b = (int) y;\n        int c = (int) z;\n        return
    (a+b+c) == ((int)(a)+(int)(b)+(int)(c));\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b117b3f4b869496fa6ef1d8ba38ca8fd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b117b3f4b869496fa6ef1d8ba38ca8fd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        BigInteger
    x = BigInteger.Parse(x.ToString());\n        BigInteger y = BigInteger.Parse(y.ToString());\n
    \       BigInteger z = BigInteger.Parse(z.ToString());\n        BigInteger sum
    = BigInteger.Add(x, y);\n        BigInteger min = BigInteger.Parse(String.Format(\"{0:0}\",
    ((Math.Abs(x - y) + Math.Abs(x - z) + Math.Abs(y - z))).ToString()));\n        return
    sum.Equals(min);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6uujm0mg.cs(22,20): error CS0136: A local or parameter named ''x'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmp6uujm0mg.cs(23,20): error CS0136: A local or parameter named ''y'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmp6uujm0mg.cs(24,20): error CS0136: A local or parameter named ''z'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmp6uujm0mg.cs(26,77): error CS1503: Argument 1: cannot convert from ''System.Numerics.BigInteger''
    to ''short''

    /tmp/tmp6uujm0mg.cs(26,95): error CS1503: Argument 1: cannot convert from ''System.Numerics.BigInteger''
    to ''short''

    /tmp/tmp6uujm0mg.cs(26,113): error CS1503: Argument 1: cannot convert from ''System.Numerics.BigInteger''
    to ''short''

    /tmp/tmp6uujm0mg.cs(22,41): error CS0165: Use of unassigned local variable ''x''

    /tmp/tmp6uujm0mg.cs(23,41): error CS0165: Use of unassigned local variable ''y''

    /tmp/tmp6uujm0mg.cs(24,41): error CS0165: Use of unassigned local variable ''z''

    '
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    x.Equals(y) || x.Equals(z);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5cdff3e9ed0647d7b31553bb4a5c09a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5cdff3e9ed0647d7b31553bb4a5c09a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        float
    a = x + y;\n        float b = x - y;\n        float c = x * y;\n        float
    d = x / y;\n        float e = y / x;\n        float f = x - z;\n        float
    g = x - y;\n        float h = x - y;\n        float i = x * z;\n        float
    j = x / z;\n        float k = x - z * y;\n        float m = x / y - z;\n        float
    n = y - z * x;\n        float o = x * y - z * x;\n        float p = z * x - y
    * x;\n        float q = z * y - x * x;\n        float r = x - z * y;\n        float
    s = z * x - y * x;\n        float t = z * y - x * x;\n        float u = z * x
    - y * x;\n        float v = z * y - x * x;\n        float w = z * y - x * x;\n
    \       float x = x - y;\n        float y = y - x;\n        float z = z - x;\n
    \       float a = a - b;\n        float b = b - c;\n        float c = c - d;\n
    \       float d = d - e;\n        float e = e - f;\n        float f = f - g;\n
    \       float g = g - h;\n        float h = h - i;\n        float i = i - j;\n
    \       float j = j - k;\n        float k = k - m;\n        float m = m - n;\n
    \       float n = n - o;\n        float o = o - p;\n        float p = p - q;\n
    \       float q = q - r;\n        float r = r - s;\n        float s = s - t;\n
    \       float t = t - u;\n        float u = u - v;\n        float v = v - w;\n
    \       float w = w - x;\n        float x = x - y;\n        float y = y - x;\n
    \       float z = z - x;\n        float a = a - b;\n        float b = b - c;\n
    \       float c = c - d;\n        float d = d - e;\n        float e = e - f;\n
    \       float f = f - g;\n        float g = g - h;\n        float h = h - i;\n
    \       float i = i - j;\n        float j = j - k;\n        float k = k - m;\n
    \       float m = m - n;\n        float n = n - o;\n        float o = o - p;\n
    \       float p = p - q;\n        float q = q - r;\n        float r = r - s;\n
    \       float s = s - t;\n        float t = t - u;\n        float u = u - v;\n
    \       float v = v - w;\n        float w = w - x;\n        float x = x - y;\n
    \       float y = y - x;\n\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_tn462kw.cs(22,19): error CS0841: Cannot use local variable ''x'' before
    it is declared

    /tmp/tmp_tn462kw.cs(22,23): error CS0841: Cannot use local variable ''y'' before
    it is declared

    /tmp/tmp_tn462kw.cs(23,19): error CS0841: Cannot use local variable ''x'' before
    it is declared

    /tmp/tmp_tn462kw.cs(23,23): error CS0841: Cannot use local variable ''y'' before
    it is declared

    /tmp/tmp_tn462kw.cs(24,19): error CS0841: Cannot use local variable ''x'' before
    it is declared

    /tmp/tmp_tn462kw.cs(24,23): error CS0841: Cannot use local variable ''y'' before
    it is declared

    /tmp/tmp_tn462kw.cs(25,19): error CS0841: Cannot use local variable ''x'' before
    it is declared

    /tmp/tmp_tn462kw.cs(25,23): error CS0841: Cannot use local variable ''y'' before
    it is declared

    /tmp/tmp_tn462kw.cs(26,19): error CS0841: Cannot use local variable ''y'' before
    it is declared

    /tmp/tmp_tn462kw.cs(26,23): error CS0841: Cannot use local variable ''x'' before
    it is declared

    /tmp/tmp_tn462kw.cs(27,19): error CS0841: Cannot use local variable ''x'' before
    it is declared

    /tmp/tmp_tn462kw.cs(27,23): error CS0841: Cannot use local variable ''z'' before
    it is declared

    /tmp/tmp_tn462kw.cs(28,19): error CS0841: Cannot use local variable ''x'' before
    it is declared

    /tmp/tmp_tn462kw.cs(28,23): error CS0841: Cannot use local variable ''y'' before
    it is declared

    /tmp/tmp_tn462kw.cs(29,19): error CS0841: Cannot use local variable ''x'' before
    it is declared

    /tmp/tmp_tn462kw.cs(29,23): error CS0841: Cannot use local variable ''y'' before
    it is declared

    /tmp/tmp_tn462kw.cs(30,19): error CS0841: Cannot use local variable ''x'' before
    it is declared

    /tmp/tmp_tn462kw.cs(30,23): error CS0841: Cannot use local variable ''z'' before
    it is declared

    /tmp/tmp_tn462kw.cs(31,19): error CS0841: Cannot use local variable ''x'' before
    it is declared

    /tmp/tmp_tn462kw.cs(31,23): error CS0841: Cannot use local variable ''z'' before
    it is declared

    /tmp/tmp_tn462kw.cs(32,19): error CS0841:'
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        double
    z1 = (double)x;\n        double z2 = (double)z;\n        if (Math.Abs(z1 - z2)
    < 0.01f) {\n            if (Math.Abs(z1 - z2) < 0.01f) {\n                if (Math.Abs(z1
    - z2) < 0.01f)\n                    return true;\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a9d798caad4a4bc19ec4250fc46d160d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a9d798caad4a4bc19ec4250fc46d160d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x - y) * (x - y) + (z - x) * (z - x)) >= 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <871cb84393e9491ea8e4a2bf6e6d83c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <871cb84393e9491ea8e4a2bf6e6d83c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    x != 0 && y != 0 && z != 0 && (x != y || x != z) && (y != z);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5c3d67081ae14ca4a7279c418243b3ba>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5c3d67081ae14ca4a7279c418243b3ba>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (x != 0 && y != 0 && z != 0 &&\n            ((x == (y + z)) || (x == (y - z))
    || (x == (x + z)) || (x == (x - z))));\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30376401fae94a038200eab54a7487e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30376401fae94a038200eab54a7487e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x == (y+z)) || (x == (y+z)) && (x == (z+y)));\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60739f6e58ee44eb99ff0581dda92ed7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60739f6e58ee44eb99ff0581dda92ed7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    Your code goes here!\n        return Math.Round(x) == x && Math.Round(y) == y
    && Math.Round(z) == z;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd7533100cc043a28ed2bf81d3122be8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd7533100cc043a28ed2bf81d3122be8>:0
    \n"
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        Debug.Assert(x
    >= y && x <= z);\n        if (y > z) {\n            return true;\n        }\n
    \       if (x != 0 && y != 0 && z != 0) {\n            Debug.Assert(x >= 0);\n
    \           Debug.Assert(y >= 0);\n            Debug.Assert(z >= 0);\n            return
    true;\n        }\n        if (x != 0 && y != 0 && z != 0) {\n            Debug.Assert(x
    >= 0);\n            Debug.Assert(y >= 0);\n            Debug.Assert(z >= 0);\n
    \           return true;\n        }\n        if (x != 0 && y != 0 && z != 0) {\n
    \           Debug.Assert(x >= 0);\n            Debug.Assert(y >= 0);\n            Debug.Assert(z
    >= 0);\n            return true;\n        }\n        if (x != 0 && y != 0 && z
    != 0) {\n            Debug.Assert(x >= 0);\n            Debug.Assert(y >= 0);\n
    \           Debug.Assert(z >= 0);\n            return true;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.AnyInt (System.Single x, System.Single y, System.Single z) [0x00000]
    in <3ca6fa2e5ef64010bccc38688c5a56c8>:0 \n  at Problem.Main (System.String[] args)
    [0x00000] in <3ca6fa2e5ef64010bccc38688c5a56c8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3ca6fa2e5ef64010bccc38688c5a56c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String me"
  stdout: ''
  timestamp: 1660016067
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        bool
    result = true;\n        if (Mathf.FloorToInt(x) == Mathf.FloorToInt(x) && Mathf.FloorToInt(y)
    == Mathf.FloorToInt(y) && Mathf.FloorToInt(z) == Mathf.FloorToInt(z)) {\n            if
    (x == ((float)y + z)) {\n                result = true;\n            } else if
    (y == ((float)x + z)) {\n                result = true;\n            } else if
    (z == ((float)x + y)) {\n                result = true;\n            } else {\n
    \               result = false;\n            }\n        } else {\n            result
    = false;\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0snp2_f.cs(23,13): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpx0snp2_f.cs(23,36): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpx0snp2_f.cs(23,59): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpx0snp2_f.cs(23,82): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpx0snp2_f.cs(23,105): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpx0snp2_f.cs(23,128): error CS0103: The name ''Mathf'' does not exist in
    the current context

    '
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    TODO: Write code here\n        return (Math.Abs(x) + Math.Abs(y) == z);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <459ed74f4e214448b35a6a979b2a25db>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <459ed74f4e214448b35a6a979b2a25db>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016068
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x == Float.Parse(x.ToString())) && (y == Float.Parse(y.ToString())) && (z ==
    Float.Parse(z.ToString())));\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7xbx_t7z.cs(22,23): error CS0103: The name ''Float'' does not exist in
    the current context

    /tmp/tmp7xbx_t7z.cs(22,59): error CS0103: The name ''Float'' does not exist in
    the current context

    /tmp/tmp7xbx_t7z.cs(22,95): error CS0103: The name ''Float'' does not exist in
    the current context

    '
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(x-z) < 0.001 && Math.Abs(y-z) < 0.001) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <40456d537756463b94330bda5950617a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <40456d537756463b94330bda5950617a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x) == Math.Abs(y) && Math.Abs(x) == Math.Abs(z);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b478727d311d4612a352f57229126ecd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b478727d311d4612a352f57229126ecd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Round(x) == x && Math.Round(y) == y && Math.Round(z) == z;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4141fa19912d42f78c3aa957dcb84790>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4141fa19912d42f78c3aa957dcb84790>:0
    \n"
  stdout: ''
  timestamp: 1660016068
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        Debug.Assert(Math.Abs(x)
    == Math.Abs(x));\n        Debug.Assert(Math.Abs(y) == Math.Abs(y));\n        Debug.Assert(Math.Abs(z)
    == Math.Abs(z));\n        Debug.Assert(x == y || x == z);\n        Debug.Assert(y
    == z || x == y);\n        Debug.Assert(Math.Abs(x) <= 1);\n        Debug.Assert(Math.Abs(y)
    <= 1);\n        Debug.Assert(Math.Abs(z) <= 1);\n        if (x == y) return true;\n
    \       if (x == z) return true;\n        if (y == z) return true;\n        if
    (x == 0) return true;\n        if (y == 0) return true;\n        if (z == 0) return
    true;\n        if (x == 0.0) return true;\n        if (y == 0.0) return true;\n
    \       if (z == 0.0) return true;\n        if (Math.Abs(x) <= Math.Abs(y)) return
    true;\n        if (Math.Abs(y) <= Math.Abs(z)) return true;\n        if (Math.Abs(z)
    <= Math.Abs(x)) return true;\n        if (x == y) return true;\n        if (y
    == z) return true;\n        if (z == x) return true;\n        if (x == 0.0) return
    true;\n        if (y == 0.0) return true;\n        if (z == 0.0) return true;\n
    \       if (x == -0.0) return true;\n        if (y == 0.0) return true;\n        if
    (z == 0.0) return true;\n        if (x == -0.0) return true;\n        if (y ==
    0.0) return true;\n        if (z == 0.0) return true;\n        if (x == 0.0f)
    return true;\n        if (y == 0.0f) return true;\n        if (z == 0.0f) return
    true;\n        if (x == 0.0L) return true;\n        if (y == 0.0L) return true;\n
    \       if (z == 0.0L) return true;\n        if (x == 0.0F) return true;\n        if
    (y == 0.0F) return true;\n        if (z == 0.0F) return true;\n        if (x ==
    0.0D) return true;\n        if (y == 0.0D) return true;\n        if (z == 0.0D)
    return true;\n        if (x == 0.0B) return true;\n        if (y == 0.0B) return
    true;\n        if (z == 0.0B) return true;\n        if (x == 0.0A) return true;\n
    \       if (y == 0.0A) return true;\n        if (z == 0.0A) return true;\n        if
    (x == 0.0U) return true;\n        if (y == 0.0U) return true;\n        if (z ==
    0.0U) return true;\n        if (x == 0.0C) return true;\n        if (y == 0.0C)
    return true;\n        if (z == 0.0C) return true;\n        if (x == 0.0S) return
    true;\n        if (y == 0.0S) return true;\n        if (z == 0.0S) return true;\n
    \       if (x == 0.0I) return true;\n        if (y == \n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5pzl9056.cs(57,21): error CS1026: ) expected

    /tmp/tmp5pzl9056.cs(57,22): error CS1002: ; expected

    /tmp/tmp5pzl9056.cs(57,22): error CS1513: } expected

    /tmp/tmp5pzl9056.cs(58,21): error CS1026: ) expected

    /tmp/tmp5pzl9056.cs(58,22): error CS1002: ; expected

    /tmp/tmp5pzl9056.cs(58,22): error CS1513: } expected

    /tmp/tmp5pzl9056.cs(59,21): error CS1026: ) expected

    /tmp/tmp5pzl9056.cs(59,22): error CS1002: ; expected

    /tmp/tmp5pzl9056.cs(59,22): error CS1513: } expected

    /tmp/tmp5pzl9056.cs(66,21): error CS1026: ) expected

    /tmp/tmp5pzl9056.cs(66,22): error CS1002: ; expected

    /tmp/tmp5pzl9056.cs(66,22): error CS1513: } expected

    /tmp/tmp5pzl9056.cs(67,21): error CS1026: ) expected

    /tmp/tmp5pzl9056.cs(67,22): error CS1002: ; expected

    /tmp/tmp5pzl9056.cs(67,22): error CS1513: } expected

    /tmp/tmp5pzl9056.cs(68,21): error CS1026: ) expected

    /tmp/tmp5pzl9056.cs(68,22): error CS1002: ; expected

    /tmp/tmp5pzl9056.cs(68,22): error CS1513: } expected

    /tmp/tmp5pzl9056.cs(69,21): error CS1026: ) expected

    /tmp/tmp5pzl9056.cs(69,22): error CS1002: ; expected

    /tmp/tmp5pzl9056.cs(69,22): error CS1513: } expected

    /tmp/tmp5pzl9056.cs(70,21): error CS1026: ) expected

    /tmp/tmp5pzl9056.cs(70,22): error CS1002: ; expected

    /tmp/tmp5pzl9056.cs(70,22): error CS1513: } expected

    /tmp/tmp5pzl9056.cs(71,21): error CS1026: ) expected

    /tmp/tmp5pzl9056.cs(71,22): error CS1002: ; expected

    /tmp/tmp5pzl9056.cs(71,22): error CS1513: } expected

    /tmp/tmp5pzl9056.cs(72,21): error CS1026: ) expected

    /tmp/tmp5pzl9056.cs(72,22): error CS1002: ; expected

    /tmp/tmp5pzl9056.cs(72,22): error CS1513: } expected

    /tmp/tmp5pzl9056.cs(73,21): error CS1026: ) expected

    /tmp/tmp5pzl9056.cs(73,22): error CS1002: ; expected

    /tmp/tmp5pzl9056.cs(73,22): error CS1513: } expected

    /tmp/tmp5pzl9056.cs(74,21): error CS1026: ) expected

    /tmp/tmp5pzl9056.cs(74,22): error CS1002: ; expected

    /tmp/tmp5pzl9056.cs(74,22): error CS1513: } expected

    /tmp/tmp5pzl9'
  timestamp: 1660016067
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(x - y) < double.Epsilon) {\n            if (Math.Abs(x - z) < double.Epsilon)
    {\n                return true;\n            }\n        }\n        return false;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6698ae85169948f2a560a8b055223087>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6698ae85169948f2a560a8b055223087>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(x - y) >= Math.Abs(x - z)) {\n            return false;\n        } else
    {\n            return true;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b63439a017cc429abcbd47558fd21572>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b63439a017cc429abcbd47558fd21572>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016068
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        int
    a = (int)Math.Abs(x);\n        int b = (int)Math.Abs(y);\n        int c = (int)Math.Abs(z);\n
    \       int d = Math.Max(a, b, c);\n        return a == d && b == d && c == d;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp97pv8n1q.cs(25,22): error CS1501: No overload for method ''Max'' takes
    3 arguments

    '
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    Convert them to integers.\n        long lx = Convert.ToInt64(x);\n        long
    ly = Convert.ToInt64(y);\n        long lz = Convert.ToInt64(z);\n        // Return
    true if the sum is equal to the total.\n        return lx + ly == lz && lx ==
    lx && ly == ly;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a791a27ef474952880b52ff263e672d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a791a27ef474952880b52ff263e672d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        double
    _x = x, _y = y, _z = z;\n        if (System.Math.Abs(_x) > System.Math.Abs(_y))
    {\n            if (System.Math.Abs(_x) > System.Math.Abs(_z)) {\n                return
    _x % _y == 0 && _y % _z == 0;\n            } else {\n                return _x
    % _z == 0;\n            }\n        } else {\n            if (System.Math.Abs(_y)
    > System.Math.Abs(_z)) {\n                return _y % _z == 0;\n            }
    else {\n                return _y % _x == 0;\n            }\n        }\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9629f81e94994e5f956bafa80eadd21b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9629f81e94994e5f956bafa80eadd21b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        double
    d = x - y + z;\n        if (d == Math.Abs(x) && d == Math.Abs(y) && d == Math.Abs(z))
    return true;\n        else return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd30510c5b4e41e9a85708c4ab7bb976>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd30510c5b4e41e9a85708c4ab7bb976>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016068
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(x) < .0001f || Math.Abs(y) < .0001f || Math.Abs(z) < .0001f) return
    false;\n        int result = (int)x + y + (int)z;\n        if (result > 0) return
    true;\n        return false;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd87hw45m.cs(23,22): error CS0266: Cannot implicitly convert type ''float''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660016068
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        Debug.Assert(Mathf.Approximately(x,
    (float)y));\n        Debug.Assert(Mathf.Approximately(y, (float)z));\n        Debug.Assert(Mathf.Approximately(y,
    (float)x));\n        return (x == Mathf.Round(x + y) && x == Mathf.Round(y + z)
    && x == Mathf.Round(y + x));\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1ltaq3pg.cs(22,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmp1ltaq3pg.cs(23,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmp1ltaq3pg.cs(24,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmp1ltaq3pg.cs(25,22): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmp1ltaq3pg.cs(25,49): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmp1ltaq3pg.cs(25,76): error CS0103: The name ''Mathf'' does not exist in
    the current context

    '
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x - y + z) <= Math.Abs(x + y);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <835f963235fc424cbe758d65864f52ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <835f963235fc424cbe758d65864f52ed>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016068
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        Debug.Assert(!float.IsNaN(x)
    && !float.IsNaN(y) && !float.IsNaN(z));\n        return !float.IsInfinity(x) &&
    !float.IsInfinity(y) && !float.IsInfinity(z) &&\n            !int.IsNaN(x) &&
    !int.IsNaN(y) && !int.IsNaN(z);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn5z9yu28.cs(24,18): error CS0117: ''int'' does not contain a definition
    for ''IsNaN''

    /tmp/tmpn5z9yu28.cs(24,35): error CS0117: ''int'' does not contain a definition
    for ''IsNaN''

    /tmp/tmpn5z9yu28.cs(24,52): error CS0117: ''int'' does not contain a definition
    for ''IsNaN''

    '
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x + y == z));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0be82bbecc954ed08a136dc6571c41b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0be82bbecc954ed08a136dc6571c41b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        bool
    result = true;\n        if (Math.Abs(x) > double.Epsilon) {\n            if (Math.Abs(y)
    > double.Epsilon) {\n                if (Math.Abs(z) > double.Epsilon) {\n                    if
    (Math.Abs(x) > Math.Abs(y) && Math.Abs(x) > Math.Abs(z)) {\n                        result
    = true;\n                    } else {\n                        result = false;\n
    \                   }\n                } else {\n                    result =
    false;\n                }\n            } else {\n                result = false;\n
    \           }\n        } else {\n            result = false;\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4fd59de6a47e481986d8ce9a3525c75c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4fd59de6a47e481986d8ce9a3525c75c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x == (float)(x + y)) && (y == (float)(x + z)) && (z == (float)(x+y)));\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1016ba4e417416591030950dfed9f12>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1016ba4e417416591030950dfed9f12>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    x == y || (Math.Abs(x - y) < 0.000000000001f && Math.Abs(x - z) < 0.000000000001f\n
    \                            && Math.Abs(y - z) < 0.000000000001f);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <20da544bd5e74988898f9994f6e90188>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <20da544bd5e74988898f9994f6e90188>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        double
    xx = Math.Abs(x);\n        double yy = Math.Abs(y);\n        double zz = Math.Abs(z);\n
    \       return (x == (float)xx && y == (float)yy && z == (float)zz);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <11f77894f01245e5add96b494bf205e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <11f77894f01245e5add96b494bf205e8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (x < 0 || y < 0 || z < 0) {\n            return false;\n        }\n        return
    (x == x + (y * y) + (z * z)) || (x == x - (y * y) - (z * z)) || (x == x + (y *
    z) - (z * y)) || (x == x - (y * z) + (z * y));\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89d2b790c3da4d6bb930d3d34807ce9e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <89d2b790c3da4d6bb930d3d34807ce9e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016068
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        long
    sum = (long)x + z + y;\n        bool boolValue = (sum >= 0L);\n        return
    boolValue;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbc28udgl.cs(22,20): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660016068
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        float
    sum = x + y + z;\n        if (sum != (x + y + z)) {\n            return false;\n
    \       } else {\n            return (x.ToInt32() == (int)x && y.ToInt32() ==
    (int)y && z.ToInt32() == (int)z);\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpplj2yq5r.cs(26,23): error CS1061: ''float'' does not contain a definition
    for ''ToInt32'' and no accessible extension method ''ToInt32'' accepting a first
    argument of type ''float'' could be found (are you missing a using directive or
    an assembly reference?)

    /tmp/tmpplj2yq5r.cs(26,48): error CS1061: ''float'' does not contain a definition
    for ''ToInt32'' and no accessible extension method ''ToInt32'' accepting a first
    argument of type ''float'' could be found (are you missing a using directive or
    an assembly reference?)

    /tmp/tmpplj2yq5r.cs(26,73): error CS1061: ''float'' does not contain a definition
    for ''ToInt32'' and no accessible extension method ''ToInt32'' accepting a first
    argument of type ''float'' could be found (are you missing a using directive or
    an assembly reference?)

    '
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        double
    d = (double)x + y; // cast to double to avoid loss of precision\n        return
    z == d;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ed76b346d1a4157aae6e61345f3566a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ed76b346d1a4157aae6e61345f3566a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x + y) == z) || ((x + z) == y) || ((y + z) == x);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c959ef0113df41ffbd98b223662a59f2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c959ef0113df41ffbd98b223662a59f2>:0
    \n"
  stdout: ''
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(x) >= 1 ^ Math.Abs(y) >= 1 ^ Math.Abs(z) >= 1) {\n            return
    false;\n        }\n        var n1 = Math.Abs(x);\n        var n2 = Math.Abs(y);\n
    \       var n3 = Math.Abs(z);\n        if (n1 == n2 ^ n2 == n3) {\n            return
    true;\n        }\n        if (n2 < n1 || n2 < n3 || n1 < n3) {\n            return
    false;\n        }\n        double d1 = (double)n1;\n        double d2 = (double)n2;\n
    \       double d3 = (double)n3;\n        if (Math.Abs(d1 - d2) <= 0.01 ^\n            Math.Abs(d1
    - d3) <= 0.01 ^\n            Math.Abs(d2 - d3) <= 0.01) {\n            return
    true;\n        }\n        double d11 = (d1 - d2) * (d1 - d2);\n        double
    d22 = (d1 - d3) * (d2 - d3);\n        double d33 = (d2 - d3) * (d3 - d3);\n        if
    ((d11 + d22 + d33) < 0.0000000001) {\n            return true;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe44ca69b0694767ac72b673380d4efb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe44ca69b0694767ac72b673380d4efb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        Debug.Assert(z
    > 0.0f);\n        Debug.Assert(y > 0.0f);\n        Debug.Assert(y > z);\n        return
    (Math.Abs(x + y + z) <= Mathf.Epsilon ||\n            (x >= y && x <= z && y >=
    z));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplhybguwi.cs(25,40): error CS0103: The name ''Mathf'' does not exist in
    the current context

    '
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x + y + z) == z);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <56b49d60fa6740e0bfb5fc22451cd8ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <56b49d60fa6740e0bfb5fc22451cd8ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (x + y == z && Math.Truncate(x) == x && Math.Truncate(y) == y && Math.Truncate(z)
    == z)\n            return true;\n        else\n            return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8becc3be79784f16ac2030713a7a919d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8becc3be79784f16ac2030713a7a919d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (x == y + z && x >= 0f && x <= 1f) || // check if x equals to y + z\n               (x
    == y - z && x >= 0f && x <= 1f) || // check if x equals to y - z\n               (x
    == z + y && x >= 0f && x <= 1f);  // check if x equals to z + y\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <67b4ae16de234ff3b34fe8207666b9ff>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <67b4ae16de234ff3b34fe8207666b9ff>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        long
    a = (long)Math.Abs(x);\n        long b = (long)Math.Abs(y);\n        long c =
    (long)Math.Abs(z);\n        return (x == ((a + b + c) == (a * a + b * b + c *
    c)) && y == ((a - b - c) == (a * a * b + b * b + c * c)) && z == ((a - b + c)
    == (a * a * b + b * b - c * c));\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx80w_u5c.cs(25,168): error CS1026: ) expected

    '
  timestamp: 1660016068
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        var
    r1 = (x == (float)x + y) && (x % 1 == 0L) && x == Convert.ToInt32(x);\n        var
    r2 = (x == (float)x + y) && (x % 1 == 0L) && x == Convert.ToInt32(x) - 1;\n        var
    r3 = (x == (float)x + z) && (x % 1 == 0L) && x == Convert.ToInt32(x);\n        var
    r4 = (x == (float)x + z) && (x % 1 == 0L) && x == Convert.ToInt32(x) + 1;\n        return
    r1 || r2 || r3 || r4;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0fa64de4c0ee4df48115e84bf978bd16>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0fa64de4c0ee4df48115e84bf978bd16>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        bool
    result = false;\n        if (Math.Abs(x-y) <= 0.00001f && Math.Abs(x-z) <= 0.00001f
    && Math.Abs(y-z) <= 0.00001f) {\n            result = true;\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ef2dad3a4e454ba7a560d5723d6459a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ef2dad3a4e454ba7a560d5723d6459a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x - y == z) || (x - y == z / x)) && Math.Abs(x - y) < double.Epsilon && Math.Abs(z
    - y) < double.Epsilon;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <285c45ecddb849ffaf6d9637317febac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <285c45ecddb849ffaf6d9637317febac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x == z) || (y == z));\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fb5338933df241b98fb9a6455a61052b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fb5338933df241b98fb9a6455a61052b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x - z) < 1e-15 && Math.Abs(y - z) < 1e-15;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <09721dddebd149f1801c675297741b1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <09721dddebd149f1801c675297741b1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x - y + z).CompareTo(0) < 1E-9;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <215b6dee63a6442782aab62463cef684>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <215b6dee63a6442782aab62463cef684>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    x == y || x == z || y == z;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f389d046d2644c02b4f02498a8fd3bfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f389d046d2644c02b4f02498a8fd3bfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    This part is easy\n        if (Math.Abs(x - y + z) < 1e-15) {\n            return
    true;\n        }\n\n        // This part is easy\n        if ((Math.Abs(x) ==
    Math.Abs(y)) || (Math.Abs(x) == Math.Abs(z))) {\n            return true;\n        }\n\n
    \       // This part is hard.\n        // We have to convert our inputs to integers,
    because we can't subtract two floating point numbers.\n        // It also makes
    things easier.\n        // First, we'll need to get rid of the fractional parts
    of our numbers.\n        int[] x = { Convert.ToInt32(x), Convert.ToInt32(y), Convert.ToInt32(z)
    };\n        // And we'll need to subtract the fractional part from the integer
    part, to get just the integer part.\n        int[] y = { x[0] - x[1], x[1] - x[2],
    x[2] - x[0] };\n        // Finally, we'll have to check if the integer part is
    zero.\n        if (x[1] == 0) {\n            return true;\n        }\n        //
    We know that the integer part is non-zero so this must be false.\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9nw9cf21.cs(23,22): error CS0841: Cannot use local variable ''x'' before
    it is declared

    /tmp/tmp9nw9cf21.cs(23,26): error CS0841: Cannot use local variable ''y'' before
    it is declared

    /tmp/tmp9nw9cf21.cs(28,23): error CS0841: Cannot use local variable ''x'' before
    it is declared

    /tmp/tmp9nw9cf21.cs(28,38): error CS0841: Cannot use local variable ''y'' before
    it is declared

    /tmp/tmp9nw9cf21.cs(28,55): error CS0841: Cannot use local variable ''x'' before
    it is declared

    /tmp/tmp9nw9cf21.cs(36,15): error CS0136: A local or parameter named ''x'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmp9nw9cf21.cs(36,57): error CS0841: Cannot use local variable ''y'' before
    it is declared

    /tmp/tmp9nw9cf21.cs(38,15): error CS0136: A local or parameter named ''y'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    '
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (x != 0.0f || y != 0.0f || z != 0.0f) ? \n            (Math.Abs(x - y) + Math.Abs(x
    - z) + Math.Abs(y - z) + Math.Abs(z)) != 0.0f \n            : (Math.Abs(x - y)
    + Math.Abs(x - z) + Math.Abs(y - z) + Math.Abs(z)) != 0.0f;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c3ace249d07b451a963755ed6eed7172>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c3ace249d07b451a963755ed6eed7172>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Round((x + y + z), 0) != Math.Round((x + y + z), 0);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b36d70238fb340cd89c7da10a1a2fc22>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b36d70238fb340cd89c7da10a1a2fc22>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x + (y + z) * (x + y + z)) % 1 == 0);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <75db4451d7ce40cdafba0bcedcddfbb3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <75db4451d7ce40cdafba0bcedcddfbb3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x == z) && (y == z));\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <808c41dc3c8449d39f807abc0658b044>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <808c41dc3c8449d39f807abc0658b044>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x) + Math.Abs(y) == Math.Abs(z) && Math.Abs(x) == Math.Abs(y) \n            &&
    Math.Abs(x) == Math.Abs(z) && Math.Abs(y) == Math.Abs(z);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54e1370304a5404581c8d2a44f4a9e8e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54e1370304a5404581c8d2a44f4a9e8e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        var
    xint = (int)x;\n        var yint = (int)y;\n        var zint = (int)z;\n        return
    (xint + yint + zint) == x;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0badba7c6a354db3b48516b8f791e3d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0badba7c6a354db3b48516b8f791e3d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        var
    sum = x + y + z;\n        return Math.Abs(sum - z) < 0.00001f || Math.Abs(sum
    - y) < 0.00001f || Math.Abs(sum - x) < 0.00001f;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2dec8c70ac9443758bbcd94f72b68bd6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2dec8c70ac9443758bbcd94f72b68bd6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        bool
    retVal = true;\n        long total = (long)x + y - z; // long can be cast to float
    without losing precision\n        if (total != 0) return false;\n        total
    = (long)x + z - y; // long can be cast to float without losing precision\n        if
    (total != 0) return false;\n        total = (long)y - z; // long can be cast to
    float without losing precision\n        if (total != 0) return false;\n        total
    = (long)y - x; // long can be cast to float without losing precision\n        if
    (total != 0) return false;\n        total = (long)z + x; // long can be cast to
    float without losing precision\n        if (total != 0) return false;\n        total
    = (long)z - y; // long can be cast to float without losing precision\n        if
    (total != 0) return false;\n        return true;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_ebzx54k.cs(23,22): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp_ebzx54k.cs(25,17): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp_ebzx54k.cs(27,17): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp_ebzx54k.cs(29,17): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp_ebzx54k.cs(31,17): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp_ebzx54k.cs(33,17): error CS0266: Cannot implicitly convert type ''float''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp_ebzx54k.cs(22,14): warning CS0219: The variable ''retVal'' is assigned
    but its value is never used

    '
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        long
    a = Convert.ToInt64(x);\n        long b = Convert.ToInt64(y);\n        long c
    = Convert.ToInt64(z);\n        double p = (a * a + b * b + c * c - 3) / 8;\n        if
    ((int)Math.Floor(p) == p) {\n            int i = (int)Math.Floor(p);\n            return
    i == p && i == (int)Math.Floor(p) + 1 && i == (int) Math.Floor(p) + 2 && i ==
    (int) Math.Floor(p) + 3 && i == (int) Math.Floor(p) + 4;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d196535d92c3430a92284a570447aa67>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d196535d92c3430a92284a570447aa67>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        bool
    a = IsInteger(x);\n        bool b = IsInteger(y);\n        bool c = IsInteger(z);\n
    \       if (a && b && c) {\n            return true;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnuyw3ucm.cs(22,18): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    /tmp/tmpnuyw3ucm.cs(23,18): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    /tmp/tmpnuyw3ucm.cs(24,18): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    '
  timestamp: 1660016069
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    !Mathf.Approximately(x, 0) && !Mathf.Approximately(y, 0) && !Mathf.Approximately(z,
    0) ? x == y + z : false;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxx2wr_8r.cs(22,17): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpxx2wr_8r.cs(22,47): error CS0103: The name ''Mathf'' does not exist in
    the current context

    /tmp/tmpxx2wr_8r.cs(22,77): error CS0103: The name ''Mathf'' does not exist in
    the current context

    '
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((int)x) == ((int)y) + ((int)z);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71dfde4fd6e94a79b1b37eb3a2fefa69>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71dfde4fd6e94a79b1b37eb3a2fefa69>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Int32.TryParse(x.ToString(), out x) && Int32.TryParse(y.ToString(), out y) \n
    \           && Int32.TryParse(z.ToString(), out z)) {\n            return (x ==
    y || x == z || y == z);\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphhdi3ukv.cs(22,46): error CS1503: Argument 2: cannot convert from ''out
    float'' to ''out int''

    /tmp/tmphhdi3ukv.cs(22,85): error CS1503: Argument 2: cannot convert from ''out
    float'' to ''out int''

    /tmp/tmphhdi3ukv.cs(23,49): error CS1503: Argument 2: cannot convert from ''out
    float'' to ''out int''

    '
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //Console.WriteLine(x
    + \" \" + y + \" \" + z);\n        // Check if all numbers are integers\n        //bool
    allInts = true;\n        //for (int i = 0; i < 3; i++) {\n        //    if (x
    != (int) x || y != (int) y || z != (int) z) allInts = false;\n        //}\n        //
    Check whether any of the numbers are equal to the sum of the other two\n        if
    ((x + y == z) || (x + z == y) || (y + z == x)) {\n            return true;\n        }
    else {\n            return false;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a22f314874404b45896f733624c94f2d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a22f314874404b45896f733624c94f2d>:0
    \n"
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    Return false if the numbers are not integers\n        if (Math.Floor(x) != x ||
    Math.Floor(y) != y || Math.Floor(z) != z) {\n            return false;\n        }\n\n
    \       // Return true if any of the numbers is equal to the sum of the other
    two\n        return (x == y + z);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <85f87414c8404311a415691ea9e2afb1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <85f87414c8404311a415691ea9e2afb1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (x == (x + y + z)) || (x == (x - y + z)) || (x == (x - y - z)) || (x == (x + y
    - z));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aefd9ae9df60403f96f827bc1638eb18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aefd9ae9df60403f96f827bc1638eb18>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        Debug.WriteLine(\"AnyInt
    x = {0}, y = {1}, z = {2}\", x, y, z);\n        if (x < y) {\n            if (y
    < z) {\n                if (x < z) {\n                    return true;\n                }\n
    \               return true;\n            }\n            return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "AnyInt x = 2, y = 3, z = 1\nAnyInt x = 2.5, y = 2, z = 3\nAnyInt x = 1.5,
    y = 5, z = 3.5\nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b0aa90910c94df1bf92cdb1f67ff0b3>:0
    \nAnyInt x = 2, y = 6, z = 2\nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b0aa90910c94df1bf92cdb1f67ff0b3>:0
    \nAnyInt x = 4, y = 2, z = 2\nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail"
  stdout: ''
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (y == z) {\n            return true;\n        }\n        if (x >= 0 || y >= 0
    || z >= 0) {\n            return Math.Abs(x - y) == Math.Abs(x - z);\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9e7fb3be62d4a82ab0f0f0dcca126fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9e7fb3be62d4a82ab0f0f0dcca126fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        var
    x = Math.Abs(x);\n        var y = Math.Abs(y);\n        var z = Math.Abs(z);\n\n
    \       if (x > y)\n            if (x > z)\n                return true;\n            else\n
    \               return false;\n        else if (y > z)\n            return true;\n
    \       else\n            return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp025fgq47.cs(22,13): error CS0136: A local or parameter named ''x'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmp025fgq47.cs(22,26): error CS0841: Cannot use local variable ''x'' before
    it is declared

    /tmp/tmp025fgq47.cs(23,13): error CS0136: A local or parameter named ''y'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmp025fgq47.cs(23,26): error CS0841: Cannot use local variable ''y'' before
    it is declared

    /tmp/tmp025fgq47.cs(24,13): error CS0136: A local or parameter named ''z'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmp025fgq47.cs(24,26): error CS0841: Cannot use local variable ''z'' before
    it is declared

    '
  timestamp: 1660016069
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        var
    sum = x + y;\n        if (sum != z) {\n            return false;\n        }\n
    \       Debug.Assert(x == y + z, \"Error in your logic\");\n        Debug.Assert(x
    == y + z, \"Error in your logic\");\n        Debug.Assert(x == y + z, \"Error
    in your logic\");\n        return true;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9d04e3742d3143ebb2a3234fa3325a5f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9d04e3742d3143ebb2a3234fa3325a5f>:0
    \nFail: Error in your logic\n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.F"
  stdout: ''
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        float
    a = (float)(x + y);\n        float b = (float)(z);\n\n        bool any = false;\n\n
    \       if (a == b)\n        {\n            any = true;\n        }\n\n        if
    (Math.Abs(a) < 0.0001f || Math.Abs(b) < 0.0001f)\n        {\n            any =
    false;\n        }\n\n        return any;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3ccbc6835cfd440db913d0d1461b2184>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3ccbc6835cfd440db913d0d1461b2184>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (Math.Abs(x - y) < Math.Abs(x - z) && Math.Abs(x - z) < Math.Abs(y - z) && Math.Abs(x
    - z) < Math.Abs(y - x));\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7553713143694d2dba81bb6fb6fd0e84>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7553713143694d2dba81bb6fb6fd0e84>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        var
    sum = new float[3];\n        sum[0] = x + y;\n        sum[1] = x - y;\n        sum[2]
    = z + z;\n        bool result = true;\n        if (sum.All(x => x == sum[0]) ||
    (sum.All(x => x == sum[1]) && (sum.All(x => x == sum[2])))) {\n            return
    true;\n        }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b80f783ff2ce4258a460d326964d0092>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b80f783ff2ce4258a460d326964d0092>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        bool
    result = false;\n        float sum = (float.Parse(x.ToString()) + float.Parse(y.ToString())
    + float.Parse(z.ToString()));\n        bool bresult = sum == (float.Parse(x.ToString())
    + float.Parse(y.ToString()) + float.Parse(z.ToString()));\n        bool andis
    = (float.Parse(x.ToString()) + float.Parse(y.ToString()) + float.Parse(z.ToString())).Equals(sum);\n
    \       return result & bresult & andis;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <153285c649084c2c82d88f5ae3a15250>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <153285c649084c2c82d88f5ae3a15250>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(x) > Math.Abs(y)) {\n            return Math.Abs(x) == Math.Abs(z);\n
    \       }\n        if (Math.Abs(y) > Math.Abs(z)) {\n            return Math.Abs(y)
    == Math.Abs(z);\n        }\n        if (Math.Abs(x) > Math.Abs(z)) {\n            return
    Math.Abs(x) == Math.Abs(z);\n        }\n        if (Math.Abs(y) > Math.Abs(z))
    {\n            return Math.Abs(y) == Math.Abs(z);\n        }\n        return Math.Abs(x)
    + Math.Abs(y) == Math.Abs(z);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f87bc73bd3474bf98866edd04d049c30>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f87bc73bd3474bf98866edd04d049c30>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    The code below is what you'll need to do\n        if (Math.Abs(x) > Math.Abs(y)
    || Math.Abs(x) > Math.Abs(z) || Math.Abs(y) > Math.Abs(z))\n        {\n            return
    true;\n        }\n        else\n        {\n            return false;\n        }\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <db3fd737b3024324af025c26129f8785>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <db3fd737b3024324af025c26129f8785>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        double
    xd = (double)x;\n        double yd = (double)y;\n        double zd = (double)z;\n
    \       if ((xd == zd) && (yd == zd))\n            return true;\n        if ((xd
    == zd) || (yd == zd))\n            return false;\n        if (Math.Abs(xd) > Math.Abs(yd))\n
    \           return Math.Abs(xd) > Math.Abs(zd);\n        return Math.Abs(yd) >
    Math.Abs(zd);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e5b2ccc9b41e4fbc9cb02b27f480e264>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e5b2ccc9b41e4fbc9cb02b27f480e264>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(x - y) > Math.Abs(x - z)) {\n            double a = Convert.ToDouble(x);\n
    \           double b = Convert.ToDouble(y);\n            double c = Convert.ToDouble(z);\n
    \           double d = Math.Abs(a - c);\n            double e = Math.Abs(b - c);\n
    \           double f = Math.Abs(a - b);\n            double g = Math.Abs(c - b);\n
    \           double h = Math.Abs(a - c);\n            double i = Math.Abs(b - c);\n
    \           double j = Math.Abs(a - b);\n            double k = Math.Abs(c - b);\n
    \           double l = Math.Abs(a - c);\n            double m = Math.Abs(b - c);\n
    \           double n = Math.Abs(a - b);\n            double o = Math.Abs(c - b);\n
    \           double p = Math.Abs(a - c);\n            double q = Math.Abs(b - c);\n
    \           double r = Math.Abs(a - b);\n            double s = Math.Abs(c - b);\n
    \           double t = Math.Abs(a - c);\n            double u = Math.Abs(b - c);\n
    \           double v = Math.Abs(a - b);\n            double w = Math.Abs(c - b);\n
    \           double x = Math.Abs(a - c);\n            double y = Math.Abs(b - c);\n
    \           double z = Math.Abs(a - b);\n            double A = Math.Abs(c - b);\n
    \           double B = Math.Abs(a - c);\n            double C = Math.Abs(b - c);\n
    \           double D = Math.Abs(a - b);\n            double E = Math.Abs(c - b);\n
    \           double F = Math.Abs(a - c);\n            double G = Math.Abs(b - c);\n
    \           double H = Math.Abs(a - b);\n            double I = Math.Abs(c - b);\n
    \           double J = Math.Abs(a - c);\n            double K = Math.Abs(b - c);\n
    \           double L = Math.Abs(a - b);\n            double M = Math.Abs(c - b);\n
    \           double N = Math.Abs(a - c);\n            double O = Math.Abs(b - c);\n
    \           double P = Math.Abs(a - b);\n            double Q = Math.Abs(c - b);\n
    \           double R = Math.Abs(a - c);\n            double S = Math.Abs(b - c);\n
    \           double T = Math.Abs(a - b);\n            double U = Math.Abs(c - b);\n
    \           double V = Math.Abs(a - c);\n            double W = Math.Abs(b - c);\n
    \           double X = Math.Abs(a - b);\n            double Y = Math.Abs(c - b);\n
    \           double Z = Math.Abs(a - c);\n            double AA = Math.Abs(c -
    b);\n            double AB = Math.Abs(a - \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqzv15dvy.cs(76,37): error CS1525: Invalid expression term ''}''

    /tmp/tmpqzv15dvy.cs(76,37): error CS1026: ) expected

    /tmp/tmpqzv15dvy.cs(76,37): error CS1002: ; expected

    /tmp/tmpqzv15dvy.cs(78,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpqzv15dvy.cs(91,2): error CS1513: } expected

    '
  timestamp: 1660016069
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        double
    xy = MathHelper.Abs(x * y);\n        double xz = MathHelper.Abs(x * z);\n        double
    yz = MathHelper.Abs(y * z);\n        if (((xy <= xz) && (xy <= yz)) || ((xy <=
    yz) && (xz <= yz))) {\n            if (((xz < xy) || (yz < xy)) && Math.Abs(xz
    - yz) < MathHelper.Epsilon) {\n                return true;\n            }\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcdop1aso.cs(22,21): error CS0103: The name ''MathHelper'' does not exist
    in the current context

    /tmp/tmpcdop1aso.cs(23,21): error CS0103: The name ''MathHelper'' does not exist
    in the current context

    /tmp/tmpcdop1aso.cs(24,21): error CS0103: The name ''MathHelper'' does not exist
    in the current context

    /tmp/tmpcdop1aso.cs(26,65): error CS0103: The name ''MathHelper'' does not exist
    in the current context

    '
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        float
    a = x + y;\n        float b = z + x;\n        float c = x - y;\n        float
    d = y - z;\n        float e = x - z;\n        float f = y + z;\n        float
    g = x + y;\n        float h = y - x;\n        float i = x + z;\n        float
    j = y - z;\n        float k = x - y;\n        float l = y - x;\n        float
    m = x + z;\n        float n = y - z;\n        float o = (float)Math.Abs(a + b
    + c + d + e + f + g + h + i + j + k + l + m + n);\n        return a == o * o &&
    b == o * o && c == o * o && d == o * o && e == o * o && f == o * o && g == o *
    o && h == o * o && i == o * o && j == o * o && k == o * o && l == o * o && m ==
    o * o && n == o * o;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <317761087cf342d5ab6cf4870e9e73b8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <317761087cf342d5ab6cf4870e9e73b8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (z - x + y > 0.0001f);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57bb3f39e76e4092a735591609c6c251>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57bb3f39e76e4092a735591609c6c251>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        var
    sumX = x + y;\n        var sumY = y + z;\n        var sumZ = z + x;\n        if
    (sumX == sumY) {\n            return true;\n        }\n        if (sumX == sumZ)
    {\n            return true;\n        }\n        if (sumY == sumZ) {\n            return
    true;\n        }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f),
    (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L,
    (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7618df2880e44d4392672e64575ad044>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7618df2880e44d4392672e64575ad044>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (Math.Abs(x - z) > 0.0f || Math.Abs(y - z) > 0.0f) {\n            return false;\n
    \       }\n        return (int)(x - y) == (int)(x + y);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L)
    == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L) == (false));\n
    \   Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L,
    (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L,
    (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n
    \   Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L,
    (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L,
    (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L)
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f96cd2d7639d402caa1f3cfd3ab3f19c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f96cd2d7639d402caa1f3cfd3ab3f19c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    x.Equals(y + z);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4fed268aeea4c859a0f82e39e5bd840>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4fed268aeea4c859a0f82e39e5bd840>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    Math.Abs(x - y + z) <= (float)(double.Epsilon * Math.Abs(y));\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df0422b532f04d44be2c9e152089838c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <df0422b532f04d44be2c9e152089838c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        //
    Your code here\n        float num1 = Math.Abs(x);\n        float num2 = Math.Abs(y);\n
    \       float num3 = Math.Abs(z);\n        float num4 = Math.Sqrt(num1 * num1
    + num2 * num2 + num3 * num3);\n        float num5 = Math.Sqrt(num1 * num1 - num2
    * num2 - num3 * num3);\n        return num4 == num5 && num4 > 0 && num4 < num5;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgf5x_ivu.cs(26,22): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpgf5x_ivu.cs(27,22): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660016070
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    ((x == 0) && (y == 0) && (z == 0)) {\n            return false;\n        }\n        return
    IsPowerOfTwo(x) && IsPowerOfTwo(y) && IsPowerOfTwo(z) && IsInteger(x) && IsInteger(y)
    && IsInteger(z);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkg2068vr.cs(25,16): error CS0103: The name ''IsPowerOfTwo'' does not exist
    in the current context

    /tmp/tmpkg2068vr.cs(25,35): error CS0103: The name ''IsPowerOfTwo'' does not exist
    in the current context

    /tmp/tmpkg2068vr.cs(25,54): error CS0103: The name ''IsPowerOfTwo'' does not exist
    in the current context

    /tmp/tmpkg2068vr.cs(25,73): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    /tmp/tmpkg2068vr.cs(25,89): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    /tmp/tmpkg2068vr.cs(25,105): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    '
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        if
    (x != y && x != z && y != z && x != 0 && y != 0 && z != 0 && x % 1 == 0 && y %
    1 == 0 && z % 1 == 0) {\n            return true;\n        }\n        return false;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f2f30594aadd4560a8f0e53ef01aa726>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f2f30594aadd4560a8f0e53ef01aa726>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    (Math.Abs(x) + Math.Abs(y) + Math.Abs(z)) < (Math.Abs(x) + Math.Abs(y) + Math.Abs(z)
    + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e71f4100176e4700b9884059503849f4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e71f4100176e4700b9884059503849f4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    z == Mathf.Sqrt(x*x + y*y);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AnyInt((float)2L, (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f),
    (float)2L, (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L,
    (3.5f)) == (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L)
    == (false));\n    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L,
    (float)6L, (float)2L) == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L)
    == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L, (float)7L) == (false));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8wiz4vz5.cs(22,21): error CS0103: The name ''Mathf'' does not exist in
    the current context

    '
  timestamp: 1660016070
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        Debug.WriteLine($\"{x,
    y, z, x.ToString(CultureInfo.InvariantCulture), y.ToString(CultureInfo.InvariantCulture),
    z.ToString(CultureInfo.InvariantCulture)};\");\n        var a = x != y ? x : z;\n
    \       var b = x != y ? y : z;\n        var c = x != y ? z : x;\n        var
    d = x != y ? y : x;\n        var e = x != y ? z : y;\n        var f = x != y ?
    y : z;\n        var g = x != y ? z : x;\n        var h = x != y ? y : z;\n        Debug.WriteLine($\"{a,
    b, c, d, e, f, g, h};\");\n        return a == b + c + d + e + f + g + h;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm89z2nf9.cs(22,31): error CS1073: Unexpected token '',''

    /tmp/tmpm89z2nf9.cs(31,31): error CS1073: Unexpected token '',''

    '
  timestamp: 1660016070
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        return
    ((x + y) + z) == (float)(((double)x) + ((double)y) + ((double)z));\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L, (float)3L,
    (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L, (float)3L)
    == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) == (false));\n
    \   Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n    Debug.Assert(AnyInt((float)4L,
    (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f), (2.2f), (2.2f))
    == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L) == (true));\n
    \   Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n    Debug.Assert(AnyInt((float)3L,
    (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f), (float)4L,
    (float)7L) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd98feb268ef4dc9b08a9d905f212f29>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd98feb268ef4dc9b08a9d905f212f29>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660016070
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true
    if one of the numbers is equal to the sum of the other two, and all numbers are
    integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>
    AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,
    (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,
    (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n    //
    (false)\n    public static bool AnyInt(float x, float y, float z) {\n        int
    sum = x + y + z;\n        return ((sum % 1) == 0) && ((sum % 2) == 0);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,
    (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,
    (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==
    (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n
    \   Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),
    (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)
    == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n
    \   Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),
    (float)4L, (float)7L) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbvqg2z7v.cs(22,19): error CS0266: Cannot implicitly convert type ''float''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660016070

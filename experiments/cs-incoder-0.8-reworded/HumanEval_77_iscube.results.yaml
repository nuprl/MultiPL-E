language: cs
name: HumanEval_77_iscube
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // Your code here...\n        if (a > 1) return false;\n
    \       if (a == 1) return true;\n        if (a % 2 == 0) return false;\n        if
    (a % 3 == 0) return false;\n        if (a % 4 == 0) return false;\n        if
    (a % 5 == 0) return false;\n        if (a % 6 == 0) return false;\n        if
    (a % 7 == 0) return false;\n        if (a % 8 == 0) return false;\n        if
    (a % 9 == 0) return false;\n        if (a % 10 == 0) return false;\n        if
    (a % 11 == 0) return false;\n        if (a % 12 == 0) return false;\n        if
    (a % 13 == 0) return false;\n        if (a % 14 == 0) return false;\n        if
    (a % 15 == 0) return false;\n        if (a % 16 == 0) return false;\n        if
    (a % 17 == 0) return false;\n        if (a % 18 == 0) return false;\n        if
    (a % 19 == 0) return false;\n        if (a % 20 == 0) return false;\n        if
    (a % 21 == 0) return false;\n        if (a % 22 == 0) return false;\n        if
    (a % 23 == 0) return false;\n        if (a % 24 == 0) return false;\n        if
    (a % 25 == 0) return false;\n        if (a % 26 == 0) return false;\n        if
    (a % 27 == 0) return false;\n        if (a % 28 == 0) return false;\n        if
    (a % 29 == 0) return false;\n        if (a % 30 == 0) return false;\n        if
    (a % 31 == 0) return false;\n        if (a % 32 == 0) return false;\n        if
    (a % 33 == 0) return false;\n        if (a % 34 == 0) return false;\n        if
    (a % 35 == 0) return false;\n        if (a % 36 == 0) return false;\n        if
    (a % 37 == 0) return false;\n        if (a % 38 == 0) return false;\n        if
    (a % 39 == 0) return false;\n        if (a % 40 == 0) return false;\n        if
    (a % 41 == 0) return false;\n        if (a % 42 == 0) return false;\n        if
    (a % 43 == 0) return false;\n        if (a % 44 == 0) return false;\n        if
    (a % 45 == 0) return false;\n        if (a % 46 == 0) return false;\n        if
    (a % 47 == 0) return false;\n        if (a % 48 == 0) return false;\n        if
    (a % 49 == 0) return false;\n        if (a % 50 == 0) return false;\n        if
    (a % 51 == 0) return false;\n        if (a % 52 == 0) return false;\n        if
    (a % 53 == 0) return false;\n        if (a % 54 == 0) return false;\n        if
    (a % 55 == 0) return false;\n        if (a % 56 == 0) return false;\n\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph0u09u6k.cs(25,24): error CS0161: ''Problem.Iscube(long)'': not all code
    paths return a value

    '
  timestamp: 1660008914
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        Debug.Assert(a > 0);\n        Debug.Assert(a % 1 ==
    0);\n        if (a == 1) {\n            return true;\n        } else if (a ==
    0) {\n            return false;\n        } else if (a % 2 == 0) {\n            return
    Iscube(a / 2) || Iscube(a - 1);\n        } else if (a % 3 == 0) {\n            return
    Iscube(a / 3) || Iscube(a - 1) || Iscube(a / 2) || Iscube(a - 1);\n        } else
    {\n            bool c1 = Iscube(a / 2);\n            bool c2 = Iscube(a - 1);\n
    \           Debug.Assert(!c1 || c1);\n            return c1 && c2;\n        }\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2c83c15ebe834c1d9e010c8e00af0ec7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Iscube (System.Int64 a) [0x00000] in <2c83c15ebe834c1d9e010c8e00af0ec7>:0
    \n  at Problem.Main (System.String[] args) [0x00000] in <2c83c15ebe834c1d9e010c8e00af0ec7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342"
  stdout: None
  timestamp: 1660008919
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // Write your code here\n        return ((a >= 1L) &&
    (a <= 3L)\n            && (a % 2) == 0L\n            && (a % 3) == 0L\n            &&
    (a % 5) == 0L);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6de225d3b6d4422ebf1d4f4b0b76d534>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6de225d3b6d4422ebf1d4f4b0b76d534>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008914
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if ((long)Math.Pow(a, 3) == a) {\n            return
    true;\n        }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1f5d4464c69f4dd1b52eb7c99b8c46df>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1f5d4464c69f4dd1b52eb7c99b8c46df>:0
    \n"
  stdout: ''
  timestamp: 1660008914
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        //if (a > long.MaxValue || a < long.MinValue) {\n        //
    \   return false;\n        //}\n        long cube;\n        cube = a * a / 3;\n
    \       cube = cube.Equals(a);\n        cube = cube.Equals(1L);\n        cube
    = cube.Equals(2L);\n        cube = cube.Equals(3L);\n        cube = cube.Equals(4L);\n
    \       cube = cube.Equals(5L);\n        cube = cube.Equals(6L);\n        cube
    = cube.Equals(7L);\n        cube = cube.Equals(8L);\n        cube = cube.Equals(9L);\n
    \       cube = cube.Equals(10L);\n        cube = cube.Equals(11L);\n        cube
    = cube.Equals(12L);\n        cube = cube.Equals(13L);\n        cube = cube.Equals(14L);\n
    \       cube = cube.Equals(15L);\n        cube = cube.Equals(16L);\n        cube
    = cube.Equals(17L);\n        cube = cube.Equals(18L);\n        cube = cube.Equals(19L);\n
    \       cube = cube.Equals(20L);\n        cube = cube.Equals(21L);\n        cube
    = cube.Equals(22L);\n        cube = cube.Equals(23L);\n        cube = cube.Equals(24L);\n
    \       cube = cube.Equals(25L);\n        cube = cube.Equals(26L);\n        cube
    = cube.Equals(27L);\n        cube = cube.Equals(28L);\n        cube = cube.Equals(29L);\n
    \       cube = cube.Equals(30L);\n        cube = cube.Equals(31L);\n        cube
    = cube.Equals(32L);\n        cube = cube.Equals(33L);\n        cube = cube.Equals(34L);\n
    \       cube = cube.Equals(35L);\n        cube = cube.Equals(36L);\n        cube
    = cube.Equals(37L);\n        cube = cube.Equals(38L);\n        cube = cube.Equals(39L);\n
    \       cube = cube.Equals(40L);\n        cube = cube.Equals(41L);\n        cube
    = cube.Equals(42L);\n        cube = cube.Equals(43L);\n        cube = cube.Equals(44L);\n
    \       cube = cube.Equals(45L);\n        cube = cube.Equals(46L);\n        cube
    = cube.Equals(47L);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7m9m8fno.cs(31,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(32,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(33,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(34,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(35,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(36,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(37,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(38,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(39,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(40,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(41,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(42,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(43,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(44,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(45,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(46,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(47,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(48,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(49,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(50,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(51,16): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    /tmp/tmp7m9m8fno.cs(52,16): err'
  timestamp: 1660008914
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int t = 1;\n        long d = 1;\n        while (a !=
    0) {\n            t = a % t;\n            if (t == 0) {\n                d = (d
    * t);\n                if (d == a) {\n                    return true;\n                }\n
    \           }\n            a = a / t;\n        }\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq7v263bq.cs(29,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008914
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a > 0)\n            return (Cube(a, 0) == a);\n
    \       else\n            return (Cube(a, 1) == a);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpag8z7css.cs(27,21): error CS0103: The name ''Cube'' does not exist in
    the current context

    /tmp/tmpag8z7css.cs(29,21): error CS0103: The name ''Cube'' does not exist in
    the current context

    '
  timestamp: 1660008914
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int s = (int)a;\n        if (s % 2 == 0 || s % 3 ==
    0 || s % 5 == 0)\n            return false;\n        if (s % 2 == 1 && s % 3 ==
    1 && s % 5 == 1)\n            return true;\n        if (s % 2 == 1 && s % 3 ==
    1 && s % 5 == 2)\n            return false;\n        if (s % 2 == 2 && s % 3 ==
    2)\n            return true;\n        if (s % 2 == 2)\n            return false;\n
    \       if (s % 3 == 3)\n            return true;\n        if (s % 5 == 5)\n            return
    true;\n        return false;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) ==
    (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d86034e998284df4920d21019863441a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d86034e998284df4920d21019863441a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008914
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long m = a * (a * a);\n        long n = (long) Math.Sqrt(m);\n
    \       long b = a % n;\n        return (b == 0);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <87fb6e6e35674fbf9227d24ca4e253bb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <87fb6e6e35674fbf9227d24ca4e253bb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008914
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return a*a*a == a; // a*a*a is same as a\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bdf8d62f4d0f4477a74e28d2fc03c94d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bdf8d62f4d0f4477a74e28d2fc03c94d>:0
    \n"
  stdout: ''
  timestamp: 1660008914
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long cube = 1L;\n        bool isCube = false;\n\n        while(true)
    {\n            if((cube*cube <= a) && (a*a <= cube)) {\n                isCube
    = true;\n                break;\n            }\n            else {\n                cube++;\n
    \           }\n        }\n\n        return isCube;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ab827cb86e744f70a78abac19c7e7548>:0
    \n"
  stdout: None
  timestamp: 1660008919
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return (((a & 0x1ff) == 0) ? (a%2 == 0) : (a % 3 ==
    0));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f9bc87d3657419795e82025ab543be5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f9bc87d3657419795e82025ab543be5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008914
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a < 0)\n            return false;\n        if (a
    == 0)\n            return true;\n        bool isCube = true;\n        long sum
    = 0;\n        for (int i = 1; i <= 9; i++) {\n            long mult = a * i;\n
    \           sum += mult;\n            if (sum > 100000 || mult > 1000000000 ||
    mult < 0) {\n                isCube = false;\n                break;\n            }\n
    \       }\n        return isCube;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a2abfe81e20c459bb67d964edd79e0b5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a2abfe81e20c459bb67d964edd79e0b5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008914
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a % 1 == 0)\n            if (a < 0)\n                return
    false;\n            if (a == 0)\n                return true;\n            else\n
    \               return a >= (-a) && a <= (Math.Abs(a) * (Math.Sqrt(3) / 2));\n
    \       else\n            return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5bufkdna.cs(32,77): error CS8641: ''else'' cannot start a statement.

    /tmp/tmp5bufkdna.cs(32,77): error CS1003: Syntax error, ''('' expected

    /tmp/tmp5bufkdna.cs(32,77): error CS1525: Invalid expression term ''else''

    /tmp/tmp5bufkdna.cs(32,77): error CS1026: ) expected

    /tmp/tmp5bufkdna.cs(32,77): error CS1002: ; expected

    '
  timestamp: 1660008914
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long x = a;\n        long y = 1;\n        bool result
    = true;\n\n        while (x < y) {\n            if (x * x * x * x == a) {\n                result
    = true;\n                break;\n            }\n            y++;\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n
    \   Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==
    (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <659a7e66ff55412fb44ee8b9689c3928>:0
    \n"
  stdout: None
  timestamp: 1660008919
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool b = false;\n        long m = a % 1 == 0 ? a / 1
    : a;\n        for (int i = 2; i * i <= m; ++i) {\n            if (i * i == m)
    {\n                b = true;\n            }\n        }\n        return b;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90dbf3b3810e4292869d927070ae5fdb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90dbf3b3810e4292869d927070ae5fdb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008914
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long b = a;\n        long c;\n        while (b != 0)
    {\n            c = b;\n            long d = a * (long)Math.Pow(b, 2);\n            long
    e = d % b != 0;\n            if (e == 0) {\n                if (c % 4 == 0) {\n
    \                   return true;\n                }\n            }\n            b
    = d;\n        }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf1brf67y.cs(31,22): error CS0029: Cannot implicitly convert type ''bool''
    to ''long''

    '
  timestamp: 1660008914
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // Your code here\n        return a%1 == 0 && a%2 ==
    0 && a%3 == 0 && a%4 == 0 && a%5 == 0 && a%6 == 0 && a%7 == 0 && a%8 == 0 && a%9
    == 0 && a%10 == 0 && a%11 == 0 && a%12 == 0 && a%13 == 0 && a%14 == 0 && a%15
    == 0 && a%16 == 0 && a%17 == 0 && a%18 == 0 && a%19 == 0 && a%20 == 0 && a%21
    == 0 && a%22 == 0 && a%23 == 0 && a%24 == 0 && a%25 == 0 && a%26 == 0 && a%27
    == 0 && a%28 == 0 && a%29 == 0 && a%30 == 0 && a%31 == 0 && a%32 == 0 && a%33
    == 0 && a%34 == 0 && a%35 == 0 && a%36 == 0 && a%37 == 0 && a%38 == 0 && a%39
    == 0 && a%40 == 0 && a%41 == 0 && a%42 == 0 && a%43 == 0 && a%44 == 0 && a%45
    == 0 && a%46 == 0 && a%47 == 0 && a%48 == 0 && a%49 == 0 && a%50 == 0 && a%51
    == 0 && a%52 == 0 && a%53 == 0 && a%54 == 0 && a%55 == 0 && a%56 == 0 && a%57
    == 0 && a%58 == 0 && a%59 == 0 && a%60 == 0 && a%61 == 0 && a%62 == 0 && a%63
    == 0 && a%64 == 0 && a%65 == 0 && a%66 == 0 && a%67 == 0 && a%68 == 0 && a%69
    == 0 && a%70 == 0 && a%71 == 0 && a%72 == 0 && a%73 == 0 && a%74 == 0 && a%75
    == 0 && a%76 == 0 && a%77 == 0 && a%78 == 0 && a%79 == 0 && a%80 == 0 && a%81
    == 0 && a%82 == 0 && a%83 == 0 && a%84 == 0 && a%85 == 0 && a%86 == 0 && a%87
    == 0 && a%88 == 0 && a%89 == 0 && a%90 == 0 && a%91 == 0 && a%92 == 0 && a%93
    == 0 && a%94 == 0 && a%95 == 0 && a%96 == 0 && a%97 == 0 && a%98 == 0 && a%99
    == 0 && a%100 == 0 && a%101 == 0 && a%102 == 0 \n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8bfwi34l.cs(27,1332): error CS1002: ; expected

    '
  timestamp: 1660008914
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int b = 1;\n        while (a >= b) {\n            b
    = b * b;\n            a -= b;\n        }\n        return a == 0 || a == (long)Math.Pow(b,
    3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3df5ca4b8889479cb0abb1e15be4a041>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3df5ca4b8889479cb0abb1e15be4a041>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008914
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long b = a * a;\n        b += a;\n        b += a;\n
    \       b *= a;\n        if (b == a) {\n            return true;\n        } else
    {\n            return false;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <73d5f56b41df4e8fbb8062bb4e491ff3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <73d5f56b41df4e8fbb8062bb4e491ff3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008914
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool isValid = true;\n\n        // check valid values\n
    \       if (a < 0) isValid = false;\n        if (a >= 0) return true;\n        if
    (a != 0L) return false; // negative number\n\n        int b = Convert.ToInt32(Math.Floor(Math.Sqrt(a)));\n
    \       int c = Convert.ToInt32(Math.Floor(a));\n\n        for (int i = 1; i <
    b; i++) {\n            if (a % i == 0) return false;\n        }\n\n        return
    b == c;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppjvtt9la.cs(34,38): error CS0121: The call is ambiguous between the following
    methods or properties: ''Math.Floor(decimal)'' and ''Math.Floor(double)''

    /tmp/tmppjvtt9la.cs(26,14): warning CS0219: The variable ''isValid'' is assigned
    but its value is never used

    '
  timestamp: 1660008914
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long cube = a * Math.Pow(a, 3);\n        if (cube ==
    (long)Math.Pow(a, 3))\n            return true;\n        else\n            return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjrrb9e2w.cs(26,21): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008914
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        double d = Math.Pow(a, 3);\n        double d2 = Math.Pow(d,
    2);\n        return (d2 % 1.0 == 0.0);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ff41b044731e400dab0877e712c03c7f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ff41b044731e400dab0877e712c03c7f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008914
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long cubes = 1;\n        for (int i = 2; i <= a; ++i)
    {\n            cubes *= i;\n        }\n        if (a % cubes == 0)\n            return
    true;\n        else\n            return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <488debedfea34d119e7a0138fdffacc5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <488debedfea34d119e7a0138fdffacc5>:0
    \n\nUnhandled Exception:\nSystem.DivideByZeroException: Attempted to divide by
    zero.\n  at Problem.Iscube (System.Int64 a) [0x0001f] in <488debedfea34d119e7a0138fdffacc5>:0
    \n  at Problem.Main (System.String[] args) [0x00039] in <488debedfea34d119e7a0138fdffacc5>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.DivideByZeroException: Attempted to
    divid"
  stdout: ''
  timestamp: 1660008915
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a < 0)\n            return false;\n        // If
    a = 0, then cube = 0\n        // if a = 1, then cube = 1, if a = 2, then cube
    = 4, etc.\n        int cube = Convert.ToInt32(Math.Pow(a, 1.0 / 3));\n        //
    If cube is a cube, then the number is a cube\n        if (cube*cube == a)\n            return
    true;\n        // If cube is not a cube, then the number is not a cube\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c738b91d4cc64df4b388c5b78a93eae8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c738b91d4cc64df4b388c5b78a93eae8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008915
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return (a*a*a*a) >= 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4e5b80bda5d1478fad5ff68201aaa0de>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4e5b80bda5d1478fad5ff68201aaa0de>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008915
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int n = Convert.ToInt32(a);\n        bool result = true;\n
    \       if (n == 0 || n == 1 || n == -1) return true;\n        if (n % 2 == 0
    || n % 3 == 0) return false;\n        long m = (long)Math.Floor(Math.Ceiling(Math.Sqrt((double)n)));\n
    \       if (m % 2 == 0 || m % 3 == 0) return false;\n        long p = (long)Math.Floor((double)Math.Pow(m,
    3.0) * 0.5);\n        if (p % 2 == 0 || p % 3 == 0) return false;\n        bool
    isEven = false;\n        if (n % 2 == 0) isEven = true;\n        long a1 = m /
    2;\n        long a2 = m / 3;\n        bool isOddEven = (a1 % 2 == 0 && a2 % 2
    == 0) || (a1 % 3 == 0 && a2 % 3 == 0);\n        if (isEven == isOddEven)\n        {\n
    \           long a3 = m / 4;\n            long a4 = m / 6;\n            bool isOddOdd
    = (a1 % 2 == 0 && a2 % 2 == 0) || (a1 % 3 == 0 && a2 % 3 == 0) || (a1 % 4 == 0
    && a2 % 4 == 0) || (a1 % 5 == 0 && a2 % 5 == 0) || (a1 % 6 == 0 && a2 % 6 == 0);\n
    \           if (isEven == isOddEven) {\n                long a5 = m / 8;\n                long
    a6 = m / 10;\n                bool isOddEvenOdd = (a1 % 2 == 0 && a2 % 2 == 0)
    || (a1 % 3 == 0 && a2 % 3 == 0) || (a1 % 4 == 0 && a2 % 4 == 0) || (a1 % 5 ==
    0 && a2 % 5 == 0) || (a1 % 6 == 0 && a2 % 6 == 0) || (a1 % 7 == 0 && a2 % 7 ==
    0) || (a1 % 8 == 0 && a2 % 8 == 0) || (a1 % 9 == 0 && a2 % 9 == 0) || (a1 % 10
    == 0 && a2 % 10 == 0);\n                if (isOddEvenOdd == true) {\n                    return
    true;\n                }\n            }\n        }\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8b3628b28c94942b6f98ba374e008bb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8b3628b28c94942b6f98ba374e008bb>:0
    \n"
  stdout: ''
  timestamp: 1660008915
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int max = int.MaxValue;\n        int min = 0;\n        if
    (a > max)\n            return false;\n        if (a < min)\n            return
    true;\n        if (a % 2 == 0 || a < 0 || a > max)\n            return false;\n
    \       long t = a;\n        while (a != 1) {\n            t /= 2;\n            int
    x = a % t;\n            a /= t;\n            if (x < 0 || x >= max)\n                return
    false;\n        }\n        return true;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp52pargwq.cs(37,21): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008915
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int x = 1;\n        int y = 1;\n        while (a % x
    == 0 && a % y == 0)\n        {\n            x = x + 1;\n            y = y + 1;\n
    \       }\n        return a % x == 0 && a % y == 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <803c5a0f4134414fb33ba6500b10331a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <803c5a0f4134414fb33ba6500b10331a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: None
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return (int) Math.Pow(a, 3) == (int) Math.Pow(a, 3)
    * 3;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b606d7a42ee4d6d87d8f858edb8bccd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b606d7a42ee4d6d87d8f858edb8bccd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008915
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return Math.Abs(a) < Math.Abs(a);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6757b12816ad4bbd8334e60894f991ff>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6757b12816ad4bbd8334e60894f991ff>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008915
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool result = false;\n\n        // write your solution
    here\n        long a = a % Math.Pow(8, 3);\n        a = a / Math.Pow(8, 3);\n
    \       a *= Math.Pow(8, 2);\n        a = a % Math.Pow(8, 2);\n        a = a /
    Math.Pow(8, 2);\n        a *= Math.Pow(8, 1);\n        a = a % Math.Pow(8, 1);\n
    \       a = a / Math.Pow(8, 1);\n        a *= Math.Pow(8, 0);\n        a = a %
    Math.Pow(8, 0);\n        a = a / Math.Pow(8, 0);\n        if (a == 1) {\n            result
    = true;\n        }\n\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptzhqrx_c.cs(29,14): error CS0136: A local or parameter named ''a'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmptzhqrx_c.cs(29,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptzhqrx_c.cs(30,13): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptzhqrx_c.cs(31,9): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptzhqrx_c.cs(32,13): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptzhqrx_c.cs(33,13): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptzhqrx_c.cs(34,9): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptzhqrx_c.cs(35,13): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptzhqrx_c.cs(36,13): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptzhqrx_c.cs(37,9): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptzhqrx_c.cs(38,13): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptzhqrx_c.cs(39,13): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptzhqrx_c.cs(29,18): error CS0165: Use of unassigned local variable ''a''

    '
  timestamp: 1660008915
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool ret = false;\n        double temp = a;\n        double
    temp = temp * temp;\n        temp = temp * temp;\n        temp = temp * temp;\n
    \       if (temp == 1)\n            ret = true;\n        return ret;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj7w9pss_.cs(28,16): error CS0128: A local variable or function named ''temp''
    is already defined in this scope

    '
  timestamp: 1660008915
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        ulong u = a;\n        ulong b = 0;\n        while (b
    < u) {\n            b += u;\n            u *= u;\n        }\n        if (b ==
    u)\n            return true;\n        else\n            return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq7v8lb9w.cs(26,19): error CS0266: Cannot implicitly convert type ''long''
    to ''ulong''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008915
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        //bool answer;\n        bool answer = ((1L * a * a *
    a) == (64L * a * a));\n        //answer = (a.Equals(64L * a * a));\n        return
    answer;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c09c99d953a94c9d85aa3d2049e36aec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c09c99d953a94c9d85aa3d2049e36aec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008915
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        double t = Math.Sqrt(a);\n        int i = (int)t;\n
    \       double x = (double)i;\n        double y = (double)(t * i);\n        double
    z = (double)(t * t * i);\n        Console.WriteLine(\"t = {0}, i = {1}, x = {2},
    y = {3}, z = {4}\", t, i, x, y, z);\n        if ((x * x + y * y + z * z == a)
    || ((x * y) == a)) {\n            return true;\n        }\n        return false;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e12bc8fb881457a83e6f568f05d87e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e12bc8fb881457a83e6f568f05d87e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: 't = 1, i = 1, x = 1, y = 1, z = 1

    t = 1.4142135623731, i = 1, x = 1, y = 1.4142135623731, z = 2

    t = NaN, i = -2147483648, x = -2147483648, y = NaN, z = NaN

    t = 8, i = 8, x = 8, y = 64, z = 512

    t = 13.4164078649987, i = 13, x = 13, y = 174.413302244984, z = 2340

    t = 31.6227766016838, i = 31, x = 31, y = 980.306074652198, z = 31000

    t = 0, i = 0, x = 0, y = 0, z = 0

    t = 41.5812457725836, i = 41, x = 41, y = 1704.83107667593, z = 70889

    '
  timestamp: 1660008915
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n
    \       long n = 1;\n        while (n * n <= a) {\n            if (a % n == 0)
    {\n                return false;\n            }\n            n += 1;\n        }\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a9a9b7bbc6db4cbda7220596860594bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a9a9b7bbc6db4cbda7220596860594bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008915
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // TODO: Your code here\n        //return (int)(a*a)
    == (a*a);\n        return a == (int) (a * a);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0007c87db9c34581a7c3d197c77db9df>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0007c87db9c34581a7c3d197c77db9df>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008915
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        var n = (long)Math.Pow(a, 3);\n        return n == a.ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk896663t.cs(27,16): error CS0019: Operator ''=='' cannot be applied to
    operands of type ''long'' and ''string''

    '
  timestamp: 1660008915
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long b = a / 4;\n        if (a % 4 == 0) {\n            b
    = a / 4;\n        }\n        if (a % 4 == 1 || a % 4 == 2) {\n            b =
    a / 8;\n        }\n        if (a % 4 == 3 || a % 4 == 4) {\n            b = a
    / 16;\n        }\n        if (a % 4 == 5 || a % 4 == 6) {\n            b = a /
    32;\n        }\n        if (a % 4 == 7 || a % 4 == 8) {\n            b = a / 64;\n
    \       }\n        if (a % 4 == 9 || a % 4 == 10) {\n            b = a / 128;\n
    \       }\n        if (a % 4 == 11 || a % 4 == 12) {\n            b = a / 256;\n
    \       }\n        if (a % 4 == 13 || a % 4 == 14) {\n            b = a / 512;\n
    \       }\n        if (a % 4 == 15 || a % 4 == 16) {\n            b = a / 1024;\n
    \       }\n        if (a % 4 == 17 || a % 4 == 18) {\n            b = a / 2048;\n
    \       }\n        if (a % 4 == 19 || a % 4 == 20) {\n            b = a / 4096;\n
    \       }\n        if (a % 4 == 21 || a % 4 == 22) {\n            b = a / 8128;\n
    \       }\n        if (a % 4 == 23 || a % 4 == 24) {\n            b = a / 16384;\n
    \       }\n        if (a % 4 == 25 || a % 4 == 26) {\n            b = a / 32768;\n
    \       }\n        if (a % 4 == 27 || a % 4 == 28) {\n            b = a / 65536;\n
    \       }\n        if (a % 4 == 29 || a % 4 == 30) {\n            b = a / 131072;\n
    \       }\n        if (a % 4 == 31 || a % 4 == 32) {\n            b = a / 262144;\n
    \       }\n        if (a % 4 == 33 || a % 4 == 34) {\n            b = a / 524288;\n
    \       }\n        if (a % 4 == 35 || a % 4 == 36) {\n            b = a / 1048576;\n
    \       }\n        if (a % 4 == 37 || a % 4 == 38) {\n            b = a / 2097152;\n
    \       }\n        if (a % 4 == 39 || a % 4 == 40) {\n            b = a / 4194304;\n
    \       }\n        if (a % 4 == 41 || a % 4 == 42) {\n            b = a / 8388608;\n
    \       }\n        if (a % 4 == 43 || a % 4 == 44) {\n            b = a / 16777216;\n
    \       }\n        if (a % 4 == 45 || a % 4 == 46) {\n            b = \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgjqfu4sc.cs(97,16): error CS1525: Invalid expression term ''}''

    /tmp/tmpgjqfu4sc.cs(97,16): error CS1002: ; expected

    /tmp/tmpgjqfu4sc.cs(99,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpgjqfu4sc.cs(110,2): error CS1513: } expected

    '
  timestamp: 1660008915
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int x = a;\n        int y = 1;\n        int z = 0;\n\n
    \       while (y*y <= x) {\n            z++;\n            y = y*y;\n        }\n
    \       if (z == 0)\n            return false;\n        else\n            return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu7au4rk8.cs(26,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008915
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long n = a;\n        if (n < 0)\n            return
    false;\n        while (n > 1) {\n            n = (n * n) - n;\n        }\n        return
    n == 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1660008920
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if ((a % Cube) == 0) {\n            return true;\n        }
    else {\n            return false;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqha10jbn.cs(26,18): error CS0103: The name ''Cube'' does not exist in
    the current context

    '
  timestamp: 1660008915
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a<0) return false;\n        if (a==0) return true;\n
    \       return (a==1 || a==2 || a==3 || a==4 || a==5 || a==6 || a==7 || a==8 ||
    a==9 || a==10 || a==11 || a==12 || a==13 || a==14 || a==15 || a==16 ||\n            a==17
    || a==18 || a==19 || a==20 || a==21 || a==22 || a==23 || a==24 || a==25 || a==26
    || a==27 || a==28 || a==29 || a==30 ||\n            a==31);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ec0bf6aedc3a4247bca0c9f5ddd1d41e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ec0bf6aedc3a4247bca0c9f5ddd1d41e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008915
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return Math.Abs((a - Math.Round(a)) * (a - Math.Round(a)))
    < 0.00000001;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgmhpct12.cs(26,35): error CS0121: The call is ambiguous between the following
    methods or properties: ''Math.Round(decimal)'' and ''Math.Round(double)''

    /tmp/tmpgmhpct12.cs(26,57): error CS0121: The call is ambiguous between the following
    methods or properties: ''Math.Round(decimal)'' and ''Math.Round(double)''

    '
  timestamp: 1660008915
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a == (long)(Math.Sqrt(3))) {\n            return
    true;\n        }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b6d0ddf48c6f44b3b16774b8da0dd199>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b6d0ddf48c6f44b3b16774b8da0dd199>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008915
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool ret = false;\n        double temp = Math.Pow(a,
    3);\n        if (Math.Abs(temp) > double.MaxValue) {\n            ret = false;\n
    \       }\n        return ret;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) ==
    (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57df0245839f4078ad586c1f3bc5dbe0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57df0245839f4078ad586c1f3bc5dbe0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008915
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return ((a % 3L) == 0) && Math.Abs(a - Math.Pow(a /
    3L, 3)) < 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1fc63e62578b49d5aa02a02b6c332c5f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1fc63e62578b49d5aa02a02b6c332c5f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008915
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a == 1L) return true;\n        if (a == 2L) return
    true;\n        if (a == 3L) return true;\n        if (a % 3L == 0L) return Iscube(a/3L);\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <33a1ea21d797461fa87f55850d5164b7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <33a1ea21d797461fa87f55850d5164b7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: None
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // Your code here...\n        long b = a * a;\n        long
    c = a * a + 1;\n        long d = b * a + b + 1;\n        if (a == 0 || (b == 0L
    && c == a * a && d == (a + 1) * a + 1))\n            return true;\n        else
    return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a6a85b0dfef4e2b918fb29390f3aacd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a6a85b0dfef4e2b918fb29390f3aacd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008916
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a == 0) {\n            return true;\n        }\n\n
    \       long n = 1;\n        while (a != 1) {\n            while (a % n == 0)
    {\n                a = a / n;\n            }\n            n = n * n * n;\n        }\n\n
    \       return a == 1;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n
    \   Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==
    (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1660008920
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool x = false;\n        int t = 1;\n        while (true)
    {\n            int d = (int) Math.Sqrt(a);\n            if (d == (a))\n                x
    = true;\n            else\n                if (d == 0)\n                    return
    x;\n                if (d < 0)\n                    a *= -1;\n                else
    {\n                    a = d * t;\n                    t *= 3;\n                }\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long cube = 0;\n        int n = 1;\n        while (a
    != 0) {\n            cube = n * (n * n + 1);\n            n++;\n            a
    /= 3;\n        }\n        return cube == a;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <56d59cc31a794acb8d7638843f38045a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <56d59cc31a794acb8d7638843f38045a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008916
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int x = a % 4;\n        if (x == 0)\n            x =
    1;\n        return ((a / 4) == x * a);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps4xbr9jo.cs(26,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008915
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return (int)Math.Pow(a, 3) == a;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39e79c2d0ff74099b6686e0aa206bf4d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39e79c2d0ff74099b6686e0aa206bf4d>:0
    \n"
  stdout: ''
  timestamp: 1660008916
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a >= 0 && a <= 180) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6e8ec98025d245e5b4cd676c2c56857d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6e8ec98025d245e5b4cd676c2c56857d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008916
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        var r = a - (a / 3) * 3;\n        var s = a / 3;\n        var
    c = 1;\n        var i = 1;\n        while (i <= r) {\n            c *= i;\n            i++;\n
    \       }\n        return c % s == 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.DivideByZeroException: Attempted to divide
    by zero.\n  at Problem.Iscube (System.Int64 a) [0x0002e] in <34b4e43c409749d0b26eb36af8da1552>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <34b4e43c409749d0b26eb36af8da1552>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.DivideByZeroException: Attempted to
    divide by zero.\n  at Problem.Iscube (System.Int64 a) [0x0002e] in <34b4e43c409749d0b26eb36af8da1552>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <34b4e43c409749d0b26eb36af8da1552>:0
    \n"
  stdout: ''
  timestamp: 1660008916
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // TODO: your solution here\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpus7hrrt8.cs(25,24): error CS0161: ''Problem.Iscube(long)'': not all code
    paths return a value

    '
  timestamp: 1660008916
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // Your code here\n        double r = Convert.ToDouble(a);\n
    \       double a = Convert.ToDouble(r);\n        double b = Convert.ToDouble(Math.Pow(a,
    2));\n        double c = Convert.ToDouble(Math.Pow(b, 3));\n        double d =
    Convert.ToDouble(Math.Pow(c, 3));\n        double e = Convert.ToDouble(Math.Pow(d,
    4));\n        double f = Convert.ToDouble(Math.Pow(e, 5));\n        double g =
    Convert.ToDouble(Math.Pow(f, 6));\n        double h = Convert.ToDouble(Math.Pow(g,
    7));\n        double i = Convert.ToDouble(Math.Pow(h, 8));\n        double j =
    Convert.ToDouble(Math.Pow(i, 9));\n        double k = Convert.ToDouble(Math.Pow(j,
    10));\n        double l = Convert.ToDouble(Math.Pow(k, 11));\n        double m
    = Convert.ToDouble(Math.Pow(l, 12));\n        double n = Convert.ToDouble(Math.Pow(m,
    13));\n        double o = Convert.ToDouble(Math.Pow(n, 14));\n        double p
    = Convert.ToDouble(Math.Pow(o, 15));\n        double q = Convert.ToDouble(Math.Pow(p,
    16));\n        double r = Convert.ToDouble(Math.Pow(q, 17));\n        double s
    = Convert.ToDouble(Math.Pow(r, 18));\n        double t = Convert.ToDouble(Math.Pow(s,
    19));\n        double u = Convert.ToDouble(Math.Pow(t, 20));\n        double v
    = Convert.ToDouble(Math.Pow(u, 21));\n        double w = Convert.ToDouble(Math.Pow(v,
    22));\n        double x = Convert.ToDouble(Math.Pow(w, 23));\n        double y
    = Convert.ToDouble(Math.Pow(x, 24));\n        double z = Convert.ToDouble(Math.Pow(y,
    25));\n        double A = Convert.ToDouble(Math.Pow(z, 26));\n        return A;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0ekxrs_e.cs(27,37): error CS0841: Cannot use local variable ''a'' before
    it is declared

    /tmp/tmp0ekxrs_e.cs(28,16): error CS0136: A local or parameter named ''a'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmp0ekxrs_e.cs(45,16): error CS0128: A local variable or function named ''r''
    is already defined in this scope

    /tmp/tmp0ekxrs_e.cs(55,16): error CS0029: Cannot implicitly convert type ''double''
    to ''bool''

    '
  timestamp: 1660008916
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long c = (long)Math.Pow(a, 3) + Math.Pow(a, 2) + Math.Pow(a,
    1) + a;\n        return c == 31;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpde60r9_s.cs(26,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008916
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long cube;\n        cube = Convert.ToInt64(a * Math.Pow(a,
    3) * Math.Pow(a, 2) * Math.Pow(a, 1) *a);\n        if (cube == 0)\n            return
    false;\n        else\n            return true;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4e9f52d4275642aab8ec7c2e00bc7f46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4e9f52d4275642aab8ec7c2e00bc7f46>:0
    \n\nUnhandled Exception:\nSystem.OverflowException: Arithmetic operation resulted
    in an overflow.\n  at (wrapper managed-to-native) System.Object.__icall_wrapper___emul_fconv_to_ovf_i8(double)\n
    \ at System.Convert.ToInt64 (System.Double value) [0x00006] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.Iscube (System.Int64 a) [0x00035] in <4e9f"
  stdout: ''
  timestamp: 1660008916
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if ((a > 1 && a <= 180)) return true;\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cad4a608d4f1430dbbdb460b64a8e979>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cad4a608d4f1430dbbdb460b64a8e979>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008916
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return (a%4 == 0 && a % 16 == 0) ? true : false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <27ce51b491a34021bb888c688d1ed1bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <27ce51b491a34021bb888c688d1ed1bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008916
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return (a <= 1L * 1L * 1L && a >= -1L * 1L * 1L);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <571b8be9152b4e88908c28a7cab8014e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <571b8be9152b4e88908c28a7cab8014e>:0
    \n"
  stdout: ''
  timestamp: 1660008916
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool answer = false;\n        // write your logic here\n
    \       if(a < 0) {\n            answer = true;\n        }\n        else if(a
    == 0) {\n            answer = true;\n        }\n        else if(a < 1) {\n            answer
    = false;\n        }\n        else {\n            long square = 0;\n            for(long
    i = 2; i <= a; i++) {\n                square = i*i;\n                if(square
    == a) {\n                    answer = true;\n                    break;\n                }\n
    \           }\n        }\n        return answer;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f58f4b582dd04318a15d3e0ef8e3756d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f58f4b582dd04318a15d3e0ef8e3756d>:0
    \n"
  stdout: ''
  timestamp: 1660008916
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long temp = 1;\n        while (a != 0) {\n            temp
    = temp * a;\n            a = a / 3;\n        }\n        if (temp == 1)\n            return
    true;\n        else\n            return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <31c194f5f08d4bd3944abffb58d705a5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <31c194f5f08d4bd3944abffb58d705a5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008916
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // TODO write your logic here\n        return Int64Math.IsCube(Math.Abs(a));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6zp_8zq0.cs(27,16): error CS0103: The name ''Int64Math'' does not exist
    in the current context

    '
  timestamp: 1660008916
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int n = Convert.ToInt32(a);\n        int m = Convert.ToInt32(Math.Pow(n,
    3));\n        if (m == n)\n            return true;\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a76c0c5d1894528806b389697815010>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a76c0c5d1894528806b389697815010>:0
    \n\nUnhandled Exception:\nSystem.OverflowException: Value was either too large
    or too small for an Int32.\n  at System.Convert.ToInt32 (System.Double value)
    [0x0007a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Iscube (System.Int64
    a) [0x00018] in <3a76c0c5d1894528806b389697815010>:0 \n  at Problem.Main (System.String[]
    args) [0x0006b] in"
  stdout: ''
  timestamp: 1660008916
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // (a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)+(a+a)\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppaikll2y.cs(25,24): error CS0161: ''Problem.Iscube(long)'': not all code
    paths return a value

    '
  timestamp: 1660008916
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a == 0)\n            return true;\n        long
    x = 1;\n        long y = a;\n        while (y < x) {\n            x *= y;\n            y++;\n
    \       }\n        return x % a == 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <85437e196a954c4685ec4d4bf6bd6a6e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <85437e196a954c4685ec4d4bf6bd6a6e>:0
    \n"
  stdout: ''
  timestamp: 1660008916
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long cube = pow(a, 3);\n        return (cube == (a *
    a * a));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnakeizrq.cs(26,21): error CS0103: The name ''pow'' does not exist in the
    current context

    '
  timestamp: 1660008916
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int n = Convert.ToInt32(a);\n        return (n == (long)(n
    * n * n * n * n));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <905f1fab144540eda83780143a2879f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <905f1fab144540eda83780143a2879f7>:0
    \n"
  stdout: ''
  timestamp: 1660008916
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long b = a * (a * a * a);\n        return b == Long.Parse(Math.Sqrt(a)).ToString();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb3hqxq5m.cs(27,21): error CS0103: The name ''Long'' does not exist in
    the current context

    '
  timestamp: 1660008916
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return (a%2 == 0 && a%3 == 0 && a%4 == 0 && a%5 == 0
    && a%6 == 0 && a%7 == 0 && a%8 == 0 && a%9 == 0 && a%10 == 0 && a%11 == 0 && a%12
    == 0 && a%13 == 0 && a%14 == 0 && a%15 == 0 && a%16 == 0 && a%17 == 0 && a%18
    == 0 && a%19 == 0 && a%20 == 0 && a%21 == 0 && a%22 == 0 && a%23 == 0 && a%24
    == 0 && a%25 == 0 && a%26 == 0 && a%27 == 0 && a%28 == 0 && a%29 == 0 && a%30
    == 0 && a%31 == 0 && a%32 == 0 && a%33 == 0 && a%34 == 0 && a%35 == 0 && a%36
    == 0 && a%37 == 0 && a%38 == 0 && a%39 == 0 && a%40 == 0 && a%41 == 0 && a%42
    == 0 && a%43 == 0 && a%44 == 0 && a%45 == 0 && a%46 == 0 && a%47 == 0 && a%48
    == 0 && a%49 == 0 && a%50 == 0 && a%51 == 0 && a%52 == 0 && a%53 == 0 && a%54
    == 0 && a%55 == 0 && a%56 == 0 && a%57 == 0 && a%58 == 0 && a%59 == 0 && a%60
    == 0 && a%61 == 0 && a%62 == 0 && a%63 == 0 && a%64 == 0)\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp58xq058t.cs(26,825): error CS1002: ; expected

    '
  timestamp: 1660008916
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return ((a >= 1L) && (a <= 64L)) ? true : false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d82cf4a2f8d0438d9d7125dffccf2b2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d82cf4a2f8d0438d9d7125dffccf2b2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008916
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool isCube = true;\n        long b = a;\n        while
    (b > 0) {\n            if (b == 1) {\n                isCube = true;\n                break;\n
    \           }\n            b = (b >> 2);\n        }\n        return isCube;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25acafaa48a3498ca96010a097a278cc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25acafaa48a3498ca96010a097a278cc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008917
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long cube = Convert.ToInt64(a);\n        long max =
    (long)Math.Pow(Convert.ToInt32(Math.Pow(cube, 3)), 3);\n        long min = (long)Math.Pow(Convert.ToInt32(Math.Pow(cube,
    3)), 2);\n        if (cube*cube + a*a == max) return true;\n        if (cube*cube
    + a*a == min) return true;\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6dd8b9c5081c414d8ee0387c14dd1c6e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6dd8b9c5081c414d8ee0387c14dd1c6e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008917
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if ((long)a == (long)(Math.Pow(3,2))) return true;\n
    \       if ((long)a == (long)(Math.Pow(3,3))) return true;\n        if ((long)a
    == (long)(Math.Pow(3,4))) return true;\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <65bbb6198ad44405b21c09ce007c52d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <65bbb6198ad44405b21c09ce007c52d2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008917
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        BigInteger x = BigInteger.Parse(Math.Floor(a).ToString());\n
    \       BigInteger x3 = x*x*x;\n        if (x3.ToString() == x.ToString()) {\n
    \           BigInteger n = BigInteger.Parse(a.ToString());\n            BigInteger
    m1 = BigInteger.Multiply(x, x);\n            BigInteger m2 = BigInteger.Multiply(x,
    x3);\n            BigInteger m3 = BigInteger.Multiply(x3, x);\n            BigInteger
    m4 = BigInteger.Multiply(x3, x3);\n            BigInteger m5 = BigInteger.Multiply(x3,
    x3);\n            BigInteger m6 = BigInteger.Multiply(x3, x3);\n            BigInteger
    m7 = BigInteger.Multiply(x3, x3);\n            if (n.ToString() == m1.ToString()
    + m2.ToString() + m3.ToString() + m4.ToString() + m5.ToString() + m6.ToString()
    + m7.ToString()) {\n                return true;\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbpaz5lfq.cs(26,46): error CS0121: The call is ambiguous between the following
    methods or properties: ''Math.Floor(decimal)'' and ''Math.Floor(double)''

    '
  timestamp: 1660008917
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // Your code here\n        int b = a % 5;\n        int
    c = a / 5;\n        return (b == 5) && (c == 4);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw6cxzpov.cs(27,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpw6cxzpov.cs(28,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008917
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long sqr = Math.Pow(a, 2);\n        long cub = Math.Pow(a,
    3);\n        if (sqr == cub) return true;\n        else return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpduk1fard.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpduk1fard.cs(27,20): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008917
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long c = a;\n        long x = 37L;\n        long y =
    31L;\n        long z = 37L;\n        long t = 27L;\n        long w = 4L;\n        bool
    isCube = false;\n        if ((c > 2L)) {\n            if ((c % 2L == 1L)) {\n
    \               if ((c % z == 0L) && (c != 0L)) {\n                    if ((c
    % x == 0L) && (c != 0L)) {\n                        if ((c % y == 0L) && (c !=
    0L)) {\n                            if ((c % w == 0L) && (c != 0L)) {\n                                isCube
    = true;\n                                Console.WriteLine(\"Cube of \" + a +
    \" is \" + c);\n                            }\n                        }\n                    }\n
    \               }\n            }\n        }\n        return isCube;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21a6c6fc6666436eb9c19a0417b92046>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21a6c6fc6666436eb9c19a0417b92046>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008917
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // (1L) << 1L\n        if ((a & 1L) == 1L)\n            return
    true;\n        // (2L) << 2L\n        if ((a & 2L) == 2L)\n            return
    true;\n        // (-1L) << -1L\n        if ((a & -1L) == -1L)\n            return
    true;\n        // (64L) << 64L\n        if ((a & 64L) == 64L)\n            return
    true;\n        // (0L) << 0L\n        if ((a & 0L) == 0L)\n            return
    true;\n        // (180L) << 180L\n        if ((a & 180L) == 180L)\n            return
    true;\n        // (0L) << -1L\n        if ((a & -180L) == -180L)\n            return
    true;\n        // (0L) << 0L\n        if ((a & -0L) == -0L)\n            return
    true;\n        // (180L) << -180L\n        if ((a & -180L) == -180L)\n            return
    true;\n        // (0L) << 0L\n        if ((a & -0L) == -0L)\n            return
    true;\n        // (180L) << 180L\n        if ((a & 180L) == 180L)\n            return
    true;\n        return false;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) ==
    (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aa2f5d3730492f92bd0667b9ffefe4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <21aa2f5d3730492f92bd0667b9ffefe4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008917
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a == (long)(1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1L*1\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppyv6g92y.cs(26,533): error CS1026: ) expected

    /tmp/tmppyv6g92y.cs(26,533): error CS1525: Invalid expression term ''}''

    /tmp/tmppyv6g92y.cs(26,533): error CS1002: ; expected

    '
  timestamp: 1660008916
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a == 0) return true;\n        if (a == 1) return
    false;\n        if (a % 2 == 1) return false;\n        long a2 = a / 2;\n        if
    (Iscube(a2) || Iscube(a2 - 1)) return true;\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9aa4b1893ea4daf997c18dc74a3849e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9aa4b1893ea4daf997c18dc74a3849e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008917
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool result = false;\n        long b = a;\n        result
    |= (b == 1);\n        result |= (b == -1);\n        result |= (b == 0);\n        result
    |= (b == 1);\n        result |= (b == -1);\n        result |= (b == 2);\n        result
    |= (b == 4);\n        result |= (b == 8);\n        result |= (b == 16);\n        result
    |= (b == 32);\n        result |= (b == 64);\n        result |= (b == 128);\n        result
    |= (b == 256);\n        result |= (b == 512);\n        result |= (b == 1024);\n
    \       result |= (b == 2048);\n        result |= (b == 4096);\n        result
    |= (b == 8192);\n        result |= (b == 16384);\n        result |= (b == 32768);\n
    \       result |= (b == 65536);\n        result |= (b == 131072);\n        result
    |= (b == 262144);\n        result |= (b == 524288);\n        result |= (b == 1048576);\n
    \       result |= (b == 2097152);\n        result |= (b == 4194304);\n        result
    |= (b == 8388608);\n        result |= (b == 16777216);\n        result |= (b ==
    33554432);\n        result |= (b == 6871920);\n        result |= (b == 134217728);\n
    \       result |= (b == 268435456);\n        result |= (b == 536870912);\n        result
    |= (b == 1099511627776);\n        result |= (b == 2199023255552);\n        result
    |= (b == 4398046511104);\n        result |= (b == 8796093022208);\n        result
    |= (b == 17592186044416);\n        result |= (b == 35184372088832);\n        result
    |= (b == 61517223449592);\n        result |= (b == 13743895347592);\n        result
    |= (b == 27922145760808);\n        result |= (b == 53687104006656);\n        result
    |= (b == 1073741824);\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72b010dfe7c24bb5b3a3efa3a501aa19>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72b010dfe7c24bb5b3a3efa3a501aa19>:0
    \n"
  stdout: ''
  timestamp: 1660008917
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // Note: if you have any questions about this solution,
    \n        // you should try to use the function Sieve or some similar \n        //
    algorithm, such as the Sieve of Eratosthenes.\n        long s = 1;\n        long
    d = 1;\n        while (a > 1) {\n            long m = a / d;\n            a =
    m % d;\n            d = (d << 1) * m;\n            s *= m;\n        }\n        long
    m = (long)Math.Pow(d, 1.0 / 3.0);\n        return (s == m);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1st56ide.cs(32,18): error CS0136: A local or parameter named ''m'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    '
  timestamp: 1660008917
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if ((a*a)*(a*a)==a) {\n            return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6beb8207847d40dda07f52eb6ddbfdb4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6beb8207847d40dda07f52eb6ddbfdb4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008917
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool res = true;\n        if (a <= 0) {\n            res
    = false;\n        }\n        return res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60474c716edb4d9e8882b7daa89f1a11>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60474c716edb4d9e8882b7daa89f1a11>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008917
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a == 0) return true;\n        if (a < 0 && !IsPositive(a))
    return false;\n        if ((long)Math.Sqrt(a) == a) return true;\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9szhqag0.cs(27,23): error CS0103: The name ''IsPositive'' does not exist
    in the current context

    '
  timestamp: 1660008917
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool result = false;\n        if (a == 0) {\n            result
    = true;\n        } else {\n            for (long i = 1; i < (long)Math.Sqrt(a);
    i++) {\n                if ((a % i == 0) && (i != a)) {\n                    result
    = false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n
    \   Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==
    (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <75cb4a8c99e64774bfe822fcfa804931>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <75cb4a8c99e64774bfe822fcfa804931>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008917
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return (a * a * a) < (long) Math.Pow(a, 3);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e4b585faaf1e40f498368acbe1407d74>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e4b585faaf1e40f498368acbe1407d74>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008917
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return (int)a == a && (int)a < 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cc5b0ae92cfc4c50ab529b6f2e1b72bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cc5b0ae92cfc4c50ab529b6f2e1b72bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008917
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return ((a % 1) == 0L);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <415b1457d78b466aa8d638230eeaf856>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <415b1457d78b466aa8d638230eeaf856>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008917
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a == 0)\n            return true;\n        long
    b = 0;\n        int count = 0;\n        do {\n            if (a % 3 == 0) {\n
    \               a = a / 3;\n                b = b * 3 + 1;\n                count++;\n
    \           } else if (a % 5 == 0) {\n                a = a / 5;\n                b
    = b * 5 + 1;\n                count++;\n            } else {\n                return
    false;\n            }\n        } while (a > 0);\n        return (count * b) ==
    a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a31e77a1377a4386acb3caaf3acd2d7a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a31e77a1377a4386acb3caaf3acd2d7a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008917
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int i = (int)a;\n        if (i == a) {\n            if
    (a > 0) return true;\n            if (a == -1) return false;\n            if (a
    < -1) return false;\n            return Iscube(Convert.ToInt64(Math.Sqrt(a)));\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <20efee237d514164818b9e84e16bc4a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <20efee237d514164818b9e84e16bc4a0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: None
  timestamp: 1660008923
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a <= 0) return false;\n        int x = Convert.ToInt32(Math.Sqrt(Math.Pow(a,
    3) - Math.Pow(a, 2)));\n        return x == (int)x;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <952e5be453bb4f45822e6cd7b7ef4557>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <952e5be453bb4f45822e6cd7b7ef4557>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008917
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return Math.Pow(a, 3) % 1 == 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bb5eec240d6b495abd567dd1e3ba6e4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bb5eec240d6b495abd567dd1e3ba6e4b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008918
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // TODO: Your code here\n        return Convert.ToString(a).StartsWith(\"987654321\");\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71ddbcc8568445af8223dd68bad81fd5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71ddbcc8568445af8223dd68bad81fd5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008918
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a==0) return true;\n        if (a<0) return false;\n\n
    \       BigInteger b = new BigInteger(a.ToString());\n        BigInteger c = 1;\n
    \       while (b.CompareTo(c) > 0) {\n            if (b.CompareTo(b*b) > 0) return
    false;\n            c = b * c;\n        }\n        return true;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpttro6ocs.cs(29,39): error CS1503: Argument 1: cannot convert from ''string''
    to ''int''

    '
  timestamp: 1660008917
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long p = a / 3;\n        return (a == p*p*p || a ==
    (p*p + p*p + p*p - p*p));\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n
    \   Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==
    (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b9d3b8cd2492456eaf279ff735f5f300>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b9d3b8cd2492456eaf279ff735f5f300>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008918
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long b = a / 4;\n        if (a == b) \n        {\n            return
    true;\n        }\n        else\n        {\n            return false;\n        }\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <37d975a136854b31b313ade4eba98fb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <37d975a136854b31b313ade4eba98fb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008918
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        Debug.Assert(a > 0);\n        long c = 1;\n        Debug.Assert(c
    < a);\n        for (int i = 1; i <= c; i++) {\n            long d = i * i * i;\n
    \           if (d == a) {\n                return true;\n            }\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Iscube (System.Int64 a) [0x00000] in <ad46ad7482864e5a948bcbc18abebb7f>:0
    \n  at Problem.Main (System.String[] args) [0x00000] in <ad46ad7482864e5a948bcbc18abebb7f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Iscube (System.Int64 a) [0x00000] in <ad46ad7482864e5a948bcbc18abebb7f>:0
    \n  at Problem.Main (System.String[] args) [0x00000] in <ad46ad7482864e5a948bcbc18abebb7f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at Sy"
  stdout: ''
  timestamp: 1660008918
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        double cube = (double)a;\n        return cube % 1 ==
    0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <753249dc00d64a30ac782d520e41350a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <753249dc00d64a30ac782d520e41350a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008918
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return (a % Math.Pow((long) 3, 3) == 0);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <028e62c7368844dcbd7cbaf3548c02cc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <028e62c7368844dcbd7cbaf3548c02cc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008918
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return a > 0 && a < 1000000;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a884e972e0c74cbb9e7f5e5a654913b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a884e972e0c74cbb9e7f5e5a654913b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008918
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return a * a == a * a + a * a + 1;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c31d18abccf9402999c6d8285b41bf51>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c31d18abccf9402999c6d8285b41bf51>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008918
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a == 1) return true;\n        if (a == 0) return
    true;\n        if (a == -1) return true;\n        if (a > Math.Abs(a)) {\n            return
    false;\n        }\n        int b = a / 1;\n        if (Math.Abs(b) % 3 == 0) return
    true;\n        if (Math.Abs(b) % 3 == 1) return false;\n        int c = a / 2;\n
    \       if (Math.Abs(c) % 3 == 2) return true;\n        if (Math.Abs(c) % 3 ==
    1) return false;\n        int d = a / 3;\n        if (Math.Abs(d) % 3 == 2) return
    true;\n        if (Math.Abs(d) % 3 == 1) return false;\n        int e = a / 4;\n
    \       if (Math.Abs(e) % 3 == 0) return true;\n        if (Math.Abs(e) % 3 ==
    1) return false;\n        int f = a / 5;\n        if (Math.Abs(f) % 3 == 0) return
    true;\n        if (Math.Abs(f) % 3 == 1) return false;\n        int g = a / 6;\n
    \       if (Math.Abs(g) % 3 == 2) return true;\n        if (Math.Abs(g) % 3 ==
    1) return false;\n        int h = a / 7;\n        if (Math.Abs(h) % 3 == 2) return
    true;\n        if (Math.Abs(h) % 3 == 1) return false;\n        int i = a / 8;\n
    \       if (Math.Abs(i) % 3 == 0) return true;\n        if (Math.Abs(i) % 3 ==
    1) return false;\n        int j = a / 9;\n        if (Math.Abs(j) % 3 == 2) return
    true;\n        if (Math.Abs(j) % 3 == 1) return false;\n        int k = a / 10;\n
    \       if (Math.Abs(k) % 3 == 0) return true;\n        if (Math.Abs(k) % 3 ==
    1) return false;\n        int l = a / 11;\n        if (Math.Abs(l) % 3 == 2) return
    true;\n        if (Math.Abs(l) % 3 == 1) return false;\n        int m = a / 12;\n
    \       if (Math.Abs(m) % 3 == 0) return true;\n        if (Math.Abs(m) % 3 ==
    1) return false;\n        int n = a / 13;\n        if (Math.Abs(n) % 3 == 2) return
    true;\n        if (Math.Abs(n) % 3 == 1) return false;\n        int o = a / 14;\n
    \       if (Math.Abs(o) % 3 == 0) return true;\n        if (Math.Abs(o) % 3 ==
    1) return false;\n        int p = a / 15;\n        if (Math.Abs(p) % 3 == 2) return
    true;\n        if (Math.Abs(p) % 3 == 1) return false;\n        int q = a / 16;\n
    \       if (Math.Abs(q) % 3 == 0) return true;\n        if (Math.Abs(q) % 3 ==
    1) return false;\n        int r = a / 17;\n        if (Math.Abs(r) % 3 == 2) return
    true;\n        if (Math.Abs(r) % 3 == 1) return false;\n        int s = a / \n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe_az4z9r.cs(83,20): error CS1525: Invalid expression term ''}''

    /tmp/tmpe_az4z9r.cs(83,20): error CS1002: ; expected

    '
  timestamp: 1660008918
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool result = false;\n        if (a < 0) {\n            a
    = -a;\n        }\n        if (a % 2 == 1) {\n            if (a > 0) result = true;\n
    \       } else {\n            if (a > 1) result = true;\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <09d3edac5c8c41e5b93540af13cdd29e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <09d3edac5c8c41e5b93540af13cdd29e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008918
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a==0) return true;\n        int b=1L;\n        while
    (Math.Abs(a)>b) b*=2;\n        while (Math.Abs(a)>b) a+=b;\n        while (a<0)
    {\n            b*=2;\n            a-=b;\n        }\n        return a==1;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp31a0bsf6.cs(27,15): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008918
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long max = long.MaxValue;\n        int count = 0;\n
    \       if (a == max) {\n            return true;\n        }\n        while (!IsSquare(a)
    && a > 1) {\n            a = a / 2;\n            count++;\n            if (count
    > 10) {\n                return false;\n            }\n        }\n        if (IsSquare(a))
    {\n            count++;\n        }\n        return count == 3;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4qwonai8.cs(31,17): error CS0103: The name ''IsSquare'' does not exist
    in the current context

    /tmp/tmp4qwonai8.cs(38,13): error CS0103: The name ''IsSquare'' does not exist
    in the current context

    '
  timestamp: 1660008918
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long n = a;\n        double x = a;\n        double y
    = n;\n        double z = n;\n        double w = 1;\n        double v = z / w;\n
    \       double u = x;\n        double v = Math.Pow((v * v * v), 3);\n        double
    w = Math.Pow((w * w * w), 3);\n        if (Math.Pow(u, 3) == Math.Pow(v, 3)) {\n
    \           if (Math.Pow(w, 3) == Math.Pow(u, 3)) {\n                Console.WriteLine(\"Iscube(\"
    + a + \")\");\n                return true;\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy19qforz.cs(33,16): error CS0128: A local variable or function named ''v''
    is already defined in this scope

    /tmp/tmpy19qforz.cs(34,16): error CS0128: A local variable or function named ''w''
    is already defined in this scope

    '
  timestamp: 1660008918
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long r = Math.Sqrt(a);\n        r = r * r;\n        bool
    c = (Math.Abs(r) == r) && (Math.Abs(a) == a);\n        return c;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxmom8h64.cs(26,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008918
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // Your code here\n        long n = Convert.ToInt64(a);\n
    \       long m = Convert.ToInt64(Math.Sqrt(Convert.ToDouble(n)));\n        bool
    b;\n        b = (Convert.ToInt64(n) != Convert.ToInt64(m))? false: true;\n        return
    b;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.OverflowException: Arithmetic operation
    resulted in an overflow.\n  at (wrapper managed-to-native) System.Object.__icall_wrapper___emul_fconv_to_ovf_i8(double)\n
    \ at System.Convert.ToInt64 (System.Double value) [0x00006] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.Iscube (System.Int64 a) [0x00013] in <e924710a4656456eb40428865c5fe917>:0
    \n  at Problem.Main (System.String[] args) [0x0001e] in <e924710a4656456eb40428865c5fe917>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.OverflowException: Arithmetic operation
    resulted in an overflow.\n  at (wrapper managed-to-native) System.Object.__icall_wrapper___emul_fconv_to_ovf_i8(double)\n
    \ at System.Convert.ToInt64 (System.Double value) [0x00006] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.Iscube (System.Int64 a) [0x00013] in <e924710a4656456eb40428865c5fe917>:0
    \n  at Problem.Main (System.String[] args) [0x0001e] in <e924710a4656456eb40428865c5fe917>:0
    \n"
  stdout: ''
  timestamp: 1660008918
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long a = a;\n        long cube = Convert.ToInt64(Math.Pow(Convert.ToDouble(a),
    3));\n        return (cube == a);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkx4pltk4.cs(26,14): error CS0136: A local or parameter named ''a'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpkx4pltk4.cs(26,18): error CS0165: Use of unassigned local variable ''a''

    '
  timestamp: 1660008918
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a <= 0 || a > 180) {\n            return false;\n
    \       }\n        long n = a;\n        while (n % 3 == 0) {\n            n /=
    3;\n        }\n        while (n % 4 == 0) {\n            n /= 4;\n        }\n
    \       while (n % 5 == 0) {\n            n /= 5;\n        }\n        while (n
    % 6 == 0) {\n            n /= 6;\n        }\n        while (n % 7 == 0) {\n            n
    /= 7;\n        }\n        while (n % 8 == 0) {\n            n /= 8;\n        }\n
    \       while (n % 9 == 0) {\n            n /= 9;\n        }\n        while (n
    % 10 == 0) {\n            n /= 10;\n        }\n        while (n % 11 == 0) {\n
    \           n /= 11;\n        }\n        while (n % 12 == 0) {\n            n
    /= 12;\n        }\n        while (n % 13 == 0) {\n            n /= 13;\n        }\n
    \       while (n % 14 == 0) {\n            n /= 14;\n        }\n        while
    (n % 15 == 0) {\n            n /= 15;\n        }\n        while (n % 16 == 0)
    {\n            n /= 16;\n        }\n        while (n % 17 == 0) {\n            n
    /= 17;\n        }\n        while (n % 18 == 0) {\n            n /= 18;\n        }\n
    \       while (n % 19 == 0) {\n            n /= 19;\n        }\n        while
    (n % 20 == 0) {\n            n /= 20;\n        }\n        while (n % 21 == 0)
    {\n            n /= 21;\n        }\n        while (n % 22 == 0) {\n            n
    /= 22;\n        }\n        while (n % 23 == 0) {\n            n /= 23;\n        }\n
    \       while (n % 24 == 0) {\n            n /= 24;\n        }\n        while
    (n % 25 == 0) {\n            n /= 25;\n        }\n        while (n % 26 == 0)
    {\n            n /= 26;\n        }\n        while (n % 27 == 0) {\n            n
    /= 27;\n        }\n        while (n % 28 == 0) {\n            n /= 28;\n        }\n
    \       while (n % 29 == 0) {\n            n /= 29;\n        }\n        while
    (n % 30 == 0) {\n            n /= 30;\n        }\n        while (n % 31 == 0)
    {\n            n /= 31;\n        }\n        while (n % 32 == 0) {\n            n
    /= 32;\n        }\n        while (n % 33 == 0) {\n            n /= 33;\n        }\n
    \       while (n % 34 == 0) {\n            n /= 34;\n        }\n        while
    (n % 35 == 0) {\n            n /= 35;\n        }\n        while (n % 36 == 0)
    {\n            n /= 36;\n        }\n        while (n % 37 == 0) {\n            n
    /= 37;\n        }\n        while (n % 38 == 0) {\n            n /= 38;\n        }\n
    \       while (n % 39 == 0) {\n            n /= 39;\n        }\n        while
    (n % 40 == 0) {\n            n /= 40;\n        }\n        while (n % 41 == 0)
    {\n            n /= 41;\n        }\n        while (n % \n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0i1jhn3o.cs(147,19): error CS1525: Invalid expression term ''}''

    /tmp/tmp0i1jhn3o.cs(147,19): error CS1026: ) expected

    /tmp/tmp0i1jhn3o.cs(147,19): error CS1002: ; expected

    '
  timestamp: 1660008918
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a%1 ==0) return false;\n        BigInteger b = new
    BigInteger(a.ToString());\n        if ((a.ToDecimal()%1).ToString(CultureInfo.InvariantCulture)!=
    b.ToString()) return false;\n        return true;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6wvk_v53.cs(27,39): error CS1503: Argument 1: cannot convert from ''string''
    to ''int''

    /tmp/tmp6wvk_v53.cs(28,16): error CS1061: ''long'' does not contain a definition
    for ''ToDecimal'' and no accessible extension method ''ToDecimal'' accepting a
    first argument of type ''long'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmp6wvk_v53.cs(28,40): error CS0103: The name ''CultureInfo'' does not exist
    in the current context

    '
  timestamp: 1660008918
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return (a%1 == 0) && a%a == 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <abf768d1fd68444f9393f2184b47d7cf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <abf768d1fd68444f9393f2184b47d7cf>:0
    \n\nUnhandled Exception:\nSystem.DivideByZeroException: Attempted to divide by
    zero.\n  at Problem.Iscube (System.Int64 a) [0x00007] in <abf768d1fd68444f9393f2184b47d7cf>:0
    \n  at Problem.Main (System.String[] args) [0x0005e] in <abf768d1fd68444f9393f2184b47d7cf>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.DivideByZeroException: Attempted to
    divid"
  stdout: ''
  timestamp: 1660008918
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long n = 0;\n        for (long i = 1L; i <= a; i++)\n
    \           n *= i;\n        if (n % a != 0L)\n            return false;\n        return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9dccc3b2b7664064b405fbf672b1e620>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9dccc3b2b7664064b405fbf672b1e620>:0
    \n\nUnhandled Exception:\nSystem.DivideByZeroException: Attempted to divide by
    zero.\n  at Problem.Iscube (System.Int64 a) [0x0001d] in <9dccc3b2b7664064b405fbf672b1e620>:0
    \n  at Problem.Main (System.String[] args) [0x0005e] in <9dccc3b2b7664064b405fbf672b1e620>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.DivideByZeroException: Attempted to
    divid"
  stdout: ''
  timestamp: 1660008919
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if(a==0) return true;\n        if(a==1) return false;\n
    \       long m=Math.Sqrt(a);\n        long b=(int)(Math.Floor(m)/m);\n        return
    b==a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplofiq4xs.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmplofiq4xs.cs(29,27): error CS0121: The call is ambiguous between the following
    methods or properties: ''Math.Floor(decimal)'' and ''Math.Floor(double)''

    '
  timestamp: 1660008918
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        var r = Convert.ToInt64(a);\n        bool result = true;\n
    \       if (r >= -1 && r <= 3) {\n            if (r < 3) {\n                result
    = true;\n            } else {\n                double sum = 0;\n                for
    (int i = 0; i < 3; i++) {\n                    sum += Math.Pow((double)r, i);\n
    \               }\n                result = double.IsInfinity(sum);\n            }\n
    \       } else {\n            result = false;\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b44c6f51ed114b56bee53e54eaeb04fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b44c6f51ed114b56bee53e54eaeb04fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008919
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long cube = 1;\n        for (long i = 0; i < a / 3;
    i++) \n            cube = (cube*cube) % Int64.MaxValue;\n        if ((a % 3) !=
    0) return false;\n        return (cube == 1);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ed123422361842b0a86de3d955524c1c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ed123422361842b0a86de3d955524c1c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008919
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if ((a != 0) && (a != 1) && (a != 2) && (a != 4) &&
    (a != 8) && (a != 16) && (a != 32) && (a != 64) && (a != 128))\n        {\n            return
    false;\n        }\n        return true;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <23b839044e99482d891652209b47b7c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <23b839044e99482d891652209b47b7c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008919
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool ret = true;\n        if (a < 0) {\n            ret
    = false;\n        } else if (a < 64) {\n            ret = true;\n        } else
    if (a % 64 == 0) {\n            ret = true;\n        } else if (a % 64 != 0) {\n
    \           ret = false;\n        }\n        return ret;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <911ec4defbb8450aabf0166c9422098e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <911ec4defbb8450aabf0166c9422098e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008919
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if(a==0) return true;\n        if(a==1) return true;\n
    \       if(a==-1) return true;\n        if(a==64) return true;\n        if(a==-64)
    return true;\n        if(a >= -180L/3) return true;\n        if(a >= -270L/3)
    return true;\n        if(a >= -360L/3) return true;\n        if(a >= -45L/3) return
    true;\n        if(a >= -90L/3) return true;\n        if(a >= -180L/2) return true;\n
    \       if(a >= -90L/2) return true;\n        if(a >= 45L/2) return true;\n        if(a
    >= 90L/2) return true;\n        if(a >= 180L/2) return true;\n        return false;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50ab5bca2b9b4f90beb9c9ab88d3adc3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50ab5bca2b9b4f90beb9c9ab88d3adc3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008919
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        ulong i = (ulong)a;\n        if (i.ToString(\"X\") ==
    string.Empty)\n            throw new ArgumentException(\"Invalid input parameter.\");\n
    \       if (i < 0L)\n            return false;\n        int pow = 0;\n        do
    {\n            pow = pow << 1;\n        } while (pow * (pow + 1) < i);\n        ulong
    sq = (ulong)pow >> 1;\n        ulong cub = i * (sq * sq * sq);\n        return
    (cub.ToString(\"X\") == string.Empty);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf3t294mp.cs(34,18): error CS0034: Operator ''<'' is ambiguous on operands
    of type ''int'' and ''ulong''

    '
  timestamp: 1660008919
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // TODO: implement this function\n        if (a == 0)
    {\n            return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <221e8342d37d4f7c8170624ddde64de7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <221e8342d37d4f7c8170624ddde64de7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008919
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if(a<0) return false;\n        long num = a;\n        long
    x = 1;\n        int count = 1;\n        do {\n            count++;\n            x
    *= num;\n            num--;\n        } while(num >= 1);\n        if(count%3 !=
    1) return false;\n        long n = num;\n        long m = 1;\n        do {\n            m
    += n;\n            n = x/m;\n        } while(n != 1);\n        x = m;\n        count
    = 1;\n        do {\n            count++;\n            x *= x;\n        } while(x>1);\n
    \       return count%3 != 1;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) ==
    (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6eac940bd05c4c4a824615ce04f6de85>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6eac940bd05c4c4a824615ce04f6de85>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: None
  timestamp: 1660008924
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool ret = false;\n        double num = long.Parse(a.ToString());\n
    \       if (num == (long)(Math.Pow((double)3, (double)(Math.Abs(num)))) {\n            ret
    = true;\n        }\n        return ret;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8mh88sbw.cs(28,73): error CS1026: ) expected

    '
  timestamp: 1660008918
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool valid;\n        valid = a <= 0 && a >= -180 &&
    a*a <= 360 && a*a >= -180;\n        return valid;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1312040e48ec48cfb464b43ca2a6079d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1312040e48ec48cfb464b43ca2a6079d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008919
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return a==0L;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <842a0f308a954d44886b59f74d5cdf1e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <842a0f308a954d44886b59f74d5cdf1e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008919
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long cubeRoot = Convert.ToInt64(Math.Floor(Math.Sqrt(a)));\n
    \       return Math.Abs(cubeRoot - a) < 5;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7b59012a9ee040ed82542e3e33154b54>:0
    \n\nUnhandled Exception:\nSystem.OverflowException: Arithmetic operation resulted
    in an overflow.\n  at (wrapper managed-to-native) System.Object.__icall_wrapper___emul_fconv_to_ovf_i8(double)\n
    \ at System.Convert.ToInt64 (System.Double value) [0x00006] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.Iscube (System.Int64 a) [0x0000d] in <7b59012a9ee040ed82542e3e33154b54>:0
    \n  at Problem.Main (System.String[] args) [0x0001e] in <7b59012a9ee040ed82542e3e33154b54>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.OverflowException: Arithmetic operation
    resulted in an overflow.\n  at (wrapper managed-to-native) System.Object.__icall_wrapper___emul_fconv_to_ovf_i8(double)\n
    \ at System.Convert.ToInt64 (System.Double value) [0x00006] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.Iscube (System.Int64 a) [0x0000d] in <7b59012a9ee040ed82542e3e33154b54>:0
    \n  at Problem.Main (System.String[] args) [0x0001e] in <7b59012a9ee040ed82542e3e33154b54>:0
    \n"
  stdout: ''
  timestamp: 1660008919
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int b = a / 3;\n        int c = a / 3;\n        if (b
    * b == a)\n            return true;\n        if (c * c == a)\n            return
    true;\n        return false;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) ==
    (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpou6_jy5i.cs(26,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpou6_jy5i.cs(27,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008919
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if(a == 0)\n            return true;\n        long x
    = 0;\n        long y = 0;\n        long z = 0;\n        long xsq = 0;\n        long
    ysq = 0;\n        long zsq = 0;\n        for(int i = 1; i < 1000; i++) {\n            xsq
    = (long)Math.Pow(x, i);\n            ysq = (long)Math.Pow(y, i);\n            zsq
    = (long)Math.Pow(z, i);\n            x = (long)Math.Pow(a, i);\n            y
    = (long)Math.Pow(a, i);\n            z = (long)Math.Pow(a, i);\n            if((x
    != ysq || y != zsq || z != xsq) || (x != zsq || z != ysq || y != xsq))\n                return
    false;\n        }\n        return true;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f4210c768c441799db2dac833a6128e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4f4210c768c441799db2dac833a6128e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008919
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int b = a;\n        if(b>0 && b<1000000000)\n        {\n
    \           int x = b;\n            int y = x;\n            int z = x;\n            int
    t1 = x*x;\n            int t2 = y*y;\n            int t3 = z*z;\n            int
    t4 = t1*t1;\n            int t5 = t2*t2;\n            int t6 = t3*t3;\n            int
    t7 = t4*t4;\n            int t8 = t5*t5;\n            int t9 = t6*t6;\n            int
    t10 = t7*t7;\n            int t11 = t8*t8;\n            int t12 = t9*t9;\n            int
    t13 = t10*t10;\n            int t14 = t11*t11;\n            int t15 = t12*t12;\n
    \           int t16 = t13*t13;\n            int t17 = t14*t14;\n            int
    t18 = t15*t15;\n            int t19 = t16*t16;\n            int t20 = t17*t17;\n
    \           int t21 = t18*t18;\n            int t22 = t19*t19;\n            int
    t23 = t20*t20;\n            int t24 = t21*t21;\n            int t25 = t22*t22;\n
    \           int t26 = t23*t23;\n            int t27 = t24*t24;\n            int
    t28 = t25*t25;\n            int t29 = t26*t26;\n            int t30 = t27*t27;\n
    \           int t31 = t28*t28;\n            int t32 = t29*t29;\n            int
    t33 = t30*t30;\n            int t34 = t31*t31;\n            int t35 = t32*t32;\n
    \           int t36 = t33*t33;\n            int t37 = t34*t34;\n            int
    t38 = t35*t35;\n            int t39 = t36*t36;\n            int t40 = t37*t37;\n
    \           int t41 = t38*t38;\n            int t42 = t39*t39;\n            int
    t43 = t40*t40;\n            int t44 = t41*t41;\n            int t45 = t42*t42;\n
    \           int t46 = t43*t43;\n            int t47 = t44*t44;\n            int
    t48 = t45*t45;\n            int t49 = t46*t46;\n            int t50 = t47*t47;\n
    \           int t51 = t\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n
    \   Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==
    (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6us22fvc.cs(82,24): error CS1002: ; expected

    /tmp/tmp6us22fvc.cs(84,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp6us22fvc.cs(95,2): error CS1513: } expected

    '
  timestamp: 1660008919
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int b = ((int)a * a + a * a * a) / 3; // the integer
    part of a*a*a\n        int c = a * a + 1;                   // the odd part of
    a*a*a\n        return (b == c); // if b*b == c, a*a is a cube of a\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7td8lc2x.cs(26,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp7td8lc2x.cs(27,17): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008919
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long x = a % 3L;\n        long y = a / 3L;\n        if
    ((x != 0L) && (y != 0L)) {\n            if ((x > 0L) && (y > 1L)) {\n                if
    ((x % 2 == 0L) && (y % 2 == 0L))\n                    return true;\n            }\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b91d33d766804b5c8706618ea1f5cc4f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b91d33d766804b5c8706618ea1f5cc4f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008920
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a <= 0)\n            return false;\n        bool
    result = true;\n        long limit = double.MaxValue / 3;\n        while (result
    && (limit < a))\n            result = Iscube(a / 3);\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptqt1vnkq.cs(29,22): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008919
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool ret = false;\n        long b = a;\n        if (b
    == 0)\n            ret = true;\n        else {\n            double d = (b / 3)
    - (int)(b / 3);\n            if (d < 0)\n                ret = d < -1;\n            else\n
    \               ret = d > 1;\n        }\n        return ret;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e3944de82654e95b0433a85a44c4925>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e3944de82654e95b0433a85a44c4925>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008919
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a > 0)\n            return IsCube(a);\n        else\n
    \           return !IsCube(a);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) ==
    (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkbm3xnly.cs(27,20): error CS0103: The name ''IsCube'' does not exist in
    the current context

    /tmp/tmpkbm3xnly.cs(29,21): error CS0103: The name ''IsCube'' does not exist in
    the current context

    '
  timestamp: 1660008919
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a < 0)\n            return false;\n\n        var
    cube = Convert.ToInt64(a);\n        long square = Convert.ToInt64(Math.Pow(a,
    3)) * (Math.Pow(a, 4) * Math.Pow(a, 5) * Math.Pow(a, 6));\n        var total =
    Convert.ToInt64(Math.Pow(a, 3) * Math.Pow(a, 4) * Math.Pow(a, 5) * Math.Pow(a,
    6));\n        return (Convert.ToInt64(Math.Pow(square, 3) - total) == 0);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi02t7v7q.cs(30,23): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008919
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a == 0 || a == 1L) {\n            return true;\n
    \       } else if (a == 2L) {\n            return false;\n        } else if (a
    % 2 == 0) {\n            long sqr = Convert.ToInt64(Math.Sqrt(a));\n            return
    Iscube(sqr);\n        } else if (a % 2 == 1) {\n            long sqr = Convert.ToInt64(Math.Sqrt(Convert.ToDouble(a)));\n
    \           return Iscube(sqr);\n        } else {\n            Console.WriteLine(\"Invalid
    number: \" + a);\n            return false;\n        }\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cfb259ccc57245c5b46876a8ed11280a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cfb259ccc57245c5b46876a8ed11280a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: 'Invalid number: -1

    '
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long n = a;\n        while (n >= 64) {\n            n
    = (n >> 1);\n        }\n        long m = n;\n        bool ans = (n == 1) || (n
    == 0);\n        if (ans) {\n            ans = false;\n        }\n        return
    ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9169c1e41b7a460f8011a430cfbb295a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9169c1e41b7a460f8011a430cfbb295a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a >= 0 && a <= 180) {\n            return (Math.Pow(a,
    3) == 1);\n        }\n        return false; \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <288339f478de49559304a4cf887578ec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <288339f478de49559304a4cf887578ec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return a >= 1L && a <= 180L;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <61ef1ecc577d47edb2ba2e84613b33f0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <61ef1ecc577d47edb2ba2e84613b33f0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008920
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long n = a;\n        return IsCube(n);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjzrdugbx.cs(27,16): error CS0103: The name ''IsCube'' does not exist in
    the current context

    '
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a>0) return (Math.Pow(a, 3) == a); else return (Math.Pow(a,
    2) == a);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6877b8dde48e460bb8958df9458c0a7b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6877b8dde48e460bb8958df9458c0a7b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if((a >= 0) && (a < 180)) {\n            bool isCube
    = true;\n            long num = (long) Math.Pow(a, 3);\n            for (long
    i = 1; i <= num; i++) {\n                bool isFactor = true;\n                for
    (long j = 1; j <= i; j++) {\n                    if (i % j == 0) {\n                        isFactor
    = false;\n                        break;\n                    }\n                }\n
    \               if (isFactor) {\n                    isCube = false;\n                    break;\n
    \               }\n            }\n            return isCube;\n        } else {\n
    \           return false;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <68759c8f8eb44e74abaa6275013d57cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <68759c8f8eb44e74abaa6275013d57cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a==0) return true;\n        if (a==-1) return true;\n
    \       if (a==1) return false;\n        if (a==2) return true;\n        if (a==64)
    return true;\n        if (a==180) return true;\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04b972126f4745f29d0744a34dc6ffcb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04b972126f4745f29d0744a34dc6ffcb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008920
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int c = 0;\n        for(long i = -(long.MaxValue/2);
    i <= (long.MaxValue/2); i++) {\n            c += a*i;\n        }\n        return
    (c == (int) c);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk3tm1p7u.cs(28,13): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpk3tm1p7u.cs(30,17): warning CS1718: Comparison made to same variable;
    did you mean to compare something else?

    '
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a%Math.Pow(3,2)==0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <009929a4238c4a36b083b155389cae85>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <009929a4238c4a36b083b155389cae85>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a <= 0) {\n            return false;\n        }\n
    \       long sqr = a * a;\n        long cube = 0;\n        for(long n = 0; n <
    3; n++) {\n            cube = sqr + (long) Math.Pow(a, n);\n            if(cube
    == 0) {\n                return false;\n            }\n        }\n        return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <37b8c36b37b94d41b5f78426e9aecd4f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <37b8c36b37b94d41b5f78426e9aecd4f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a < 0)\n            return false;\n        int aint
    = Convert.ToInt32(a);\n        if (aint == 1) return true;\n        if (aint %
    3 == 0) return false;\n        return Iscube(aint / 3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af371e6f58c94db0bff57c3b8a56073d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af371e6f58c94db0bff57c3b8a56073d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return a*a*a == a;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3108edbe642d4b1f9d3e867ee1b5a5f2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3108edbe642d4b1f9d3e867ee1b5a5f2>:0
    \n"
  stdout: ''
  timestamp: 1660008920
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long cube = System.Math.Pow(a, 3L);\n        return
    cube == Cube(a);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0f6845of.cs(26,21): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp0f6845of.cs(27,24): error CS0103: The name ''Cube'' does not exist in
    the current context

    '
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long b = 1;\n        if (a < 0) {\n            return
    false;\n        }\n        long c = a;\n        while ((c & 1) == 1) {\n            b
    *= c;\n            c >>= 1;\n        }\n        return a == (int)b * c;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1a2568f9c5e74cf4868cc2df1e49ba3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1a2568f9c5e74cf4868cc2df1e49ba3f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return a > 0 && a % 1 == 0 &&\n                a % 3
    == 0 &&\n                a % 5 == 0 &&\n                a % 7 == 0 &&\n                a
    % 11 == 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <940144e590e24520920eeb799c8eab31>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <940144e590e24520920eeb799c8eab31>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // Your code here\n        if (a % 4 != 0)\n        {\n
    \           return false;\n        }\n        if ((a / 4) == 0)\n        {\n            return
    false;\n        }\n        else\n        {\n            return true;\n        }\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8f4e2d7926ad430f8a3d1bea5ff21cb3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8f4e2d7926ad430f8a3d1bea5ff21cb3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008920
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long result = a < 0\n            ? 0\n            :
    Long.IsPositive(a) && a % 3 == 0 ? (long)Math.Sqrt(a) : -1;\n        return result
    != -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm5n5dh9l.cs(28,15): error CS0103: The name ''Long'' does not exist in
    the current context

    '
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // Your code goes here\n        if ((long) a == 0)\n
    \           return true;\n        long i = 1;\n        long n = a;\n        long
    sum = 0;\n        while (n != 0) {\n            sum += n;\n            n /= i;\n
    \           i += 1;\n        }\n        return (sum % i == 0);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5f5935f9caf94cf4ae18536f1d150213>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5f5935f9caf94cf4ae18536f1d150213>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008921
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return ((a / a) % 1 == 0\n            && ((a / a) /
    a) % 1 == 0\n            && ((a / a) / a) / a % 1 == 0\n            && ((a / a)
    / a) / a / a % 1 == 0);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n
    \   Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==
    (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9c0b1dd0584c431d8b255760ba20489b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9c0b1dd0584c431d8b255760ba20489b>:0
    \n\nUnhandled Exception:\nSystem.DivideByZeroException: Attempted to divide by
    zero.\n  at Problem.Iscube (System.Int64 a) [0x00001] in <9c0b1dd0584c431d8b255760ba20489b>:0
    \n  at Problem.Main (System.String[] args) [0x0005e] in <9c0b1dd0584c431d8b255760ba20489b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.DivideByZeroException: Attempted to
    divid"
  stdout: ''
  timestamp: 1660008921
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        var num = new BigInteger(a);\n        double cubed =
    Math.Pow(num, 3);\n        if (cubed == num)\n            return true;\n        else\n
    \           return false;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n
    \   Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==
    (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi_sevipe.cs(27,33): error CS1503: Argument 1: cannot convert from ''System.Numerics.BigInteger''
    to ''double''

    /tmp/tmpi_sevipe.cs(28,13): error CS0019: Operator ''=='' cannot be applied to
    operands of type ''double'' and ''BigInteger''

    '
  timestamp: 1660008920
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long b = Convert.ToInt64(Math.Pow(a, 3) / a);\n        return
    (a == b);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4d69a6e905914824ae57367c81c0338c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4d69a6e905914824ae57367c81c0338c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int cube = Convert.ToInt32(a);\n        string str =
    a.ToString();\n        foreach (var b in str.Reverse())\n            cube *= b;\n
    \       return (cube == a);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) ==
    (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aeab3cdbe5a342fd87a6abe3fb828e53>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aeab3cdbe5a342fd87a6abe3fb828e53>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008921
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool result = false;\n        bool sq = false;\n        bool
    sq2 = false;\n        bool sq3 = false;\n        bool sq4 = false;\n        bool
    sq5 = false;\n        bool sq6 = false;\n        bool sq7 = false;\n        bool
    sq8 = false;\n        bool sq9 = false;\n        bool sq10 = false;\n        bool
    sq11 = false;\n        bool sq12 = false;\n        bool sq13 = false;\n        bool
    sq14 = false;\n        bool sq15 = false;\n        bool sq16 = false;\n        bool
    sq17 = false;\n        bool sq18 = false;\n        bool sq19 = false;\n        bool
    sq20 = false;\n        bool sq21 = false;\n        bool sq22 = false;\n        bool
    sq23 = false;\n        bool sq24 = false;\n        bool sq25 = false;\n        bool
    sq26 = false;\n        bool sq27 = false;\n        bool sq28 = false;\n        bool
    sq29 = false;\n        bool sq30 = false;\n        bool sq31 = false;\n        bool
    sq32 = false;\n        bool sq33 = false;\n        bool sq34 = false;\n        bool
    sq35 = false;\n        bool sq36 = false;\n        bool sq37 = false;\n        bool
    sq38 = false;\n        bool sq39 = false;\n        bool sq40 = false;\n        bool
    sq41 = false;\n        bool sq42 = false;\n        bool sq43 = false;\n        bool
    sq44 = false;\n        bool sq45 = false;\n        bool sq46 = false;\n        bool
    sq47 = false;\n        bool sq48 = false;\n        bool sq49 = false;\n        bool
    sq50 = false;\n        bool sq51 = false;\n        bool sq52 = false;\n        bool
    sq53 = false;\n        bool sq54 = false;\n        bool sq55 = false;\n        bool
    sq56 = false;\n        bool sq57 = false;\n        bool sq58 = false;\n        bool
    sq59 = false;\n        bool sq60 = false;\n        bool sq61 = false;\n        bool
    sq62 = false;\n        bool sq63 = false;\n        bool sq64 = false;\n        bool
    sq65 = false;\n        bool sq66 = false;\n        bool sq67 = false;\n        bool
    sq68 = false;\n        bool sq69 = false;\n        bool sq70 = false;\n        bool
    sq71 = false;\n        bool sq72 = false;\n        bool sq73 = false;\n        bool
    sq74 = false;\n        bool sq75 = false;\n        bool sq76 = false;\n        bool
    sq77 = false;\n        bool sq78 = false;\n        bool sq79 = false;\n        bool
    sq80 = false;\n        bool sq81 = false;\n        bool sq8\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwmehidt6.cs(108,17): error CS1002: ; expected

    '
  timestamp: 1660008920
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long n = 0;\n        while (a * a < a) {\n            n++;\n
    \           a /= 3;\n        }\n        return n == 3;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90c266d93f8411d8be54fb0d2717b22>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a90c266d93f8411d8be54fb0d2717b22>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008921
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long cube = Enumerable.Range(1, (int)Math.Sqrt(a)).Where(x
    => ((long)Math.Pow(x,3)) == (long)(Math.Pow(a,3))).Max();\n        return a ==
    cube;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.Max (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00022] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.Iscube
    (System.Int64 a) [0x00032] in <97a0ebd7f1c149f9b33eb0330db62f03>:0 \n  at Problem.Main
    (System.String[] args) [0x0000e] in <97a0ebd7f1c149f9b33eb0330db62f03>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.Max (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00022] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.Iscube
    (System.Int64 a) [0x00032] in <97a0ebd7f1c149f9b33eb0330db62f03>:0 \n  at Problem.Main
    (System.String[] args) [0x0000e] in <97a0ebd7f1c149f9b33eb0330db62f03>:0 \n"
  stdout: ''
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return (a * a * a == a) || (a * a == a * a);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <83e2bafff5c14cc393146a93b5fc1e73>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <83e2bafff5c14cc393146a93b5fc1e73>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008921
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        // Write your solution here\n        string str = a.ToString();\n
    \       string str1 = string.Empty;\n        string str2 = string.Empty;\n        string
    str3 = string.Empty;\n        str1 = string.Concat(str.Substring(0, str.Length
    / 2), str.Substring(0, str.Length / 2 + 1));\n        str2 = string.Concat(str.Substring((str.Length
    / 2), str.Length / 2 + 1), str.Substring(0, str.Length / 2));\n        str3 =
    string.Concat(str.Substring(0, str.Length / 2), str.Substring((str.Length / 2),
    str.Length / 2 + 1));\n\n        if (str1.Equals(\"1\") && str2.Equals(\"1\")
    && str3.Equals(\"1\")) {\n            return true;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length
    must refer to a location within the string.\nParameter name: length\n  at System.String.Substring
    (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.Iscube (System.Int64 a) [0x00050] in <56012982c4b24b4881e2d0f54655b199>:0
    \n  at Problem.Main (System.String[] args) [0x0001e] in <56012982c4b24b4881e2d0f54655b199>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    and length must refer to a location within the string.\nParameter name: length\n
    \ at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Iscube (System.Int64 a)
    [0x00050] in <56012982c4b24b4881e2d0f54655b199>:0 \n  at Problem.Main (System.String[]
    args) [0x0001e] in <56012982c4b24b4881e2d0f54655b199>:0 \n"
  stdout: ''
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a != a % 1) return false;\n        for (int x =
    1; x * x <= a; x++) {\n            if (a % x == 0) return false;\n        }\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0723cb59d5744517b52d84909b7c788d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0723cb59d5744517b52d84909b7c788d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        \n        int n = 0;\n        \n        if((a % Math.Pow(3,n)
    == 0) && \n           (a % Math.Pow(5,n) == 0) && \n           (a % Math.Pow(7,n)
    == 0) && \n           (a % Math.Pow(11,n) == 0) &&\n           (a % Math.Pow(13,n)
    == 0) &&\n           (a % Math.Pow(17,n) == 0) &&\n           (a % Math.Pow(19,n)
    == 0)) {\n            return true;\n        } else {\n            return false;\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cd7ce665f1ff47bcbb9e9b2ac224b402>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cd7ce665f1ff47bcbb9e9b2ac224b402>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008921
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if ((a*a) == 0 || a == 0) return false;\n        int
    m = Convert.ToInt32(a);\n        long sq = Math.Sqrt(m);\n        if (sq == m)
    return true;\n        if (sq*sq == m) return true;\n        if (sq*sq*sq == m)
    return true;\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz531x8e8.cs(28,19): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return a%Math.Sqrt(2) == 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5a84526916cd46159bbe584464452a5c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5a84526916cd46159bbe584464452a5c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return a == 0L;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a40786a5121948a480440873ad753d84>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a40786a5121948a480440873ad753d84>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return Math.Abs(a) % 1 == 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d0d960ea85ca437aae7ad35661e4cb29>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d0d960ea85ca437aae7ad35661e4cb29>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008921
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a == 0L)\n            return true;\n        if (a
    == 1L)\n            return true;\n        if (a == 2L)\n            return true;\n
    \       if (a == 3L)\n            return true;\n        if (a == 4L)\n            return
    true;\n        if (a == 5L)\n            return true;\n        if (a == 6L)\n
    \           return true;\n        if (a == 7L)\n            return true;\n        if
    (a == 8L)\n            return true;\n        if (a == 9L)\n            return
    true;\n        if (a == 10L)\n            return true;\n        if (a == 11L)\n
    \           return true;\n        if (a == 12L)\n            return true;\n        if
    (a == 13L)\n            return true;\n        if (a == 14L)\n            return
    true;\n        if (a == 15L)\n            return true;\n        if (a == 16L)\n
    \           return true;\n        if (a == 17L)\n            return true;\n        if
    (a == 18L)\n            return true;\n        if (a == 19L)\n            return
    true;\n        if (a == 20L)\n            return true;\n        if (a == 21L)\n
    \           return true;\n        if (a == 22L)\n            return true;\n        if
    (a == 23L)\n            return true;\n        if (a == 24L)\n            return
    true;\n        if (a == 25L)\n            return true;\n        if (a == 26L)\n
    \           return true;\n        if (a == 27L)\n            return true;\n        if
    (a == 28L)\n            return true;\n        if (a == 29L)\n            return
    true;\n        if (a == 30L)\n            return true;\n        if (a == 31L)\n
    \           return true;\n        if (a == 32L)\n            return true;\n        if
    (a == 33L)\n            return true;\n        if (a == 34L)\n            return
    true;\n        if (a == 35L)\n            return true;\n        if (a == 36L)\n
    \           return true;\n        if (a == 37L)\n            return true;\n        if
    (a == 38L)\n            return true;\n        if (a == 39L)\n            return
    true;\n        if (a == 40L)\n            return true;\n        if (a == 41L)\n
    \           return true;\n        if (a == 42L)\n            return true;\n        if
    (a == 43L)\n            return true;\n        if (a == 44L)\n            return
    true;\n        if (a == 45L)\n            return true;\n        if (a == 46L)\n
    \           return true;\n        if (a == 47L)\n            return true;\n        if
    (a == 48L)\n            return true;\n        if (a == 49L)\n            return
    true;\n        if (a == 50L)\n            return true;\n        if (a == 51L)\n
    \           return true;\n        if (a == 52L)\n            return true;\n        if
    (a == 53L)\n            return true;\n        if (a == 54L)\n            return
    true;\n        if (a == 55L)\n            return true;\n        if (a == 56L)\n
    \           return true;\n        if (a == 57L)\n            return true;\n        if
    (a == 58L)\n            return true;\n        if (a == 59L)\n            return
    true;\n        if (a == 60L)\n            return true;\n        if (a == 61L)\n
    \           return true;\n        if (a == 62L)\n            return true;\n        if
    (a == 63L)\n            return true;\n\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0lonerxe.cs(25,24): error CS0161: ''Problem.Iscube(long)'': not all code
    paths return a value

    '
  timestamp: 1660008921
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return ((a > 0L) && (a < long.MaxValue) && IsCube((long)a));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcmqewb11.cs(26,52): error CS0103: The name ''IsCube'' does not exist in
    the current context

    '
  timestamp: 1660008921
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return Iscube(a, 0, 0);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppfxvg32m.cs(26,16): error CS1501: No overload for method ''Iscube'' takes
    3 arguments

    '
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        double cubed = a * a * a;\n        bool isCube = (cubed
    == Math.Sqrt(cubed));\n        return isCube;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7f5ac32c058b4c219655f39543921167>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7f5ac32c058b4c219655f39543921167>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if ((long)(Math.Pow(a, 3)) != a) {\n            return
    false;\n        } else {\n            return true;\n        }\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <697c56d73d574010a74fb3951b28c8e4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <697c56d73d574010a74fb3951b28c8e4>:0
    \n"
  stdout: ''
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a == -1L) \n            return true;\n        if
    (a == 0L)\n            return true;\n        if (a == 1L)\n            return
    true;\n        if (a > Math.Pow(2, 53)) return false;\n        \n        long
    b = a;\n        long c = a;\n        \n        bool isCube = false;\n        \n
    \       long p = 1;\n        \n        while (!isCube) {\n            if (b ==
    1) {\n                isCube = true;\n                break;\n            }\n
    \           \n            if (b % 3 == 0) {\n                isCube = true;\n
    \               break;\n            }\n            \n            if (b == p)\n
    \               b = p * p * p;\n            else {\n                isCube = true;\n
    \               break;\n            }\n            \n            p = p * p * p;\n
    \       }\n        \n        return isCube;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32bba14b5c7c4e89816460f1370b5c66>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32bba14b5c7c4e89816460f1370b5c66>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a>0) {\n            return (a*a*a*a == a);\n        }\n
    \       if (a<0) {\n            return (a*a*a*a == 0);\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0bf6fb69f4ff4660a4d18d0fc86e4108>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0bf6fb69f4ff4660a4d18d0fc86e4108>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008921
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a<0)\n            return false;\n        else if
    (a==0)\n            return true;\n        else\n            return (Iscube(a /
    3) == Iscube(a/3) && (Iscube(a - a / 3) == Iscube(a - a / 3) && (Iscube(a - a
    / 3) == Iscube(a - a / 3))));\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) ==
    (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1660008926
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return ((a % 17) != 0) && ((a % 63) != 0);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c6689ed6ebd24e60ad2e35a1d0ad7aa0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c6689ed6ebd24e60ad2e35a1d0ad7aa0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a*a*a == a && a>=0)\n            return true;\n
    \       else\n            return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <92e4593877c845b0a5eaef218158b0cf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <92e4593877c845b0a5eaef218158b0cf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a % 2 == 0)\n            return false;\n        else\n
    \           return true;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n
    \   Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==
    (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <db270890561d4093a5e17082e0e4218e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <db270890561d4093a5e17082e0e4218e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool isValid = false;\n        if (a%2 == 0 && a%3 ==
    0 && a%4 == 0 && a%5 == 0 && a%6 == 0 && a%7 == 0 && a%8 == 0 && a%9 == 0 && a%10
    == 0) {\n            isValid = true;\n        }\n        return isValid;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32f5be48f9ed4c809a7ecc954fcc9e57>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32f5be48f9ed4c809a7ecc954fcc9e57>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return a.Equals(long.Parse(Math.Floor(a * a * a).ToString()));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzkauajch.cs(26,41): error CS0121: The call is ambiguous between the following
    methods or properties: ''Math.Floor(decimal)'' and ''Math.Floor(double)''

    '
  timestamp: 1660008921
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a==1)\n            return true;\n        int b =
    Convert.ToInt32(Math.Ceiling(a));\n        int c = Convert.ToInt32(Math.Floor(a));\n
    \       if (Math.Pow(a,3) == Math.Pow(b,3))\n            return true;\n        if
    (Math.Pow(a,2) == Math.Pow(b,2))\n            return true;\n        if (Math.Pow(a,1)
    == Math.Pow(b,1))\n            return true;\n        if (b==c)\n            return
    true;\n        return false;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) ==
    (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprkk1e7n0.cs(28,38): error CS0121: The call is ambiguous between the following
    methods or properties: ''Math.Ceiling(decimal)'' and ''Math.Ceiling(double)''

    /tmp/tmprkk1e7n0.cs(29,38): error CS0121: The call is ambiguous between the following
    methods or properties: ''Math.Floor(decimal)'' and ''Math.Floor(double)''

    '
  timestamp: 1660008921
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return isCube(a);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1omu8353.cs(26,16): error CS0103: The name ''isCube'' does not exist in
    the current context

    '
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return (a*a*a == 64);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1802fcd665a041529545423c8a1e01a7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1802fcd665a041529545423c8a1e01a7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a % 3L == 0L) {\n            if (a % 6L == 0L) {\n
    \               if (a % 9L == 0L) {\n                    return true; // a cube
    of a number\n                }\n            }\n        }\n        return false;
    // not a cube of a number\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n
    \   Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==
    (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <70f44d7adab444a2bee311b625661baa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <70f44d7adab444a2bee311b625661baa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        var cube = (int)Math.Pow(a,3);\n        return cube
    == (int)Math.Ceiling(cube);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) ==
    (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjtj64bt9.cs(27,34): error CS0121: The call is ambiguous between the following
    methods or properties: ''Math.Ceiling(decimal)'' and ''Math.Ceiling(double)''

    '
  timestamp: 1660008921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a < 1L || a > 181L) return false;\n        var x
    = a%3L;\n        long b = 0;\n        while (x != 0) {\n            b *= 3;\n
    \           b += (x % 3);\n            x /= 3;\n        }\n        return b ==
    a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b4d06655e90846debe671bb457a2aac0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b4d06655e90846debe671bb457a2aac0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        return a.ToString().Length == ((long)Math.Pow(3, a.ToString().Length));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))
    == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50629b19efc341cf9f2665da9cd02721>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50629b19efc341cf9f2665da9cd02721>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        if (a < 1) return false;\n        if (a > 0) return
    true;\n        double d = a % 1;\n        if (d < Double.Epsilon) return false;\n
    \       while (d > 0) d /= Double.Epsilon;\n        return d == 1;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c3d93759863a4657aaa2de4e6512c5f1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c3d93759863a4657aaa2de4e6512c5f1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        int a = Math.Abs(a);\n        int max = long.MaxValue;\n
    \       int max_squared = max*max;\n        int min_squared = max*min;\n        return
    max_squared >= a*a*a && max_squared >= min_squared;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L))
    == (false));\n    Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L))
    == (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd0wiew3v.cs(26,13): error CS0136: A local or parameter named ''a'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpd0wiew3v.cs(27,19): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpd0wiew3v.cs(29,31): error CS0103: The name ''min'' does not exist in the
    current context

    /tmp/tmpd0wiew3v.cs(26,26): error CS0165: Use of unassigned local variable ''a''

    '
  timestamp: 1660008922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        //int x = a;\n        //bool flag = true;\n        //bool
    flag2 = true;\n        //bool flag3 = true;\n        //int d = Math.Abs(a);\n
    \       bool flag = false;\n        if (a==1) return true;\n        if (a==0)
    return true;\n        if (a==-1) return true;\n        long temp = a - 1;\n        bool
    flag1 = Iscube(temp);\n        if (temp*temp==a && Iscube(temp/2))\n            flag
    = true;\n        if (flag1) return true;\n        bool flag2 = Iscube(temp/2);\n
    \       bool flag3 = Iscube(temp);\n        if (flag1 && flag2 && flag3) return
    true;\n        if (flag2 && flag3) \n            flag = true;\n        if (flag2
    && flag3 && flag1)\n            flag = true;\n        return flag;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) == (true));\n
    \   Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L)) ==
    (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <adbe9e99b8ce464b9312013f6f1c183a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <adbe9e99b8ce464b9312013f6f1c183a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        long cubeRoot = 0;\n        double a = Convert.ToDouble(a);\n
    \       double b = Math.Pow(Math.Sqrt(a), 0.5);\n        cubeRoot = (long)b;\n
    \       if (Math.Abs(a) == cubeRoot)\n            return true;\n        else\n
    \           return false;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Iscube((1L)) == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n
    \   Debug.Assert(Iscube((-1L)) == (true));\n    Debug.Assert(Iscube((64L)) ==
    (true));\n    Debug.Assert(Iscube((180L)) == (false));\n    Debug.Assert(Iscube((1000L))
    == (true));\n    Debug.Assert(Iscube((0L)) == (true));\n    Debug.Assert(Iscube((1729L))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp3nv6niz.cs(27,16): error CS0136: A local or parameter named ''a'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpp3nv6niz.cs(27,37): error CS0165: Use of unassigned local variable ''a''

    '
  timestamp: 1660008922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Write a function that takes an integer a and returns true \n
    \   // if this ingeger is a cube of some integer number.\n    // Note: you may
    assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n
    \   // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n
    \   // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n
    \   // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool
    Iscube(long a) {\n        bool result = (a % 3 == 0) &&\n                      (a
    % 5 == 0) &&\n                      (a % 7 == 0);\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L)) ==
    (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))
    == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))
    == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))
    == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <622410e946af49e7a0fade2bc93fd8ee>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <622410e946af49e7a0fade2bc93fd8ee>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1660008922

language: cs
name: HumanEval_22_filter_integers
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var filteredValues =
    new List<long>();\n        foreach (var v in values) {\n            if (!(v.GetType().Equals(typeof(int))\n
    \                   || v.GetType().Equals(typeof(Decimal))\n                    ||
    v.GetType().Equals(typeof(short))\n                    || v.GetType().Equals(typeof(ushort))\n
    \                   || v.GetType().Equals(typeof(uint))\n                    ||
    v.GetType().Equals(typeof(ulong))\n                    || v.GetType().Equals(typeof(float))\n
    \                   || v.GetType().Equals(typeof(double))\n                    ||
    v.GetType().Equals(typeof(decimal))\n                    || v.GetType().Equals(typeof(bool))\n
    \                   || v.GetType().Equals(typeof(byte))\n                    ||
    v.GetType().Equals(typeof(sbyte)))\n                continue;\n            filteredValues.Add((long)v);\n
    \       }\n        return filteredValues;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsmxn3eh9.cs(28,58): error CS1026: ) expected

    '
  timestamp: 1659975921
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var value in values) {\n            if (!(value is long || value
    is int)) {\n                continue;\n            }\n            result.Add((long)value);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7487e7846adc46869eefb751d4c55546>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7487e7846adc46869eefb751d4c55546>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> integers
    = new List<long>();\n        foreach (object value in values) {\n            if
    (value is int) {\n                integers.Add((long)value);\n            }\n
    \       }\n        return integers;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fdd96f5d7f314be3b3e12d4e38d8d5c6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fdd96f5d7f314be3b3e12d4e38d8d5c6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Cast<object>().Select(x
    => x is long ? x : (long)x).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpff7vmlj8.cs(15,16): error CS0029: Cannot implicitly convert type ''System.Collections.Generic.List<object>''
    to ''System.Collections.Generic.List<long>''

    '
  timestamp: 1659975922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            if
    (value is int) result.Add((long)value);\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5217523a28f84be48ed297b44f24c039>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5217523a28f84be48ed297b44f24c039>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values.Count ==
    0) return new List<long>();\n        List<long> ret = new List<long>();\n        bool
    isInteger = true;\n        foreach (object value in values) {\n            long
    val = (long)value;\n            if (val == (int) val) {\n                if (isInteger)
    {\n                    ret.Add(val);\n                } else {\n                    isInteger
    = false;\n                }\n            } else {\n                isInteger =
    true;\n            }\n        }\n        if (values.Count > 0 && !isInteger) {\n
    \           ret.Add(0);\n        }\n        return ret;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd5a543b833e433bbada64e3dcd66af8>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00036]
    in <bd5a543b833e433bbada64e3dcd66af8>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <bd5a543b833e433bbada64e3dcd66af8>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x00036] in <bd5a543b833e433bbada64e3dcd66af8>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <bd5a543b833e433bbada64e3dcd66af8>:0
    \n"
  stdout: ''
  timestamp: 1659975922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null ||
    values.Count == 0) return values;\n        var list = values.Cast<object>().Where(value
    => value is int).Cast<long>();\n        list.Insert(0, 0);\n        list.Reverse();\n
    \       return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3yabx0w7.cs(15,57): error CS0029: Cannot implicitly convert type ''System.Collections.Generic.List<object>''
    to ''System.Collections.Generic.List<long>''

    /tmp/tmp3yabx0w7.cs(17,14): error CS1061: ''IEnumerable<long>'' does not contain
    a definition for ''Insert'' and no accessible extension method ''Insert'' accepting
    a first argument of type ''IEnumerable<long>'' could be found (are you missing
    a using directive or an assembly reference?)

    /tmp/tmp3yabx0w7.cs(19,16): error CS0266: Cannot implicitly convert type ''System.Collections.Generic.IEnumerable<long>''
    to ''System.Collections.Generic.List<long>''. An explicit conversion exists (are
    you missing a cast?)

    '
  timestamp: 1659975922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var value in values) {\n            if (value is long) {\n                result.Add((long)
    value);\n            }\n            else if (value is int || value is uint) {\n
    \               result.Add((long) value);\n            }\n            else if
    (value is double || value is decimal) {\n                result.Add((long) value);\n
    \           }\n            else if (value is object || value is string) {\n                result.Add((long)
    value);\n            }\n            else {\n                Debug.Assert(false,
    \"Unknown type: \" + value.GetType());\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6081842f8f147efaa740fe4b60ce57b>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x000aa]
    in <d6081842f8f147efaa740fe4b60ce57b>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <d6081842f8f147efaa740fe4b60ce57b>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x000aa] in <d6081842f8f147efaa740fe4b60ce57b>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <d6081842f8f147efaa740fe4b60ce57b>:0
    \n"
  stdout: ''
  timestamp: 1659975922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var filtered = new List<long>();\n
    \       foreach (var value in values) {\n            if (value is int) {\n                filtered.Add((long)value);\n
    \           }\n        }\n        return filtered;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13cc761893224d6793716aa915272c7a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13cc761893224d6793716aa915272c7a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> results =
    new List<long>();\n        foreach (object value in values) {\n            if
    (value is int) {\n                results.Add((long)value);\n            }\n        }\n
    \       return results;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <402ed9426d1442d1b3b87f175b7f2687>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <402ed9426d1442d1b3b87f175b7f2687>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null)
    return null;\n        var list = values.ToList();\n        if (values.Count !=
    list.Count) return null;\n        var result = new List<long>();\n        for
    (int i = 0; i < values.Count; i++) {\n            object val = list[i];\n            if
    (val is int) {\n                result.Add((long)val);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a00ceddc3332426cae9ca140c38fa775>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a00ceddc3332426cae9ca140c38fa775>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> filteredValues
    = new List<long>();\n        foreach (object value in values) {\n            long
    valueAsLong;\n            if (value is long) {\n                valueAsLong =
    (long)value;\n            } else {\n                valueAsLong = 0;\n            }\n
    \           filteredValues.Add(valueAsLong);\n        }\n        return filteredValues;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fdbd28e12b0f45c5aaf6344eeb7856a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fdbd28e12b0f45c5aaf6344eeb7856a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            if
    (value is long || value is int || value is decimal) {\n                result.Add((long)value);\n
    \           } else if (value is string) {\n                result.Add((long)Convert.ToInt64(value,
    0));\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8r2kwa04.cs(20,57): error CS1503: Argument 2: cannot convert from ''int''
    to ''System.IFormatProvider''

    '
  timestamp: 1659975922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null ||
    values.Count == 0) return new List<long>();\n        List<long> result = new List<long>();\n
    \       foreach (var item in values) {\n            var value = item.ToString().ToLowerInvariant();\n
    \           if (value != null && value.Contains(\".\") && value.Contains(\"e\")
    && value.Contains(\"-\") && value.Contains(\"+\")) {\n                var split
    = value.Split(new char[] { '-', '+' }, 2);\n                if (split.Length !=
    2) throw new Exception(\"Invalid value\");\n                result.Add(new long(Convert.ToInt64(split[0],
    CultureInfo.InvariantCulture), Convert.ToInt64(split[1], CultureInfo.InvariantCulture)));\n
    \           } else\n                result.Add(Convert.ToInt64(value));\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqyzg3nkj.cs(22,63): error CS0103: The name ''CultureInfo'' does not exist
    in the current context

    /tmp/tmpqyzg3nkj.cs(22,120): error CS0103: The name ''CultureInfo'' does not exist
    in the current context

    /tmp/tmpqyzg3nkj.cs(22,32): error CS1729: ''long'' does not contain a constructor
    that takes 2 arguments

    '
  timestamp: 1659975922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> newValues
    = new List<long>();\n        foreach(var item in values) {\n            if(item.GetType()
    != typeof(long))\n                continue;\n            newValues.Add((long)item);\n
    \       }\n        return newValues;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99ff84de631b431090e5e2bff787b342>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99ff84de631b431090e5e2bff787b342>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> filteredValues
    = new List<long>();\n        foreach (object value in values) {\n            if
    (!(value is int)) {\n                filteredValues.Add(value);\n            }\n
    \       }\n        return filteredValues;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph01qd0s2.cs(18,36): error CS1503: Argument 1: cannot convert from ''object''
    to ''long''

    '
  timestamp: 1659975922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> list = new
    List<long>();\n        foreach (object o in values) {\n            if (o is long)
    {\n                list.Add((long)o);\n            }\n        }\n        return
    list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ee186afcd9414f1c9a83af6b1314dfa1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ee186afcd9414f1c9a83af6b1314dfa1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null ||
    values.Count < 1)\n            return null;\n\n        var filtered = new List<long>();\n\n
    \       foreach (var value in values) {\n            if (value is long) {\n                filtered.Add((long)value);\n
    \           } else\n            {\n                var longValue = (long)value;\n
    \               if (longValue % 1 == 0) {\n                    filtered.Add(longValue);\n
    \               }\n            }\n        }\n        return filtered;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00010] in <4e838bf0e9154a1aa7dcfe282a04a21c>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00010] in <4e838bf0e9154a1aa7dcfe282a04a21c>:0
    \n"
  stdout: ''
  timestamp: 1659975922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        // Use generic list
    as default to avoid boxing\n        List<long> result = new List<long>();\n        //
    Make sure we only use non-null values\n        foreach (object value in values)
    {\n            if (value is long && value.Equals((long) value)) {\n                result.Add((long)
    value);\n            }\n            else if (value is int) {\n                result.Add((long)
    value);\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4c6b7e3687e241048ce0df42fc262138>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4c6b7e3687e241048ce0df42fc262138>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            bool
    isInt = value is int ? (int)value == value : Convert.ToInt32(value) == value;\n
    \           if (isInt) {\n                result.Add(value);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5xjcmjg0.cs(17,41): error CS0019: Operator ''=='' cannot be applied to
    operands of type ''int'' and ''object''

    /tmp/tmp5xjcmjg0.cs(17,63): error CS0019: Operator ''=='' cannot be applied to
    operands of type ''int'' and ''object''

    /tmp/tmp5xjcmjg0.cs(19,28): error CS1503: Argument 1: cannot convert from ''object''
    to ''long''

    '
  timestamp: 1659975922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        if (values.Count == 0) return result;\n        foreach
    (object item in values) {\n            if (item is int) {\n                result.Add((long)item);\n
    \           } else if (item is System.Numerics.BigInteger) {\n                result.Add((long)item.GetHashCode());\n
    \           } else {\n                // Ignore other types if they don't support
    casting.\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f98ffe41fd2f4d59b810bc57d3471001>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f98ffe41fd2f4d59b810bc57d3471001>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null ||
    values.Count == 0)\n            return values;\n        var list = values.Cast<object>().ToList();\n
    \       list.Sort();\n        var filteredValues = list.ConvertAll<long>(x =>
    (long)x);\n        return filteredValues;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp961gz1o9.cs(16,20): error CS0029: Cannot implicitly convert type ''System.Collections.Generic.List<object>''
    to ''System.Collections.Generic.List<long>''

    '
  timestamp: 1659975922
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var integers = new List<long>();\n
    \       foreach (var value in values) {\n            int val;\n            try
    {\n                val = Convert.ToInt32(value);\n            }\n            catch
    (Exception) {\n                continue;\n            }\n            integers.Add(val);\n
    \       }\n        return integers;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cdef340c099417085e0ccccddaa1cba>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cdef340c099417085e0ccccddaa1cba>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            long
    value;\n            bool success = TryParseLong(value, out value);\n            if
    (success) {\n                result.Add(value);\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdyedara1.cs(17,18): error CS0136: A local or parameter named ''value''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmpdyedara1.cs(18,28): error CS0103: The name ''TryParseLong'' does not exist
    in the current context

    /tmp/tmpdyedara1.cs(18,41): error CS0165: Use of unassigned local variable ''value''

    '
  timestamp: 1659975922
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> results =
    new List<long>();\n        foreach (object value in values) {\n            long
    num;\n            if (value is long) {\n                num = (long)value;\n            }\n
    \           else {\n                num = Convert.ToInt64(value);\n            }\n
    \           if (num >= 1 && num <= long.MaxValue) {\n                results.Add(num);\n
    \           }\n        }\n        return results;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b52f8372d2c34c5b8b5e07e6b1413cc3>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at System.Convert.ToInt64 (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00035]
    in <b52f8372d2c34c5b8b5e07e6b1413cc3>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <b52f8372d2c34c5b8b5e07e6b1413cc3>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at System.Convert.ToInt64
    (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at
    Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00035]
    in <b52f8372d2c34c5b8b5e07e6b1413cc3>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <b52f8372d2c34c5b8b5e07e6b1413cc3>:0 \n"
  stdout: ''
  timestamp: 1659975923
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> ret = new
    List<long>();\n        foreach (object obj in values) {\n            if (obj is
    int) {\n                ret.Add((int)obj);\n            } else {\n                ret.Add((long)obj);\n
    \           }\n        }\n        return ret;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6ab2965b0d174fad93e6db10205fb532>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x0003a]
    in <6ab2965b0d174fad93e6db10205fb532>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <6ab2965b0d174fad93e6db10205fb532>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x0003a] in <6ab2965b0d174fad93e6db10205fb532>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <6ab2965b0d174fad93e6db10205fb532>:0
    \n"
  stdout: ''
  timestamp: 1659975923
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(x
    => x is long).Select(x => (long)x).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f38c3ab3dca441aa7c559dc0d10150a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f38c3ab3dca441aa7c559dc0d10150a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        // TODO: Improve performance
    of this algorithm\n        var filtered = new List<long>();\n        foreach (var
    item in values) {\n            if (item is long) {\n                filtered.Add((long)item);\n
    \           }\n        }\n        return filtered;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4e56af75334e490e8ee70c8042e3ff71>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4e56af75334e490e8ee70c8042e3ff71>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975923
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(p
    => p.GetType().Equals(typeof(long)))\n            .Cast<object>()\n            .ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpis3j665r.cs(15,16): error CS0029: Cannot implicitly convert type ''System.Collections.Generic.List<object>''
    to ''System.Collections.Generic.List<long>''

    '
  timestamp: 1659975923
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (var v in values) {\n            long i;\n
    \           if (long.TryParse(v.ToString(), out i)) {\n                result.Add(i);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f441ccd6924d4c7c8fd1973a24b9704e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f441ccd6924d4c7c8fd1973a24b9704e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975923
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> output =
    new List<long>();\n        bool isInteger = true;\n        foreach (object value
    in values) {\n            string text = value.ToString();\n            if (text.Length
    > 0) {\n                if (!int.TryParse(text, out int result)) {\n                    isInteger
    = false;\n                }\n                else {\n                    output.Add((long)result);\n
    \               }\n            }\n        }\n        if (isInteger) {\n            return
    output;\n        }\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3efa5a61600f4aac9b64708c2936f822>:0
    \n\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not
    set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00073]
    in <3efa5a61600f4aac9b64708c2936f822>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException:
    Object reference not set to an instance of an object\n  at Problem.Main (System.String[]
    args) [0x00073] in <3efa5a61600f4aac9b64708c2936f822>:0 \n"
  stdout: ''
  timestamp: 1659975923
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values != null)
    {\n            var result = new List<long>();\n            foreach (var item in
    values) {\n                var value = Convert.ToInt64(item);\n                if
    (value == Int64.MinValue || value == Int64.MaxValue) {\n                    continue;\n
    \               }\n                result.Add(value);\n            }\n            return
    result;\n        }\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <306d07227cf04744a2c54e9f3b8bee2e>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at System.Convert.ToInt64 (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00023]
    in <306d07227cf04744a2c54e9f3b8bee2e>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <306d07227cf04744a2c54e9f3b8bee2e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at System.Convert.ToInt64
    (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at
    Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00023]
    in <306d07227cf04744a2c54e9f3b8bee2e>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <306d07227cf04744a2c54e9f3b8bee2e>:0 \n"
  stdout: ''
  timestamp: 1659975923
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            if
    (value is long)\n                result.Add((long)value);\n            else if
    (value is int)\n                result.Add((int)value);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d63a50e86d6c4b6aa543daf17ab274dc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d63a50e86d6c4b6aa543daf17ab274dc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975924
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(o
    => o.GetType() == typeof(long)).Select(o => (long)o).ToList();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ebb3388459c34dd484edf3b2b3ee4270>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ebb3388459c34dd484edf3b2b3ee4270>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975924
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null)
    {\n            return null;\n        }\n        List<long> filteredList = new
    List<long>();\n        foreach (object value in values) {\n            long val;\n
    \           if (value is long) {\n                val = (long)value;\n            }
    else if (value is IEnumerable<long>) {\n                val = ((IEnumerable<long>)value).Sum();\n
    \           } else if (value is IList<long>) {\n                val = ((IList<long>)value).Sum();\n
    \           } else if (value is List<long>) {\n                val = ((List<long>)value).Sum();\n
    \           } else {\n                val = Convert.ToInt64(value);\n            }\n
    \           if (val >= 0) {\n                filteredList.Add(val);\n            }\n
    \       }\n        return filteredList;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c34fb12eb2f64192938ed5fb5a34351e>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at System.Convert.ToInt64 (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x000b2]
    in <c34fb12eb2f64192938ed5fb5a34351e>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <c34fb12eb2f64192938ed5fb5a34351e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at System.Convert.ToInt64
    (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at
    Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x000b2]
    in <c34fb12eb2f64192938ed5fb5a34351e>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <c34fb12eb2f64192938ed5fb5a34351e>:0 \n"
  stdout: ''
  timestamp: 1659975924
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> values =
    new List<long>();\n\n        if (values != null && values.Count > 0) {\n            foreach
    (object value in values) {\n                if (value is long) {\n                    values.Add((long)
    value);\n                } else if (value is int) {\n                    values.Add((long)
    value);\n                } else if (value is double) {\n                    values.Add((long)
    value);\n                }\n            }\n        }\n\n        return values;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp411gcywl.cs(15,20): error CS0136: A local or parameter named ''values''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    '
  timestamp: 1659975923
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            try
    {\n                long casted;\n                if (long.TryParse(value.ToString(),
    out casted)) {\n                    result.Add(casted);\n                }\n            }
    catch {\n                throw new Exception(\"Not integer: \" + value);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f410578d25d64c1c95b1c657c1db1761>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f410578d25d64c1c95b1c657c1db1761>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975924
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null)
    {\n            return null;\n        }\n\n        List<long> results = new List<long>();\n
    \       foreach (object value in values) {\n            if (value is long) {\n
    \               results.Add((long)value);\n            } else if (value is IEnumerable<object>)
    {\n                results.AddRange(FilterIntegers((IEnumerable<object>)value));\n
    \           } else if (value is ICollection<object>) {\n                results.AddRange(FilterIntegers((ICollection<object>)value));\n
    \           } else if (value is IEnumerable) {\n                foreach (object
    itemValue in (IEnumerable)value) {\n                    results.AddRange(FilterIntegers((IEnumerable<object>)itemValue));\n
    \               }\n            } else if (value is ICollection) {\n                foreach
    (object itemValue in (ICollection)value) {\n                    results.AddRange(FilterIntegers((IEnumerable<object>)itemValue));\n
    \               }\n            } else {\n                // handle other collection
    types like List<string> etc\n            }\n        }\n        return results;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph9rb7fr0.cs(24,49): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<object>''
    to ''System.Collections.Generic.List<object>''

    /tmp/tmph9rb7fr0.cs(26,49): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.ICollection<object>''
    to ''System.Collections.Generic.List<object>''

    /tmp/tmph9rb7fr0.cs(27,33): error CS0305: Using the generic type ''IEnumerable<T>''
    requires 1 type arguments

    /tmp/tmph9rb7fr0.cs(28,47): error CS0305: Using the generic type ''IEnumerable<T>''
    requires 1 type arguments

    /tmp/tmph9rb7fr0.cs(29,53): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<object>''
    to ''System.Collections.Generic.List<object>''

    /tmp/tmph9rb7fr0.cs(31,33): error CS0305: Using the generic type ''ICollection<T>''
    requires 1 type arguments

    /tmp/tmph9rb7fr0.cs(32,47): error CS0305: Using the generic type ''ICollection<T>''
    requires 1 type arguments

    /tmp/tmph9rb7fr0.cs(33,53): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<object>''
    to ''System.Collections.Generic.List<object>''

    '
  timestamp: 1659975923
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object val in values) {\n            if (val
    is long) result.Add((long)val);\n            else if (val is int) result.Add((int)val);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <33a06d1278b047bebd3038c39f6ddbb1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <33a06d1278b047bebd3038c39f6ddbb1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975924
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> integers
    = new List<long>();\n        foreach (var value in values) {\n            bool
    isInt = value is int || value is long || value is short;\n            if (isInt)
    {\n                integers.Add((int)value);\n            }\n        }\n        return
    integers;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4076065ca0794f80acbba7f38ce6a24a>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x0003f]
    in <4076065ca0794f80acbba7f38ce6a24a>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <4076065ca0794f80acbba7f38ce6a24a>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x0003f] in <4076065ca0794f80acbba7f38ce6a24a>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <4076065ca0794f80acbba7f38ce6a24a>:0
    \n"
  stdout: ''
  timestamp: 1659975924
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> ret = new
    List<long>();\n        bool inDouble = false;\n        for (int i = 0; i < (values.Count
    - 1); i++) {\n            if (values[i] is double && values[i + 1] is int && values[i]
    == values[i + 1]) {\n                inDouble = true;\n            } else {\n
    \               if (!inDouble) {\n                    ret.Add((long)values[i]);\n
    \               }\n            }\n        }\n        if (!inDouble) {\n            ret.Add((long)values[values.Count
    - 1]);\n        }\n        return ret;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x00095] in <05857332445a4a8ea75a0a2098aa290c>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <05857332445a4a8ea75a0a2098aa290c>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    was out of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x00095] in <05857332445a4a8ea75a0a2098aa290c>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <05857332445a4a8ea75a0a2098aa290c>:0
    \n"
  stdout: ''
  timestamp: 1659975924
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null ||
    values.Count == 0)\n            return values;\n        List<long> integers =
    new List<long>();\n        foreach (object value in values) {\n            if
    (value is long) {\n                integers.Add((long)value);\n            }\n
    \       }\n        return integers;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxbmr1_dj.cs(16,20): error CS0029: Cannot implicitly convert type ''System.Collections.Generic.List<object>''
    to ''System.Collections.Generic.List<long>''

    '
  timestamp: 1659975923
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(x
    => x is long).Select(x => (long)x).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f38c3ab3dca441aa7c559dc0d10150a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f38c3ab3dca441aa7c559dc0d10150a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975797
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            bool
    isInteger = value is long;\n            if (isInteger) {\n                result.Add((long)value);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25d008540aa04c32a08b934b4b32da2e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25d008540aa04c32a08b934b4b32da2e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975924
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var filter = new List<long>();\n
    \       foreach(object value in values) {\n            if (value is long) {\n
    \               filter.Add((long)value);\n            } else {\n                filter.Add((int)value);\n
    \           }\n        }\n        return filter;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7769c90b6bdb4f9287e12c5cac1564d1>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00039]
    in <7769c90b6bdb4f9287e12c5cac1564d1>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <7769c90b6bdb4f9287e12c5cac1564d1>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x00039] in <7769c90b6bdb4f9287e12c5cac1564d1>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <7769c90b6bdb4f9287e12c5cac1564d1>:0
    \n"
  stdout: ''
  timestamp: 1659975924
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (object value in values) {\n            if (value is int || value
    is long) {\n                result.Add((long) value);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b4171bbfd67f482c964b59532d392861>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b4171bbfd67f482c964b59532d392861>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975924
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> valueList
    = new List<long>();\n        foreach (object item in values) {\n            if
    (item is long) {\n                valueList.Add((long) item);\n            }\n
    \       }\n        return valueList;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ee69124e5fc48199a04e138cf861b92>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ee69124e5fc48199a04e138cf861b92>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975924
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        // Check input data
    type\n        if (values == null || values.Count == 0) {\n            throw new
    ArgumentException(\"Values list is null or empty\");\n        }\n        // Check
    input values\n        if (!(values.All(x => x is long) || values.All(x => x is
    int))) {\n            throw new ArgumentException(\"Values list contains values
    of different types\");\n        }\n        // Initialize output\n        List<long>
    outList = new List<long>();\n        // Run filter\n        foreach (object item
    in values) {\n            // Try to convert item to long\n            long tmp;\n
    \           if (long.TryParse(item.ToString(), out tmp)) {\n                //
    Add item to output list\n                outList.Add(tmp);\n            } else
    {\n                // Convert item to int\n                int tmp2;\n                if
    (int.TryParse(item.ToString(), out tmp2)) {\n                    outList.Add(tmp2);\n
    \               } else {\n                    throw new ArgumentException(\"Values
    list contains values of different types\");\n                }\n            }\n
    \       }\n        return outList;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentException: Values list is null or
    empty\n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values)
    [0x00015] in <8fe482f9c3be4f78bddb7bcb85acfe77>:0 \n  at Problem.Main (System.String[]
    args) [0x00006] in <8fe482f9c3be4f78bddb7bcb85acfe77>:0 \n[ERROR] FATAL UNHANDLED
    EXCEPTION: System.ArgumentException: Values list is null or empty\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x00015] in <8fe482f9c3be4f78bddb7bcb85acfe77>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <8fe482f9c3be4f78bddb7bcb85acfe77>:0
    \n"
  stdout: ''
  timestamp: 1659975924
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object o in values) {\n            try {\n
    \               long n = (long)o;\n                if (n != o) {\n                    result.Add(n);\n
    \               }\n            }\n            catch (Exception ex) {\n                //
    Not a long...\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppjd4n83y.cs(19,21): error CS0019: Operator ''!='' cannot be applied to
    operands of type ''long'' and ''object''

    /tmp/tmppjd4n83y.cs(23,30): warning CS0168: The variable ''ex'' is declared but
    never used

    '
  timestamp: 1659975923
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var value in values) {\n            if (value is int)\n                result.Add((long)value);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2d89d4aae6984929b1941c09ddbaa8ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2d89d4aae6984929b1941c09ddbaa8ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975924
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var i in values) {\n            if (i.GetType() == typeof(long))
    {\n                result.Add(Convert.ToInt64(i));\n            } else {\n                result.Add(0);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9975e178630e4025b1f4d4527e0b05ec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9975e178630e4025b1f4d4527e0b05ec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975925
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Select(o
    => o.ToInt64()).Where(i => i >= 0).Select(i => i).ToList();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnnne858_.cs(15,37): error CS1061: ''object'' does not contain a definition
    for ''ToInt64'' and no accessible extension method ''ToInt64'' accepting a first
    argument of type ''object'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659975924
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach(var value in values) {\n            var x = System.Convert.ToInt64(value);\n
    \           if(x >= 0)\n                result.Add((long)x);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a2f145cbc5141f3bad80589e37452dd>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at System.Convert.ToInt64 (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x0001a]
    in <4a2f145cbc5141f3bad80589e37452dd>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <4a2f145cbc5141f3bad80589e37452dd>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at System.Convert.ToInt64
    (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at
    Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x0001a]
    in <4a2f145cbc5141f3bad80589e37452dd>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <4a2f145cbc5141f3bad80589e37452dd>:0 \n"
  stdout: ''
  timestamp: 1659975925
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(p
    => p is long).Select(p => (long)p).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e13a9db230844232a38e0ed21f758075>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e13a9db230844232a38e0ed21f758075>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975925
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var newValues = new
    List<long>();\n        foreach (var value in values) {\n            if (value
    is int) {\n                newValues.Add((long)value);\n            } else if
    (value is long) {\n                newValues.Add((long)value);\n            }
    else if (value is decimal) {\n                newValues.Add((long)value);\n            }
    else if (value is string) {\n                newValues.Add((long)value);\n            }
    else if (value is System.Collections.IEnumerable) {\n                newValues.AddRange(FilterIntegers((List<object>)value));\n
    \           }\n        }\n        return newValues;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <219db9d6d8c740f5aa1e7742d843a2cc>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x0008e]
    in <219db9d6d8c740f5aa1e7742d843a2cc>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <219db9d6d8c740f5aa1e7742d843a2cc>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x0008e] in <219db9d6d8c740f5aa1e7742d843a2cc>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <219db9d6d8c740f5aa1e7742d843a2cc>:0
    \n"
  stdout: ''
  timestamp: 1659975925
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (object val in values) {\n            if (val is long)\n                result.Add((long)val);\n
    \           else if (val is IEnumerable)\n                result.AddRange(FilterIntegers((List<object>)val));\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8mjxpxrz.cs(19,29): error CS0305: Using the generic type ''IEnumerable<T>''
    requires 1 type arguments

    '
  timestamp: 1659975924
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Cast<long>().Where(i
    => i.ToString().ToLower() != \"nan\").Select(i => (long)i).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c4e41b1c8ac48fd90926d7a3caa3d47>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at System.Linq.Enumerable+<CastIterator>d__34`1[TResult].MoveNext () [0x00040]
    in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+WhereSelectEnumerableIterator`2[TSource,TResult].ToList
    () [0x0003b] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x0004f]
    in <0c4e41b1c8ac48fd90926d7a3caa3d47>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <0c4e41b1c8ac48fd90926d7a3caa3d47>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at System.Linq.Enumerable+<CastIterator>d__34`1[TResult].MoveNext
    () [0x00040] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+WhereSelectEnumerableIterator`2[TSource,TResult].ToList
    () [0x0003b] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f69"
  stdout: ''
  timestamp: 1659975925
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object obj in values) {\n            if (obj
    is long)\n                result.Add((long)obj);\n            else if (obj is
    string)\n                result.AddRange(FilterIntegers((List<object>)obj));\n
    \           else if (obj is List<object>) {\n                result.AddRange(FilterIntegers((List<object>)obj));\n
    \           } else\n                result.Add(obj);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8d3seurt.cs(24,28): error CS1503: Argument 1: cannot convert from ''object''
    to ''long''

    '
  timestamp: 1659975924
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        // Sort values by type
    to avoid unnecessary overhead with generics.\n        List<object> sorted = values.OrderBy(o
    => o.GetType()).ToList();\n        List<long> filtered = new List<long>();\n        long
    currentValue = 0;\n        bool isInt = false;\n        bool isIntOrLong = false;\n\n
    \       // Process one object at a time.\n        foreach (object obj in sorted)
    {\n            isInt = obj.GetType() == typeof(int);\n            isIntOrLong
    = obj.GetType() == typeof(Int64) || obj.GetType() == typeof(long);\n\n            //
    Keep processing long values (i.e. numbers)\n            if (isIntOrLong) {\n                if
    (isInt) {\n                    currentValue = (long)obj;\n                    filtered.Add(currentValue);\n
    \               } else {\n                    // The value is either a number
    or an enumerable of numbers\n                    // so we need recurse into it
    if the value is a collection\n                    filtered.AddRange(FilterIntegers((List<object>)obj));\n
    \               }\n            }\n        }\n        return filtered;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ad08e75afa8b44968ae736fc179784bc>:0
    \n\nUnhandled Exception:\nSystem.InvalidOperationException: Failed to compare
    two elements in the array. ---> System.ArgumentException: At least one object
    must implement IComparable.\n  at System.Collections.Comparer.Compare (System.Object
    a, System.Object b) [0x00057] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Collections.Generic.ObjectComparer`1[T].Compare
    (T x, T y) [0x00000] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Linq.EnumerableSorter`2[TElement,TKey].CompareAnyKeys
    (System.Int32 index1, System.Int32 index2) [0x00000] in <e540098dd111461e919c5863f6975c29>:0
    \n  at System.Collections.Generic.ComparisonComparer`1[T].Compare (T x, T y) [0x00000]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Collections.Generic.ArraySortHelper`1[T].InsertionSort
    (T[] keys, System.Int32 lo, System.Int32 hi, System.Comparison`1[T] comparer)
    [0x0002a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Collections.Generic.ArraySortHelper`1[T].IntroSort
    (T[] keys, System.Int32 lo, System.Int32 hi, System.Int32 depthLimit, System.Comparison`1[T]
    comparer) [0x0004b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Collections.Generic.ArraySortHelper`1[T].IntrospectiveSo"
  stdout: ''
  timestamp: 1659975925
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> newValues
    = new List<long>();\n        foreach (var value in values) {\n            try
    {\n                if (value is long && value > 0)\n                    newValues.Add(value);\n
    \           }\n            catch { }\n        }\n        return newValues;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsyuds3l5.cs(18,38): error CS0019: Operator ''>'' cannot be applied to
    operands of type ''object'' and ''int''

    /tmp/tmpsyuds3l5.cs(19,35): error CS1503: Argument 1: cannot convert from ''object''
    to ''long''

    '
  timestamp: 1659975924
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> list = new
    List<long>();\n        foreach (object value in values) {\n            if (value
    is long) {\n                list.Add((long)value);\n            }\n        }\n
    \       return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c314d380e6b64f42911c8f3a4ff63dd7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c314d380e6b64f42911c8f3a4ff63dd7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975798
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(x
    => x is long).Select(x => (long)x).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f38c3ab3dca441aa7c559dc0d10150a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f38c3ab3dca441aa7c559dc0d10150a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (var value in values) {\n            try {\n
    \               long value = Convert.ToInt64(value);\n                result.Add(value);\n
    \           } catch (Exception ex) {\n                // Not an integer, keep
    this value\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8r54qbol.cs(18,22): error CS0136: A local or parameter named ''value''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmp8r54qbol.cs(18,46): error CS0165: Use of unassigned local variable ''value''

    /tmp/tmp8r54qbol.cs(20,32): warning CS0168: The variable ''ex'' is declared but
    never used

    '
  timestamp: 1659975924
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(val
    => val is long).Select(val => (long)val).ToList();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96edb07f8a7d4b2883c1e64bc46a64a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96edb07f8a7d4b2883c1e64bc46a64a8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null)
    return new List<long>();\n        List<long> result = new List<long>();\n        for
    (int i = 0; i < values.Count; ++i) {\n            object value = values[i];\n
    \           if (value is long) {\n                result.Add((long)value);\n            }
    else if (value is decimal) {\n                result.Add((long)((decimal)value).ToInt64());\n
    \           } else if (value is int) {\n                result.Add((long)((int)value));\n
    \           } else if (value is string) {\n                string s = (string)value;\n
    \               if (s.StartsWith(\"0x\")) s = s.Substring(2);\n                if
    (s.StartsWith(\"0+\")) s = s.Substring(2);\n                result.Add((long)Convert.ToInt64(s));\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpulmg001w.cs(22,51): error CS7036: There is no argument given that corresponds
    to the required formal parameter ''d'' of ''decimal.ToInt64(decimal)''

    '
  timestamp: 1659975925
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values.Count < 1)
    return new List<long>();\n\n        if (values.Count == 1) {\n            // Single
    value\n            object first = values[0];\n            if (!(first is long))
    return new List<long>();\n\n            return (new List<long>() { (long)first
    });\n        }\n\n        // List of values\n        List<long> integers = new
    List<long>();\n        long current = 1;\n        foreach (object value in values)
    {\n            if (!(value is long)) {\n                Debug.WriteLine(string.Format(\"Bad
    value {0}\", value));\n                continue;\n            }\n\n            integers.add(current);\n
    \           current *= (long)value;\n        }\n\n        return integers;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9f_qjz3b.cs(34,22): error CS1061: ''List<long>'' does not contain a definition
    for ''add'' and no accessible extension method ''add'' accepting a first argument
    of type ''List<long>'' could be found (are you missing a using directive or an
    assembly reference?)

    '
  timestamp: 1659975925
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        if (values.Count > 0) {\n            foreach (object
    item in values) {\n                long iValue = 0L;\n                int intValue
    = 0;\n                decimal dValue = 0;\n                if (item.GetType()
    == typeof(long)) {\n                    iValue = Convert.ToInt64(item);\n                }
    else if (item.GetType() == typeof(int)) {\n                    intValue = (int)item;\n
    \               } else if (item.GetType() == typeof(decimal)) {\n                    dValue
    = (decimal)item;\n                }\n                if (iValue != 0) {\n                    result.Add(iValue);\n
    \               }\n                if (intValue != 0) {\n                    result.Add(intValue);\n
    \               }\n                if (dValue != 0) {\n                    result.Add(dValue);\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyx05sq36.cs(35,32): error CS1503: Argument 1: cannot convert from ''decimal''
    to ''long''

    '
  timestamp: 1659975925
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null)
    return null;\n        List<long> ret = new List<long>();\n        foreach (object
    val in values) {\n            if (val == null) return ret;\n            if (val
    is long) ret.Add((long)val);\n        }\n        return ret;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c31835c7fbf4199b85d75bf4b41431c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c31835c7fbf4199b85d75bf4b41431c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975925
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object val in values) {\n            int i;\n
    \           bool isInt;\n            if (val is int) {\n                isInt
    = (int)val == val;\n            } else if (val is decimal) {\n                isInt
    = (decimal)val == (decimal)val;\n            } else if (val is double) {\n                isInt
    = (double)val == (double)val;\n            } else {\n                isInt = false;\n
    \           }\n            if (isInt) {\n                result.Add((long)val);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyrl3jmg4.cs(20,25): error CS0019: Operator ''=='' cannot be applied to
    operands of type ''int'' and ''object''

    /tmp/tmpyrl3jmg4.cs(17,17): warning CS0168: The variable ''i'' is declared but
    never used

    '
  timestamp: 1659975925
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> res = new
    List<long>();\n        foreach (object v in values) {\n            try {\n                res.Add((long)v);\n
    \           } catch {\n                res.Add((long)0);\n            }\n        }\n
    \       return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9c03e5433d34467a934d36c412e23903>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9c03e5433d34467a934d36c412e23903>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975925
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values.Count ==
    0) return new List<long>();\n        var result = new List<long>();\n        foreach
    (var value in values) {\n            if (value is string) value = ((string)value).Trim();\n
    \           if (value is long) {\n                if (value.CompareTo(long.MinValue)
    > 0 || value.CompareTo(long.MaxValue) < 0) result.Add((long)value);\n            }
    else if (value is int) {\n                if (value.CompareTo((int)(long)value)
    > 0 || value.CompareTo((int)(long)value) < 0) result.Add((long)value);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk1dpxwhx.cs(18,34): error CS1656: Cannot assign to ''value'' because it
    is a ''foreach iteration variable''

    /tmp/tmpk1dpxwhx.cs(20,27): error CS7036: There is no argument given that corresponds
    to the required formal parameter ''comparisonType'' of ''MemoryExtensions.CompareTo(ReadOnlySpan<char>,
    ReadOnlySpan<char>, StringComparison)''

    /tmp/tmpk1dpxwhx.cs(20,65): error CS7036: There is no argument given that corresponds
    to the required formal parameter ''comparisonType'' of ''MemoryExtensions.CompareTo(ReadOnlySpan<char>,
    ReadOnlySpan<char>, StringComparison)''

    /tmp/tmpk1dpxwhx.cs(22,27): error CS7036: There is no argument given that corresponds
    to the required formal parameter ''comparisonType'' of ''MemoryExtensions.CompareTo(ReadOnlySpan<char>,
    ReadOnlySpan<char>, StringComparison)''

    /tmp/tmpk1dpxwhx.cs(22,68): error CS7036: There is no argument given that corresponds
    to the required formal parameter ''comparisonType'' of ''MemoryExtensions.CompareTo(ReadOnlySpan<char>,
    ReadOnlySpan<char>, StringComparison)''

    '
  timestamp: 1659975925
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var value in values) {\n            if (value is int || value
    is long) {\n                result.Add((long)value);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8dd55b613dc84fba8dae459d469db58d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8dd55b613dc84fba8dae459d469db58d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975925
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object o in values) {\n            try{\n
    \               result.Add((long)o);\n            }\n            catch(InvalidCastException)\n
    \           {\n                result.Add(0);\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6752590ab44a4e2ab42fdbc509e483c4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6752590ab44a4e2ab42fdbc509e483c4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975925
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Select(o
    => Convert.ToInt64(o.ToString())).Where(o => o != null).ToList();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22ee37af67884b5f982d7034fc090360>:0
    \n\nUnhandled Exception:\nSystem.FormatException: Input string was not in a correct
    format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow,
    System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int64.Parse (System.String s, System.IFormatProvider provider) [0x00017]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt64 (System.String
    value) [0x0000c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c.<FilterIntegers>b__0_0
    (System.Object o) [0x00006] in <22ee37af67884b5f982d7034fc090360>:0 \n  at System.Linq.Enumerable+SelectListIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+WhereEnumerableIterator`1[TSource].ToList
    () [0x00030] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Prob"
  stdout: ''
  timestamp: 1659975925
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> filtered
    = new List<long>();\n        foreach (object value in values) {\n            long
    integer;\n            if (value is int) {\n                integer = (int)value;\n
    \           } else if (value is long) {\n                integer = (long)value;\n
    \           } else {\n                // The value is not an int/long.\n                throw
    new ArgumentException(\"Values must be of type int/long.\");\n            }\n\n
    \           // Do your check here.\n            filtered.Add(integer);\n        }\n
    \       return filtered;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <057f14414d994592ae878714d40799d8>:0
    \n\nUnhandled Exception:\nSystem.ArgumentException: Values must be of type int/long.\n
    \ at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00050]
    in <057f14414d994592ae878714d40799d8>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <057f14414d994592ae878714d40799d8>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.ArgumentException: Values must be of type int/long.\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x00050] in <057f14414d994592ae878714d40799d8>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <057f14414d994592ae878714d40799d8>:0
    \n"
  stdout: ''
  timestamp: 1659975925
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> results =
    new List<long>();\n        foreach (object item in values) {\n            if (item
    is long) {\n                results.Add((long)item);\n            } else {\n                throw
    new ArgumentException(\"Invalid type\");\n            }\n        }\n        return
    results;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6e6d84eccf514d0c8b46a47cd58498aa>:0
    \n\nUnhandled Exception:\nSystem.ArgumentException: Invalid type\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x00039] in <6e6d84eccf514d0c8b46a47cd58498aa>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <6e6d84eccf514d0c8b46a47cd58498aa>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentException: Invalid type\n
    \ at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00039]
    in <6e6d84eccf514d0c8b46a47cd58498aa>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <6e6d84eccf514d0c8b46a47cd58498aa>:0 \n"
  stdout: ''
  timestamp: 1659975925
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object v in values) {\n            if (v is
    long) {\n                result.Add((long)v);\n            } else if(v is string)
    {\n                long l = 0;\n                bool tryParse = long.TryParse(v.ToString(),
    out l);\n                if (tryParse) {\n                    result.Add(l);\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <42ef3f1e492349f5b754232785d26d75>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <42ef3f1e492349f5b754232785d26d75>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975925
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var v in values) {\n            if (v is long) {\n                result.Add((long)v);\n
    \           } else if (v is double) {\n                result.Add((double)v);\n
    \           } else {\n                result.Add(0);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz20obi78.cs(20,28): error CS1503: Argument 1: cannot convert from ''double''
    to ''long''

    '
  timestamp: 1659975925
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(x
    => x.GetType() == typeof(Int64)).Cast<Int64>().ToList();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b36455cda381427b886e56bd8ac10287>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b36455cda381427b886e56bd8ac10287>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975926
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var ret = new List<long>();\n
    \       foreach(var v in values) {\n            if(v is long) {\n                ret.Add((long)v);\n
    \           } else if(v is int) {\n                ret.Add((int)v);\n            }
    else {\n                // Not an int\n            }\n        }\n        return
    ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8f170e425071417a9a037ba785458b01>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8f170e425071417a9a037ba785458b01>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975926
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> filteredValues
    = new List<long>();\n\n        if (values != null) {\n            foreach (object
    val in values) {\n                Debug.Assert(val is long);\n                filteredValues.Add((long)val);\n
    \           }\n        }\n        return filteredValues;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5fe8cb5e80d34ac68cd19e919482d8e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00000]
    in <5fe8cb5e80d34ac68cd19e919482d8e2>:0 \n  at Problem.Main (System.String[] args)
    [0x00000] in <5fe8cb5e80d34ac68cd19e919482d8e2>:0 \n\nUnhandled Exception:\nSystem.InvalidCastException:
    Specified cast is not valid.\n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T]
    values) [0x00032] in <5fe8cb5e80d34ac68cd19e919482d8e2>:0 \n  at Problem.M"
  stdout: ''
  timestamp: 1659975926
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var convertedValues
    = new List<long>();\n        foreach(var value in values) {\n            if (value
    is long) {\n                convertedValues.Add((long)value);\n            } else
    if (value is int) {\n                convertedValues.Add((int)value);\n            }
    else if (value is int?) {\n                convertedValues.Add(((double)value).ToInt64());\n
    \           } else if (value is double?) {\n                convertedValues.Add(((double)value).ToInt64());\n
    \           }\n        }\n        return convertedValues;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp075e371h.cs(22,53): error CS1061: ''double'' does not contain a definition
    for ''ToInt64'' and no accessible extension method ''ToInt64'' accepting a first
    argument of type ''double'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmp075e371h.cs(24,53): error CS1061: ''double'' does not contain a definition
    for ''ToInt64'' and no accessible extension method ''ToInt64'' accepting a first
    argument of type ''double'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659975925
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(i
    => (i as long?) != null).Select(i => (i as long?) ?? 0).ToList();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ab788a531dd3455bac67b4253b1c1575>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ab788a531dd3455bac67b4253b1c1575>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975926
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n\n        foreach (object value in values) {\n            long
    resultValue;\n\n            if (value is long) {\n                resultValue
    = (long)value;\n            } else if (value is int) {\n                resultValue
    = (long)value;\n            } else if (value is double) {\n                resultValue
    = (long)value;\n            } else if (value is decimal) {\n                resultValue
    = (long)value;\n            } else if (value is int?) {\n                resultValue
    = (long)value;\n            } else if (value is float?) {\n                resultValue
    = (long)value;\n            } else if (value is string) {\n                resultValue
    = Convert.ToInt64(value);\n            } else if (value is IList) {\n                IList<object>
    innerValues = (IList<object>)value;\n                foreach (object innerValue
    in innerValues) {\n                    long innerResultValue;\n                    if
    (innerValue is long) {\n                        innerResultValue = (long)innerValue;\n
    \                   } else if (innerValue is int) {\n                        innerResultValue
    = (long)innerValue;\n                    } else if (innerValue is double) {\n
    \                       innerResultValue = (long)innerValue;\n                    }
    else if (innerValue is decimal) {\n                        innerResultValue =
    (long)innerValue;\n                    } else if (innerValue is int?) {\n                        innerResultValue
    = (long)innerValue;\n                    } else if (innerValue is float?) {\n
    \                       innerResultValue = (long)innerValue;\n                    }
    else if (innerValue is string) {\n                        innerResultValue = Convert.ToInt64(innerValue);\n
    \                   } else if (innerValue is IList) {\n                        IList<object>
    innerInnerValues = (IList<object>)innerValue;\n                        foreach
    (object innerInnerValue in innerInnerValues) {\n                            long
    innerInnerResultValue;\n                            if (innerInnerValue is long)
    {\n                                innerInnerResultValue = (long)innerInnerValue;\n
    \                           } else if (innerInnerValue is int) {\n                                innerInnerResultValue
    = (long)innerInnerValue;\n                            } else if (innerInnerValue
    is double) {\n                                innerInnerResultValue = (long)innerInnerValue;\n
    \                           } else if (innerInnerValue is decimal) {\n                                innerInnerResultValue
    = (long)innerInnerValue;\n                            } else if (innerInnerValue
    is int?) {\n                                innerInnerResultValue = (long)innerInnerValue;\n
    \                           } else if (innerInnerValue is float?) {\n                                innerInnerResultValue
    = (long)innerInnerValue;\n                            } else if (innerInnerValue
    is string) {\n                                innerInnerResultValue = Convert.ToInt64(innerInnerValue);\n
    \                           } else if (innerInnerValue is IList) {\n                                IList<object>
    innerInnerInnerValues = (IList<object>)innerInnerValue;\n                                foreach
    (object innerInnerInnerValue in innerInnerInnerValues) {\n                                    long
    innerInnerInnerResultValue;\n                                    if (innerInnerInnerValue
    is \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph7867z96.cs(74,64): error CS1031: Type expected

    /tmp/tmph7867z96.cs(74,64): error CS1026: ) expected

    /tmp/tmph7867z96.cs(74,64): error CS1525: Invalid expression term ''}''

    /tmp/tmph7867z96.cs(74,64): error CS1002: ; expected

    /tmp/tmph7867z96.cs(76,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmph7867z96.cs(82,2): error CS1513: } expected

    '
  timestamp: 1659975925
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(n
    => (long) n == n).Select(n => (long) n).ToList();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp3ouxhrg.cs(15,34): error CS0019: Operator ''=='' cannot be applied to
    operands of type ''long'' and ''object''

    '
  timestamp: 1659975925
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       if (values.Any()) {\n            foreach (var value in values) {\n                if
    (value is int) {\n                    result.Add((long)value);\n                }
    else if (value is long) {\n                    result.Add((long)value);\n                }
    else if (value is double) {\n                    result.Add((long)value);\n                }
    else if (value is decimal) {\n                    result.Add((long)value);\n                }
    else if (value is char) {\n                    result.Add((long)value);\n                }
    else if (value is DateTime) {\n                    result.Add((long)value);\n
    \               } else if (value is bool) {\n                    result.Add((long)value);\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8627ba4786b44006bab3b2a13fdf3a9f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8627ba4786b44006bab3b2a13fdf3a9f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975926
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> ret = new
    List<long>();\n        foreach(object value in values) {\n            long val;\n
    \           if(value is long) {\n                val = ((long)value);\n            }
    else {\n                val = Long.Parse(value.ToString());\n            }\n            if(!ret.Contains(val))
    {\n                ret.Add(val);\n            }\n        }\n        return ret;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkhh9hxtr.cs(21,23): error CS0103: The name ''Long'' does not exist in
    the current context

    '
  timestamp: 1659975925
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(v
    => v is long).Select(v => (long)v).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea127f844eff44d2980b55a100a09ffb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea127f844eff44d2980b55a100a09ffb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975801
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null ||
    values.Count == 0)\n            return new List<long>();\n        var values =
    values.OfType<object>().Select(x=>long.Parse(x)).Where(x=>x > 0);\n        return
    values.Select(x => (long)x).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp49peeuyv.cs(15,13): error CS0841: Cannot use local variable ''values''
    before it is declared

    /tmp/tmp49peeuyv.cs(15,31): error CS0841: Cannot use local variable ''values''
    before it is declared

    /tmp/tmp49peeuyv.cs(15,31): error CS0019: Operator ''=='' cannot be applied to
    operands of type ''method group'' and ''int''

    /tmp/tmp49peeuyv.cs(17,13): error CS0136: A local or parameter named ''values''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmp49peeuyv.cs(17,22): error CS0841: Cannot use local variable ''values''
    before it is declared

    '
  timestamp: 1659975925
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> results =
    new List<long>();\n        foreach (object value in values) {\n            object
    objectValue;\n            if (value is long)\n                objectValue = (long)value;\n
    \           else if (value is int)\n                objectValue = (int)value;\n
    \           else\n                objectValue = value;\n            long l = Convert.ToInt64(objectValue);\n
    \           results.Add(l);\n        }\n        return results;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9b2a4166ffa041b2a5c60a441ac1cb8e>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at System.Convert.ToInt64 (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00056]
    in <9b2a4166ffa041b2a5c60a441ac1cb8e>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <9b2a4166ffa041b2a5c60a441ac1cb8e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at System.Convert.ToInt64
    (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at
    Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00056]
    in <9b2a4166ffa041b2a5c60a441ac1cb8e>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <9b2a4166ffa041b2a5c60a441ac1cb8e>:0 \n"
  stdout: ''
  timestamp: 1659975926
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null)
    {\n            return null;\n        }\n        return values.Where(value => value
    is long?).Select(value => (long)value).ToList();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a8dea0353894428a24801abf0b555a4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2a8dea0353894428a24801abf0b555a4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975926
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            try
    {\n                result.Add((long)Convert.ToInt64(value));\n            } catch
    (InvalidCastException) {\n                result.Add((long)0);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4d552c868d7348cc9f6200fc48e5f1d2>:0
    \n\nUnhandled Exception:\nSystem.FormatException: Input string was not in a correct
    format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow,
    System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int64.Parse (System.String s, System.Globalization.NumberStyles
    style, System.IFormatProvider provider) [0x0001d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Convert.ToInt64 (System.String value, System.IFormatProvider provider)
    [0x00006] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.String.System.IConvertible.ToInt64
    (System.IFormatProvider provider) [0x00000] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Convert.ToInt64 (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x0001b]
    in <4d552c868d7348cc9f6200fc48e5f1d2>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <4d552c868d7348cc9f6200fc48e5f1d2"
  stdout: ''
  timestamp: 1659975926
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> ret = new
    List<long>();\n        if (values == null || values.Count == 0) { return ret;
    }\n        foreach (var item in values) {\n            bool bInt = true;\n            double
    dNum;\n            long lNum;\n            Debug.Assert(item != null);\n            Debug.Assert(item.GetType()
    != typeof(object));\n            if (item is string || item.GetType() == typeof(string))
    {\n                var val = item as string;\n                if (string.IsNullOrEmpty(val))
    { continue; }\n                try {\n                    dNum = Double.Parse(val);\n
    \                   bInt = false;\n                } catch (Exception e) {\n                    continue;\n
    \               }\n            }\n            if (item is long) {\n                lNum
    = item as long;\n            } else if (item is double) {\n                dNum
    = item as double;\n            } else {\n                continue;\n            }\n
    \           if (bInt) {\n                ret.Add(lNum);\n            }\n        }\n
    \       return ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzi6948nu.cs(34,24): error CS0077: The as operator must be used with a
    reference type or nullable type (''long'' is a non-nullable value type)

    /tmp/tmpzi6948nu.cs(36,24): error CS0077: The as operator must be used with a
    reference type or nullable type (''double'' is a non-nullable value type)

    /tmp/tmpzi6948nu.cs(29,36): warning CS0168: The variable ''e'' is declared but
    never used

    /tmp/tmpzi6948nu.cs(41,25): error CS0165: Use of unassigned local variable ''lNum''

    '
  timestamp: 1659975926
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach(var value in values) {\n            if(value is long integer)
    result.Add((long)value);\n            else if(value is double) result.Add((long)Double.Parse(value.ToString()));\n
    \           else if(value is int) result.Add((long)value);\n            else if(value
    is string) result.Add(long.Parse(value.ToString()));\n            else if(value
    is object[]) result = FilterIntegers((List<object>)value);\n            else throw
    new Exception(\"Cannot parse all values!\");\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5d7141e737dc40c288097cf69ea6a84e>:0
    \n\nUnhandled Exception:\nSystem.Exception: Cannot parse all values!\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x000ca] in <5d7141e737dc40c288097cf69ea6a84e>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <5d7141e737dc40c288097cf69ea6a84e>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Exception: Cannot parse all values!\n
    \ at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x000ca]
    in <5d7141e737dc40c288097cf69ea6a84e>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <5d7141e737dc40c288097cf69ea6a84e>:0 \n"
  stdout: ''
  timestamp: 1659975926
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(x
    => x is long)\n                    .Select(x => (long)x)\n                    .ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f0b01a04a2f64f5ca333234f27b36218>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f0b01a04a2f64f5ca333234f27b36218>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975926
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> list = new
    List<long>();\n        foreach(object value in values) {\n            if(value
    is int) {\n                list.Add((long)value);\n            } else if(value
    is string) {\n                long i;\n                if(long.TryParse(value.ToString(),
    out i)) {\n                    list.Add(i);\n                }\n            }\n
    \       }\n        return list;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4069a667c514f8998ef556f81fb16d9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4069a667c514f8998ef556f81fb16d9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975926
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var convertedValues
    = new List<long>();\n        foreach (object value in values) {\n            if
    (value is long) {\n                convertedValues.Add((long)value);\n            }\n
    \       }\n        return convertedValues;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29df96760efd4c77ab6849c9a9ed6ef6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29df96760efd4c77ab6849c9a9ed6ef6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975926
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null)\n
    \           return null;\n        if (values.Count == 0)\n            return new
    List<long>();\n        if (values.Count < 1)\n            return null;\n        List<long>
    result = new List<long>();\n        foreach (object value in values) {\n            if
    (value is long)\n                result.Add((long)value);\n            else if
    (value is int) {\n                result.Add((int)value);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c5b68f02978a4ae284f2b575e5924e42>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c5b68f02978a4ae284f2b575e5924e42>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975926
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> ret = new
    List<long>();\n        foreach (object item in values) {\n            Debug.WriteLine(\"Item=\"
    + item + \", Type=\" + item.GetType().FullName);\n            if (item is long)\n
    \               ret.Add((long)item);\n        }\n        return ret;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d2b890a199204a2091dcec857e102a9b>:0
    \nItem=4, Type=System.Int64\nItem=System.Collections.Generic.List`1[System.Object],
    Type=System.Collections.Generic.List`1[[System.Object, mscorlib, Version=4.0.0.0,
    Culture=neutral, PublicKeyToken=b77a5c561934e089]]\nItem=23.2, Type=System.Single\nItem=9,
    Type=System.Int64\nItem=adasd, Type=System.String\nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d2b890a199204a2091dcec857e102a9b>:0
    \nItem=3, Type=System.Int64\nItem=c, Type=Syst"
  stdout: ''
  timestamp: 1659975926
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> filtered
    = new List<long>();\n        foreach (object value in values) {\n            if
    (value is long) {\n                filtered.Add((long)value);\n            } else
    {\n                filtered.Add(0);\n            }\n        }\n        return
    filtered;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f6412261ff524e9f8b6874daff4b4d3a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f6412261ff524e9f8b6874daff4b4d3a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975926
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        if (values != null) {\n            foreach (object
    value in values) {\n                bool isInt = value is int ? true : false;\n
    \               if (isInt) {\n                    result.Add((long)value);\n                }\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1967a87484747c38fc2869a9e253e99>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1967a87484747c38fc2869a9e253e99>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975927
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var value in values) {\n            var value = Convert.ToInt64(value);\n
    \           result.Add(value);\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsi8d0xmv.cs(17,17): error CS0136: A local or parameter named ''value''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmpsi8d0xmv.cs(17,41): error CS0841: Cannot use local variable ''value''
    before it is declared

    /tmp/tmpsi8d0xmv.cs(17,41): error CS0165: Use of unassigned local variable ''value''

    '
  timestamp: 1659975926
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(x
    => x.GetType() == typeof(BigInteger)).Select(x => (BigInteger)x).ToList();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpg1yrjifl.cs(15,16): error CS0029: Cannot implicitly convert type ''System.Collections.Generic.List<System.Numerics.BigInteger>''
    to ''System.Collections.Generic.List<long>''

    '
  timestamp: 1659975926
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var value in values) {\n            long i;\n            if (value
    is int || value is long) {\n                i = Convert.ToInt64(value);\n            }\n
    \           else {\n                i = Convert.ToInt64(value, CultureInfo.InvariantCulture);\n
    \           }\n            result.Add(i);\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpipa84r98.cs(22,44): error CS0103: The name ''CultureInfo'' does not exist
    in the current context

    '
  timestamp: 1659975926
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var item in values) {\n            if (item is long)\n                result.Add((long)item);\n
    \           else if (item is string)\n                result.Add((long)Convert.ToInt64(item));\n
    \           else\n                result.Add((long)0L);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <49ddb2f8307b4094b8775b456c63b984>:0
    \n\nUnhandled Exception:\nSystem.FormatException: Input string was not in a correct
    format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow,
    System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int64.Parse (System.String s, System.Globalization.NumberStyles
    style, System.IFormatProvider provider) [0x0001d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Convert.ToInt64 (System.String value, System.IFormatProvider provider)
    [0x00006] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.String.System.IConvertible.ToInt64
    (System.IFormatProvider provider) [0x00000] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Convert.ToInt64 (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00045]
    in <49ddb2f8307b4094b8775b456c63b984>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <49ddb2f8307b4094b8775b456c63b984"
  stdout: ''
  timestamp: 1659975927
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object o in values) {\n            long value;\n
    \           if (o as long != null)\n                value = o as long;\n            else
    if (o as int != null)\n                value = o as int;\n            else if
    (o as short != null)\n                value = o as short;\n            else if
    (o as float != null)\n                value = o as float;\n            else if
    (o as double != null)\n                value = o as double;\n            else\n
    \               continue;\n            if (value == 0)\n                continue;\n
    \           result.Add(value);\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprq24ekux.cs(18,17): error CS0077: The as operator must be used with a
    reference type or nullable type (''long'' is a non-nullable value type)

    /tmp/tmprq24ekux.cs(19,25): error CS0077: The as operator must be used with a
    reference type or nullable type (''long'' is a non-nullable value type)

    /tmp/tmprq24ekux.cs(20,22): error CS0077: The as operator must be used with a
    reference type or nullable type (''int'' is a non-nullable value type)

    /tmp/tmprq24ekux.cs(21,25): error CS0077: The as operator must be used with a
    reference type or nullable type (''int'' is a non-nullable value type)

    /tmp/tmprq24ekux.cs(22,22): error CS0077: The as operator must be used with a
    reference type or nullable type (''short'' is a non-nullable value type)

    /tmp/tmprq24ekux.cs(23,25): error CS0077: The as operator must be used with a
    reference type or nullable type (''short'' is a non-nullable value type)

    /tmp/tmprq24ekux.cs(24,22): error CS0077: The as operator must be used with a
    reference type or nullable type (''float'' is a non-nullable value type)

    /tmp/tmprq24ekux.cs(25,25): error CS0077: The as operator must be used with a
    reference type or nullable type (''float'' is a non-nullable value type)

    /tmp/tmprq24ekux.cs(26,22): error CS0077: The as operator must be used with a
    reference type or nullable type (''double'' is a non-nullable value type)

    /tmp/tmprq24ekux.cs(27,25): error CS0077: The as operator must be used with a
    reference type or nullable type (''double'' is a non-nullable value type)

    '
  timestamp: 1659975926
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        // Make a list of all
    integers from all values\n        var intValues = values.Select(o => o as int?).Where(o
    => o.HasValue).Select(o => o.Value).ToList();\n        // If there's only one
    value, just return that value, otherwise make a list of\n        // lists of values\n
    \       return intValues.Count == 1 ? intValues[0] : intValues;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbr12aepd.cs(19,16): error CS0173: Type of conditional expression cannot
    be determined because there is no implicit conversion between ''int'' and ''System.Collections.Generic.List<int>''

    '
  timestamp: 1659975926
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(x
    => !x.GetType().IsPrimitive && x.GetType().IsAssignableFrom(typeof(long)) == false).Select(xx
    => (long)xx).ToList();\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <33919146f7b84851ae8109ed3f6c7a99>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem+<>c.<FilterIntegers>b__0_1 (System.Object xx) [0x00000] in <33919146f7b84851ae8109ed3f6c7a99>:0
    \n  at System.Linq.Enumerable+WhereSelectListIterator`2[TSource,TResult].ToList
    () [0x00025] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x0004a]
    in <33919146f7b84851ae8109ed3f6c7a99>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <33919146f7b84851ae8109ed3f6c7a99>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem+<>c.<FilterIntegers>b__0_1
    (System.Object xx) [0x00000] in <33919146f7b84851ae8109ed3f6c7a99>:0 \n  at System.Linq.Enumerable+WhereSelectListIterator`2[TSource,TResult].ToList
    () [0x00025] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.FilterInteger"
  stdout: ''
  timestamp: 1659975927
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Cast<object>().Select(v
    => Convert.ToInt64(v)).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30b861ef99c645b89dc01197cc7633ad>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at System.Convert.ToInt64 (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem+<>c.<FilterIntegers>b__0_0 (System.Object v) [0x00000] in <30b861ef99c645b89dc01197cc7633ad>:0
    \n  at System.Linq.Enumerable+SelectListIterator`2[TSource,TResult].ToList ()
    [0x0002a] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x0002b]
    in <30b861ef99c645b89dc01197cc7633ad>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <30b861ef99c645b89dc01197cc7633ad>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at System.Convert.ToInt64
    (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at
    Problem+<>c.<FilterIntegers>b__0_0 (System.Object v) [0x00000] in <30b861ef99c645b89dc01197cc7633ad>:0
    \n  at System.Linq.Enumerable+SelectListIterator`2[TSource,TResult].ToList ()
    [0x0002a] in <e540098dd111461e919c5"
  stdout: ''
  timestamp: 1659975927
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n\n        for (int i = 0; i < values.Count; i++) {\n            if
    (values[i].GetType().IsNumeric) {\n                result.Add((long)values[i]);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkvdqz7sh.cs(18,37): error CS1061: ''Type'' does not contain a definition
    for ''IsNumeric'' and no accessible extension method ''IsNumeric'' accepting a
    first argument of type ''Type'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659975927
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> valueList
    = new List<long>();\n        foreach (var value in values) {\n            if (value
    is int) {\n                valueList.Add((long)value);\n            }\n        }\n
    \       return valueList;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd49b977972140828ce1e7202178d38a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd49b977972140828ce1e7202178d38a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975927
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> ret = new
    List<long>();\n        foreach (object val in values) {\n            long tmp
    = 0;\n            if (val is long)\n                tmp = (long)val;\n            else
    if (val is int)\n                tmp = (int)val;\n            else // string\n
    \               tmp = 0;\n            ret.Add(tmp);\n        }\n        return
    ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7dec9a12b8874fd8b6420b06bd2767a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7dec9a12b8874fd8b6420b06bd2767a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975927
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values.Count < 1)
    return values;\n\n        List<long> ints = new List<long>();\n        foreach
    (object val in values) {\n            if (val is long)\n                ints.Add((long)val);\n
    \           else if (val is BigInteger)\n                ints.Add((BigInteger)val);\n
    \           else if (val is BigDecimal)\n                ints.Add((BigDecimal)val);\n
    \           else if (val is Decimal)\n                ints.Add((Decimal)val);\n
    \           else if (val is int)\n                ints.Add((int)val);\n            else
    if (val is short)\n                ints.Add((short)val);\n            else if
    (val is byte)\n                ints.Add((byte)val);\n            else if (val
    is sbyte)\n                ints.Add((sbyte)val);\n            else if (val is
    short)\n                ints.Add((short)val);\n            else if (val is float)\n
    \               ints.Add((float)val);\n            else if (val is decimal)\n
    \               ints.Add((decimal)val);\n            else if (val is double)\n
    \               ints.Add((double)val);\n            else if (val is bool)\n                ints.Add((bool)val
    != false);\n            else if (val is string)\n                ints.Add((string)val);\n
    \           else\n                throw new ArgumentException(\"Cannot cast to
    long\", val.GetType());\n        }\n        return ints;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1wx90nna.cs(15,38): error CS0029: Cannot implicitly convert type ''System.Collections.Generic.List<object>''
    to ''System.Collections.Generic.List<long>''

    /tmp/tmp1wx90nna.cs(22,26): error CS1503: Argument 1: cannot convert from ''System.Numerics.BigInteger''
    to ''long''

    /tmp/tmp1wx90nna.cs(23,29): error CS0246: The type or namespace name ''BigDecimal''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp1wx90nna.cs(24,27): error CS0246: The type or namespace name ''BigDecimal''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp1wx90nna.cs(26,26): error CS1503: Argument 1: cannot convert from ''decimal''
    to ''long''

    /tmp/tmp1wx90nna.cs(38,26): error CS1503: Argument 1: cannot convert from ''float''
    to ''long''

    /tmp/tmp1wx90nna.cs(40,26): error CS1503: Argument 1: cannot convert from ''decimal''
    to ''long''

    /tmp/tmp1wx90nna.cs(42,26): error CS1503: Argument 1: cannot convert from ''double''
    to ''long''

    /tmp/tmp1wx90nna.cs(44,26): error CS1503: Argument 1: cannot convert from ''bool''
    to ''long''

    /tmp/tmp1wx90nna.cs(46,26): error CS1503: Argument 1: cannot convert from ''string''
    to ''long''

    /tmp/tmp1wx90nna.cs(48,68): error CS1503: Argument 2: cannot convert from ''System.Type''
    to ''System.Exception''

    '
  timestamp: 1659975927
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var filtered = new List<long>();\n
    \       foreach (var value in values) {\n            if (value is long) filtered.Add((long)value);\n
    \           if (value is int) filtered.Add((int)value);\n            if (value
    is double) filtered.Add((double)value);\n            if (value is string) filtered.Add((string)value);\n
    \           if (value is IComparable) filtered.Add((IComparable)value);\n        }\n
    \       return filtered;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm1_cu33g.cs(19,47): error CS1503: Argument 1: cannot convert from ''double''
    to ''long''

    /tmp/tmpm1_cu33g.cs(20,47): error CS1503: Argument 1: cannot convert from ''string''
    to ''long''

    /tmp/tmpm1_cu33g.cs(21,52): error CS1503: Argument 1: cannot convert from ''System.IComparable''
    to ''long''

    '
  timestamp: 1659975927
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (var value in values) {\n            try {\n
    \               long num;\n                if (!long.TryParse(Convert.ToString(value),
    out num)) {\n                    continue;\n                }\n                result.Add(num);\n
    \           } catch (Exception e) {\n                // Do nothing, just move
    on\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <658a4559771f40f6a1791f26ab57b3c6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <658a4559771f40f6a1791f26ab57b3c6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975927
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null)\n
    \           return new List<long>();\n        List<long> filtered = new List<long>();\n
    \       foreach (object o in values) {\n            if (o is long)\n                filtered.Add((long)o);\n
    \           else if (o is string)\n                filtered.Add((long)Long.Parse((string)o));\n
    \       }\n        return filtered;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4iigrtwq.cs(22,36): error CS0103: The name ''Long'' does not exist in
    the current context

    '
  timestamp: 1659975927
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach(var item in values) {\n            if(item is long) {\n                result.Add((long)item);\n
    \           } else {\n                result.Add((long)item);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf132f127c98486586382aa4530e5a4d>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00039]
    in <cf132f127c98486586382aa4530e5a4d>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <cf132f127c98486586382aa4530e5a4d>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x00039] in <cf132f127c98486586382aa4530e5a4d>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <cf132f127c98486586382aa4530e5a4d>:0
    \n"
  stdout: ''
  timestamp: 1659975927
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var filteredValues =
    new List<long>();\n\n        foreach (var value in values) {\n            if (value
    is int) {\n                filteredValues.Add((long)value);\n            }\n        }\n\n
    \       return filteredValues;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ffaefde9f2d140799db392f8398b06ef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ffaefde9f2d140799db392f8398b06ef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975927
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> returnValue
    = new List<long>();\n        foreach (object value in values) {\n            long
    valueAsLong;\n            if (value is long) {\n                valueAsLong =
    (long)value;\n            } else {\n                valueAsLong = Convert.ToInt64(value);\n
    \           }\n            if (valueAsLong == 0) {\n                continue;\n
    \           }\n            returnValue.Add(valueAsLong);\n        }\n        return
    returnValue;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <00ef48f6ae564576806f3c245c2321e1>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at System.Convert.ToInt64 (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00035]
    in <00ef48f6ae564576806f3c245c2321e1>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <00ef48f6ae564576806f3c245c2321e1>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at System.Convert.ToInt64
    (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at
    Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00035]
    in <00ef48f6ae564576806f3c245c2321e1>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <00ef48f6ae564576806f3c245c2321e1>:0 \n"
  stdout: ''
  timestamp: 1659975928
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(v
    => v is long).Select(v => (long)v).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea127f844eff44d2980b55a100a09ffb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea127f844eff44d2980b55a100a09ffb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975801
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var list = new List<long>();\n
    \       foreach(var value in values) {\n            if(!IsInteger(value)) {\n
    \               list.Add(new InvalidOperationException($\"{value.GetType().Name}
    is not integer\"));\n                continue;\n            }\n            list.Add(Convert.ToInt64(value));\n
    \       }\n        return list;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5qeqd41v.cs(17,17): error CS0103: The name ''IsInteger'' does not exist
    in the current context

    /tmp/tmp5qeqd41v.cs(18,26): error CS1503: Argument 1: cannot convert from ''System.InvalidOperationException''
    to ''long''

    '
  timestamp: 1659975927
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            bool
    isInteger = value is long l;\n            if (isInteger) {\n                result.Add((long)value);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <355249dc5ef042c3b39fed2ba3cc74b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <355249dc5ef042c3b39fed2ba3cc74b3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975928
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n\n
    \       foreach (var value in values) {\n            long value;\n\n            if
    (value is long) {\n                value = ((long)value);\n            } else
    if (value is int) {\n                value = ((int)value);\n            } else
    if (value is double) {\n                value = ((double)value);\n            }
    else {\n                continue;\n            }\n\n            result.Add(value);\n
    \       }\n\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkaceca1e.cs(18,18): error CS0136: A local or parameter named ''value''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmpkaceca1e.cs(20,17): warning CS0183: The given expression is always of
    the provided (''long'') type

    /tmp/tmpkaceca1e.cs(22,24): warning CS0184: The given expression is never of the
    provided (''int'') type

    /tmp/tmpkaceca1e.cs(24,24): warning CS0184: The given expression is never of the
    provided (''double'') type

    /tmp/tmpkaceca1e.cs(25,26): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpkaceca1e.cs(21,17): warning CS1717: Assignment made to same variable;
    did you mean to assign something else?

    /tmp/tmpkaceca1e.cs(20,17): error CS0165: Use of unassigned local variable ''value''

    '
  timestamp: 1659975927
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n\n        foreach (object obj in values) {\n            if
    (obj is int)\n                result.Add((long)obj);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <864ebe1e9dcb4531b0ccd56e5899c852>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <864ebe1e9dcb4531b0ccd56e5899c852>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975928
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> filteredValues
    = new List<long>();\n        if (values == null) throw new ArgumentNullException(nameof(values));\n
    \       foreach (object value in values) {\n            if (value is int)\n                filteredValues.Add((long)value);\n
    \           else if (value is long)\n                filteredValues.Add((long)value);\n
    \           else\n                filteredValues.Add((long)Convert.ToInt64(value));\n
    \       }\n        return filteredValues;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba045881309d4eb4a5dab6225a1f8be8>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at System.Convert.ToInt64 (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00069]
    in <ba045881309d4eb4a5dab6225a1f8be8>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <ba045881309d4eb4a5dab6225a1f8be8>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at System.Convert.ToInt64
    (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at
    Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00069]
    in <ba045881309d4eb4a5dab6225a1f8be8>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <ba045881309d4eb4a5dab6225a1f8be8>:0 \n"
  stdout: ''
  timestamp: 1659975928
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (object o in values) {\n            if (o is long) result.Add((long)o);\n
    \           else if (o is int) result.Add((int)o);\n            else if (o is
    string) result.Add(o.ToString());\n            else if (!Convert.IsDBNull(o))
    throw new InvalidOperationException(\"Invalid object\");\n            else result.Add(0);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzzb99lua.cs(19,46): error CS1503: Argument 1: cannot convert from ''string''
    to ''long''

    '
  timestamp: 1659975927
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null)
    return null;\n        var filtered = new List<long>();\n        foreach (var item
    in values) {\n            if (item is long) {\n                filtered.Add((long)item);\n
    \           }\n        }\n        return filtered;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6f41aa8544624750a57a43f94e73c798>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6f41aa8544624750a57a43f94e73c798>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975928
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        Debug.WriteLine(string.Format(\"Filter
    {0}\", values));\n        List<long> result = new List<long>();\n        foreach
    (object value in values) {\n            long number;\n            try {\n                number
    = Convert.ToInt64(value);\n            } catch(FormatException ex) {\n                continue;\n
    \           }\n            result.Add(number);\n        }\n        Debug.WriteLine(string.Format(\"Filter
    {0} -> {1}\", values, result));\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Filter System.Collections.Generic.List`1[System.Object]\nFilter System.Collections.Generic.List`1[System.Object]
    -> System.Collections.Generic.List`1[System.Int64]\nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eb798057da5e4434b1068ea4941f47d3>:0
    \nFilter System.Collections.Generic.List`1[System.Object]\n\nUnhandled Exception:\nSystem.InvalidCastException:
    Specified cast is not valid.\n  at System.Convert.ToInt64 (System.Object value)
    [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x0002c] in <eb798057da5e4434b1068ea4941f47d3>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <eb798057da5e4434b1068ea4941f47d3>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidCastException: Specified cast
    is not valid.\n  at System.Convert.ToInt64 (System.Object value) [0x00003] in
    <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T]
    values) [0x0002c] in <eb798057da5e4434b1068ea4941f47d3>:0 \n  at Problem.Main
    (System.String[] args) [0x00058] in <eb798057da5e4434b1068ea4941f47d3>:0 \n"
  stdout: ''
  timestamp: 1659975928
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Select(value
    => (long)Math.Round(value)).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8blhil9q.cs(15,56): error CS1503: Argument 1: cannot convert from ''object''
    to ''decimal''

    '
  timestamp: 1659975927
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values.Count ==
    0) return new List<long>();\n        return values.Cast<object>()\n                    .Where(v
    => v is long)\n                    .Cast<long>()\n                    .ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <167c61e67c4841df90506b28968d576a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <167c61e67c4841df90506b28968d576a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975928
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var value in values) {\n            if (value is long) {\n                result.Add((long)value);\n
    \           } else if (value is int) {\n                result.Add((int)value);\n
    \           } else {\n                result.Add(0);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2608481ceb554384bce2ca4fb574847b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2608481ceb554384bce2ca4fb574847b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975928
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(x
    => Convert.ToInt32(x)).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3g_38svf.cs(15,34): error CS0029: Cannot implicitly convert type ''int''
    to ''bool''

    /tmp/tmp3g_38svf.cs(15,34): error CS1662: Cannot convert lambda expression to
    intended delegate type because some of the return types in the block are not implicitly
    convertible to the delegate return type

    '
  timestamp: 1659975928
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null)\n
    \           return null;\n        List<long> result = new List<long>();\n        foreach
    (object value in values) {\n            bool ok;\n            if (value.GetType()
    == typeof(long)) {\n                ok = true;\n            }\n            else
    if (value.GetType() == typeof(int)) {\n                ok = true;\n            }\n
    \           else if (value.GetType() == typeof(float)) {\n                ok =
    true;\n            }\n            else if (value.GetType() == typeof(string))
    {\n                ok = value.ToString() == value.ToString().ToLower();\n            }\n
    \           else {\n                ok = false;\n            }\n            if
    (ok)\n                result.Add((long)value);\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <447a17b36f134963aabef79381bdb5d5>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x000e0]
    in <447a17b36f134963aabef79381bdb5d5>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <447a17b36f134963aabef79381bdb5d5>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x000e0] in <447a17b36f134963aabef79381bdb5d5>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <447a17b36f134963aabef79381bdb5d5>:0
    \n"
  stdout: ''
  timestamp: 1659975928
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null)\n
    \           throw new ArgumentNullException(\"values\");\n        var list = new
    List<long>();\n        foreach (var value in values) {\n            try {\n                long
    value;\n                if (long.TryParse(Convert.ToString(value), out value))\n
    \                   list.Add(value);\n            } catch {\n            }\n        }\n
    \       return list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppdouvk1k.cs(20,22): error CS0136: A local or parameter named ''value''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmppdouvk1k.cs(21,52): error CS0165: Use of unassigned local variable ''value''

    '
  timestamp: 1659975928
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null)
    {\n            return new List<long>();\n        }\n        var filteredValues
    = new List<long>();\n        foreach (var v in values) {\n            if (v ==
    null || v is long) {\n                filteredValues.Add((long)v);\n            }
    else {\n                filteredValues.AddRange(FilterIntegers(v as List<object>));\n
    \           }\n        }\n        return filteredValues;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ce5759f7e414df29c7a75dc7c4968cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ce5759f7e414df29c7a75dc7c4968cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975928
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values.Count ==
    0) {\n            return new List<long>();\n        }\n\n        if (values.Count
    == 1) {\n            return new List<long>((List<long>)values[0]);\n        }\n\n
    \       foreach (object item in values) {\n            bool isInteger = item is
    long;\n            if (!isInteger) {\n                continue;\n            }\n\n
    \           if (isInteger && ((long)item) < 0) {\n                Debug.WriteLine(\"WARNING:
    negative long value found in list of \" + values.Count.ToString() + \"; converting
    to negative int\");\n                item *= -1;\n            }\n\n            int
    intValue = item as int;\n            if (intValue >= 0) {\n                Debug.WriteLine(\"WARNING:
    non-negative int value found in list of \" + values.Count.ToString() + \"; converting
    to positive long\");\n                item = (long)intValue;\n            }\n\n
    \           long longValue = item as long;\n            if (longValue >= 0) {\n
    \               Debug.WriteLine(\"WARNING: non-negative long value found in list
    of \" + values.Count.ToString() + \"; not converting\");\n            }\n        }\n\n
    \       return new List<long>(values);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjlwe43eq.cs(31,17): error CS1656: Cannot assign to ''item'' because it
    is a ''foreach iteration variable''

    /tmp/tmpjlwe43eq.cs(34,28): error CS0077: The as operator must be used with a
    reference type or nullable type (''int'' is a non-nullable value type)

    /tmp/tmpjlwe43eq.cs(37,17): error CS1656: Cannot assign to ''item'' because it
    is a ''foreach iteration variable''

    /tmp/tmpjlwe43eq.cs(40,30): error CS0077: The as operator must be used with a
    reference type or nullable type (''long'' is a non-nullable value type)

    /tmp/tmpjlwe43eq.cs(46,31): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.List<object>''
    to ''int''

    '
  timestamp: 1659975928
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> filtered
    = new List<long>();\n        foreach (object o in values) {\n            long
    val;\n            if (long.TryParse(o.ToString(), out val)) {\n                filtered.Add(val);\n
    \           }\n        }\n        return filtered;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <37ea6fb756e847d885460362588ab7df>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <37ea6fb756e847d885460362588ab7df>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975928
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var returnValue = new
    List<long>();\n        foreach(var item in values) {\n            if(item is long)
    {\n                returnValue.Add((long)item);\n            } else {\n                returnValue.Add((long)Math.Round(Convert.ToDouble(item)));\n
    \           }\n        }\n        return returnValue;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <722a50b8505340578cc2a5f9685a88fe>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at System.Convert.ToDouble (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00039]
    in <722a50b8505340578cc2a5f9685a88fe>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <722a50b8505340578cc2a5f9685a88fe>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at System.Convert.ToDouble
    (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at
    Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00039]
    in <722a50b8505340578cc2a5f9685a88fe>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <722a50b8505340578cc2a5f9685a88fe>:0 \n"
  stdout: ''
  timestamp: 1659975928
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(v
    => v is long).Select(v => (long)v).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea127f844eff44d2980b55a100a09ffb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea127f844eff44d2980b55a100a09ffb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975801
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> res = new
    List<long>();\n        foreach (object val in values) {\n            long l =
    (long)val;\n            if (l != val)\n                throw new Exception(\"Non-integer
    value \" + val + \" cannot be filtered!\");\n            if (l > int.MaxValue
    || l < int.MinValue)\n                throw new Exception(\"Non-integer value
    \" + val + \" cannot be filtered!\");\n            res.Add(l);\n        }\n        return
    res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz7x2jqfa.cs(18,17): error CS0019: Operator ''!='' cannot be applied to
    operands of type ''long'' and ''object''

    '
  timestamp: 1659975928
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        // Find all numbers
    except null\n        var numbers = values.Where(x => x is long).ToList();\n        //
    Create empty list of longs\n        var longs = new List<long>();\n        foreach
    (var item in numbers)\n        {\n            longs.Add(item);\n        }\n        return
    longs;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p5p6d8.cs(21,23): error CS1503: Argument 1: cannot convert from ''object''
    to ''long''

    '
  timestamp: 1659975928
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null)
    {\n            return null;\n        }\n\n        // Convert each object into
    a long\n        var integers = values.Select(v => (long) Convert.ChangeType(v,
    typeof(object))).ToList();\n\n        // Filter out any non-integers\n        return
    integers.Where(i => i >= 0L).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <63db081d6ebe4815b8f5c808b3cd4da5>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Object must implement IConvertible.\n
    \ at System.Convert.ChangeType (System.Object value, System.Type conversionType,
    System.IFormatProvider provider) [0x00040] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Convert.ChangeType (System.Object value, System.Type conversionType)
    [0x00007] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c.<FilterIntegers>b__0_0
    (System.Object v) [0x00000] in <63db081d6ebe4815b8f5c808b3cd4da5>:0 \n  at System.Linq.Enumerable+SelectListIterator`2[TSource,TResult].ToList
    () [0x0002a] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00033]
    in <63db081d6ebe4815b8f5c808b3cd4da5>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <63db081d6ebe4815b8f5c808b3cd4da5>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Object must implement IConvertible.\n  at System.Convert.ChangeType
    (System.Object value, System.Type conversionType, System.IFormatProvider provide"
  stdout: ''
  timestamp: 1659975929
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            if
    (value is int || value is long)\n                result.Add((int)value);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <007630a8eb9e4a8ba87a762a579966b3>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00032]
    in <007630a8eb9e4a8ba87a762a579966b3>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <007630a8eb9e4a8ba87a762a579966b3>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x00032] in <007630a8eb9e4a8ba87a762a579966b3>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <007630a8eb9e4a8ba87a762a579966b3>:0
    \n"
  stdout: ''
  timestamp: 1659975929
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Select(v
    => (long) v).ToList();\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <16eb30e6791d4eac9ac04314d734d4a3>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem+<>c.<FilterIntegers>b__0_0 (System.Object v) [0x00000] in <16eb30e6791d4eac9ac04314d734d4a3>:0
    \n  at System.Linq.Enumerable+SelectListIterator`2[TSource,TResult].ToList ()
    [0x0002a] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00026]
    in <16eb30e6791d4eac9ac04314d734d4a3>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <16eb30e6791d4eac9ac04314d734d4a3>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem+<>c.<FilterIntegers>b__0_0
    (System.Object v) [0x00000] in <16eb30e6791d4eac9ac04314d734d4a3>:0 \n  at System.Linq.Enumerable+SelectListIterator`2[TSource,TResult].ToList
    () [0x0002a] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.FilterIntegers (System.Co"
  stdout: ''
  timestamp: 1659975929
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null ||
    values.Count == 0) return null;\n        List<long> result = new List<long>();\n
    \       foreach (var value in values) {\n            if (value is long)\n                result.Add((long)value);\n
    \           else if (value is int) {\n                result.Add(Convert.ToInt64(value));\n
    \           } else if (value is double) {\n                result.Add(Convert.ToInt64((double)value));\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00010] in <6e5de51fd4bf49539a8ea1188feb1923>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00010] in <6e5de51fd4bf49539a8ea1188feb1923>:0
    \n"
  stdout: ''
  timestamp: 1659975929
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            if
    (value is long) {\n                result.Add((long)value);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e18b3c2bc32a42bb9a91d05e5dbab851>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e18b3c2bc32a42bb9a91d05e5dbab851>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values.Count ==
    0) return values;\n        if (values.Count == 1) return new List<long>(values);\n
    \       List<long> results = new List<long>();\n        // Get all numbers from
    first item and apply filter to each item\n        List<long> allNumbers = new
    List<long>(values.Cast<long>().ToList());\n        foreach (object value in values)
    {\n            List<long> numbersOfType = new List<long>();\n            bool
    isNumber = int.TryParse(value.ToString(), out int parsedInt);\n            if
    (isNumber) numbersOfType.Add((long)parsedInt);\n            else if (value is
    List<object>) foreach (object innerValue in (List<object>)value) {\n                if
    (innerValue is long) numbersOfType.Add((long)innerValue);\n            }\n            else
    if (value is string) foreach (string innerValue in (List<string>)value) {\n                if
    (long.TryParse(innerValue, out long parsedInt)) numbersOfType.Add((long)parsedInt);\n
    \           }\n            else if (value is IList) {\n                IList<object>
    list = (IList<object>)value;\n                foreach (object innerValue in list)
    {\n                    if (innerValue is long) numbersOfType.Add((long)innerValue);\n
    \               }\n            }\n            if (numbersOfType.Count > 0) {\n
    \               allNumbers.AddRange(numbersOfType);\n            }\n        }\n
    \       results.AddRange(allNumbers);\n        return results;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjfkb_v_o.cs(15,39): error CS0029: Cannot implicitly convert type ''System.Collections.Generic.List<object>''
    to ''System.Collections.Generic.List<long>''

    /tmp/tmpjfkb_v_o.cs(16,54): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.List<object>''
    to ''int''

    /tmp/tmpjfkb_v_o.cs(28,56): error CS0136: A local or parameter named ''parsedInt''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmpjfkb_v_o.cs(30,31): error CS0305: Using the generic type ''IList<T>''
    requires 1 type arguments

    '
  timestamp: 1659975928
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       values.ForEach(value => {\n            if (value is int) {\n                result.Add((long)value);\n
    \           }\n        });\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4da944ef479148dfb6cad139b6cb9861>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4da944ef479148dfb6cad139b6cb9861>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975929
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> filteredValues
    = new List<long>();\n        foreach (object item in values) {\n            if
    (item is long) {\n                filteredValues.Add((long)item);\n            }
    else {\n                filteredValues.Add((long)Convert.ToInt64(item));\n            }\n
    \       }\n        return filteredValues;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f7b473998e8e45a3b45013a6e1ab6c33>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at System.Convert.ToInt64 (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00039]
    in <f7b473998e8e45a3b45013a6e1ab6c33>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <f7b473998e8e45a3b45013a6e1ab6c33>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at System.Convert.ToInt64
    (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at
    Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00039]
    in <f7b473998e8e45a3b45013a6e1ab6c33>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <f7b473998e8e45a3b45013a6e1ab6c33>:0 \n"
  stdout: ''
  timestamp: 1659975929
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var item in values) {\n            if (item is int) {\n                result.Add((int)item);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e4977d05103d4f848f8101942b49052e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e4977d05103d4f848f8101942b49052e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975929
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            long
    value;\n            if (long.TryParse(value, out value)) {\n                result.Add(value);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpewppocdb.cs(17,18): error CS0136: A local or parameter named ''value''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmpewppocdb.cs(18,31): error CS1503: Argument 1: cannot convert from ''long''
    to ''string''

    /tmp/tmpewppocdb.cs(18,31): error CS0165: Use of unassigned local variable ''value''

    '
  timestamp: 1659975929
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Select(x
    => (long)x).Where(x => Math.Abs((int)x) == x).ToList();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e7dda75f4f104b56ab23c4b9d5e79ff2>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem+<>c.<FilterIntegers>b__0_0 (System.Object x) [0x00000] in <e7dda75f4f104b56ab23c4b9d5e79ff2>:0
    \n  at System.Linq.Enumerable+SelectListIterator`2[TSource,TResult].MoveNext ()
    [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+WhereEnumerableIterator`1[TSource].ToList
    () [0x00030] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x0004a]
    in <e7dda75f4f104b56ab23c4b9d5e79ff2>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <e7dda75f4f104b56ab23c4b9d5e79ff2>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem+<>c.<FilterIntegers>b__0_0
    (System.Object x) [0x00000] in <e7dda75f4f104b56ab23c4b9d5e79ff2>:0 \n  at System.Linq.Enumerable+SelectListIterator`2[TSource,TResult].MoveNext
    () [0x00048] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+WhereEnumerableIterator`1[TSou"
  stdout: ''
  timestamp: 1659975929
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach(var value in values) {\n            try\n            {\n
    \               long tmp = (long)value;\n                result.Add(tmp);\n            }\n
    \           catch (InvalidCastException)\n            {\n                result.Add(0);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f0598a8211af4d9a82be6f217bee06a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f0598a8211af4d9a82be6f217bee06a2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975929
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        if (null == values) return result;\n        foreach
    (object value in values) {\n            if (value is long)\n                result.Add((long)value);\n
    \           else if (value is int) {\n                if (value < int.MinValue
    || value > int.MaxValue)\n                    continue;\n                result.Add((long)value);\n
    \           } else {\n                if (value is string)\n                    if
    (!string.IsNullOrEmpty(value))\n                        result.Add(long.Parse(value));\n
    \               else\n                    result.Add((long)value);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt6pe773v.cs(21,21): error CS0019: Operator ''<'' cannot be applied to
    operands of type ''object'' and ''int''

    /tmp/tmpt6pe773v.cs(21,45): error CS0019: Operator ''>'' cannot be applied to
    operands of type ''object'' and ''int''

    /tmp/tmpt6pe773v.cs(26,47): error CS1503: Argument 1: cannot convert from ''object''
    to ''string''

    /tmp/tmpt6pe773v.cs(27,47): error CS1503: Argument 1: cannot convert from ''object''
    to ''string''

    '
  timestamp: 1659975929
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        if (values != null && values.Count > 0) {\n            foreach
    (object obj in values) {\n                if (obj is long) result.Add((long) obj);\n
    \               else if (obj is string) result.Add((long) long.Parse((string)obj));\n
    \               else if (obj is long?) result.Add((long)obj?? 0);\n                else
    if (obj is string?) result.Add((long)long.Parse((string)obj?? \"\"));\n                else
    if (obj is IEnumerable) result.AddRange(obj.SelectMany(FilterIntegers));\n                else
    throw new InvalidOperationException(\"Unsupported value\");\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7kvbk28n.cs(20,51): error CS0019: Operator ''??'' cannot be applied to
    operands of type ''long'' and ''int''

    /tmp/tmp7kvbk28n.cs(21,39): warning CS8632: The annotation for nullable reference
    types should only be used in code within a ''#nullable'' annotations context.

    /tmp/tmp7kvbk28n.cs(21,33): error CS8650: It is not legal to use nullable reference
    type ''string?'' in an is-type expression; use the underlying type ''string''
    instead.

    /tmp/tmp7kvbk28n.cs(22,33): error CS0305: Using the generic type ''IEnumerable<T>''
    requires 1 type arguments

    /tmp/tmp7kvbk28n.cs(22,66): error CS1061: ''object'' does not contain a definition
    for ''SelectMany'' and no accessible extension method ''SelectMany'' accepting
    a first argument of type ''object'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659975929
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n\n
    \       values.ForEach(v => {\n            try {\n                if (v is IComparable)
    {\n                    var vAsLong = v as? IComparable;\n                    if
    (vAsLong != null && vAsLong.CompareTo(0) >= 0)\n                        result.Add((long)v);\n
    \               }\n                else\n                    result.Add((long)v);\n
    \           }\n            catch (Exception) {\n                result.Add((long)0);\n
    \           }\n        });\n\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4r18w6hy.cs(20,39): error CS1031: Type expected

    /tmp/tmp4r18w6hy.cs(20,52): error CS1003: Syntax error, '':'' expected

    /tmp/tmp4r18w6hy.cs(20,52): error CS1525: Invalid expression term '';''

    '
  timestamp: 1659975928
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n\n
    \       foreach (var value in values) {\n            try {\n                result.Add((long)value);\n
    \           } catch (InvalidCastException) {\n                // Do nothing -
    not an integer\n            }\n        }\n\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <014ef8185c7241a0a47c400edc832211>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <014ef8185c7241a0a47c400edc832211>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975929
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> ret = new
    List<long>();\n        foreach(object v in values) {\n            try {\n                ret.Add((long)v);\n
    \           } catch (InvalidCastException exception) {\n            }\n        }\n
    \       return ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e40325eec6a64594adb1de1ca6aaf5c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e40325eec6a64594adb1de1ca6aaf5c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975929
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null ||
    values.Count == 0) return values;\n\n        var l = new List<long>();\n        foreach
    (var value in values) {\n            if (value is long) {\n                l.Add((long)value);\n
    \           } else if (value is string) {\n                l.Add((long)(Int64.Parse((string)value)));\n
    \           } else if (value is double) {\n                l.Add((long)(Int64.Parse((string)value)));\n
    \           } else {\n                // other types are not supported\n                Debug.Fail(\"Unsupported
    type \" + value.GetType().FullName);\n            }\n        }\n\n        return
    l;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph4lxq154.cs(15,57): error CS0029: Cannot implicitly convert type ''System.Collections.Generic.List<object>''
    to ''System.Collections.Generic.List<long>''

    '
  timestamp: 1659975929
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> ret = new
    List<long>();\n        foreach (object val in values) {\n            ret.Add((long)val);\n
    \       }\n        return ret;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6172ac645f214944a36e7c93ce74a4ed>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x0001a]
    in <6172ac645f214944a36e7c93ce74a4ed>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <6172ac645f214944a36e7c93ce74a4ed>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x0001a] in <6172ac645f214944a36e7c93ce74a4ed>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <6172ac645f214944a36e7c93ce74a4ed>:0
    \n"
  stdout: ''
  timestamp: 1659975929
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(x
    => x is long).Cast<long>().ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af0944d718e342dfb81a04cc58afb8c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af0944d718e342dfb81a04cc58afb8c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975929
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            long
    val = 0;\n            try {\n                val = (long)Convert.ChangeType(value,
    typeof(long));\n            } catch (Exception) {\n            }\n            if
    (val > 0) {\n                result.Add(val);\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b09238a48c748729ac7203d5745e474>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b09238a48c748729ac7203d5745e474>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975929
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var value in values) {\n            if (value is int) {\n                result.Add((long)value);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <864b01210c454ba4bb466d2e5b40b183>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <864b01210c454ba4bb466d2e5b40b183>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975929
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> out = new
    List<long>();\n        foreach (object v in values) {\n            if (v is int)
    {\n                out.Add((long)v);\n            }\n        }\n        return
    out;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoe0r1vk9.cs(15,20): error CS1002: ; expected

    /tmp/tmpoe0r1vk9.cs(15,20): error CS1513: } expected

    /tmp/tmpoe0r1vk9.cs(15,24): error CS1525: Invalid expression term ''=''

    /tmp/tmpoe0r1vk9.cs(17,28): error CS1513: } expected

    /tmp/tmpoe0r1vk9.cs(21,16): error CS1525: Invalid expression term ''out''

    /tmp/tmpoe0r1vk9.cs(21,16): error CS1002: ; expected

    /tmp/tmpoe0r1vk9.cs(21,16): error CS1513: } expected

    '
  timestamp: 1659975929
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            if
    (value is int || value is long || value is BigInteger || value is decimal) {\n
    \               result.Add((long)value);\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4871c0667aad49afa6ad6849d950c570>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4871c0667aad49afa6ad6849d950c570>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975929
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (var item in values) {\n            if (item
    is int) {\n                result.Add((long)item);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <67c9831b1dd54875aca2b14dbccb4a25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <67c9831b1dd54875aca2b14dbccb4a25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975930
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        // Get integer type\n
    \       var iType = values.Select(o => o.GetType().GetInterfaces().First(i =>
    i.IsGenericType && i.GetGenericTypeDefinition() == typeof(IEnumerable<>))).First();\n
    \       // Get integer value type\n        var iValue = values.Select(o => o.GetType().GetInterfaces().First(i
    => i.IsGenericType && i.GetGenericTypeDefinition() == typeof(IEnumerable<>)\n
    \               && i.GetGenericArguments().First() == iType)).First();\n        //
    Get integer value type\n        var iResult = values.Select(o => o.GetType().GetInterfaces().First(i
    => i.IsGenericType && i.GetGenericTypeDefinition() == typeof(IEnumerable<>)\n
    \               && i.GetGenericArguments().First() == iValue)).First();\n        //
    Filter list of integers from list of objects\n        return values.Where(o =>
    o.GetType() == iResult).Select(o => (long)o).ToList();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x0002d] in <1c891363880b4746b05e1cc6c5cce97c>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <1c891363880b4746b05e1cc6c5cce97c>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x0002d] in <1c891363880b4746b05e1cc6c5cce97c>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <1c891363880b4746b05e1cc6c5cce97c>:0
    \n"
  stdout: ''
  timestamp: 1659975930
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var integers = new List<long>();\n
    \       foreach (var value in values) {\n            try {\n                int
    tempValue = (int)value;\n                integers.Add(tempValue);\n            }
    catch {\n                integers.Add((long)value);\n            }\n        }\n
    \       return integers;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eb89926544be4733b55ef920f0abc8a5>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00030]
    in <eb89926544be4733b55ef920f0abc8a5>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <eb89926544be4733b55ef920f0abc8a5>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x00030] in <eb89926544be4733b55ef920f0abc8a5>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <eb89926544be4733b55ef920f0abc8a5>:0
    \n"
  stdout: ''
  timestamp: 1659975930
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(x
    => x is long)\n            .Select(x => (long)x).ToList();\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e96473068bc64cd0842cd6813c9864fc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e96473068bc64cd0842cd6813c9864fc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975930
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null)\n
    \           return null;\n        if (values.Count != 0)\n            return values.Select(o
    => o.GetType().IsValueType && o.GetType().IsNumeric).Where(o => o).Select(o =>
    (long)o).ToList();\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpso9b56h8.cs(18,78): error CS1061: ''Type'' does not contain a definition
    for ''IsNumeric'' and no accessible extension method ''IsNumeric'' accepting a
    first argument of type ''Type'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659975930
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null)\n
    \           return null;\n        List<long> result = new List<long>();\n        foreach
    (object value in values) {\n            if (value == null || value is long) {\n
    \               result.Add((long) value);\n            }\n            else if
    (value is string && value.Length == 1) {\n                result.Add((long) Char.GetNumericValue(value[0]));\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsujyj99z.cs(22,47): error CS1061: ''object'' does not contain a definition
    for ''Length'' and no accessible extension method ''Length'' accepting a first
    argument of type ''object'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmpsujyj99z.cs(23,56): error CS0021: Cannot apply indexing with [] to an
    expression of type ''object''

    '
  timestamp: 1659975929
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Cast<long>().ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <77a6e172072642dd9145ee5df6f4e7a7>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at System.Linq.Enumerable+<CastIterator>d__34`1[TResult].MoveNext () [0x00040]
    in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Collections.Generic.List`1[T].AddEnumerable
    (System.Collections.Generic.IEnumerable`1[T] enumerable) [0x00059] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Collections.Generic.List`1[T]..ctor (System.Collections.Generic.IEnumerable`1[T]
    collection) [0x00062] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x00018] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00007]
    in <77a6e172072642dd9145ee5df6f4e7a7>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <77a6e172072642dd9145ee5df6f4e7a7>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at System.Linq.Enumerable+<CastIterator>d__34`1[TResult].MoveNext
    () [0x00040] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Collections.Generic.List`1[T].AddEnumerable
    (System.Collections.Generic.IEnumerabl"
  stdout: ''
  timestamp: 1659975930
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(x
    => x is long).Select(x => (long)x).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f38c3ab3dca441aa7c559dc0d10150a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f38c3ab3dca441aa7c559dc0d10150a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975797
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values.Count ==
    0) {\n            return new List<long>();\n        }\n        var valueSet =
    values.OfType<long>().ToArray();\n        bool isSet = valueSet.Length > 0;\n
    \       if (!isSet) {\n            return values;\n        }\n        var filtered
    = new List<long>();\n        for (var i = 0; i < values.Count; ++i) {\n            var
    value = values[i];\n            bool ok = value >= 0L;\n            if (!ok) {\n
    \               filtered[i] = value;\n            } else {\n                filtered.Add((long)value);\n
    \           }\n        }\n        return filtered;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzv3xxduh.cs(21,20): error CS0029: Cannot implicitly convert type ''System.Collections.Generic.List<object>''
    to ''System.Collections.Generic.List<long>''

    /tmp/tmpzv3xxduh.cs(26,23): error CS0019: Operator ''>='' cannot be applied to
    operands of type ''object'' and ''long''

    /tmp/tmpzv3xxduh.cs(28,31): error CS0266: Cannot implicitly convert type ''object''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659975929
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(o
    => o != null && o.GetType().IsGenericType &&\n                              o.GetType().GetGenericTypeDefinition()
    == typeof(IComparable<>) &&\n                              o.GetType().GetGenericArguments()[0].IsInteger()).Select(o
    => ((IComparable<long>)o)).Cast<long>().ToList();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmyzfpl_m.cs(17,68): error CS1061: ''Type'' does not contain a definition
    for ''IsInteger'' and no accessible extension method ''IsInteger'' accepting a
    first argument of type ''Type'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659975930
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values == null ||
    values.Count == 0)\n            return values;\n        return values.Cast<object>().Where(o
    => o is long).ToList();\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpg23pnuu2.cs(16,20): error CS0029: Cannot implicitly convert type ''System.Collections.Generic.List<object>''
    to ''System.Collections.Generic.List<long>''

    /tmp/tmpg23pnuu2.cs(17,16): error CS0029: Cannot implicitly convert type ''System.Collections.Generic.List<object>''
    to ''System.Collections.Generic.List<long>''

    '
  timestamp: 1659975930
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            if
    (value is long || value is int) {\n                result.Add((long) value);\n
    \           } else if (value is string) {\n                result.Add((long) Convert.ToInt64(value));\n
    \           } else if (value is IEnumerable) {\n                foreach (object
    item in (IEnumerable) value) {\n                    if (!(item is long || item
    is int)) {\n                        result.Add((long) item);\n                    }\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptp5llkxo.cs(21,33): error CS0305: Using the generic type ''IEnumerable<T>''
    requires 1 type arguments

    /tmp/tmptp5llkxo.cs(22,42): error CS0305: Using the generic type ''IEnumerable<T>''
    requires 1 type arguments

    '
  timestamp: 1659975930
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var value in values) {\n            if (value is long) {\n                result.Add((long)value);\n
    \           } else if (value is int) {\n                result.Add((int)value);\n
    \           } else if (value is double) {\n                result.Add((double)value);\n
    \           } else {\n                result.Add(long.Parse(value.ToString()));\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprlhpgyss.cs(22,28): error CS1503: Argument 1: cannot convert from ''double''
    to ''long''

    '
  timestamp: 1659975930
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(value
    => value is long).Cast<long>().ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5bbb2e8c41804711bfc13372bf688888>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5bbb2e8c41804711bfc13372bf688888>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975930
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values.Count < 1)\n
    \           throw new ArgumentException(\"Must provide a list with at least one
    value\");\n        List<long> results = new List<long>();\n        foreach (object
    value in values) {\n            try {\n                long val = Convert.ToInt64(value);\n
    \               results.Add(val);\n            } catch (FormatException) {\n            }\n
    \       }\n        return results;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentException: Must provide a list with
    at least one value\n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T]
    values) [0x0000e] in <073b17dc220b45f59d8c3d5e59b2bf90>:0 \n  at Problem.Main
    (System.String[] args) [0x00006] in <073b17dc220b45f59d8c3d5e59b2bf90>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentException: Must provide a list with
    at least one value\n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T]
    values) [0x0000e] in <073b17dc220b45f59d8c3d5e59b2bf90>:0 \n  at Problem.Main
    (System.String[] args) [0x00006] in <073b17dc220b45f59d8c3d5e59b2bf90>:0 \n"
  stdout: ''
  timestamp: 1659975930
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(x
    => x is long).Cast<long>().ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af0944d718e342dfb81a04cc58afb8c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af0944d718e342dfb81a04cc58afb8c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975929
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values.Count ==
    0) {\n            return new List<long>();\n        }\n        if (values.Count
    > 1) {\n            throw new ArgumentException(\"List contains multiple objects\");\n
    \       }\n\n        foreach (object value in values) {\n            if (value
    is int) {\n                values.Remove(value);\n                return new List<long>(values);\n
    \           }\n        }\n        throw new ArgumentException(\"List contains
    values other than integers\");\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9v93azeg.cs(25,39): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.List<object>''
    to ''int''

    '
  timestamp: 1659975930
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var value in values) {\n            object o = value;\n            try
    {\n                if (o is long) {\n                    result.Add((long)o);\n
    \               }\n            }\n            catch (Exception ex) {\n                Console.WriteLine(\"{0}
    - {1}\", value, ex);\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af378d7656d849d8a51d6e0f4b73f345>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af378d7656d849d8a51d6e0f4b73f345>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975930
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var value in values) {\n            if (value is IEnumerable)\n
    \               result.AddRange(FilterIntegers((List<object>)value));\n            else
    if (value is long)\n                result.Add((long)value);\n            else\n
    \               result.Add((long)0);\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv4h10_gm.cs(17,26): error CS0305: Using the generic type ''IEnumerable<T>''
    requires 1 type arguments

    '
  timestamp: 1659975930
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        // TODO: optimize performance
    (use a dictionary for faster lookup, use a custom comparer, use binary search,
    ...)\n        List<long> result = new List<long>();\n        foreach (object v
    in values) {\n            if (v is int || v is long)\n                result.Add((v
    as int) ?? 0);\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp65tfd5a2.cs(19,29): error CS0077: The as operator must be used with a
    reference type or nullable type (''int'' is a non-nullable value type)

    '
  timestamp: 1659975930
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.OfType<object>().Select(o
    => (long) o).ToList();\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cd0c9b5e7204826aab4932a8d1ef891>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem+<>c.<FilterIntegers>b__0_0 (System.Object o) [0x00000] in <1cd0c9b5e7204826aab4932a8d1ef891>:0
    \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].ToList
    () [0x0001b] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x0002b]
    in <1cd0c9b5e7204826aab4932a8d1ef891>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <1cd0c9b5e7204826aab4932a8d1ef891>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem+<>c.<FilterIntegers>b__0_0
    (System.Object o) [0x00000] in <1cd0c9b5e7204826aab4932a8d1ef891>:0 \n  at System.Linq.Enumerable+SelectEnumerableIterator`2[TSource,TResult].ToList
    () [0x0001b] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.FilterInteger"
  stdout: ''
  timestamp: 1659975930
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var newValues = new
    List<long>();\n        foreach (var value in values) {\n            if (value
    is long) {\n                newValues.Add((long)value);\n            } else {\n
    \               // do something\n            }\n        }\n        return newValues;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8fccf59517b544edbc629b2ad6112df4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8fccf59517b544edbc629b2ad6112df4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        // Filter only int values\n
    \       List<long> result = new List<long>();\n        foreach (object value in
    values) {\n            object result = System.Convert.ChangeType(value, typeof(long));\n
    \           if (result is int)\n                result.Add((long)result);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptbpg5bjm.cs(18,20): error CS0136: A local or parameter named ''result''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmptbpg5bjm.cs(20,24): error CS1061: ''object'' does not contain a definition
    for ''Add'' and no accessible extension method ''Add'' accepting a first argument
    of type ''object'' could be found (are you missing a using directive or an assembly
    reference?)

    '
  timestamp: 1659975930
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(value
    => value is long).Select(value => (long)value).ToList();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bdf45807453f4f89ba1cefc610d632e7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bdf45807453f4f89ba1cefc610d632e7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975931
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var newValues = new
    List<long>();\n        foreach (var val in values) {\n            try {\n                newValues.Add(Convert.ToInt64(val));\n
    \           } catch (Exception) {\n                continue;\n            }\n
    \       }\n        return newValues;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <95f43971849949a49f0a712679f7dfd4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <95f43971849949a49f0a712679f7dfd4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975930
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        // Use generic type
    constraints, because we don't know the types involved\n        var filteredValues
    = new List<long>();\n        foreach (var item in values) {\n            if (item
    is long) {\n                filteredValues.Add((long)item);\n            } else
    if (item is List<object>) {\n                filteredValues.AddRange(FilterIntegers((List<object>)item));\n
    \           } else {\n                filteredValues.Add(Convert.ToInt64(item));\n
    \           }\n        }\n        return filteredValues;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d3496b7990ee448a8349ed00d47e3350>:0
    \n\nUnhandled Exception:\nSystem.FormatException: Input string was not in a correct
    format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean overflow,
    System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Number.ParseInt64 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles
    styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Int64.Parse (System.String s, System.Globalization.NumberStyles
    style, System.IFormatProvider provider) [0x0001d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Convert.ToInt64 (System.String value, System.IFormatProvider provider)
    [0x00006] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.String.System.IConvertible.ToInt64
    (System.IFormatProvider provider) [0x00000] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at System.Convert.ToInt64 (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x0005e]
    in <d3496b7990ee448a8349ed00d47e3350>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <d3496b7990ee448a8349ed00d47e3350"
  stdout: ''
  timestamp: 1659975931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        var result = new List<long>();\n
    \       foreach (var value in values) {\n            if (value is int) {\n                result.Add((long)value);\n
    \           }\n            else if (value is string) {\n                var stringValue
    = (string)value;\n                if (int.TryParse(stringValue, out int intValue))
    {\n                    result.Add((long)intValue);\n                }\n            }\n
    \           else {\n                throw new Exception(\"Unknown type\");\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <942ac87b238f477fb0e4379aca4a3c37>:0
    \n\nUnhandled Exception:\nSystem.Exception: Unknown type\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x0006f] in <942ac87b238f477fb0e4379aca4a3c37>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <942ac87b238f477fb0e4379aca4a3c37>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Exception: Unknown type\n  at Problem.FilterIntegers
    (System.Collections.Generic.List`1[T] values) [0x0006f] in <942ac87b238f477fb0e4379aca4a3c37>:0
    \n  at Problem.Main (System.String[] args) [0x00058] in <942ac87b238f477fb0e4379aca4a3c37>:0
    \n"
  stdout: ''
  timestamp: 1659975931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        // For each value in
    the list of values\n        foreach (object value in values) {\n            //
    If the value is an integer, add it to the list of integers\n            if (value
    is int) {\n                values.Add((int)value);\n            }\n        }\n
    \       // Return the list of integers\n        return values;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new
    List<long>())));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{4L,
    new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L,
    (long)9L}))));\n    Debug.Assert(FilterIntegers((new List<object>(new object[]{3L,
    \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L,
    (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3j9f61dh.cs(23,16): error CS0029: Cannot implicitly convert type ''System.Collections.Generic.List<object>''
    to ''System.Collections.Generic.List<long>''

    '
  timestamp: 1659975930
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n\n        foreach (var value in values) {\n            try
    {\n                result.Add((long)value);\n            } catch { }\n        }\n\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ff52861f8f534d6b84161e84b503ac76>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ff52861f8f534d6b84161e84b503ac76>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        if (values.Count < 1)
    return new List<long>();\n        var longs = new List<long>();\n        foreach
    (object val in values) {\n            long l = 0;\n            try\n            {\n
    \               l = Convert.ToInt64(val);\n            }\n            catch (Exception)\n
    \           {\n                try\n                {\n                    l =
    Convert.ToInt32(val);\n                }\n                catch (Exception)\n
    \               {\n                    try\n                    {\n                        l
    = Convert.ToDouble(val);\n                    }\n                    catch (Exception)\n
    \                   {\n                        try\n                        {\n
    \                           l = long.Parse(val.ToString());\n                        }\n
    \                       catch (Exception)\n                        {\n                            longs.Add(0L);\n
    \                           continue;\n                        }\n                    }\n
    \               }\n            }\n            longs.Add(l);\n        }\n        return
    longs;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvbhovjlj.cs(33,29): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659975930
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Where(x
    => x is int).Select(x => (long)x).ToList();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <afe0760ea2cb4c4a90867d7c0faec802>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <afe0760ea2cb4c4a90867d7c0faec802>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975931
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> ints = new
    List<long>();\n        foreach(object value in values) {\n            long temp;\n
    \           bool success = long.TryParse(value.ToString(), out temp);\n            if
    (success)\n                ints.Add(temp);\n        }\n        return ints;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0acb03463743489291662beadfdf7503>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0acb03463743489291662beadfdf7503>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.Select(o
    => ((long)o)).ToList();\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FilterIntegers((new List<object>())).Equals((new List<long>())));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{4L, new List<object>(),
    23.2f, 9L, \"adasd\"}))).Equals((new List<long>(new long[]{(long)4L, (long)9L}))));\n
    \   Debug.Assert(FilterIntegers((new List<object>(new object[]{3L, \"c\", 3L,
    3L, \"a\", \"b\"}))).Equals((new List<long>(new long[]{(long)3L, (long)3L, (long)3L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8c67d0a5d6b447a93a3b866a682bb3d>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at Problem+<>c.<FilterIntegers>b__0_0 (System.Object o) [0x00000] in <e8c67d0a5d6b447a93a3b866a682bb3d>:0
    \n  at System.Linq.Enumerable+SelectListIterator`2[TSource,TResult].ToList ()
    [0x0002a] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x00026]
    in <e8c67d0a5d6b447a93a3b866a682bb3d>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <e8c67d0a5d6b447a93a3b866a682bb3d>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at Problem+<>c.<FilterIntegers>b__0_0
    (System.Object o) [0x00000] in <e8c67d0a5d6b447a93a3b866a682bb3d>:0 \n  at System.Linq.Enumerable+SelectListIterator`2[TSource,TResult].ToList
    () [0x0002a] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToList[TSource]
    (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0
    \n  at Problem.FilterIntegers (System.Co"
  stdout: ''
  timestamp: 1659975931
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        return values.OfType<long>().ToList();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2c72524b34ca47bb8ac868fe9efb6546>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2c72524b34ca47bb8ac868fe9efb6546>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659975799
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Filter given list of any csthon values only for integers\n    //
    >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,
    (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new
    List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //
    (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static
    List<long> FilterIntegers(List<object> values) {\n        List<long> result =
    new List<long>();\n        foreach (object value in values) {\n            long
    valueAsLong = Convert.ToInt64(value);\n            if (valueAsLong == valueAsLong)\n
    \               result.Add(valueAsLong);\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new
    List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new
    List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new
    List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new
    long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3a4f3cba1c894c69b6179e3947ae69f5>:0
    \n\nUnhandled Exception:\nSystem.InvalidCastException: Specified cast is not valid.\n
    \ at System.Convert.ToInt64 (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x0001a]
    in <3a4f3cba1c894c69b6179e3947ae69f5>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <3a4f3cba1c894c69b6179e3947ae69f5>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.InvalidCastException: Specified cast is not valid.\n  at System.Convert.ToInt64
    (System.Object value) [0x00003] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at
    Problem.FilterIntegers (System.Collections.Generic.List`1[T] values) [0x0001a]
    in <3a4f3cba1c894c69b6179e3947ae69f5>:0 \n  at Problem.Main (System.String[] args)
    [0x00058] in <3a4f3cba1c894c69b6179e3947ae69f5>:0 \n"
  stdout: ''
  timestamp: 1659975931

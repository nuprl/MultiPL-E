language: cs
name: HumanEval_23_strlen
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null)\n            return\
    \ 0L;\n        long len = 0L;\n        int idx = 0;\n        for (; ; )\n    \
    \        idx = (idx + 1) % str.Length;\n            len = (len + str.Length -\
    \ idx);\n        return len;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\"\
    )) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.DivideByZeroException: Attempted to divide\
    \ by zero.\n  at Problem.Strlen (System.String str) [0x0001e] in <8ed13b893d8b4a6ea5bcfa06265227d0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <8ed13b893d8b4a6ea5bcfa06265227d0>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.DivideByZeroException: Attempted\
    \ to divide by zero.\n  at Problem.Strlen (System.String str) [0x0001e] in <8ed13b893d8b4a6ea5bcfa06265227d0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <8ed13b893d8b4a6ea5bcfa06265227d0>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        var data = str.ToCharArray();\n  \
    \      Array.Sort(data);\n        return data.Length;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long n = 0;\n        foreach (char\
    \ ch in str) {\n            if (Char.IsWhiteSpace(ch))\n                n += 1;\n\
    \            else\n                n += 2;\n        }\n        return n;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fefb47d5a4e240a9a26456de823a414d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fefb47d5a4e240a9a26456de823a414d>:0 \n"
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return (str == null) ? 0L : str.Length;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        var l = new System.Text.StringBuilder();\n\
    \        foreach (char c in str) l.Append(c);\n        return l.Length;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\"))\
    \ == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        byte[] bytes = new byte[str.Length\
    \ + 1];\n        bytes[0] = 0;\n        Buffer.BlockCopy(str.ToCharArray(), 0,\
    \ bytes, 1, str.Length);\n        return BitConverter.ToInt64(bytes, 0);\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentException: Destination array is\
    \ not long enough to copy all the items in the collection. Check array index and\
    \ length.\nParameter name: value\n  at System.BitConverter.ToInt64 (System.Byte[]\
    \ value, System.Int32 startIndex) [0x00021] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.Strlen (System.String str) [0x00028] in <e9df5175f9be4b159b746f786437b908>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <e9df5175f9be4b159b746f786437b908>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentException: Destination array\
    \ is not long enough to copy all the items in the collection. Check array index\
    \ and length.\nParameter name: value\n  at System.BitConverter.ToInt64 (System.Byte[]\
    \ value, System.Int32 startIndex) [0x00021] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.Strlen (System.String str) [0x00028] in <e9df5175f9be4b159b746f786437b908>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <e9df5175f9be4b159b746f786437b908>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null)\n            throw\
    \ new ArgumentNullException(\"str\");\n        int len = str.Length;\n       \
    \ if (len == 0)\n            return 0;\n        else\n            return len;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str != null ? str.Length :\
    \ (long?)null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpivln5juy.cs(15,16): error CS0266: Cannot implicitly convert type ''long?''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long ret = 0; \n        for (int i\
    \ = 0; i < str.Length; i++) {\n            ret = ret + 1L; \n        }\n     \
    \   return ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        // Code is from http://stackoverflow.com/questions/557484/getting-string-length-in-c\n\
    \        int len = 0;\n        foreach (char c in str) {\n            if (c ==\
    \ '\\0') break;\n            len++;\n        }\n        return len;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\"))\
    \ == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        int len = str.Length;\n        if\
    \ (len == 0)\n            return (0L);\n        return ((long)len) + 1;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\"))\
    \ == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <228ef28c78b04b85ac4b38c7f451b929>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <228ef28c78b04b85ac4b38c7f451b929>:0 \n"
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null) throw new ArgumentNullException(\"\
    str\");\n        return (str == \"\") ? 0 : str.Length;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long l = 0;\n        foreach (char\
    \ c in str) {\n            l = l * 10 + c; //compute length in digits\n      \
    \  }\n        return l;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) ==\
    \ (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9f2f321c1f664e178bae689de0fd0cca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9f2f321c1f664e178bae689de0fd0cca>:0 \n"
  stdout: ''
  timestamp: 1660015754
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0;\n        for (int i\
    \ = 0; i < str.Length; i++) {\n            len = len * 10 + (ord(str[i]) - 32);\n\
    \        }\n        return len;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\"\
    )) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwojjjuw3.cs(17,31): error CS0103: The name ''ord'' does not exist in the
    current context

    '
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long length = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            length += (ulong) (str[i] - '0');\n\
    \        }\n        return length;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_q_r1347.cs(17,13): error CS0034: Operator ''+='' is ambiguous on operands
    of type ''long'' and ''ulong''

    '
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long strlen = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            strlen += 1;\n        }\n       \
    \ return strlen;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long i = 0;\n        for(i=0;i<str.Length;i++)\n\
    \        {\n            i++;\n        }\n        return i;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe8e4182e6a8482688dba877367716ba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe8e4182e6a8482688dba877367716ba>:0 \n"
  stdout: ''
  timestamp: 1660015754
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        byte b = new byte[1];\n        byte[]\
    \ bytes = Encoding.UTF8.GetBytes(str);\n        long length = BitConverter.ToInt64(bytes,\
    \ 0);\n        return length;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\"\
    )) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvmlm_m4o.cs(15,18): error CS0029: Cannot implicitly convert type ''byte[]''
    to ''byte''

    '
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long l = 0;\n        for(int i = 0;\
    \ i != str.Length; i++) {\n            l += 1;\n        }\n        return l;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        var strBytes = Encoding.UTF8.GetBytes(str);\n\
    \        var strLen = strBytes.Length;\n        return strLen;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (string.IsNullOrEmpty(str)) {\n\
    \            return 0L;\n        }\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long length = 0;\n        foreach\
    \ (char c in str) {\n            length += 1;\n        }\n        return length;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long length = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            length += (long)Math.Pow(256, i);\n\
    \        }\n        return length;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <466d3969e0ed4c4684e928ab7c582f3d>:0 \n"
  stdout: ''
  timestamp: 1660015754
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        ulong length = 1UL;\n        for (int\
    \ index = 0; index < str.Length; index++) {\n            length *= 2UL;\n    \
    \        if (length < str.Length) {\n                length += str.Length - index;\n\
    \            }\n        }\n        return length;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcmqw01ob.cs(18,17): error CS0034: Operator ''<'' is ambiguous on operands
    of type ''ulong'' and ''int''

    /tmp/tmpcmqw01ob.cs(19,17): error CS0034: Operator ''+='' is ambiguous on operands
    of type ''ulong'' and ''int''

    /tmp/tmpcmqw01ob.cs(22,16): error CS0266: Cannot implicitly convert type ''ulong''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015753
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long ret = 0;\n        for (int i\
    \ = 0; i < str.Length; i++) {\n            if (str[i] > 127) {\n             \
    \   ret += 2;\n            }\n            else {\n                ret += 1;\n\
    \            }\n        }\n        return ret;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        char[] charArray = str.ToCharArray();\n\
    \        long count = 0;\n        for (int i = 0; i < charArray.Length; i++) {\n\
    \            count += 1;\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null || str.Length == 0)\n\
    \            return 0;\n        else\n            return str.Length;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\"))\
    \ == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return (long)str.Length;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\"))\
    \ == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        System.Text.Encoding enc = System.Text.Encoding.UTF8;\n\
    \        byte[] bytes = enc.GetBytes(str);\n        return bytes.Length;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null) throw new ArgumentNullException(\"\
    str\");\n        return str.Length;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null || str.Length < 1)\
    \ {\n            return 0L;\n        }\n\n        int len = str.Length;\n    \
    \    for (int i = str.Length - 1; i >= 0; i--) {\n            len--;\n       \
    \     str = str.Substring(0, i + 1) + \"*\";\n        }\n\n        return len;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <edab090513ed40bfbb2177feb579ca28>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <edab090513ed40bfbb2177feb579ca28>:0 \n"
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return (str == null) ? 0L : str.Length;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long result = 0L;\n        foreach\
    \ (var ch in str) {\n            result++;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return (str == null) ? (long)0 : str.Length;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        int len = 0;\n        int i = 0;\n\
    \        while (i < str.Length) {\n            i++;\n            len++;\n    \
    \    }\n        return len;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\"\
    )) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0;\n        for (int i\
    \ = 0; i < str.Length; i++) {\n            if (str[i] < 0x20) {\n            \
    \    len++;\n            }\n        }\n        return len;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <38d2024f77c74da69f29e3626b759401>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <38d2024f77c74da69f29e3626b759401>:0 \n"
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null || str == \"\") {\n\
    \            return 0L;\n        }\n        char[] ch = new char[str.Length];\n\
    \        Array.Copy(str.ToCharArray(), ch, 0, str.Length);\n        return ch.Length;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpok8c4jx1.cs(19,15): error CS1501: No overload for method ''Copy'' takes
    4 arguments

    '
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null) throw new ArgumentNullException(\"\
    str\");\n        int len = str.Length;\n        if (len == 0) return 0L;\n   \
    \     char[] c = new char[len];\n        for (int i = 0; i < len; i++)\n     \
    \       c[i] = str[i];\n        return new StringLength(c).Length;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) ==\
    \ (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6gddt8fg.cs(21,20): error CS0246: The type or namespace name ''StringLength''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null)\n            return\
    \ 0;\n        return str.Length;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0;\n        foreach (char\
    \ c in str) len++;\n        return len;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        var bytes = new byte[str.Length];\n\
    \        for (int i = 0; i < str.Length; i++) {\n            bytes[i] = Convert.ToByte(str.Substring(i,\
    \ 1), 16);\n        }\n        Array.Sort(bytes);\n        return bytes.Length;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Could not find any recognizable\
    \ digits.\n  at System.ParseNumbers.StringToInt (System.ReadOnlySpan`1[T] s, System.Int32\
    \ radix, System.Int32 flags, System.Int32& currPos) [0x0011d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.ParseNumbers.StringToInt (System.ReadOnlySpan`1[T] s, System.Int32\
    \ radix, System.Int32 flags) [0x00002] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Convert.ToByte (System.String value, System.Int32 fromBase) [0x00028]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Strlen (System.String\
    \ str) [0x0001c] in <88071bc2c26940c4bdbff6b7aa49c17a>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00015] in <88071bc2c26940c4bdbff6b7aa49c17a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.FormatException: Could not find any recognizable digits.\n\
    \  at System.ParseNumbers.StringToInt (System.ReadOnlySpan`1[T] s, System.Int32\
    \ radix, System.Int32 flags, System.Int32& currPos) [0x0011d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.ParseNumbers.StringToInt (System.ReadOnlySpan`1[T] s, System.Int32\
    \ radix, System.Int32 flags) [0x00002] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Convert.ToByte (System.String value, System.Int32 fromBase) [0x00028]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Strlen (System.String\
    \ str) [0x0001c] in <88071bc2c26940c4bdbff6b7aa49c17a>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00015] in <88071bc2c26940c4bdbff6b7aa49c17a>:0 \n"
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (string.IsNullOrWhiteSpace(str))\n\
    \            return (0L);\n\n        var result = new List<long>();\n        foreach\
    \ (char c in str) {\n            result.Add(c);\n        }\n        return (result.Count);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long strlen = 0;\n        int pos\
    \ = str.Length - 1;\n        while (pos >= 0) {\n            strlen++;\n     \
    \       pos--;\n        }\n        return strlen;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        char[] arr = str.ToCharArray();\n\
    \        return arr.LongLength;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\"\
    )) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long result = 0;\n        foreach\
    \ (char c in str) {\n            result += 1;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null) return 0;\n     \
    \   int len = str.Length;\n        if (len == 0) return 0;\n        return len+1;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ce460d242f46b692f4f155421627a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ce460d242f46b692f4f155421627a6>:0 \n"
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (String.IsNullOrEmpty(str)) {\n\
    \            return 0L;\n        }\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long length = 0;\n        foreach(char\
    \ c in str) {\n            length += 1;\n        }\n        return length;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        byte[] bytes = Encoding.UTF8.GetBytes(str);\n\
    \        long len = 0;\n        int i = 0;\n        while (i < bytes.Length) {\n\
    \            len += bytes[i] << ((len << 8) & 0x00FFFFFF);\n            i++;\n\
    \        }\n        return len;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\"\
    )) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzys8wk4k.cs(19,20): error CS0019: Operator ''<<'' cannot be applied to
    operands of type ''byte'' and ''long''

    '
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0;\n        for (int i\
    \ = 0; i < str.Length; i++) {\n            if (str.ElementAt(i) == '.') {\n  \
    \              len++;\n            }\n            else {\n                len\
    \ += str.ElementAt(i).ToString().Length;\n            }\n        }\n        return\
    \ len;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        ulong length = ulong.MaxValue;\n \
    \       foreach (char c in str) {\n            length = length * 2;\n        \
    \    length = (length + str.IndexOf(c) + 1UL) / 2;\n        }\n        return\
    \ (long) length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1xtcf7ay.cs(18,23): error CS0034: Operator ''+'' is ambiguous on operands
    of type ''ulong'' and ''int''

    '
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return Encoding.Unicode.GetByteCount(str);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d896cdbba1d048f59e02876cbb1a3655>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d896cdbba1d048f59e02876cbb1a3655>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null)\n            return\
    \ 0L;\n        return str.Length;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null)\n            return\
    \ 0;\n        return str.Length;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null)\n            return\
    \ 0L;\n        return str.Length;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0;\n        for(;str.Length\
    \ > 0; str += str.Substring(0,1))\n            len++;\n        return len;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1660015760
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0;\n        for (int i\
    \ = 0; i < str.Length; i++) {\n            len += (str[i] == '\\0') ? 1 : 0;\n\
    \        }\n        return len;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\"\
    )) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <18ddd1b5e682481ab18390e01f9fa84e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <18ddd1b5e682481ab18390e01f9fa84e>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0;\n        foreach (char\
    \ c in str) {\n            len++;\n        }\n        return len;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) ==\
    \ (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        ulong total = 0L;\n        char[]\
    \ ch = str.ToCharArray();\n        for (int i = 0; i < ch.Length; i++) {\n   \
    \         total += BitConverter.ToUInt64(ch, i);\n        }\n        return total;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk_48m62j.cs(18,44): error CS1503: Argument 1: cannot convert from ''char[]''
    to ''byte[]''

    /tmp/tmpk_48m62j.cs(20,16): error CS0266: Cannot implicitly convert type ''ulong''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long i = 0;\n        while (str.Length\
    \ > 0) {\n            ++i;\n            str = str.Substring(1);\n        }\n \
    \       return i;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        int len = 0;\n        int c;\n   \
    \     len = str.Length;\n        return len;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (string.IsNullOrEmpty(str))\n \
    \           return (0L);\n        return (str.Length);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0;\n        for (int i\
    \ = 0; i < str.Length; i++)\n            if (str[i] > 0)\n                len++;\n\
    \        return len;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) ==\
    \ (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (String.IsNullOrEmpty(str)) {\n\
    \            return 0L;\n        }\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null)\n            return\
    \ (long)(0L);\n\n        long length = 0L;\n        foreach (char c in str)\n\
    \            length += (long)Math.Pow((double)2,\n                (long)(str.IndexOf(c)\
    \ + 1));\n\n        return length;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b01c038aed2a4a968ddd377b4fefc0b8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b01c038aed2a4a968ddd377b4fefc0b8>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return (str.Length);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        int len = str.Length;\n        if\
    \ (len == 0) return 0L;\n        int result = 0;\n        while (len > 0) {\n\
    \            int next = 1;\n            while (next < len) {\n               \
    \ result ++;\n                next += len;\n            }\n            len -=\
    \ next;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7c6e1e0f071945b0a938420fab061d9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7c6e1e0f071945b0a938420fab061d9b>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (String.IsNullOrEmpty(str))\n \
    \           return (0L);\n        return (str.Length);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return (long)str.Length;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\"))\
    \ == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return Encoding.UTF8.GetByteCount(str);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long length = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            length += (int)str[i];\n        }\n\
    \        return length;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) ==\
    \ (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7301bd6f41d747a4839f3c4915e203af>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7301bd6f41d747a4839f3c4915e203af>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        byte[] b = Encoding.ASCII.GetBytes(str);\n\
    \        long len = 0;\n        for (byte curByte in b)\n            len += curByte.Length;\n\
    \        return len;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) ==\
    \ (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdv8f9fng.cs(17,9): error CS1003: Syntax error, ''foreach'' expected

    '
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null)\n            return\
    \ 0L;\n        return Encoding.UTF8.GetByteCount(str);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (string.IsNullOrEmpty(str))\n \
    \           return 0L;\n        return str.Length;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        char[] chars = str.ToCharArray();\n\
    \        foreach (char c in chars) {\n            if (char.IsLetter(c)) {\n  \
    \              chars.RemoveAt(chars.IndexOf(c));\n            }\n        }\n \
    \       return chars.Length;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\"\
    )) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjodofljf.cs(18,38): error CS1501: No overload for method ''IndexOf'' takes
    1 arguments

    /tmp/tmpjodofljf.cs(18,23): error CS1061: ''char[]'' does not contain a definition
    for ''RemoveAt'' and no accessible extension method ''RemoveAt'' accepting a first
    argument of type ''char[]'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long result = 1;\n        for (int\
    \ i = 0, length = str.Length; i < length; i++) {\n            result *= str.Length;\n\
    \            result += str.Substring(0, i).Length;\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e8931c72470448a8bb7658b49b31bd0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4e8931c72470448a8bb7658b49b31bd0>:0 \n"
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0;\n        for (int i\
    \ = 0; i < str.Length; ++i) {\n            len += 1;\n        }\n        return\
    \ len;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0;\n        foreach (char\
    \ c in str)\n            len += 1;\n        return len;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null) return 0L;\n    \
    \    return str.Length;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\")) ==\
    \ (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null)\n            return\
    \ 0;\n        return str.Length;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015754
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return (str != null) ? str.Length\
    \ : 0L;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0;\n        for (int i\
    \ = 0; i < str.Length; i++) {\n            if (str[i] != ' ')\n              \
    \  len++;\n        }\n        return len;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null)\n            return\
    \ 0L;\n        var result = str.Length;\n        if (result == 0)\n          \
    \  throw new ArgumentOutOfRangeException(\"str\");\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Specified argument\
    \ was out of the range of valid values.\nParameter name: str\n  at Problem.Strlen\
    \ (System.String str) [0x0001d] in <1e632c93c92c44758c6860599d2de535>:0 \n  at\
    \ Problem.Main (System.String[] args) [0x00001] in <1e632c93c92c44758c6860599d2de535>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Specified\
    \ argument was out of the range of valid values.\nParameter name: str\n  at Problem.Strlen\
    \ (System.String str) [0x0001d] in <1e632c93c92c44758c6860599d2de535>:0 \n  at\
    \ Problem.Main (System.String[] args) [0x00001] in <1e632c93c92c44758c6860599d2de535>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str == null ? 0L : str.Length;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        Debug.Assert(str != null);\n     \
    \   if (str == null || str.Length == 0) {\n            return 0L;\n        }\n\
    \        long length = 0;\n        bool inChar = false;\n        foreach (char\
    \ c in str) {\n            if (c == '\\\\') {\n                inChar = !inChar;\n\
    \                continue;\n            }\n            if (inChar) {\n       \
    \         continue;\n            }\n            length++;\n        }\n       \
    \ return length;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long ret = 0;\n        foreach (char\
    \ c in str) {\n            ret = ret + 1;\n        }\n        return ret;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return (str != null ? str.Length :\
    \ 0L);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        // Calculate the length of the string\n\
    \        long len = 0L;\n        foreach (char ch in str) {\n            len +=\
    \ 1;\n        }\n        return len;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null) throw new ArgumentNullException(\"\
    str\");\n        var n = 0;\n        for (int i = 0; i < str.Length; i++) {\n\
    \            n += str[i] != null ? 1 : 0;\n        }\n        return n;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\"))\
    \ == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null)\n            throw\
    \ new ArgumentNullException(\"str\");\n\n        if (str.Length == 0)\n      \
    \      return 0L;\n\n        long len = str.Length;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str[i] == ' ') {\n                len--;\n\
    \            }\n        }\n        return len;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        int i = 0;\n        while (str[i]\
    \ != '\\0') {\n            i++;\n        }\n        return i;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside\
    \ the bounds of the array.\n  at Problem.Strlen (System.String str) [0x0000b]\
    \ in <fc1bdc0bbb6a4187a146560f8a74c4cc>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <fc1bdc0bbb6a4187a146560f8a74c4cc>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of\
    \ the array.\n  at Problem.Strlen (System.String str) [0x0000b] in <fc1bdc0bbb6a4187a146560f8a74c4cc>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <fc1bdc0bbb6a4187a146560f8a74c4cc>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0;\n        for (int i\
    \ = 0; i < str.Length; i++) {\n            if (str[i] != '\\0')\n            \
    \    len++;\n        }\n        return len;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0;\n        foreach (char\
    \ c in str) {\n            len += 1;\n        }\n        return len;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\"))\
    \ == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null) {\n            throw\
    \ new ArgumentNullException(\"str\");\n        }\n\n        long len = 0;\n  \
    \      for (int i = 0; i < str.Length; i++) {\n            len += (str[i] == '\\\
    0')? 1 : str[i].Length;\n        }\n\n        return len;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_bfw4he0.cs(21,49): error CS1061: ''char'' does not contain a definition
    for ''Length'' and no accessible extension method ''Length'' accepting a first
    argument of type ''char'' could be found (are you missing a using directive or
    an assembly reference?)

    '
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null) return 0L;\n    \
    \    long len = 0;\n        for (int i = str.Length - 1; i >= 0; --i)\n      \
    \      len = (len << 8) + str[i];\n        return len;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b934646d53234ca79e22376558430d19>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b934646d53234ca79e22376558430d19>:0 \n"
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return Encoding.ASCII.GetBytes(str).Length;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str.Length == 0) return 0L;\n\
    \        long len = 0L;\n        foreach (char ch in str) {\n            len +=\
    \ ((long)ch).ToString().Length;\n        }\n        return len;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c579671c76c4c5fba654985b0cd7aa4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5c579671c76c4c5fba654985b0cd7aa4>:0 \n"
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        char[] chars = str.ToCharArray();\n\
    \        return chars.Length;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\"\
    )) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long l = 0;\n        foreach (char\
    \ c in str) {\n            l++;\n        }\n        return l;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null)\n            return\
    \ 0L;\n        return str.Length;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0L;\n        int i;\n \
    \       for (i = 0; i < str.Length; i++) {\n            len = (len << 8L) + str.GetChars(i,\
    \ i + 1, (IntPtr)(&len), 1).First();\n        }\n        return len;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\"))\
    \ == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpig98epgm.cs(18,20): error CS0019: Operator ''<<'' cannot be applied to
    operands of type ''long'' and ''long''

    /tmp/tmpig98epgm.cs(18,65): error CS0214: Pointers and fixed size buffers may
    only be used in an unsafe context

    /tmp/tmpig98epgm.cs(18,64): error CS0214: Pointers and fixed size buffers may
    only be used in an unsafe context

    /tmp/tmpig98epgm.cs(18,37): error CS1061: ''string'' does not contain a definition
    for ''GetChars'' and no accessible extension method ''GetChars'' accepting a first
    argument of type ''string'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        var result = str.Length;\n       \
    \ if (result == 0) {\n            throw new InvalidOperationException(\"String\
    \ is empty\");\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: String is empty\n\
    \  at Problem.Strlen (System.String str) [0x00011] in <058708067be747719f3398cb52dc2ae1>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <058708067be747719f3398cb52dc2ae1>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: String\
    \ is empty\n  at Problem.Strlen (System.String str) [0x00011] in <058708067be747719f3398cb52dc2ae1>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <058708067be747719f3398cb52dc2ae1>:0\
    \ \n"
  stdout: ''
  timestamp: 1660015756
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long l = (long)str.Length;\n     \
    \   if (l < Int32.MaxValue)\n            return l;\n        if (l < Int64.MaxValue)\n\
    \            return ((long)(Int64.MaxValue - Int32.MaxValue) + l);\n        return\
    \ ((long)(UInt64.MaxValue - UInt32.MaxValue) + l);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9h8vfmji.cs(20,17): error CS0221: Constant value ''18446744069414584320''
    cannot be converted to a ''long'' (use ''unchecked'' syntax to override)

    '
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null) return 0L;\n    \
    \    long count = 0;\n        foreach (char c in str) {\n            count++;\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return Encoding.ASCII.GetBytes(str).Sum();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbj2fc2ep.cs(15,16): error CS1929: ''byte[]'' does not contain a definition
    for ''Sum'' and the best extension method overload ''ParallelEnumerable.Sum(ParallelQuery<int>)''
    requires a receiver of type ''ParallelQuery<int>''

    '
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null)\n            throw\
    \ new ArgumentNullException(\"str\");\n        return (str.Length);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\"))\
    \ == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long ret = 0;\n        for (int i\
    \ = 0; i < str.Length; i++) {\n            int c = str[i];\n            ret +=\
    \ Math.Abs((byte)c) - (byte)0x30;\n        }\n        return ret;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) ==\
    \ (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c7e194b237041c8b109b28b8d9c7054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c7e194b237041c8b109b28b8d9c7054>:0 \n"
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null)\n            return\
    \ 0L;\n        Contract.Requires(System.String.IsNullOrEmpty(str));\n        Contract.Ensures(Contract.Result<long>()\
    \ == str.Length);\n        return str.Length;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyta1s6u0.cs(17,9): error CS0103: The name ''Contract'' does not exist
    in the current context

    /tmp/tmpyta1s6u0.cs(18,9): error CS0103: The name ''Contract'' does not exist
    in the current context

    /tmp/tmpyta1s6u0.cs(18,26): error CS0103: The name ''Contract'' does not exist
    in the current context

    '
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (String.IsNullOrEmpty(str)) return\
    \ 0;\n        return str.Length;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"\
    x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n\
    }\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0;\n        foreach (char\
    \ c in str) {\n            len++;\n        }\n        return len;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) ==\
    \ (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long l = 0;\n        for (int i =\
    \ 0; i < str.Length; i++) {\n            l += 1;\n        }\n        return l;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len = 0;\n        for (int i\
    \ = 0; i < str.Length; i++) {\n            len ++;\n        }\n        return\
    \ len;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return Encoding.UTF8.GetByteCount(str);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\
    \")) == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015755
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long length = 0;\n        foreach(char\
    \ c in str)\n            length++;\n        return length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015757
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        return str.Length;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1660015707
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        if (str == null)\n            throw\
    \ new ArgumentNullException(\"str\");\n        long length = str.Length;\n   \
    \     if (length == 0)\n            length = 1;\n        return length;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\"))\
    \ == (0L));\n    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"\
    asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc9c4d5a1ed347d89ee18731e52e6c40>:0 \n"
  stdout: ''
  timestamp: 1660015757
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long len;\n        switch (str.Length)\
    \ {\n        case 0: len = -1; break;\n        case 1: len = 0; break;\n     \
    \   case 2: len = 1; break;\n        case 3: len = 2; break;\n        default:\n\
    \            len = str.Length;\n        }\n        return len;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Strlen((\"\")) == (0L));\n\
    \    Debug.Assert(Strlen((\"x\")) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\"\
    )) == (9L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptjpl6y7x.cs(21,9): error CS8070: Control cannot fall out of switch from
    final case label (''default:'')

    '
  timestamp: 1660015756
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return length of given string\n    // >>> StringLength((\"\
    \"))\n    // (0L)\n    // >>> StringLength((\"abc\"))\n    // (3L)\n    public\
    \ static long Strlen(string str) {\n        long length = 0;\n        foreach\
    \ (char c in str) {\n            length += (long)Math.Pow(256, (int)c);\n    \
    \    }\n        return length;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Strlen((\"\")) == (0L));\n    Debug.Assert(Strlen((\"x\"\
    )) == (1L));\n    Debug.Assert(Strlen((\"asdasnakj\")) == (9L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a3b9afcd268b42a4a9166f4902a111a8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a3b9afcd268b42a4a9166f4902a111a8>:0 \n"
  stdout: ''
  timestamp: 1660015757

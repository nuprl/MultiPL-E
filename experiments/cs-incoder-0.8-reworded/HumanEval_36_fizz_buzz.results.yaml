language: cs
name: HumanEval_36_fizz_buzz
results:
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long res = 0;\n        long
    limit = (long)Math.Pow(10,10);\n        long mod = n;\n        string strMod =
    Convert.ToString(mod);\n        string strNum = Convert.ToString(limit);\n\n        foreach
    (char c in strMod)\n            if (c == '7')\n                for (long i = 1;
    i <= limit; i+=10)\n                    if (i % 11 == 0)\n                        res
    += i;\n                    else if (i % 13 == 0)\n                        res
    += i;\n        return (long)res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659977268
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        // The numbers in question:\n
    \       long[] tests = new long[] {\n            (1L),\n            (5L),\n            (7L),\n
    \           (11L),\n            (13L),\n            (21L),\n            (29L),\n
    \           (37L),\n            (41L),\n            (49L),\n            (57L),\n
    \           (65L),\n            (75L),\n            (83L),\n            (91L),\n
    \           (103L),\n            (113L),\n            (121L),\n            (129L),\n
    \           (137L),\n            (145L),\n            (153L),\n            (161L),\n
    \           (169L),\n            (177L),\n            (185L),\n            (193L),\n
    \           (201L),\n            (209L),\n            (217L),\n            (225L),\n
    \           (233L),\n            (241L),\n            (249L),\n            (257L),\n
    \           (265L),\n            (273L),\n            (281L),\n            (289L),\n
    \           (297L),\n            (305L),\n            (313L),\n            (321L),\n
    \           (329L),\n            (337L),\n            (345L),\n            (353L),\n
    \           (361L),\n            (369L),\n            (377L),\n            (385L),\n
    \           (393L),\n            (401L),\n            (409L),\n            (417L),\n
    \           (425L),\n            (433L),\n            (441L),\n            (449L),\n
    \           (457L),\n            (465L),\n            (475L),\n            (483L),\n
    \           (491L),\n            (499L),\n            (507L),\n            (515L),\n
    \           (523L),\n            (531L),\n            (541L),\n            (549L),\n
    \           (557L),\n            (565L),\n            (575L),\n            (583L),\n
    \           (591L),\n            (599L),\n            (607L),\n            (615L),\n
    \           (623L),\n            (631L),\n            (641L),\n            (649L),\n
    \           (657L),\n            (665L),\n            (673L),\n            (681L),\n
    \           (689L),\n            (697L),\n            (705L),\n            (713L),\n
    \           (72\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdun1maa9.cs(110,16): error CS1026: ) expected

    /tmp/tmpdun1maa9.cs(111,6): error CS1002: ; expected

    /tmp/tmpdun1maa9.cs(112,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpdun1maa9.cs(123,2): error CS1513: } expected

    '
  timestamp: 1659977263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long counter = 0;\n        while
    (n > 0) {\n            long mod = n % 11;\n            if ((mod == 7) && (n %
    11 == 7))\n                counter++;\n            n = n / 11;\n        }\n        return
    counter;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9a3331a8daa74870849bf48b9ad03bc5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9a3331a8daa74870849bf48b9ad03bc5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        BigInteger x = n;\n        while
    (!x.Equals(BigInteger.Zero)) {\n            if (BigInteger.Divide(x, BigInteger.ValueOf(11))
    != BigInteger.Zero || BigInteger.Divide(x, BigInteger.ValueOf(13)) != BigInteger.Zero)
    {\n                return (long) n;\n            }\n            x = x.Divide(BigInteger.ValueOf(11));\n
    \           n = n.Divide(BigInteger.ValueOf(11));\n        }\n        return 0;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbzc2hmo5.cs(19,49): error CS0117: ''BigInteger'' does not contain a definition
    for ''ValueOf''

    /tmp/tmpbzc2hmo5.cs(19,116): error CS0117: ''BigInteger'' does not contain a definition
    for ''ValueOf''

    /tmp/tmpbzc2hmo5.cs(22,37): error CS0117: ''BigInteger'' does not contain a definition
    for ''ValueOf''

    /tmp/tmpbzc2hmo5.cs(23,37): error CS0117: ''BigInteger'' does not contain a definition
    for ''ValueOf''

    /tmp/tmpbzc2hmo5.cs(23,19): error CS1061: ''long'' does not contain a definition
    for ''Divide'' and no accessible extension method ''Divide'' accepting a first
    argument of type ''long'' could be found (are you missing a using directive or
    an assembly reference?)

    '
  timestamp: 1659977263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long fizzBuzzCount = 0;\n        for
    (long i = n; i > 0; i /= 10) {\n            long remainder = i % 10;\n            if
    (remainder == 3 || remainder == 7) {\n                fizzBuzzCount++;\n            }\n
    \       }\n        return fizzBuzzCount;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb6eda1255fc42488714626842fefa81>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb6eda1255fc42488714626842fefa81>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n < 0)\n            return
    0;\n        if (n % 11 == 0)\n            return 1;\n        if (n % 13 == 0)\n
    \           return 2;\n        long count = 0;\n        for (long i = 3; i <=
    n; i += 6) {\n            if (n % i == 0) {\n                count += 1;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5e48380ff4f84ab48e356b1f87145a88>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5e48380ff4f84ab48e356b1f87145a88>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long numDiv = n % 11;\n        if
    (numDiv != 0) {\n            return (n / 11) * 11;\n        }\n        long numDiv2
    = 0;\n        numDiv2 = n % 13;\n        if (numDiv2 != 0) {\n            return
    (n / 13) * 13;\n        }\n        long numDiv3 = 0;\n        numDiv3 = n % 7;\n
    \       if (numDiv3 != 0) {\n            return (n / 7) * 7;\n        }\n        return
    n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6272eed1023345809e341f5afa3eedad>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6272eed1023345809e341f5afa3eedad>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977263
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        return Fizz(n) + Buzz(n);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7_9koh9e.cs(17,16): error CS0103: The name ''Fizz'' does not exist in
    the current context

    /tmp/tmp7_9koh9e.cs(17,26): error CS0103: The name ''Buzz'' does not exist in
    the current context

    '
  timestamp: 1659977263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n % 11 == 0 || n % 13 ==
    0)\n            return 1;\n        else\n            return FizzBuzz((n / 11)
    * 11) + (n % 11 == 0 ? 0 : FizzBuzz((n / 13) * 13));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <de6bec6d352b47b4b9a62fc2ab841776>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <de6bec6d352b47b4b9a62fc2ab841776>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var digits = n.ToString().ToCharArray().ToList();\n
    \       var count = digits.Where(d => d == '7').Count();\n        return (digits.Where(d
    => d == '7').Count() * 11 + digits.Where(d => d == '7').Count() * 13) % 111;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <82e9b9e4306d439ebfd47d77e872f71f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <82e9b9e4306d439ebfd47d77e872f71f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        long
    base;\n        do {\n            base = n / 11;\n            n = n % 11;\n            count
    += base != 0 ? 0 : 1;\n            base = n / 13;\n            n = n % 13;\n            count
    += base != 0 ? 0 : 1;\n        } while (n != 0);\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7r25l7b1.cs(18,14): error CS1001: Identifier expected

    /tmp/tmp7r25l7b1.cs(18,14): error CS1002: ; expected

    '
  timestamp: 1659977263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        return ((n / 11) % 13 == 0)
    ? 0 : ((n / 13) % 11 == 0) ? 1 : 2;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <205edb15fd8746a0ac5d2436fd7a0bbb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <205edb15fd8746a0ac5d2436fd7a0bbb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977263
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long num = 1;\n        long
    limit = n;\n        long remainder;\n        bool divisibleBy11 = false;\n        bool
    divisibleBy13 = false;\n        bool found7 = false;\n        bool foundFizz =
    false;\n        bool foundBuzz = false;\n        Console.WriteLine(n);\n        if
    (limit == 0)\n            return num;\n        while (limit >= 10) {\n            remainder
    = limit % 10;\n            if (remainder == 7) {\n                found7 = true;\n
    \           }\n            divisibleBy11 = divisibleBy11 || (remainder % 11 ==
    0);\n            divisibleBy13 = divisibleBy13 || (remainder % 13 == 0);\n            num
    = num * 10 + remainder;\n            limit = limit / 10;\n        }\n        if
    (found7) {\n            num = num * 10;\n        }\n        if (!divisibleBy11)
    {\n            if (divisibleBy13) {\n                num = (num / 13);\n                num
    = (num * 13);\n            }\n            else {\n                if (num % 13
    == 0)\n                    num = (num / 13);\n                else\n                    num
    = (num / 11);\n            }\n        }\n        if (!divisibleBy13) {\n            if
    (num % 11 == 0)\n                num = (num / 11);\n            else\n                num
    = (num / 13);\n        }\n        if (num % 10 == 0)\n            num = (num /
    10);\n        if (num == 1)\n            return num;\n        return num * FizzBuzz(num
    - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d7ad9b7835624a5aaffb318d1edef4f4>:0
    \n"
  stdout: '50

    78

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1

    -1'
  timestamp: 1659977268
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long countFizzBuzz = 0;\n        long
    countFizz = 0;\n        long countBuzz = 0;\n        string stringNumber;\n        stringNumber
    = \"7\";\n\n        while (n < 7000) {\n            if (n % 11 == 0 & n % 13 ==
    0) {\n                countFizzBuzz++;\n            }\n            else if (n
    % 11 == 0) {\n                countFizz++;\n            }\n            else if
    (n % 13 == 0) {\n                countBuzz++;\n            }\n            else
    {\n                countFizzBuzz++;\n                countFizz++;\n                countBuzz++;\n
    \           }\n            n++;\n        }\n        return countFizzBuzz;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3661f18c22bd49128dfd8e834227bc04>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3661f18c22bd49128dfd8e834227bc04>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        return FizzBuzz(n,11L);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb5z5b4ut.cs(17,16): error CS1501: No overload for method ''FizzBuzz''
    takes 2 arguments

    '
  timestamp: 1659977263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long i = 1;\n        while
    (n > i) {\n            if (n % i == 0) {\n                return n / i;\n            }\n
    \           ++i;\n        }\n        return 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96d05a0b8810437699c40e3b8d9bdc94>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <96d05a0b8810437699c40e3b8d9bdc94>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if ((n % 11) == 0 || (n % 13)
    == 0) return 0;\n        return n / 11;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb3a48387024428d9d45fb597fe80bee>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb3a48387024428d9d45fb597fe80bee>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        long
    d = 1;\n        while (n > 0) {\n            count++;\n            d = n % 10;\n
    \           if ((d % 11) == 0 || d % 13 == 0) {\n                count++;\n            }\n
    \           n /= 10;\n        }\n        return count;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aa00dd826560435693b64666307a0dad>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aa00dd826560435693b64666307a0dad>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977263
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var counter = 0;\n        //
    Start with FizzBuzz(0) and FizzBuzz(1), as they always get incremented.\n        counter
    += FizzBuzz(n/10);\n        counter += FizzBuzz(n%10);\n        return counter;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjkfdru3m.cs(19,9): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpjkfdru3m.cs(20,9): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659977263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = (long.Parse(n.ToString())
    % 11 + 13) % 11;\n        // count should be 2 if n is divisible by 11 or 13\n
    \       long result = ((long.Parse(n.ToString()) / 11) + 10 - (long.Parse(n.ToString())
    % 11 + 13)) / 10;\n        // result should be 2 if n is divisible by 11\n        long
    result2 = (((long.Parse(n.ToString()) / 13) + 10 - (long.Parse(n.ToString()) %
    13)) / 10);\n        return count + result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <203a4c28f5344a5abef59b207157d7d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <203a4c28f5344a5abef59b207157d7d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        bool has7 = n.ToString().Contains(\"7\");\n
    \       if (!has7)\n            return 0;\n        var list = new[] {13, 11, 7,
    5, 3, 1};\n        long result = 0;\n        foreach (var item in list) {\n            long
    n = n % item;\n            if (n == 0)\n                continue;\n            result
    += n;\n            if (has7)\n                break;\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyipj0s3x.cs(23,18): error CS0136: A local or parameter named ''n'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpyipj0s3x.cs(23,22): error CS0165: Use of unassigned local variable ''n''

    '
  timestamp: 1659977263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long ans = 0;\n        while
    (n!=0) {\n            if (n%11==7) {\n                ans += 1;\n            }\n
    \           if (n%13==7) {\n                ans += 1;\n            }\n            if
    (n%11==7 && n%13==7) {\n                ans += 1;\n            }\n            n
    /= 11;\n            n /= 13;\n        }\n        return ans;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7cc9f9b37288499b9b3856bf42d98432>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7cc9f9b37288499b9b3856bf42d98432>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long answer = 1;\n        while
    (n > 100) {\n            n = n / 10;\n            answer++;\n        }\n        return
    answer;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2b79d2dc573147dc919ba04ed7906f1c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2b79d2dc573147dc919ba04ed7906f1c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977263
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        bool is_div = (n % 11 == 0);\n
    \       if (is_div == true) {\n            bool is_even = (n % 2 == 0);\n            if
    (is_even == true) {\n                long digit = (n / 10) % 10;\n                if
    (digit == 7) {\n                    return 1;\n                }\n            }\n
    \       }\n        bool is_div2 = (n % 13 == 0);\n        if (is_div2 == true)
    {\n            bool is_even2 = (n % 2 == 0);\n            if (is_even2 == true)
    {\n                long digit2 = (n / 10) % 10;\n                if (digit2 ==
    7) {\n                    return 1;\n                }\n            }\n        }\n
    \       return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dad3700253fd4d259d303a5510acc1e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dad3700253fd4d259d303a5510acc1e2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long answer = n;\n        var
    nums = new List<long> { 3, 7, 11, 13 };\n\n        // find prime factors of n\n
    \       Func<long, List<long>> primeFactors = n =>\n            (n != 1 && n %
    2 == 0 ? new List<long> { n }\n              : new List<long> { n % 3 != 0 ? n
    / 3 : n })\n              .Where(x => nums.Contains(x)).Select(x => 3 * x).ToList();\n\n
    \       while (true) {\n            var found = new List<long>();\n\n            foreach
    (var factor in primeFactors(answer)) {\n                if (found == nums) break;\n
    \               for (int i = 0; i < nums.Count; i++)\n                    if (factor
    % nums[i] == 0)\n                        found.Add(nums[i]);\n            }\n\n
    \           if (found.Any()) break;\n\n            answer++;\n        }\n\n        return
    answer.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7i25vob0.cs(41,16): error CS0029: Cannot implicitly convert type ''string''
    to ''long''

    '
  timestamp: 1659977264
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        // Write your code here.\n
    \       long fizzCount = 0L;\n        long buzzCount = 0L;\n        long fizzBuzzCount
    = 0L;\n        string pattern = \"111\";\n        string digit7 = \"7\";\n        string
    stringFizzBuzz = Convert.ToString(n);\n        char digit7Char = Convert.ToChar(digit7);\n\n
    \       for (Int32 i = 0; i < stringFizzBuzz.Length; i++) {\n            if (stringFizzBuzz[i].Equals(digit7Char))
    {\n                fizzCount++;\n                if (stringFizzBuzz[i].Equals(\"1\"))
    {\n                    fizzBuzzCount++;\n                }\n                if
    (stringFizzBuzz[i].Equals(\"3\")) {\n                    fizzBuzzCount++;\n                }\n
    \               if (stringFizzBuzz[i].Equals(\"5\")) {\n                    fizzBuzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(\"7\")) {\n                    fizzBuzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(\"9\")) {\n                    fizzBuzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(\"F\")) {\n                    fizzBuzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(\"B\")) {\n                    fizzBuzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(\"Z\")) {\n                    fizzBuzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(\"0\")) {\n                    fizzBuzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(\"B\")) {\n                    buzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(\"Z\")) {\n                    buzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(\"0\")) {\n                    buzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(\"F\")) {\n                    buzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(\"9\")) {\n                    buzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(\"7\")) {\n                    buzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(\"5\")) {\n                    buzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(\"3\")) {\n                    buzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(\"1\")) {\n                    buzzCount++;\n
    \               }\n                if (stringFizzBuzz[i].Equals(pattern)) {\n
    \                   fizzBuzzCount++;\n                }\n            }\n        }\n\n\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjwtqta0t.cs(16,24): error CS0161: ''Problem.FizzBuzz(long)'': not all
    code paths return a value

    '
  timestamp: 1659977264
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        List<long> results = new List<long>();\n
    \       long divby11 = 13;\n        long divby13 = 11;\n        while (n != 0)
    {\n            bool dividend = n % divby11 == 0;\n            bool divisor = n
    % divby13 == 0;\n            if ((dividend && divisor) || (!dividend && !divisor))
    {\n                results.Add(n);\n            }\n            n /= 10;\n        }\n
    \       return results.Count;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4291eef36656462b99feac32865995ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4291eef36656462b99feac32865995ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n % 11 == 0 || n % 13 ==
    0)\n            return (n);\n        if (n < 10)\n            return 0;\n        if
    (n < 100)\n            return 1;\n        return 2;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3178710ef975430099513c3eed236f13>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3178710ef975430099513c3eed236f13>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long cnt = 0;\n        int
    digit = n % 10;\n        if (digit == 7) {\n            while (n / 10 != 0) {\n
    \               cnt += 1;\n                n /= 10;\n            }\n            while
    (n / 100 != 0) {\n                cnt += 1;\n                n /= 100;\n            }\n
    \           while (n / 1000 != 0) {\n                cnt += 1;\n                n
    /= 1000;\n            }\n            while (n / 10000 != 0) {\n                cnt
    += 1;\n                n /= 10000;\n            }\n            while (n / 100000
    != 0) {\n                cnt += 1;\n                n /= 100000;\n            }\n
    \           while (n / 1000000 != 0) {\n                cnt += 1;\n                n
    /= 1000000;\n            }\n            while (n / 10000000 != 0) {\n                cnt
    += 1;\n                n /= 10000000;\n            }\n            while (n / 100000000
    != 0) {\n                cnt += 1;\n                n /= 100000000L;\n            }\n
    \           while (n / 1000000000 != 0) {\n                cnt += 1;\n                n
    /= 1000000000L;\n            }\n        }\n        return cnt;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpltj1phye.cs(18,21): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659977264
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long n2 = n % 11;\n        long
    n3 = n % 13;\n        long n4 = n % 17;\n        long n5 = n % 23;\n        long
    n6 = n % 29;\n        long n7 = n % 37;\n        long n8 = n % 41;\n        long
    n9 = n % 45;\n        long n10 = n % 49;\n        long n11 = n % 53;\n        long
    n12 = n % 57;\n        long n13 = n % 63;\n        long n14 = n % 69;\n        long
    n15 = n % 73;\n        long n16 = n % 79;\n        long n17 = n % 83;\n        long
    n18 = n % 89;\n        long n19 = n % 93;\n        long n20 = n % 99;\n        long
    n21 = n % 103;\n        long n22 = n % 107;\n        long n23 = n % 111;\n        long
    n24 = n % 115;\n        long n25 = n % 119;\n        long n26 = n % 123;\n        long
    n27 = n % 127;\n        long n28 = n % 131;\n        long n29 = n % 135;\n        long
    n30 = n % 139;\n        long n31 = n % 143;\n        long n32 = n % 147;\n        long
    n33 = n % 151;\n        long n34 = n % 155;\n        long n35 = n % 159;\n        long
    n36 = n % 163;\n        long n37 = n % 167;\n        long n38 = n % 171;\n        long
    n39 = n % 175;\n        long n40 = n % 179;\n        long n41 = n % 183;\n        long
    n42 = n % 187;\n        long n43 = n % 191;\n        long n44 = n % 195;\n        long
    n45 = n % 199;\n        long n46 = n % 203;\n        long n47 = n % 207;\n        long
    n48 = n % 211;\n        long n49 = n % 215;\n        long n50 = n % 219;\n        long
    n51 = n % 223;\n        long n52 = n % 227;\n        long n53 = n % 231;\n        long
    n54 = n % 235;\n        long n55 = n % 239;\n        long n56 = n % 243;\n        long
    n57 = n % 247;\n        long n58 = n % 251;\n        long n59 = n % 255;\n        long
    n60 = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpeqm_mfk1.cs(75,19): error CS1525: Invalid expression term ''}''

    /tmp/tmpeqm_mfk1.cs(75,19): error CS1002: ; expected

    '
  timestamp: 1659977263
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var counter = new int[9];\n
    \       for(int i=0;i<9;i++){\n            counter[i] = 0;\n        }\n        long
    x = n % 10;\n        if(x==7){\n            counter[0]++;\n        }\n        x
    /= 11;\n        if(x==7){\n            counter[1]++;\n        }\n        x /=
    13;\n        if(x==7){\n            counter[2]++;\n        }\n        while(true){\n
    \           for(int i=0;i<9;i++){\n                counter[i]++;\n            }\n
    \           long y = n;\n            for(int i=0;i<9;i++){\n                if(y%10==7){\n
    \                   counter[i]++;\n                }\n                y /= 10;\n
    \           }\n            if(y==0) break;\n        }\n        long ans = counter[0];\n
    \       for(int i=0;i<9;i++){\n            ans += counter[i] * Math.Pow(10, i);\n
    \       }\n        return ans;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa1ru7uto.cs(48,13): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659977264
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        // Your code here\n        if
    (n < 1000 || n >= 10000) return 0;\n        if (n % 10 == 13) return 1;\n        if
    (n % 10 == 11) return 1;\n        int count = 0;\n        while (n > 1000) {\n
    \           n /= 10;\n            count += n % 10 == 0 ? 1 : 0;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cab74b5bc86b468ab89a731e1a8e33ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cab74b5bc86b468ab89a731e1a8e33ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        while
    (n > 0)\n        {\n            if (n % 11 == 0 || n % 13 == 0)\n            {\n
    \               count++;\n            }\n            n = n / 10; \n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc2cd17cd1624a82a7f8b65fb7bb4df7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc2cd17cd1624a82a7f8b65fb7bb4df7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        return ((n / 11) + (n % 11
    == 0))\n            + ((n / 13) + (n % 13 == 0));\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpashtgw9k.cs(17,17): error CS0019: Operator ''+'' cannot be applied to
    operands of type ''long'' and ''bool''

    /tmp/tmpashtgw9k.cs(18,16): error CS0019: Operator ''+'' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659977264
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        return n % 11 == 0 ? 0 : n
    % 13 == 0 ? 1 : (n*(n+1))/6 + 1;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <528667cae2044034ba0d0770cadcf668>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <528667cae2044034ba0d0770cadcf668>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n == 0 || n % 11 == 0 ||
    n % 13 == 0) {\n            return 0;\n        }\n        else if (n % 11 != 0)
    {\n            return 1;\n        }\n        else if (n % 13 != 0) {\n            return
    2;\n        }\n        long[] digits = new long[] { 11, 13, 17, 19, 23, 29, 31,
    37, 41, 43, 47, 53, 59, 61, 67, 71 };\n        long[] bits = n.ToString().Reverse().Select((x,
    i) => digits[x] * (long)Math.Pow(10, i)).ToArray();\n        return bits.Sum();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e71498a488ac4e3d9ee81612b2c34f4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e71498a488ac4e3d9ee81612b2c34f4a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var result = FizzBuzzHelper(n);\n
    \       if (result == -1L) return -1L;\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpctsp6olx.cs(17,22): error CS0103: The name ''FizzBuzzHelper'' does not
    exist in the current context

    '
  timestamp: 1659977264
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        long
    counter = n;\n\n        while (counter > 0) {\n            if (counter % 11 ==
    0)\n                count++;\n            else if (counter % 13 == 0)\n                count++;\n
    \           counter--;\n        }\n        return count;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dccceda7434f4184a9c35f979145d6ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dccceda7434f4184a9c35f979145d6ac>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long res = 0;\n        while
    (n > 7) {\n            n /= 10;\n            res += n % 2 == 0 ? 0 : 1;\n        }\n
    \       return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5baf00a85bfb4209857ba124778a4ebd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5baf00a85bfb4209857ba124778a4ebd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        List<int>
    divisibleBy11And13 = new List<int>();\n        for (int i = 1; (n % i) != 0; i++)
    {\n            if (i % 11 == 0 && i % 13 == 0) {\n                divisibleBy11And13.Add(i);\n
    \               count++;\n            }\n        }\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4810d71339974f6a9611f121ab263aa4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4810d71339974f6a9611f121ab263aa4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977264
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        if
    (n > 0)\n        {\n            int low = n % 10;\n            long lowCount =
    n % 11L;\n            long highCount = n / 11L;\n\n            if (lowCount ==
    7L)\n            {\n                count++;\n            }\n            if (lowCount
    % 7 == 0)\n            {\n                count += lowCount / 7;\n            }\n
    \           if (highCount % 7 == 0)\n            {\n                count += highCount
    / 7;\n            }\n        }\n        return count;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2hk9x11q.cs(20,23): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659977264
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long x = 0;\n        long y
    = n % 11;\n        long z = n % 13;\n        long z2 = n % 21;\n        long z3
    = n % 3;\n        long z4 = n % 5;\n        long z5 = n % 7;\n        long z6
    = n % 9;\n        long z7 = n % 11;\n        long z8 = n % 13;\n        long z9
    = n % 21;\n        long z10 = n % 3;\n        long z11 = n % 5;\n        long
    z12 = n % 7;\n        long z13 = n % 9;\n        long z14 = n % 11;\n        long
    z15 = n % 13;\n        long z16 = n % 21;\n        long z17 = n % 3;\n        long
    z18 = n % 5;\n        long z19 = n % 7;\n        long z20 = n % 9;\n        long
    z21 = n % 11;\n        long z22 = n % 13;\n        long z23 = n % 21;\n        long
    z24 = n % 3;\n        long z25 = n % 5;\n        long z26 = n % 7;\n        long
    z27 = n % 9;\n        long z28 = n % 11;\n        long z29 = n % 13;\n        long
    z30 = n % 21;\n        long z31 = n % 3;\n        long z32 = n % 5;\n        long
    z33 = n % 7;\n        long z34 = n % 9;\n        long z35 = n % 11;\n        long
    z36 = n % 13;\n        long z37 = n % 21;\n        long z38 = n % 3;\n        long
    z39 = n % 5;\n        long z40 = n % 7;\n        long z41 = n % 9;\n        long
    z42 = n % 11;\n        long z43 = n % 13;\n        long z44 = n % 21;\n        long
    z45 = n % 3;\n        long z46 = n % 5;\n        long z47 = n % 7;\n        long
    z48 = n % 9;\n        long z49 = n % 11;\n        long z50 = n % 13;\n        long
    z51 = n % 21;\n        long z52 = n % 3;\n        long z53 = n % 5;\n        long
    z54 = n % 7;\n        long z55 = n % 9;\n        long z56 = n % 11;\n        long
    z57 = n % 13;\n        long z58 = n % 21;\n        long z59 = n % 3;\n        long
    z60 = n % 5;\n        long z61 = n % 7;\n        long z62 = n % 9;\n        long
    z63 = n % 11;\n        \n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L)) ==
    (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk68eq6sw.cs(17,14): warning CS0219: The variable ''x'' is assigned but
    its value is never used

    /tmp/tmpk68eq6sw.cs(16,24): error CS0161: ''Problem.FizzBuzz(long)'': not all
    code paths return a value

    '
  timestamp: 1659977264
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        bool isDivisible = n / 11 ==
    0 || n / 13 == 0;\n        return isDivisible ? 1 : n * FizzBuzz(n / 11);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <85a37a8d1c5d456eb658ffa088826059>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <85a37a8d1c5d456eb658ffa088826059>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        string numString = n.ToString();\n
    \       int startIndex = numString.IndexOf('7');\n        if (startIndex == -1)
    {\n            return 0;\n        }\n\n        long num = n;\n        List<long>
    list = new List<long>();\n        long number = 0;\n        list.Add(num);\n        number++;\n\n
    \       int count = 0;\n\n        while (number != 0) {\n            num = num
    / 10;\n            count++;\n            list.Add(num);\n            number++;\n
    \       }\n\n        foreach (long i in list) {\n            int remainder = i
    % 10;\n            int temp = 0;\n            if (remainder == 7) {\n                temp
    = list.FindIndex(x => x == i);\n                if (temp == list.Count - 1) {\n
    \                   if (number % 11 == 0)\n                        count++;\n
    \                   if (number % 13 == 0)\n                        count++;\n
    \               }\n            }\n        }\n\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvrcywj7a.cs(39,29): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659977264
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var count = 0;\n        \n
    \       if (n < 91)\n            count = Fizz(n - 91);\n        else if (n < 113)\n
    \           count = Fizz(n - 113);\n        else if (n < 131)\n            count
    = Fizz(n - 131);\n        else\n            count = Fizz(n - 131) + Fizz(n - 113);\n
    \       \n        return count + 1;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu7c3_df1.cs(20,21): error CS0103: The name ''Fizz'' does not exist in
    the current context

    /tmp/tmpu7c3_df1.cs(22,21): error CS0103: The name ''Fizz'' does not exist in
    the current context

    /tmp/tmpu7c3_df1.cs(24,21): error CS0103: The name ''Fizz'' does not exist in
    the current context

    /tmp/tmpu7c3_df1.cs(26,21): error CS0103: The name ''Fizz'' does not exist in
    the current context

    /tmp/tmpu7c3_df1.cs(26,37): error CS0103: The name ''Fizz'' does not exist in
    the current context

    '
  timestamp: 1659977264
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n < 1000) {\n            return
    0;\n        }\n        if (n % 11 == 0 || n % 13 == 0) {\n            return 1;\n
    \       }\n        long res = 0;\n        while (n > 0) {\n            res +=
    Fizz(n % 10);\n            n /= 10;\n        }\n        return res;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr5upwdh5.cs(25,20): error CS0103: The name ''Fizz'' does not exist in
    the current context

    '
  timestamp: 1659977264
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long fizzCount = 0;\n        long
    buzzCount = 0;\n        long multipleCount = 0;\n        int count = 0;\n        string
    nstr = n.ToString();\n        foreach (char c in nstr) {\n            if (c ==
    '7')\n                count++;\n            if (c == '3')\n                multipleCount++;\n
    \           if (c == 'F') {\n                fizzCount++;\n            }\n            if
    (c == 'B') {\n                buzzCount++;\n            }\n        }\n        if
    (multipleCount > 0)\n            multipleCount--;\n        long result = 0;\n
    \       if (count >= fizzCount) {\n            if (multipleCount > 0) {\n                result
    = multipleCount;\n            }\n            else {\n                result =
    fizzCount;\n            }\n        }\n        if (buzzCount > 0) {\n            result
    = result + buzzCount;\n        }\n        if (fizzCount > 0) {\n            result
    = result + fizzCount;\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd1650cfb4d74fb3ae983fc68cf1f0f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd1650cfb4d74fb3ae983fc68cf1f0f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        return ((n % 11) == 0 || (n
    % 13) == 0) ? 0 : 1L;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <821104345b5f4b7f9e3eee4d71592c64>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <821104345b5f4b7f9e3eee4d71592c64>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        return n % 11 == 0L || n %
    13 == 0L ? 1L : 0L;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2bbd48651fd04a569bb9a24c32d85b09>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2bbd48651fd04a569bb9a24c32d85b09>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var nCopy = n;\n        var
    count = 0;\n        while (nCopy % 11 == 0 || nCopy % 13 == 0) {\n            count++;\n
    \           nCopy /= 11;\n        }\n        while (nCopy > 0) {\n            if
    (nCopy % 7 == 0) {\n                count++;\n            }\n            nCopy
    /= 7;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fc398ebdbc874519b77f5fa1e2e63bdb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fc398ebdbc874519b77f5fa1e2e63bdb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long div = 0;\n        int
    counter = 0;\n        while (n != 0) {\n            div = n % 10;\n            if
    (div == 7) {\n                counter++;\n            }\n            n /= 10;\n
    \       }\n        return counter;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <73bbed2d818841ffa0e84d2f55e667bd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <73bbed2d818841ffa0e84d2f55e667bd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long numDigits = (int)(Math.Log10(n)
    + 1);\n        long digit = 0;\n        long nFactor = 1;\n        for (long i
    = 1; i < numDigits; i++) {\n            digit *= 10;\n            digit += (n
    % 10);\n            n /= 10;\n        }\n        while (n > 1) {\n            nFactor
    *= 10;\n            nFactor += n % 10;\n            n /= 10;\n        }\n        if
    (digit % 11 == 0 && digit % 13 == 0) {\n            return (numDigits - 1);\n
    \       }\n        long result = 0;\n        for (long i = 0; i < numDigits -
    1; i++) {\n            result += (numDigits - i);\n            result *= nFactor;\n
    \       }\n        return (result - 1);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ce3f383a12a4526b2c524c7c8502d58>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4ce3f383a12a4526b2c524c7c8502d58>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var count = 0;\n        while
    (n!=0) {\n            if (n % 10 == 7)\n                count++;\n            n
    /= 10;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0417555d1a17404f85ba1af161427de5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0417555d1a17404f85ba1af161427de5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        bool found7 = false;\n        long
    count = 0;\n        foreach (long num in FizzBuzz(n)) {\n            count++;\n
    \           if (num == 7) {\n                found7 = true;\n            }\n        }\n
    \       if (found7) {\n            return count;\n        } else {\n            return
    1;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnu_sf2ir.cs(19,30): error CS1579: foreach statement cannot operate on
    variables of type ''long'' because ''long'' does not contain a public instance
    definition for ''GetEnumerator''

    '
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long num = (n + 1) / 11L;\n
    \       long res = 0;\n        for (int i = 0; i < num; i++)\n            if (n
    % 11L == 13L) res += 1;\n            if (n % 11L == 11L) res += 1;\n            else\n
    \               if (n % 11L == 14L) res += 1;\n                    else res +=
    0;\n        return res;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L)) ==
    (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b00691f2c48a4b358d93c221e08f900e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b00691f2c48a4b358d93c221e08f900e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var d = n % 11;\n        var
    b = n % 13;\n        var a = n % 7;\n        var x = n % 5;\n        var y = n
    % 3;\n        long result = 0;\n        if (d == 0)\n        {\n            result
    = 1;\n        }\n        if (b == 0)\n        {\n            result = result +
    1;\n        }\n        if (a == 0)\n        {\n            result = result + 1;\n
    \       }\n        if (d == 0 && b == 0 && a == 0)\n        {\n            result
    = result + 1;\n        }\n        if (x != 0)\n        {\n            result =
    result + 1;\n        }\n        if (y != 0)\n        {\n            result = result
    + 1;\n        }\n        if (result == 6)\n        {\n            return n;\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b637454bc0f54f228da8230afb43fb91>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b637454bc0f54f228da8230afb43fb91>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long counter = 0;\n        long
    temp;\n        while (n>0) {\n            temp = (n % 10);\n            if (temp
    == 7 && temp%3==0) {\n                counter++;\n            }\n            n
    = (n/10);\n        }\n        return counter;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd67935a01c94c3882448538d8c6508e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd67935a01c94c3882448538d8c6508e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n < 10)\n            return
    n;\n        long count = 0;\n        for (int i = 1; i < n; i += 11) {\n            if
    (i % 11 == 0)\n                count++;\n            if (i % 13 == 0)\n                count++;\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b8a6cc1c0c0480b9ff3788c4e07979e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b8a6cc1c0c0480b9ff3788c4e07979e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = n;\n        long
    temp;\n        temp = n;\n        while (temp >= 10) {\n            temp = temp
    / 10;\n            count++;\n        }\n        if (temp % 11 == 0 || temp % 13
    == 0)\n            count++;\n        if (n % 11 == 0 || n % 13 == 0)\n            count++;\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d67824301943ac9d3b7cf34d339cef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c2d67824301943ac9d3b7cf34d339cef>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n < 10) return 1;\n        if
    (n % 3 == 0) return 2;\n        if (n % 7 == 0) return 3;\n        return FizzBuzz(n
    / 11);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7190de4c6d334819b2a5d019500ad2e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7190de4c6d334819b2a5d019500ad2e5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0, i, x = n;\n
    \       // The first digit cannot be 7\n        while ((x % 11) == 7 || (x % 13)
    == 7) {\n            if (x % 11 != 7)\n                count++;\n            if
    (x % 13 != 7)\n                count++;\n            x /= 11;\n        }\n        while
    (x != 0) {\n            for (i = 31; i >= 0; i--) {\n                if (x % i
    == 0) {\n                    count++;\n                }\n            }\n            x
    /= 10;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.DivideByZeroException: Attempted to divide
    by zero.\n  at Problem.FizzBuzz (System.Int64 n) [0x00061] in <a421da3ee158423781acc47f91b13248>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <a421da3ee158423781acc47f91b13248>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.DivideByZeroException: Attempted to
    divide by zero.\n  at Problem.FizzBuzz (System.Int64 n) [0x00061] in <a421da3ee158423781acc47f91b13248>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <a421da3ee158423781acc47f91b13248>:0
    \n"
  stdout: ''
  timestamp: 1659977265
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n % 11 == 0) return n;\n
    \       if (n % 13 == 0) return n;\n        var count = 0;\n        var x = n
    / 11;\n        while (x * 11 <= n) {\n            count++;\n            x *= 11;\n
    \       }\n        while (n / 13 <= x) {\n            count++;\n            n
    /= 13;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659977270
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        string s = n.ToString();\n
    \       long count = 0;\n        foreach (string digit in s.Select(x => x.ToString()).Distinct())
    {\n            long num = (long)(decimal.Parse(digit) * Math.Pow(10, s.Count(x
    => x==digit)/3.0));\n            if (num % 11 == 0 && num % 13 == 0) {\n                count++;\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6y5_61fb.cs(20,80): error CS0019: Operator ''=='' cannot be applied to
    operands of type ''char'' and ''string''

    '
  timestamp: 1659977265
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        List<long> result = new List<long>();\n
    \       long sum = 0;\n        // This algorithm is a bit complicated because
    we do not want to check every number in the range.\n        // Instead, for each
    range (including one end), we first check whether it is a divisor of n.\n        //
    If it is, we then check whether it is a prime number.\n        // If it is a prime,
    we add it to the result list, then check whether it is divisible by 11 or 13.\n
    \       // If so, we add it to result list, then check whether it is a divisor
    of n.\n        // If so, we add it to result list, then check whether it is a
    divisor of n.\n        // If so, we add it to result list, then check whether
    it is a divisor of n.\n        // If so, we add it to result list, then check
    whether it is a divisor of n.\n        // If so, we add it to result list, then
    check whether it is a divisor of n.\n        // If so, we add it to result list,
    then check whether it is a divisor of n.\n        // If so, we add it to result
    list, then check whether it is a divisor of n.\n        // If so, we add it to
    result list, then check whether it is a divisor of n.\n        // If so, we add
    it to result list, then check whether it is a divisor of n.\n        // If so,
    we add it to result list, then check whether it is a divisor of n.\n        //
    If so, we add it to result list, then check whether it is a divisor of n.\n        //
    If so, we add it to result list, then check whether it is a divisor of n.\n        //
    If so, we add it to result list, then check whether it is a divisor of n.\n        //
    If so, we add it to result list, then check whether it is a divisor of n.\n        //
    If so, we add it to result list, then check whether it is a divisor of n.\n        //
    If so, we add it to result list, then check whether it is a divisor of n.\n        //
    If so, we add it to result list, then check whether it is a divisor of n.\n        //
    If so, we add it to result list, then check whether it is a divisor of n.\n        //
    If so, we add it to result list, then check whether it is a divisor of n.\n        //
    If so, we add it to result list, then check whether it is a divisor of n.\n        //
    If so, we add it to result list, then check whether it is a divisor of n.\n        //
    If so, we add it to result list, then check whether it is a divisor of n.\n        //
    If so, we add it to result list, then check whether it is a divisor of n.\n        //
    If so, we add it to result list, then check whether it is a divisor of n.\n        //
    If so, we add it to result list, then check whether it is a divisor of n.\n        //
    If so\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvh0m6cin.cs(18,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpvh0m6cin.cs(16,24): error CS0161: ''Problem.FizzBuzz(long)'': not all
    code paths return a value

    '
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        long
    t = 1;\n        if (n == 0)\n            return 0;\n        while (n != 0) {\n
    \           t *= n;\n            count += t % 11 == 0 ? 0 : t % 13 == 0 ? 1 :
    0;\n            n /= 11;\n            n /= 13;\n        }\n        return count;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <82b6857f538b4e34a4835db389025c02>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <82b6857f538b4e34a4835db389025c02>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long numDigitsOf7 = 0;\n        long
    remainder = n;\n\n        while (remainder > 0)\n        {\n            int d
    = (int)remainder;\n            if (d == 3 || d == 7)\n            {\n                numDigitsOf7++;\n
    \           }\n            remainder = remainder / 10;\n        }\n\n        if
    (numDigitsOf7 > 3)\n        {\n            return numDigitsOf7;\n        }\n        else
    if (numDigitsOf7 > 1)\n        {\n            return numDigitsOf7 + 1;\n        }\n
    \       else\n        {\n            return numDigitsOf7 - 1;\n        }\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b6a1bcc4b4b54f8fb75e427d7c912cd3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b6a1bcc4b4b54f8fb75e427d7c912cd3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long n = Math.Abs(n);\n        long
    remainder = 0;\n        long count = 0;\n        // Find the first non-zero multiple
    of 11 and 13\n        while (n != 0) {\n            remainder = n % 11;\n            n
    = n / 11;\n            if (remainder != 0) {\n                // FizzBuzz on this
    number\n                count++;\n            }\n            remainder = n % 13;\n
    \           n = n / 13;\n            if (remainder != 0) {\n                //
    FizzBuzz on this number\n                count++;\n            }\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgsnbm00w.cs(17,14): error CS0136: A local or parameter named ''n'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpgsnbm00w.cs(17,27): error CS0165: Use of unassigned local variable ''n''

    '
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        for
    (int i = 1; i < n; ++i) {\n            if (i % 11 == 0 && (i % 13 == 0)) {\n                ++count;\n
    \           }\n            if (i % 11 != 0 && (i % 13 == 0)) {\n                ++count;\n
    \           }\n            if (i % 11 != 0 && i % 13 != 0) {\n                ++count;\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd3495f7da744366a9972970048016c6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd3495f7da744366a9972970048016c6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977265
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long numDigits = BitConverter.ToInt64(n,
    0);\n        long numDivisors = 0;\n        bool isDivideBy11 = true;\n        bool
    isDivideBy13 = true;\n        while (true) {\n            int remainder = numDigits
    % 11;\n            numDigits /= 11;\n            if (remainder == 0 && numDigits
    == 0) {\n                if (isDivideBy11 && isDivideBy13) {\n                    return
    numDivisors;\n                } else {\n                    return 0;\n                }\n
    \           }\n            if (remainder == 0) {\n                isDivideBy11
    = true;\n            }\n            int remainder2 = numDigits % 13;\n            numDigits
    /= 13;\n            if (remainder2 == 0 && numDigits == 0) {\n                if
    (isDivideBy11 && isDivideBy13) {\n                    return numDivisors;\n                }
    else {\n                    return 0;\n                }\n            }\n            if
    (remainder2 == 0) {\n                isDivideBy13 = true;\n            }\n            numDivisors++;\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4md_bk0i.cs(17,47): error CS1503: Argument 1: cannot convert from ''long''
    to ''byte[]''

    /tmp/tmp4md_bk0i.cs(22,29): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp4md_bk0i.cs(34,30): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659977265
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n < 7) {\n            return
    n;\n        }\n        long result = 0;\n        while (n > 0) {\n            int
    d = (int)(n % 10);\n            if (d != 7) {\n                result = result
    * 10 + (d*11);\n            }\n            n /= 10;\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3197371a1711494da159f95a26cc590d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3197371a1711494da159f95a26cc590d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n % 11 == 0 || n % 13 ==
    0) return 1;\n        else return 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d662c29158fb4cf886b82390bb32c5a3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d662c29158fb4cf886b82390bb32c5a3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        // Initialize number of counts
    to 0\n        long counts = 0;\n        // Initialize a variable to store the
    first digit of a number\n        byte firstDigit = (byte) (n);\n        // If
    the number is divisible by 11 or 13, then increment the number of counts by the
    number of times the digit 7 appears in the number.\n        // If the number is
    divisible by 10, then increment the number of counts by 1. Otherwise, if the first
    digit of the number is not 7, then count the number of times the digit 7 appears
    in the number.\n        if ((n % 11 == 0) && (n % 13 == 0)) {\n            counts
    += (n / 11) * 1;\n        } else if (n % 10 == 0)\n            counts += 1;\n
    \       else\n            counts += (n / 10) * 1;\n        return counts;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <041b81550d0f420fb527a7320b6ec29c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <041b81550d0f420fb527a7320b6ec29c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var digits = n.ToString().ToCharArray();\n
    \       var counts = new Dictionary<char, int>();\n        for (int i = 0; i <
    digits.Length; i++) {\n            var digit = digits[i];\n            if (digit
    == '7') {\n                if (counts[digit] == 0) {\n                    counts[digit]
    = 1;\n                } else {\n                    counts[digit]++;\n                }\n
    \           }\n        }\n        var max = counts\n            .Where(x => x.Value
    > 1)\n            .OrderByDescending(x => x.Value).First().Key;\n        return
    counts[max];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.FizzBuzz
    (System.Int64 n) [0x000c2] in <ca98c351043a4fb2bbdb06a31977c73d>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <ca98c351043a4fb2bbdb06a31977c73d>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.FizzBuzz
    (System.Int64 n) [0x000c2] in <ca98c351043a4fb2bbdb06a31977c73d>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <ca98c351043a4fb2bbdb06a31977c73d>:0 \n"
  stdout: ''
  timestamp: 1659977266
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n <= 0) return 0;\n        long[]
    digits = n.ToString().Select(c => c - '0').ToArray();\n        long count = 0;\n
    \       for (int i = 0; i < digits.Length; i++) {\n            count += digits[i]
    % 11 == 0 ? 1 : 0;\n            count += digits[i] % 13 == 0 ? 1 : 0;\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppjy3_i86.cs(18,25): error CS0029: Cannot implicitly convert type ''int[]''
    to ''long[]''

    '
  timestamp: 1659977265
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        string s = Convert.ToString(n);\n
    \       long num = 0;\n        long sum = 0;\n        foreach (char c in s) {\n
    \           int n = Convert.ToInt32(c);\n            sum += n;\n            if
    (n % 11 == 0)\n                num++;\n            if (n % 13 == 0)\n                num++;\n
    \       }\n        if (num == 0)\n            Console.WriteLine(\"{0}\", (long)0);\n
    \       else\n            Console.WriteLine(\"{0}\", sum);\n        return sum;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp04f34216.cs(21,17): error CS0136: A local or parameter named ''n'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    '
  timestamp: 1659977265
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long cnt = 0;\n        if (n
    % 11 == 0)\n            cnt += n.DivideByInteger(11);\n        if (n % 13 == 0)\n
    \           cnt += n.DivideByInteger(13);\n        return cnt;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpssfpiy4n.cs(19,22): error CS1061: ''long'' does not contain a definition
    for ''DivideByInteger'' and no accessible extension method ''DivideByInteger''
    accepting a first argument of type ''long'' could be found (are you missing a
    using directive or an assembly reference?)

    /tmp/tmpssfpiy4n.cs(21,22): error CS1061: ''long'' does not contain a definition
    for ''DivideByInteger'' and no accessible extension method ''DivideByInteger''
    accepting a first argument of type ''long'' could be found (are you missing a
    using directive or an assembly reference?)

    '
  timestamp: 1659977266
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        bool even = false;\n        long
    ans = n;\n        do {\n            while (n % 10 == 0) {\n                ans
    += (n % 10 == 0 ? 1 : 0);\n                n /= 10;\n            }\n            while
    (n % 5 == 0) {\n                ans += (n % 5 == 0 ? 1 : 0);\n                n
    /= 5;\n            }\n            while (n % 3 == 0) {\n                ans +=
    (n % 3 == 0 ? 1 : 0);\n                n /= 3;\n            }\n            while
    (n % 2 == 0) {\n                ans += (n % 2 == 0 ? 1 : 0);\n                n
    /= 2;\n            }\n            even = true;\n            while (n % 1 == 0)
    {\n                ans += (n % 1 == 0 ? 1 : 0);\n                n /= 1;\n                even
    = false;\n            }\n        } while (n > 0);\n        if (even) {\n            ans
    *= 2;\n        }\n        return ans;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659977271
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long counter = 0;\n        long
    counter2 = 0;\n        long number = 0;\n        long number = n;\n        do
    {\n            number /= 10;\n            counter++;\n        } while (number
    > 0);\n        do {\n            number /= 10;\n            counter2++;\n        }
    while (number > 0);\n        return (counter * counter2) * 7;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3vpyhikl.cs(20,14): error CS0128: A local variable or function named ''number''
    is already defined in this scope

    '
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        while
    (n > 100) {\n            if (n % 11 == 0 || n % 13 == 0) {\n                count++;\n
    \           }\n            n /= 11;\n        }\n        if (n % 11 != 0 || n %
    13 != 0) {\n            count++;\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <434d2d31827a4669ab4e7eedd97f1439>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <434d2d31827a4669ab4e7eedd97f1439>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n / 11 == (n % 11)) {\n
    \           return (n / 11).ToString().Count(x => x == '7').ToString();\n        }\n
    \       if (n / 13 == (n % 13)) {\n            return (n / 13).ToString().Count(x
    => x == '7').ToString();\n        }\n        return (n % 11).ToString().Count(x
    => x == '7').ToString();\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L)) ==
    (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6gtl6ugz.cs(18,20): error CS0029: Cannot implicitly convert type ''string''
    to ''long''

    /tmp/tmp6gtl6ugz.cs(21,20): error CS0029: Cannot implicitly convert type ''string''
    to ''long''

    /tmp/tmp6gtl6ugz.cs(23,16): error CS0029: Cannot implicitly convert type ''string''
    to ''long''

    '
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var count = new HashSet<long>();\n
    \       for (long i = 1; i < n; i++) {\n            var isDivisibleBy11 = (n %
    i == 0) && (i % 11 == 0);\n            var isDivisibleBy13 = (n % i == 0) && (i
    % 13 == 0);\n            if (isDivisibleBy11 || isDivisibleBy13) count.Add(i);\n
    \       }\n        return count.Count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99068c96095440068e05b267ff7de409>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <99068c96095440068e05b267ff7de409>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        bool isDivisibleBy11or13 =
    (n % 11 == 0) || (n % 13 == 0);\n        return isDivisibleBy11or13 ? ((n * n)
    % 11) : n;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6f2834a34c90423a95fc54b115a3171a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6f2834a34c90423a95fc54b115a3171a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n <= 0) return 0L;\n        var
    sum = 0;\n        int i = 1;\n        while ((n % i) == 0) {\n            sum
    += i;\n            i++;\n        }\n        while ((n % 13) == 0) {\n            sum
    += 13;\n            i += 2;\n        }\n        return sum;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <689e89b05ccc4df0b3606d2374b851a2>:0
    \n"
  stdout: None
  timestamp: 1659977271
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long divisor = 1000000000L;\n
    \       int cnt = 0;\n        while (n%divisor == 0L) {\n            divisor /=
    10;\n            ++cnt;\n        }\n        while (n%divisor != 0L) {\n            n
    /= divisor;\n            ++cnt;\n        }\n        while (n%divisor == 0L) {\n
    \           divisor /= 10;\n            ++cnt;\n        }\n        return cnt;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.DivideByZeroException: Attempted to divide
    by zero.\n  at Problem.FizzBuzz (System.Int64 n) [0x00049] in <f1a98c5e7c0d4866b69a951535016c38>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <f1a98c5e7c0d4866b69a951535016c38>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.DivideByZeroException: Attempted to
    divide by zero.\n  at Problem.FizzBuzz (System.Int64 n) [0x00049] in <f1a98c5e7c0d4866b69a951535016c38>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <f1a98c5e7c0d4866b69a951535016c38>:0
    \n"
  stdout: ''
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        while
    (n>0) {\n            long temp = ((n % 11) == 0) ? (n % 13) : ((n % 13) == 0)
    ? n % 11 : 0;\n            if (temp == 7)\n                count++;\n            n
    /= 11;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5316f2f7419848029d3c4932363d1e08>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5316f2f7419848029d3c4932363d1e08>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long answer = 0;\n        long
    count = 0;\n        while (n > 1) {\n            count++;\n            n = n /
    10;\n        }\n        while (n != 0) {\n            if (n % 11 == 0 || n % 13
    == 0) {\n                count++;\n                n = n / 10;\n            }
    else {\n                count++;\n                n = n / 10;\n            }\n
    \       }\n        answer = (long)Math.Pow(10.0, count) - 1;\n        return answer;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3ed442735cf4f13b0ce9439c6662c9f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3ed442735cf4f13b0ce9439c6662c9f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n < 10) return n;\n        if
    (n % 11 == 0 && n % 13 == 0) return 1;\n        if (n % 11 != 0 && n % 13 != 0)
    return 0;\n        long m = n;\n        while (m / 10 != 1) {\n            m =
    m / 10;\n            if (m % 11 == 0 && m % 13 == 0) return 1;\n            if
    (m % 11 != 0 && m % 13 != 0) return 0;\n        }\n        long r = 0;\n        long
    d = 0;\n        while (m != 0) {\n            m = m / 10;\n            d += 1;\n
    \           r += 1;\n        }\n        if (d > n) return 0;\n        return r;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d2259d04b4a348a49b5d530341d6615e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d2259d04b4a348a49b5d530341d6615e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long remainder = n;\n        long
    count = 0;\n        while (remainder % 11 == 0 || remainder % 13 == 0) {\n            count
    += 1;\n            remainder = (remainder / 10) * 10;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a1fae07b8ca44a8bb11ba6b2944cb13a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a1fae07b8ca44a8bb11ba6b2944cb13a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long x = 0;\n        long result
    = 1;\n        if (n % 11 == 0 && (n % 13 == 0 || n % 7 == 0)) {\n            x++;\n
    \       }\n        if (n % 13 == 0 && (n % 7 == 0)) {\n            x++;\n        }\n
    \       if (n % 7 == 0) {\n            x++;\n        }\n        return x + (n
    % 11 == 0);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpabrovqmp.cs(28,16): error CS0019: Operator ''+'' cannot be applied to
    operands of type ''long'' and ''bool''

    /tmp/tmpabrovqmp.cs(18,14): warning CS0219: The variable ''result'' is assigned
    but its value is never used

    '
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if ((n % 11) == 0 || (n % 13)
    == 0) {\n            return n;\n        } else {\n            return n % 11;\n
    \       }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a7463d056f0448fcb410761f555dfbab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a7463d056f0448fcb410761f555dfbab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long answer = 0;\n        int
    count = 0;\n        for (long d = n; d > 0; d /= 11, count += d, answer += 1)
    {\n            count++;\n            if (d % 11 == 7)\n                count++;\n
    \           if (d % 13 == 7)\n                count++;\n            if (count
    == 3)\n                return d;\n        }\n        return answer;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdttqayi7.cs(19,42): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        while
    ((n % 11) == 0 || n % 13 == 0) {\n            count += 1;\n            n /= 11L;\n
    \       }\n        while (n % 10 == 7) {\n            count += 1;\n            n
    /= 10;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6342c0b9774f4015b15f85a0bf5e7ae0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6342c0b9774f4015b15f85a0bf5e7ae0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long x = 0;\n        long y
    = 0;\n        long z = 0;\n\n        while ((n != 0L) & (y != 0L) & (z != 0L))
    {\n            if ((n % 10L) == 0L) {\n                ++x;\n            }\n            if
    ((n % 13L) == 0L) {\n                ++y;\n            }\n            if ((n %
    11L) == 0L) {\n                ++z;\n            }\n            n = n / 10L;\n
    \       }\n        return x;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <adf505007acd4f64bcd789b49d0f8f8a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <adf505007acd4f64bcd789b49d0f8f8a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n < 10) return 1L;\n        if
    (n % 10 == 7 && n / 10 != 7 && n / 10 != 13) return 1L;\n        if (n % 10 ==
    7 && n / 10 == 13) return 1L;\n        if (n % 10 == 13 && n / 10 != 13) return
    1L;\n        return 0L;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L)) ==
    (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <17553297cc0b4d97bf63053b41922db1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <17553297cc0b4d97bf63053b41922db1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n % 11 == 0 && n % 13 ==
    0) {\n            return n;\n        }\n        List<long> list = new List<long>();\n
    \       long m = n;\n        long a = 11L;\n        long b = 13L;\n        while
    (m * a < n) {\n            if (n % m == a) {\n                list.Add(m);\n            }\n
    \           m *= b;\n            if (n % m == b) {\n                list.Add(m);\n
    \           }\n        }\n        return list.Count;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f252d57865854687ad4d36fca7407962>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f252d57865854687ad4d36fca7407962>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long a = 0;\n        while
    (n/11 == 0)\n        {\n            n = n/11;\n            a++;\n        }\n        while
    (n/13 == 0)\n        {\n            n = n/13;\n            a++;\n        }\n        return
    a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1f0b736065d54998a6266f44e1357d23>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1f0b736065d54998a6266f44e1357d23>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977266
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        string s = n.ToString();\n
    \       string res = \"\";\n        for (int i = 0; i < s.Length; i++) {\n            if
    (i % 3 == 0 && i % 5 == 0) {\n                res = s + \"FizzBuzz\";\n                s
    += \"7\";\n            } else if (i % 3 == 0) {\n                res = s + \"Fizz\";\n
    \               s += \"7\";\n            } else if (i % 5 == 0) {\n                res
    = s + \"Buzz\";\n                s += \"7\";\n            } else if (s.Contains(\"7\"))
    {\n                res = s;\n            }\n        }\n        return Long.Parse(res);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkg0fivv2.cs(33,16): error CS0103: The name ''Long'' does not exist in
    the current context

    '
  timestamp: 1659977266
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if ((n % 11) == 0 || n % 13
    == 0) {\n            return 1;\n        }\n        long times = 0;\n        BigInteger
    divisible = (n / 11);\n        while (divisible != 0) {\n            divisible
    = divisible / 11;\n            times++;\n        }\n        BigInteger fifths
    = n / 13;\n        while (fifths != 0) {\n            fifths = fifths / 13;\n
    \           times++;\n        }\n        return times;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c2c686da70a40d8a7ae91b285f62889>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c2c686da70a40d8a7ae91b285f62889>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977267
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        for
    (int i = 0; i <= 9; ++i)\n            if (n % i == 0)\n                if (n %
    i == 7)\n                    ++count;\n            if (i % 11 == 0 || i % 13 ==
    0)\n                count += 1;\n        return count;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz4m3njqg.cs(22,17): error CS0103: The name ''i'' does not exist in the
    current context

    /tmp/tmpz4m3njqg.cs(22,32): error CS0103: The name ''i'' does not exist in the
    current context

    '
  timestamp: 1659977267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        long
    div = (long)Math.Sqrt(n);\n        while (n > div) {\n            if (n % div
    == 0)\n                count += 1;\n            div = div * 11;\n            if
    (div > n)\n                break;\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <067905b528844dd18ca536219ce72ac5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <067905b528844dd18ca536219ce72ac5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        // Find the sum of multiples
    of 11 and 13\n        long n1 = n / 11;\n        long n2 = n % 11;\n        long
    n3 = n / 13;\n        long n4 = n % 13;\n        long sum1 = (n1 + n2 + n3) *
    11L;\n        long sum2 = (n4 + n1 + n2) * 13L;\n        // Return the number
    if 7 is in the sum, or 0 otherwise\n        if (sum1 != sum2) {\n            return
    0;\n        }\n        if (n1 == 7L) {\n            return 1;\n        }\n        return
    2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <486ed63d418f4c03af0801159253c065>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <486ed63d418f4c03af0801159253c065>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        bool odds = n % 2 == 1;\n        if
    (odds) n /= 2;\n        long result = 1;\n        bool multiples = n % 11 == 0
    || n % 13 == 0;\n        for (long i = 1; i < n; i++) {\n            if (multiples
    && i % 11 == 0 && i % 13 == 0) {\n                result *= i;\n                multiples
    = false;\n            } else if (odds && i % 11 == 0 && i % 13 != 0) {\n                result
    *= i;\n                odds = false;\n            } else if (multiples && (i %
    11 != 0 || i % 13 != 0)) {\n                result *= i;\n                multiples
    = false;\n            } else if (odds && (i % 11 != 0 || i % 13 == 0)) {\n                result
    *= i;\n                odds = false;\n            } else if (multiples && (i %
    11 == 0 || i % 13 != 0)) {\n                result *= i;\n                multiples
    = false;\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba6072e4514e41ea9f644c0d7d760dc6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba6072e4514e41ea9f644c0d7d760dc6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        if
    (n > 1000000000000000) throw new ArgumentOutOfRangeException(\"n\", \"Cannot divide
    by 11 or 13 larger than 1000000000000000\");\n        for (long i = 1; i <= n;
    i *= 11) {\n            if (i % 11 == 0) ++count;\n            if (i % 13 == 0)
    ++count;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f26612db90d149348fd598871364b250>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f26612db90d149348fd598871364b250>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977267
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        // Initialize hash table.\n
    \       Dictionary<long, long> count = new Dictionary<long, long>();\n        for
    (int i = 0; i < 10; i++) {\n            count.Add(i, 0);\n        }\n        //
    For every number starting from n...\n        for (long i = 1; i <= n; i++) {\n
    \           // ... check whether it is divisible by 11 or 13...\n            if
    (i % 11 == 0) {\n                if (i % 13 == 0) {\n                    // ...
    and if it is, then increment the count...\n                    count[i]++;\n                }\n
    \           }\n            // ... and if it is divisible by 11, then increment
    the count...\n            else if (i % 11 != 0) {\n                count[i]++;\n
    \           }\n        }\n        // Return the count of 7s divisible by 11 and
    13 in the range.\n        return count[7];\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key '10' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.FizzBuzz
    (System.Int64 n) [0x0007a] in <0a66637e42844e849f5a78670a70abe4>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <0a66637e42844e849f5a78670a70abe4>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException: The
    given key '10' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.FizzBuzz
    (System.Int64 n) [0x0007a] in <0a66637e42844e849f5a78670a70abe4>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <0a66637e42844e849f5a78670a70abe4>:0 \n"
  stdout: ''
  timestamp: 1659977267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var tens = n % 11;\n        var
    threes = n % 13;\n        var fives = n % 5;\n        return (tens == 0 || threes
    == 0 || fives == 0) ? n : 1 + FizzBuzz(n / 11L);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57f2721bf10e42039e2991d43c236396>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57f2721bf10e42039e2991d43c236396>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977267
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        int counter = 0;\n        while
    (n != 0) {\n            int digit = n % 10;\n            if (digit == 7)\n                counter++;\n
    \           n = n / 10;\n        }\n        if (counter == 0)\n            return
    (long)1;\n        return counter;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo1zvjere.cs(19,25): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659977267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        long
    remainder = n % 11;\n        if (remainder == 0 || remainder == 13) return count;\n
    \       while (n >= 3) {\n            if (n % 3 == 0) {\n                count++;\n
    \               if (n % 13 == 0) return count;\n                n /= 13;\n            }
    else {\n                count++;\n                if (n % 11 == 0) return count;\n
    \               n /= 11;\n            }\n        }\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c7ab05f1504d698bd77eebcaff01fc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01c7ab05f1504d698bd77eebcaff01fc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        for
    (int i = 0; i < n; i++) {\n            if ((i % 11) == 0 || (i % 13) == 0) {\n
    \               if ((i % 11) == 0) Console.WriteLine(\"(\" + i.ToString() + \")\");\n
    \               Console.WriteLine((i % 13).ToString() + \" : \" + ((i % 11) ==
    0).ToString());\n            }\n            if ((i % 11) != 0 && (i % 13) != 0)
    {\n                if (i % 11 == 0) Console.WriteLine(\"(\" + i.ToString() + \")\");\n
    \               if (i % 13 == 0) Console.WriteLine((i % 11).ToString() + \" :
    \" + ((i % 13) == 0).ToString());\n            }\n        }\n        return count;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <117a5e2707ca4f28bc7aef76a5783415>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <117a5e2707ca4f28bc7aef76a5783415>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: '(0)

    0 : True

    (11)

    11 : True

    0 : False

    (22)

    9 : True

    0 : False

    (33)

    7 : True

    0 : False

    (44)

    5 : True

    (0)

    0 : True

    (11)

    11 : True

    0 : False

    (22)

    9 : True

    0 : False

    (33)

    7 : True

    0 : False

    (44)

    5 : True

    0 : False

    (55)

    3 : True

    0 : False

    (66)

    1 : True

    (77)

    12 : True

    (0)

    0 : True

    (11)

    11 : True

    0 : False

    (22)

    9 : True

    0 : False

    (33)

    7 : True

    0 : False

    (44)

    5 : True

    0 : False

    (55)

    3 : True

    0 : False

    (66)

    1 : True

    (77)

    12 : True

    0 : False

    (0)

    0 : True

    (11)

    11 : True

    0 : False

    (22)

    9 : True

    0 : False

    (33)

    7 : True

    0 : False

    (44)

    5 : True

    0 : False

    (55)

    3 : True

    0 : False

    (66)

    1 : True

    (77)

    12 : True

    0 : False

    (88)

    10 : True

    0 : False

    (99)

    8 : True

    (0)

    0 : True

    (11)

    11 : True

    0 : False

    (22)

    9 : True

    0 : False

    (33)

    7 : True

    0 : False

    (44)

    5 : True

    0 : False

    (55)

    3 : True

    0 : False

    (66)

    1 : True

    (77)

    12 : True

    0 : False

    (88)

    10 : True

    0 : False

    (99)

    8 : True

    0 : False

    (110)

    6 : True

    0 : False

    (121)

    4 : True

    0 : False

    (132)

    2 : True

    (143)

    0 : True

    (154)

    11 : True

    0 : False

    (165)

    9 : True

    0 : False

    (176)

    7 : True

    0 : False

    (187)

    5 : True

    0 : False

    (198)

    3 : True

    (0)

    0 : True

    (11)

    11 : True

    0 : False

    (22)

    9 : True

    0 : False

    (33)

    7 : True

    0 : False

    (44)

    5 : True

    0 : False

    (55)

    3 : True

    0 : False

    (66)

    1 : True

    (77)

    12 : True

    0 : False

    (88)

    10 : True

    0 : False

    (99)

    8 : True

    0 : False

    (110)

    6 : True

    0 : False

    (121)

    4 : True

    0 : False

    (132)

    2 : True

    (143)

    0 : True

    (154)

    11 : True

    0 : False

    (165)

    9 : True

    0 : False

    (176)

    7 : True

    0 : False

    (187)

    5 : True

    0 : False

    (198)

    3 : True

    0 : False

    (209)

    1 : True

    (220)

    12 : True

    0 : False

    (231)

    10 : True

    0 : False

    (242)

    8 : True

    0 : False

    (253)

    6 : True

    0 : False

    (264)

    4 : True

    0 : False

    (275)

    2 : True

    (286)

    0 : True

    (297)

    11 : True

    0 : False

    (308)

    9 : True

    0 : False

    (319)

    7 : True

    0 : False

    (330)

    5 : True

    0 : False

    (341)

    3 : True

    0 : False

    (352)

    1 : True

    (363)

    12 : True

    0 : False

    (374)

    10 : True

    0 : False

    (385)

    8 : True

    0 : False

    (396)

    6 : True

    0 : False

    (407)

    4 : True

    0 : False

    (418)

    2 : True

    (429)

    0 : True

    (440)

    11 : True

    0 : False

    (451)

    9 : True

    0 : False

    (462)

    7 : True

    0 : False

    (473)

    5 '
  timestamp: 1659977267
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        // If the number is divisible
    by 11 or 13, return 0\n        if (n % 11 == 0 || n % 13 == 0) return 0;\n        long
    count = 0;\n        long n1 = n;\n        while (n > 0) {\n            // Get
    last digit of n\n            long digit = n % 10;\n            // If the digit
    is 7, count it.\n            if (digit == 7) {\n                count++;\n            }\n
    \           // Divide n by 10\n            n = n / 10;\n        }\n        //
    If n is divisible by 11, count the number of times 7 appears in n.\n        if
    (n % 11 == 0) count += (n1 / 11).ToInt32();\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzmum0cl3.cs(32,45): error CS1061: ''long'' does not contain a definition
    for ''ToInt32'' and no accessible extension method ''ToInt32'' accepting a first
    argument of type ''long'' could be found (are you missing a using directive or
    an assembly reference?)

    '
  timestamp: 1659977267
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        ulong temp = n;\n        ulong
    divisor = 11UL;\n        ulong remainder;\n\n        // Count up to divisor\n
    \       while (temp > divisor) {\n            temp = temp / divisor;\n            divisor
    *= 11UL;\n        }\n        remainder = temp % divisor;\n\n        // Count the
    first 7 numbers which are divisible by 11\n        if ((temp % 11) == 7) {\n            return
    1L;\n        }\n\n        // Count the second 7 numbers which are divisible by
    13\n        if ((temp % 13) == 7) {\n            return 1L;\n        }\n\n        //
    Count the remaining numbers which are divisible by both 11 and 13\n        return
    (long) (remainder + 1);\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L)) ==
    (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptxaiws0l.cs(17,22): error CS0266: Cannot implicitly convert type ''long''
    to ''ulong''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659977267
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var divisibleBy11 = n % 11
    == 0;\n        var divisibleBy13 = n % 13 == 0;\n        var count = 0;\n        var
    digits = Enumerable.Range(0, 10);\n        if (divisibleBy11 && divisibleBy13)
    {\n            digits.Remove(7);\n            count = digits.Count(x => x % 7
    == 0);\n        }\n        else if (divisibleBy11) {\n            digits.Remove(11);\n
    \           count = digits.Count(x => x % 11 == 0);\n        }\n        else if
    (divisibleBy13) {\n            digits.Remove(13);\n            count = digits.Count(x
    => x % 13 == 0);\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8sv9d_y_.cs(22,20): error CS7036: There is no argument given that corresponds
    to the required formal parameter ''value'' of ''CollectionExtensions.Remove<TKey,
    TValue>(IDictionary<TKey, TValue>, TKey, out TValue)''

    /tmp/tmp8sv9d_y_.cs(26,20): error CS7036: There is no argument given that corresponds
    to the required formal parameter ''value'' of ''CollectionExtensions.Remove<TKey,
    TValue>(IDictionary<TKey, TValue>, TKey, out TValue)''

    /tmp/tmp8sv9d_y_.cs(30,20): error CS7036: There is no argument given that corresponds
    to the required formal parameter ''value'' of ''CollectionExtensions.Remove<TKey,
    TValue>(IDictionary<TKey, TValue>, TKey, out TValue)''

    '
  timestamp: 1659977267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n == 1L) {\n            return
    0;\n        } else if (n % 11 == 0L || n % 13 == 0L) {\n            return 1L;\n
    \       }\n        return FizzBuzz((n / 10L) + 1L) * 10L + FizzBuzz(n / 10L);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd29ed9f634d49a8b058d7d311304845>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd29ed9f634d49a8b058d7d311304845>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long total = 0;\n        for
    (long i = 0; i < n; i++) {\n            if (i % 11 == 0 || i % 13 == 0) {\n                total++;\n
    \           }\n        }\n        return total;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <603c8960eb6d418cb06b17842b4053bb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <603c8960eb6d418cb06b17842b4053bb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        return (int) Math.Floor(Math.Log(n)
    / Math.Log10(11.0) + Math.Log(n) / Math.Log10(13.0) - n);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <65de394a8b284ad4b1211f61f1b01286>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <65de394a8b284ad4b1211f61f1b01286>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977267
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long sum = 0;\n        long
    currentDigit = 0;\n        while (n-- > 0) {\n            currentDigit = n % 10;\n
    \           sum += ((currentDigit == 7) || ((currentDigit == 3) && !(n % 11 ||
    n % 13)) ? 1 : 0);\n        }\n        return sum;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpljur4u3z.cs(21,70): error CS0019: Operator ''||'' cannot be applied to
    operands of type ''long'' and ''long''

    '
  timestamp: 1659977267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long c = n % 11;\n        if
    (c != 0 || n == 77) {\n            return 1;\n        }\n        long d = n %
    13;\n        if (d != 0 || n == 79) {\n            return 2;\n        }\n        long
    e = (long) (n / 11);\n        return e * (e + 1) / 2;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b22b40c6f02740b582aac868b53b60fd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b22b40c6f02740b582aac868b53b60fd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long counter = 0;\n        while
    (n >= 100) {\n            n /= 10;\n            counter++;\n        }\n        if
    (n % 11 == 0 || n % 13 == 0)\n            return counter;\n        return 0;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22195f750225472b9679530f4a5c3e70>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <22195f750225472b9679530f4a5c3e70>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977267
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        long
    digit = 7;\n        while (n > 0) {\n            long remaining = n % 11;\n            count++;\n
    \           n = remaining;\n        }\n        if (n % 11 != 7)\n            count++;\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659977272
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        for
    (int i = 0; n < 1000; i++) {\n            long nn = i * 11 + 13 * n;\n            if
    (nn % 11 == 7 || nn % 13 == 7) count++;\n        }\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659977272
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if ((n % 11) == 0) return 1;\n
    \       if ((n % 13) == 0) return 2;\n        return 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <34953cafd8d443cfb052b46ddf445b59>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <34953cafd8d443cfb052b46ddf445b59>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977268
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        // First check if n is a multiple
    of 11 or 13.\n        if ((n % 11) == 0 || (n % 13) == 0) return (long)(n * 0.0001);\n
    \       // Check if n is divisible by 3 but not 4.\n        if (n % 3 == 0 &&
    !(n % 4)) return (long)(n * 0.0001);\n        // Check if n is divisible by 5
    but not 6.\n        if (n % 5 == 0 && !(n % 6)) return (long)(n * 0.0001);\n        //
    Check if n is divisible by 3 or 5 but not 6.\n        if (n % 3 == 0 || (n % 5)
    == 0 && !(n % 6)) return (long)(n * 0.0001);\n        // Check if n is divisible
    by 7 but not 8.\n        if (n % 7 == 0 && !(n % 8)) return (long)(n * 0.0001);\n
    \       // Check if n is divisible by 3 or 7 but not 8.\n        if (n % 3 ==
    0 || (n % 7) == 0 && !(n % 8)) return (long)(n * 0.0001);\n        // Check if
    n is divisible by 5 or 7 but not 8.\n        if (n % 5 == 0 || (n % 7) == 0 &&
    !(n % 8)) return (long)(n * 0.0001);\n        // Check if n is divisible by 3
    or 5 or 7 but not 8.\n        if (n % 3 == 0 || (n % 5) == 0 || (n % 7) == 0 &&
    !(n % 8)) return (long)(n * 0.0001);\n        // Check if n is divisible by 7
    but not 8.\n        if (n % 7 == 0 && !(n % 8)) return (long)(n * 0.0001);\n        //
    If all else fails, check if n is divisible by 3 and then 5.\n        if (n % 3
    == 0 && !(n % 5)) return (long)(n * 0.0001);\n        if (n % 5 == 0 && !(n %
    3)) return (long)(n * 0.0001);\n        // If all else fails, check if n is divisible
    by 3 and then 7.\n        if (n % 3 == 0 && !(n % 7)) return (long)(n * 0.0001);\n
    \       if (n % 7 == 0 && !(n % 3)) return (long)(n * 0.0001);\n        // If
    all else fails, check if n is divisible by 5 and then 7.\n        if (n % 5 ==
    0 && !(n % 7)) return (long)(n * 0.0001);\n        if (n % 7 == 0 && !(n % 5))
    return (long)(n * 0.0001);\n        // If all else fails, check if n is divisible
    by 3 and then 5.\n        if (n % 3 == 0 && !(n % 5)) return (long)(n * 0.0001);\n
    \       if (n % 5 == 0 && !(n % 3)) return (long)(n * 0.0001);\n        // If
    all else fails, check if n is divisible by 3 and then 7.\n        if (n % 3 ==
    0 && !(n % 7)) return (long)(n * 0.0001\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9pkq3e3l.cs(48,61): error CS1026: ) expected

    /tmp/tmp9pkq3e3l.cs(48,61): error CS1002: ; expected

    '
  timestamp: 1659977267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var digits = new List<long>();\n
    \       while (n != 0) {\n            digits.Add(n % 10);\n            n /= 10;\n
    \       }\n        return digits.FindIndex(d => d % 7 == 7);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6bc60eafbabd4fbb814658e60205cfc0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6bc60eafbabd4fbb814658e60205cfc0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977268
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        //
    find all the numbers of 1 to n that are divisible by 11 or 13\n        IEnumerable<long>
    numbers = Enumerable.Range(1, n).Where(n => n % 11 == 0 || n % 13 == 0);\n        //
    count the frequencies of 7s in numbers\n        foreach (long number in numbers)\n
    \       {\n            string text = number.ToString();\n            char[] array
    = text.ToCharArray();\n            int index = Array.IndexOf(array, 7);\n            if
    (index != -1)\n            {\n                count++;\n            }\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgv5k_99x.cs(19,57): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659977267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long num = (long)Math.Pow(10,
    (int)Math.Log10(n));\n        var count = 0;\n        for (long i = num; i >=
    1; i--) {\n            if (n % i == 0) {\n                if (i % 11 == 0 && i
    % 13 == 0) {\n                    count++;\n                }\n                if
    (i % 11 == 0) {\n                    count++;\n                }\n                if
    (i % 13 == 0) {\n                    count++;\n                }\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8d3e20d20d0247ccb48626a234195990>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8d3e20d20d0247ccb48626a234195990>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977268
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        while
    (n % 11 == 0 || (n % 13) == 0) {\n            count += 1;\n            n /= 11;\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1ed42ac1162f4297908a875219e86d12>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1ed42ac1162f4297908a875219e86d12>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977268
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        int count = 0;\n        while
    ((n / 11) % 3 != 0) {\n            count += Fizz(n / 11);\n            n %= 11;\n
    \       }\n        if ((n / 13) % 3 != 0) {\n            count += Fizz(n / 13);\n
    \           n %= 13;\n        }\n        return count;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6wqo2zop.cs(19,22): error CS0103: The name ''Fizz'' does not exist in
    the current context

    /tmp/tmp6wqo2zop.cs(23,22): error CS0103: The name ''Fizz'' does not exist in
    the current context

    '
  timestamp: 1659977267
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        return (int)Math.Floor(Math.Log10(n))
    + n / Math.Pow(10, (int)Math.Floor(Math.Log10(n)));\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi4_02t7k.cs(17,16): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659977268
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var divisibleBy11And13 = (n
    % 11 == 0) && (n % 13 == 0);\n        var digit7 = (n % 10 == 7) ? 1 : 0;\n        return
    (n * digit7 + divisibleBy11And13).ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd7l98a8o.cs(19,17): error CS0019: Operator ''+'' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659977268
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var result = 0;\n        if
    (n % 11 == 0 || n % 13 == 0) {\n            result += 1;\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28a672a53a9f4a459165627b7a88d15f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28a672a53a9f4a459165627b7a88d15f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977268
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long c = n;\n        var s
    = new List<long>() { c };\n        var rs = new List<long>();\n        while (s.Count
    > 0) {\n            long n = s.RemoveAt(0);\n            if (n % 11 == 0 || n
    % 13 == 0) {\n                rs.Add(n);\n            }\n            if (n % 3
    == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    3 == 0 || n % 5 == 0) {\n                rs.Add(n);\n            }\n            if
    (n % 7 == 0) {\n                rs.Add(n);\n            }\n            if (n %
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpeavvbvck.cs(127,20): error CS1525: Invalid expression term ''}''

    /tmp/tmpeavvbvck.cs(127,20): error CS1026: ) expected

    /tmp/tmpeavvbvck.cs(127,20): error CS1002: ; expected

    /tmp/tmpeavvbvck.cs(129,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpeavvbvck.cs(140,2): error CS1513: } expected

    '
  timestamp: 1659977267
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long result = 0;\n        while
    (n > 0) {\n            int d = (int)n % 10;\n            if (d == 7)\n                result
    += 1;\n            n /= 10;\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f24dbeb35aae44d2b01838925856bec4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f24dbeb35aae44d2b01838925856bec4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977268
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long divisor = 11L;\n        long
    test = 10;\n        while (true) {\n            test = n % divisor;\n            if
    (test == 0L && n != 0L)\n                return n; // return n\n            if
    (test == 0L)\n                return 0L; // no divisors found\n            divisor
    *= 11L;\n            n /= test;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659977273
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n == 0)\n            return
    0;\n        if (n / 11 == 0)\n            return 1;\n        if (n / 13 == 0)\n
    \           return 2;\n        return 3;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9ad5ce5276cf4ffdae4ceffd9fbb6432>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9ad5ce5276cf4ffdae4ceffd9fbb6432>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977268
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n % 11 == 0 || n % 13 ==
    0)\n            return (long)(Math.Sqrt(n) * Math.Floor((double)n / 11.0) + 1.0)
    / 2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L)) ==
    (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5a914a14447a428abd781ebe77ef2a72>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5a914a14447a428abd781ebe77ef2a72>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977268
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n <= 0 || n % 11 == 0 ||
    n % 13 == 0) {\n            return 0;\n        }\n        long count = 1;\n        int
    d = (int)n % 10;\n        for (long i = 1; i < n; i += 7) {\n            count
    += (n % 10 == d);\n            n /= 10;\n        }\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmporiwly1m.cs(23,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659977268
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n <= 0) {\n            throw
    new ArgumentOutOfRangeException(nameof(n), \"n must be positive.\");\n        }\n\n
    \       // TODO: Implement a faster algorithm\n        var remainder = n % 11;\n
    \       if (remainder == 0) {\n            n = n / 11;\n        }\n        var
    multiple = n % 13;\n        if (multiple == 0) {\n            n = n / 13;\n        }\n\n
    \       var count = 0;\n        while (n-- > 0) {\n            if (n % 11 == 0
    || n % 13 == 0) {\n                count++;\n            }\n        }\n\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <24bb32b03fcc416082f49ffbd39ecdd3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <24bb32b03fcc416082f49ffbd39ecdd3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977268
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long result = 1;\n        for
    (long i = 3L; i < n; i += 7L) {\n            if (i % 11 == 0 || i % 13 == 0)\n
    \               result++;\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <708800d67a7a40688a4d605be428bf27>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <708800d67a7a40688a4d605be428bf27>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977268
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        string
    digits = \"79\";\n        char digit = '7';\n        // Convert to a base 10 string\n
    \       // \"79\"\n        //\n        string number = n.ToString();\n        for
    (int i = 0; i < number.Length; i++) {\n            // Find out which digit is
    present\n            // in number\n            if (digits.IndexOf(number[i]) !=
    -1) {\n                digit += number[i];\n            }\n        }\n        int
    digitValue = Convert.ToInt32(digit);\n        if (digitValue % 11 == 0) count
    += 1;\n        if (digitValue % 13 == 0) count += 1;\n        return count;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf3c408538074c3ba96ce2c51ba31fcb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf3c408538074c3ba96ce2c51ba31fcb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977268
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        while
    (n != 0) {\n            if (n % 11 == 0 || n % 13 == 0) {\n                count++;\n
    \           }\n            n /= 10;\n        }\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <93af33c1bc77497a8caab4713475fe8b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <93af33c1bc77497a8caab4713475fe8b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977268
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var result = 0;\n        long
    remainder = 0;\n        bool isMultipleOf11or13 = false;\n        while (n>0)
    {\n            remainder = n % 10;\n            if (remainder == 7 && isMultipleOf11or13
    == false) {\n                isMultipleOf11or13 = true;\n                result
    += 1;\n            }\n            isMultipleOf11or13 = false;\n            n /=
    10;\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea9dd29f145a4cf69cea541d13cfa1ba>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea9dd29f145a4cf69cea541d13cfa1ba>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977268
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long counter = 0;\n        while
    (n) {\n            bool isDivisibleBy11 = n % 11 == 0;\n            bool isDivisibleBy13
    = n % 13 == 0;\n            if (!(isDivisibleBy11 || isDivisibleBy13)) {\n                return
    counter;\n            }\n            n = n / 10;\n            counter++;\n        }\n
    \       return counter;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L)) ==
    (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr468ti1p.cs(18,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    '
  timestamp: 1659977268
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        Debug.Assert(n >= 0 && n <=
    1000000000L);\n        if (n % 11 == 0) return (n / 11).ToString();\n        if
    (n % 13 == 0) return (n / 13).ToString();\n        return n.ToString();\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7sy1d_wr.cs(18,33): error CS0029: Cannot implicitly convert type ''string''
    to ''long''

    /tmp/tmp7sy1d_wr.cs(19,33): error CS0029: Cannot implicitly convert type ''string''
    to ''long''

    /tmp/tmp7sy1d_wr.cs(20,16): error CS0029: Cannot implicitly convert type ''string''
    to ''long''

    '
  timestamp: 1659977268
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0, counter = 0;\n
    \       while (n) {\n            if (n % 10 == 7)\n                count++;\n
    \           n /= 10;\n        }\n        while (n) {\n            if (n % 11 ==
    7)\n                count++;\n            if (n % 13 == 7)\n                count++;\n
    \           n /= 10;\n        }\n        return count;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppxflo__a.cs(18,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    /tmp/tmppxflo__a.cs(23,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    /tmp/tmppxflo__a.cs(17,25): warning CS0219: The variable ''counter'' is assigned
    but its value is never used

    '
  timestamp: 1659977268
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        // Test for divisibility by
    11 and 13.\n        bool divisibleBy11 = n % 11 == 0;\n        bool divisibleBy13
    = n % 13 == 0;\n\n        if (divisibleBy13) {\n            // If divisibility
    by 13 is true, then return all numbers divisible by 3 which are divisible by 5.\n
    \           return (n / 13).GetDivisors().Where(divisor => n % divisor == 0).ToList().Count();\n
    \       } else if (divisibleBy11) {\n            // If divisibility by 11 is true,
    then return all numbers divisible by 3 which are divisible by 5.\n            return
    (n / 11).GetDivisors().Where(divisor => n % divisor == 0).ToList().Count();\n
    \       } else {\n            // If the number is divisible by neither 11, nor
    13, then return all numbers divisible by 3 which are divisible by 5.\n            return
    (n / 3).GetDivisors().Where(divisor => n % divisor == 0).ToList().Count();\n        }\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp71ev21n7.cs(23,29): error CS1061: ''long'' does not contain a definition
    for ''GetDivisors'' and no accessible extension method ''GetDivisors'' accepting
    a first argument of type ''long'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmp71ev21n7.cs(26,29): error CS1061: ''long'' does not contain a definition
    for ''GetDivisors'' and no accessible extension method ''GetDivisors'' accepting
    a first argument of type ''long'' could be found (are you missing a using directive
    or an assembly reference?)

    /tmp/tmp71ev21n7.cs(29,28): error CS1061: ''long'' does not contain a definition
    for ''GetDivisors'' and no accessible extension method ''GetDivisors'' accepting
    a first argument of type ''long'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659977268
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        int count = 0;\n        for(int
    i = 1; i < n; i++) {\n            if (n % i == 0 && i % 11 == 0 || i % 13 == 0)
    {\n                count += 1;\n            }\n        }\n        return count;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2426394e0c30426da52e0abb9d895956>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2426394e0c30426da52e0abb9d895956>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n < 1 || n % 11 == 0 ||
    n % 13 == 0) return 0L;\n        var fizzes = n % 3;\n        if (fizzes > 2)
    return 0L;\n        var buzzes = n % 5;\n        if (buzzes > 2) return 0L;\n
    \       var fizzles = 0;\n        var buzzles  = 0;\n        long sum = 0L;\n
    \       long divisor = n;\n        while (divisor > 0) {\n            long remainder
    = divisor % 10;\n            sum += remainder;\n            if (remainder == 7)
    {\n                fizzles++;\n            }\n            if (remainder == 3)
    {\n                buzzles++;\n            }\n            divisor = divisor /
    10;\n        }\n        return fizzles * buzzles\n            + (fizzles * fizzes
    * buzzles + fizzles\n                + (buzzes * buzzes * fizzles + buzzles) *
    fizzes)\n            + (buzzes * buzzes * fizzles + buzzles) * fizzes;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <621b56cddea84671a7c20691adb76eff>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <621b56cddea84671a7c20691adb76eff>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long counter = 0;\n        long
    remainder;\n        if (n % 11 == 0)\n            counter += 1;\n        if (n
    % 13 == 0)\n            counter += 1;\n        while (n > 0) {\n            remainder
    = n % 10;\n            if (remainder == 7)\n                counter += 1;\n            n
    /= 10;\n        }\n        return counter;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea32f00e23a24962bd89c5f6ab32afd5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ea32f00e23a24962bd89c5f6ab32afd5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long counter = 0;\n\n        while
    (n > 0) {\n            long digit = n % 10;\n\n            if (digit == 3 || digit
    == 7) {\n                counter++;\n            }\n\n            n = n / 10;\n
    \       }\n\n        return counter;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <02c25e7206554f7db5df45dd67334083>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <02c25e7206554f7db5df45dd67334083>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977269
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var list = new List<long>();\n
    \       list.Add(n);\n        while (list[0] != 0) {\n            list.Remove(list[0]);\n
    \           long n2 = list[0];\n            var count = new HashSet<long>();\n
    \           for (int i = 1; i < list.Count; i++) {\n                if (n2 % 11
    == 0 && list[i] % 11 == 0 && list[i] % 13 == 0) {\n                    count.Add(list[i]);\n
    \               } else if (n2 % 11 == 0 && list[i] % 11 != 0 && list[i] % 13 ==
    0) {\n                    count.Add(list[i]);\n                } else if (n2 %
    11 != 0 && list[i] % 11 == 0 && list[i] % 13 == 0) {\n                    count.Add(list[i]);\n
    \               } else if (n2 % 11 != 0 && list[i] % 11 != 0 && list[i] % 13 ==
    0) {\n                    count.Add(list[i]);\n                }\n                n2
    /= 10;\n            }\n            list.Remove(list[0]);\n            list.AddRange(count.ToArray());\n
    \           long sum = 0;\n            foreach (var item in list) {\n                sum
    += item;\n            }\n            if (sum == n)\n                return list[0];\n
    \       }\n        return 0;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out
    of range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.FizzBuzz
    (System.Int64 n) [0x00023] in <4010c54c78b5405086c4b635367cecc1>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4010c54c78b5405086c4b635367cecc1>:0 \n[ERROR]
    FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.FizzBuzz
    (System.Int64 n) [0x00023] in <4010c54c78b5405086c4b635367cecc1>:0 \n  at Problem.Main
    (System.String[] args) [0x00001] in <4010c54c78b5405086c4b635367cecc1>:0 \n"
  stdout: ''
  timestamp: 1659977269
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long x = 0;\n        long y
    = n % 11;\n        long z = n % 13;\n        if ((x == 10L) && y == 7L)\n            return
    x;\n        if ((y == 7L) && z == 7L)\n            return y;\n        if ((z ==
    10L) && (x == 13L))\n            return z;\n        if ((x == 13L) && (y == 13L))\n
    \           return x;\n        if ((y == 13L) && (z == 13L))\n            return
    y;\n        if ((x == 14L) && (y == 14L))\n            return z;\n        if ((y
    == 14L) && (z == 14L))\n            return y;\n        if ((x == 15L) && (y ==
    15L))\n            return z;\n        if ((y == 15L) && (z == 15L))\n            return
    y;\n        if ((x == 16L) && (y == 16L))\n            return z;\n        if ((y
    == 16L) && (z == 16L))\n            return y;\n        if ((x == 17L) && (y ==
    17L))\n            return z;\n        if ((y == 17L) && (z == 17L))\n            return
    y;\n        if ((x == 18L) && (y == 18L))\n            return z;\n        if ((y
    == 18L) && (z == 18L))\n            return y;\n        if ((x == 19L) && (y ==
    19L))\n            return z;\n        if ((y == 19L) && (z == 19L))\n            return
    y;\n        if ((x == 20L) && (y == 20L))\n            return z;\n        if ((y
    == 20L) && (z == 20L))\n            return y;\n        if ((x == 2L) && (y ==
    2L))\n            return z;\n        if ((y == 2L) && (z == 2L))\n            return
    y;\n        if ((x == 3L) && (y == 3L))\n            return z;\n        if ((y
    == 3L) && (z == 3L))\n            return y;\n        if ((x == 4L) && (y == 4L))\n
    \           return z;\n        if ((y == 4L) && (z == 4L))\n            return
    y;\n        if ((x == 5L) && (y == 5L))\n            return z;\n        if ((y
    == 5L) && (z == 5L))\n            return y;\n        if ((x == 6L) && (y == 6L))\n
    \           return z;\n        if ((y == 6L) && (z == 6L))\n            return
    y;\n        if ((x == 7L) && (y == 7L))\n            return z;\n        if ((y
    == 7L) && (z == 7L))\n            return y;\n        if ((x == 8L) && (y == 8L))\n
    \           return z;\n        if ((y == 8L) && (z == 8L))\n            return
    y;\n        if ((x == 9L) && (y == 9L))\n            return z;\n        if ((y
    == 9L) && (z == 9L))\n            return y;\n        if ((x == 10L) && (y == 10L))\n
    \           return z;\n        if ((y == 10L) && (z == 10L))\n            return
    y;\n        if ((x == 11L) && (\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8mubhqw0.cs(94,28): error CS1525: Invalid expression term ''}''

    /tmp/tmp8mubhqw0.cs(94,28): error CS1026: ) expected

    /tmp/tmp8mubhqw0.cs(94,28): error CS1002: ; expected

    '
  timestamp: 1659977268
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var counter = 0;\n        while
    (n > 0) {\n            var remainder = n % 11;\n            if (remainder == 7
    || remainder == 13) {\n                counter++;\n            }\n            n
    = n / 11;\n        }\n        return counter;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <276fb89237d1433abab631f19b3b67d7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <276fb89237d1433abab631f19b3b67d7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977269
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n==0) return 0;\n        if
    (n==7) return 1;\n        if ((n%11)==0 || n==13) return 0;\n        List<long>
    nums = new List<long>();\n        while (n!=1) {\n            if (n%10==7) {\n
    \               nums.Add(n);\n            }\n            n/=10;\n        }\n        int
    cnt=0;\n        for (int i=0;i<nums.Count;i++) {\n            if ((nums[i]/11)==7)
    {\n                cnt++;\n            }\n        }\n        return cnt;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659977274
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0L;\n        bool
    is7 = (n % 11 == 0 || n % 13 == 0);\n        while (n > 0 && n < 1000000L) {\n
    \           if (n % 10 == 7) {\n                if (is7)\n                    count++;\n
    \               is7 = false;\n            }\n            else {\n                is7
    = true;\n            }\n            n = (n + 1L) / 10L;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9591e50df4864122b4b0870ab4df5a92>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9591e50df4864122b4b0870ab4df5a92>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        int count = 0;\n        long
    d = n % 11L;\n        n /= 11L;\n        if (d == 13) {\n            count++;\n
    \       }\n        d = n % 13L;\n        n /= 13L;\n        if (d == 11) {\n            count++;\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <45f4852320064658bddfad822054e1f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <45f4852320064658bddfad822054e1f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977269
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long n = n % 11;\n        if
    (n == 0 || n == 3) return n;\n        n /= 11;\n        if (n % 13 == 0) return
    n + 1;\n        if (n % 11 != 0) return n;\n        return 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpomatf5wi.cs(17,14): error CS0136: A local or parameter named ''n'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpomatf5wi.cs(17,18): error CS0165: Use of unassigned local variable ''n''

    '
  timestamp: 1659977269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long result = 1L;\n        long
    factor = 1L;\n        for (long i = 0; n > 1L; i++) {\n            if (i % 11L
    == 0 || i % 13L == 0) {\n                result++;\n            }\n            factor
    = factor * (i + 1);\n            n = n / factor;\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b7a969af20b14758b04858469c8a97ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b7a969af20b14758b04858469c8a97ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977269
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        Debug.Assert(n >= 0);\n        long
    n = n.ToString().Replace(\"L\", \"000\");\n        long count = 0;\n        string
    tmp = new String(n, 3);\n        int count = 0;\n        for (int i = 0; i < tmp.Length;
    i+=3)\n        {\n            tmp[i] = '0';\n            tmp[i+1] = '0';\n            tmp[i+2]
    = '0';\n        }\n        for (int i = 2; i < tmp.Length; i++)\n        {\n            if
    (tmp[i] == '0' && tmp[i+1] == '0' && tmp[i+2] == '0')\n            {\n                count++;\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpea2ds5d2.cs(17,22): error CS0841: Cannot use local variable ''n'' before
    it is declared

    /tmp/tmpea2ds5d2.cs(18,14): error CS0136: A local or parameter named ''n'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpea2ds5d2.cs(18,18): error CS0029: Cannot implicitly convert type ''string''
    to ''long''

    /tmp/tmpea2ds5d2.cs(20,33): error CS1503: Argument 1: cannot convert from ''long''
    to ''char''

    /tmp/tmpea2ds5d2.cs(21,13): error CS0128: A local variable or function named ''count''
    is already defined in this scope

    /tmp/tmpea2ds5d2.cs(24,13): error CS0200: Property or indexer ''string.this[int]''
    cannot be assigned to -- it is read only

    /tmp/tmpea2ds5d2.cs(25,13): error CS0200: Property or indexer ''string.this[int]''
    cannot be assigned to -- it is read only

    /tmp/tmpea2ds5d2.cs(26,13): error CS0200: Property or indexer ''string.this[int]''
    cannot be assigned to -- it is read only

    /tmp/tmpea2ds5d2.cs(21,13): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    '
  timestamp: 1659977269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        // Add one to n, then get all
    factors of n\n        var factors = new List<long>();\n        long maxFactor
    = n;\n        while (maxFactor > 1) {\n            if (n % maxFactor == 0) {\n
    \               factors.Add(maxFactor);\n                n /= maxFactor;\n            }
    else {\n                maxFactor /= 10;\n            }\n        }\n        //
    If n is divisible by 7 and 11, return 1, else return 0\n        if (n % 7 == 0
    && n % 11 == 0) return 1;\n        // Count the number of 7s in factors list\n
    \       var count = factors.Count(f => n % f == 0);\n        // Return number
    of 7s\n        return count;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bfc434cfcb9a455e984822663861485f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bfc434cfcb9a455e984822663861485f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long sum = 0;\n        long
    remainder = 1;\n        for (int i = 0; i < 10; i++) {\n            if (n % 11
    == 0 || n % 13 == 0) {\n                sum += 1;\n            }\n            n
    = n / 10;\n        }\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7476650e16e4459aa4c831915f5c2dae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7476650e16e4459aa4c831915f5c2dae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long num = 0;\n        long
    num1 = n % 11;\n        long num2 = n % 13;\n        if (num1 == 7 || num2 ==
    7) {\n            num++;\n        }\n        if (num1 > 0 || num2 > 0) {\n            num++;\n
    \       }\n        return num;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7c01dcd03a524dbbabd655f7af8eb720>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7c01dcd03a524dbbabd655f7af8eb720>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n < 9L)\n            return
    n;\n        else if (n <= 16L) {\n            if (n % 9L == 0)\n                return
    n;\n            else if (n % 3L == 0)\n                return 3 * n + 1;\n            else\n
    \               return 3 * n + 2;\n        }\n        else if (n % 3L == 0)\n
    \           return 3 * n + 1;\n        else if (n % 7L == 0)\n            return
    3 * n + 2;\n        else\n            return 3 * n + 3;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d02bb3c695f54c61b6b713fe8b83b5d0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d02bb3c695f54c61b6b713fe8b83b5d0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977269
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        int count = 0;\n        while
    (n!=0){\n            n = n / 10;\n            count++;\n        }\n        long
    FBuzz = (long) Math.Pow(11, count); // Fizz Buzz\n        return (long)(Math.Round(FBuzz));\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcvhnifjh.cs(23,28): error CS0121: The call is ambiguous between the following
    methods or properties: ''Math.Round(decimal)'' and ''Math.Round(double)''

    '
  timestamp: 1659977269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long x = 0;\n        for (long
    i = 1; i <= n; i++) {\n            x += (n % i == 0) ? 1 : 0;\n        }\n        return
    x;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e4b32fda71aa438e88a5a75b07d0c00c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e4b32fda71aa438e88a5a75b07d0c00c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977270
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        const long divisor = 11;\n
    \       const long divisor = 13;\n        long count = 0; // count the number
    of times 7 appears\n        long temp = n; // set temp to n\n        while (temp
    != 0) { // while temp is not zero\n            count++; // count 1\n            temp
    = temp / divisor; // divide temp by the divisor\n        }\n        if (count
    == 1) { // if count == 1 then n is divisible by 11 or 13\n            return (long)
    count; // return n\n        }\n        else {\n            count = 0;\n            temp
    = n;\n            while (temp != 0) {\n                temp = temp / divisor;\n
    \               count++;\n            }\n            if (count == 1) { // if count
    == 1 then n is divisible by 11 or 13\n                return (long) count;\n            }\n
    \           else {\n                return (long) 0;\n            }\n        }\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphy3thps1.cs(18,20): error CS0128: A local variable or function named ''divisor''
    is already defined in this scope

    /tmp/tmphy3thps1.cs(18,20): warning CS0219: The variable ''divisor'' is assigned
    but its value is never used

    '
  timestamp: 1659977269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long n1 = n % 11;\n        long
    n2 = n % 13;\n        long n3 = n % 11;\n        long n4 = n % 13;\n        if
    (n1 == 7 || n2 == 7 || n3 == 7) {\n            return 1L;\n        } else if (n1
    == 7 || n2 == 7 || n4 == 7) {\n            return 1L;\n        }\n        return
    0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <986d664362b04058b089548978b102cd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <986d664362b04058b089548978b102cd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977270
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var counts = new HashSet<int>();\n
    \       for (int i = 1; i <= n; i++)\n            counts.add(i % 11 == 0 || i
    % 13 == 0 ? 0 : 1);\n        return counts.Count(c => c) == 1 ? 0L : counts.Count(c
    => c) > 1 ? 1L : counts[0].ToString();\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0ym0ciij.cs(19,20): error CS1061: ''HashSet<int>'' does not contain a
    definition for ''add'' and no accessible extension method ''add'' accepting a
    first argument of type ''HashSet<int>'' could be found (are you missing a using
    directive or an assembly reference?)

    /tmp/tmp0ym0ciij.cs(20,34): error CS0029: Cannot implicitly convert type ''int''
    to ''bool''

    /tmp/tmp0ym0ciij.cs(20,34): error CS1662: Cannot convert lambda expression to
    intended delegate type because some of the return types in the block are not implicitly
    convertible to the delegate return type

    /tmp/tmp0ym0ciij.cs(20,67): error CS0029: Cannot implicitly convert type ''int''
    to ''bool''

    /tmp/tmp0ym0ciij.cs(20,67): error CS1662: Cannot convert lambda expression to
    intended delegate type because some of the return types in the block are not implicitly
    convertible to the delegate return type

    /tmp/tmp0ym0ciij.cs(20,81): error CS0021: Cannot apply indexing with [] to an
    expression of type ''HashSet<int>''

    '
  timestamp: 1659977270
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        return n % 100 == 0 ? n : (n
    % 100 != 0 ? 0 : 1) +\n            n % 100 % 10 == 0 ? n : (n % 100 % 10 != 0
    ? 0 : 1) +\n            n % 10 == 0 ? n : (n % 10 != 0 ? 0 : 1) +\n            n
    % 7 == 0 ? n : (n % 7 != 0 ? 0 : 1);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <901b379d9b184bc8b0c345f6a26c3d3c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <901b379d9b184bc8b0c345f6a26c3d3c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977270
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 1;\n        long
    count = 0;\n        long count = 0;\n        int divisor = 3;\n        if (n %
    10 == 7)\n            count++;\n        if (n % 10 == 3)\n            count++;\n
    \       if (n % 10 == 6)\n            count++;\n        if (n % 10 == 0)\n            count++;\n
    \       if (n % 10 == 4)\n            count++;\n        if (n % 10 == 5)\n            count++;\n
    \       if (n % 10 == 1)\n            count++;\n        if (n % 10 == 2)\n            count++;\n
    \       if (n % 10 == 8)\n            count++;\n        if (n % 10 == 9)\n            count++;\n
    \       if (n % 10 == 0)\n            count++;\n        if (n % 10 == 3)\n            count++;\n
    \       if (n % 10 == 5)\n            count++;\n        if (n % 10 == 6)\n            count++;\n
    \       if (n % 10 == 7)\n            count++;\n        if (n % 10 == 1)\n            count++;\n
    \       if (n % 10 == 2)\n            count++;\n        if (n % 10 == 8)\n            count++;\n
    \       if (n % 10 == 9)\n            count++;\n        if (n % 10 == 4)\n            count++;\n
    \       if (n % 10 == 6)\n            count++;\n        if (n % 10 == 7)\n            count++;\n
    \       if (n % 10 == 0)\n            count++;\n        if (n % 10 == 3)\n            count++;\n
    \       if (n % 10 == 5)\n            count++;\n        if (n % 10 == 6)\n            count++;\n
    \       if (n % 10 == 7)\n            count++;\n        if (n % 10 == 1)\n            count++;\n
    \       if (n % 10 == 2)\n            count++;\n        if (n % 10 == 8)\n            count++;\n
    \       if (n % 10 == 9)\n            count++;\n        if (n % 10 == 4)\n            count++;\n
    \       if (n % 10 == 6)\n            count++;\n        if (n % 10 == 7)\n            count++;\n
    \       if (n % 10 == 0)\n            count++;\n        if (n % 10 == 3)\n            count++;\n
    \       if (n % 10 == 5)\n            count++;\n        if (n % 10 == 6)\n            count++;\n
    \       if (n % 10 == 7)\n            count++;\n        if (n % 10 == 1)\n            count++;\n
    \       if (n % 10 == 2)\n            count++;\n        if (n % 10 == 8)\n            count++;\n
    \       if (n % 10 == 9)\n            count++;\n        if (n % 10 == 4)\n            count++;\n
    \       if (n % 10 == 6)\n            count++;\n        if (n % 10 == 7)\n            count++;\n
    \       if (n % 10 == 0)\n            count++;\n        if (n % 10 == 3)\n            count++;\n
    \       if (n % 10 == 5)\n            count++;\n        if (n % 10 == 6)\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdl1wb2nh.cs(119,25): error CS1525: Invalid expression term ''}''

    /tmp/tmpdl1wb2nh.cs(119,25): error CS1002: ; expected

    '
  timestamp: 1659977269
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long result = 0;\n        long
    num = n;\n        while (num > 0) {\n            long mod = num % 11;\n            if
    (mod != 0)\n                result ++;\n            num = num / 11;\n            if
    (num % 13 == 0)\n                result ++;\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8c7aaaf064494819bc5b1ce34af1e0e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8c7aaaf064494819bc5b1ce34af1e0e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977270
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var remainder = (n % 11);\n
    \       if (remainder == 0 || remainder == 7) return 1;\n        var result =
    n % 11;\n        if (result == 0) return n / 11;\n        if (result == 7) return
    n / 13;\n        return 1 + FizzBuzz(n / 11);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1fc41b74db374e6c945dac04753a71db>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1fc41b74db374e6c945dac04753a71db>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977270
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        int count = 0;\n        long
    temp = n;\n        while (temp != 0) {\n            int digit = Convert.ToInt32(Math.Floor(temp
    % 10));\n            if (digit % 3 == 0 || digit % 5 == 0) {\n                count++;\n
    \           }\n            temp /= 10;\n        }\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuqhkvsyr.cs(20,46): error CS0121: The call is ambiguous between the following
    methods or properties: ''Math.Floor(decimal)'' and ''Math.Floor(double)''

    '
  timestamp: 1659977270
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long numDivisibleBy11 = 0;\n
    \       long numDivisibleBy13 = 0;\n        for (long i = n; i > 0; i /= 11) {\n
    \           if (i % 11 == 0) {\n                numDivisibleBy11++;\n            }\n
    \       }\n        for (long i = n; i > 0; i /= 13) {\n            if (i % 13
    == 0) {\n                numDivisibleBy13++;\n            }\n        }\n        if
    (numDivisibleBy11 == 0 && numDivisibleBy13 == 0) {\n            return 0;\n        }\n
    \       if (numDivisibleBy11 > 0) {\n            return numDivisibleBy11;\n        }\n
    \       if (numDivisibleBy13 > 0) {\n            return numDivisibleBy13;\n        }\n
    \       throw new Exception(\"FizzBuzz can only handle even numbers.\");\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a29d509bfd9f463eb7edf58a5d23a47b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a29d509bfd9f463eb7edf58a5d23a47b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977270
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n < 10) return n;\n        if
    (n / 10 == n % 10) return (n % 10) == 7 ? 1 : n * FizzBuzz(n / 10);\n        if
    (n % 100 == 13) return (n % 10) == 7 ? 1 : n * FizzBuzz(n / 10);\n        if ((n
    % 100 / 10) == 11 && (n % 100 / 10) == 13) return (n % 10) == 7 ? 1 : n * FizzBuzz(n
    / 10);\n        return 0;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L)) ==
    (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dffd898798504a9e8ba9a3a9619925fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dffd898798504a9e8ba9a3a9619925fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977270
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n < 0)\n            throw
    new ArgumentOutOfRangeException(\"n must be nonnegative.\");\n        if (n %
    11 == 0 || n % 13 == 0) {\n            return (long)((ulong)n * (ulong)100000000);\n
    \       } else {\n            long count = 0;\n            for (long i = 1; i
    <= n; i++) {\n                if (n % i == 0) {\n                    count +=
    (int)(n / i);\n                    n = i - (n % i);\n                }\n            }\n
    \           return count;\n        }\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9beedbcd484d4046a3e90ed1b0da6001>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9beedbcd484d4046a3e90ed1b0da6001>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977270
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long counter = 0;\n        for
    (long i = 1; i <= n; i++) {\n            if ((i % 11) == 0) counter += (i == 11);\n
    \           else if ((i % 13) == 0) counter += (i == 13);\n            Console.WriteLine(\"{0}\",
    i);\n        }\n        return counter;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6etodoly.cs(19,32): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    /tmp/tmp6etodoly.cs(20,37): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659977270
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n % 11 == 0 || (n % 13
    == 0 && n % 11 != 0) || (n % 13 != 0 && n % 11 != 0)) {\n            return (n
    % 11 == 0) ? 1 : 1;\n        } else if (n % 13 != 0) {\n            return 1;\n
    \       } else {\n            return 0;\n        }\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1daa86ad5d2149afb4dc4037e997e26f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1daa86ad5d2149afb4dc4037e997e26f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977270
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long sum = 0;\n        while
    (n-- > 0) {\n            if (n % 11 == 0 || n % 13 == 0) sum += 1;\n            n
    /= 10; \n        }\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e1b06ea244241d7bc8d474ee713bf0b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1e1b06ea244241d7bc8d474ee713bf0b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977270
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long counter = 0;\n        int
    counter2 = 0;\n\n        while (n) {\n            int div = n % 10;\n            if
    (div == 7 || div == 13) {\n                counter++;\n            }\n            n
    /= 10;\n        }\n\n        while (n != 0) {\n            int div = n % 10;\n
    \           if (div == 7 || div == 13) {\n                counter2++;\n            }\n
    \           n /= 10;\n        }\n        return (counter + counter2);\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplo7xsf7s.cs(20,16): error CS0029: Cannot implicitly convert type ''long''
    to ''bool''

    /tmp/tmplo7xsf7s.cs(21,23): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmplo7xsf7s.cs(29,23): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659977270
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        return ((n % 11 == 0) || (n
    % 13 == 0)) ? 0 : 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30defc9eb17643cb95182fb6b17f815b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30defc9eb17643cb95182fb6b17f815b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977270
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        if
    (n < 100) count++;\n        if (n < 500) count += (n/100);\n        if (n < 1000)
    count += (n/500);\n        if (n < 5000) count += (n/1000);\n        return count;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e6c6ac55ae6c4b808bbc86785dc5ff8a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e6c6ac55ae6c4b808bbc86785dc5ff8a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977270
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0, div = n / 11,
    mod = n % 11;\n        while (div % 3 == 0 && mod != 7) {\n            div = div
    / 3;\n            count++;\n            mod = mod % 3;\n        }\n        if
    (mod != 7) {\n            count++;\n        }\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cdeba1daf3f045f58a97835eeeeedebd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cdeba1daf3f045f58a97835eeeeedebd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977270
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long fb = 1;\n        long
    counter = 0;\n        while (fb != 0) {\n            long d = n % fb;\n            n
    /= fb;\n            if (d != 7)\n                counter++;\n            else\n
    \               fb *= 11;\n        }\n        return counter;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n
    \   Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L)) ==
    (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659977275
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        int i = 0;\n        long remainder
    = 0;\n        while ((n / 10) != 0) {\n            i += 1;\n            n = n
    / 10;\n        }\n        while ((n % 10) != 0) {\n            remainder = n %
    10;\n            if (remainder == 7) {\n                Console.WriteLine(i);\n
    \           }\n            n = n / 10;\n        }\n        return i;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3db3697d39cf40a7968bacb927b44b13>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3db3697d39cf40a7968bacb927b44b13>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: '1

    1

    '
  timestamp: 1659977270
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long divisor = 11L * 13L;\n
    \       return n.Where(x => x % divisor == 0).Count();\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpypcfh_0g.cs(18,18): error CS1061: ''long'' does not contain a definition
    for ''Where'' and no accessible extension method ''Where'' accepting a first argument
    of type ''long'' could be found (are you missing a using directive or an assembly
    reference?)

    '
  timestamp: 1659977270
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        var fizzbuzz = new List<long>();\n
    \       var currentValue = 0;\n        var previousValue = 0;\n        var divisibleBy11Or13
    = true;\n        var divisibleByFizz = false;\n        do {\n            currentValue
    = n % 10;\n            previousValue = currentValue;\n            fizzbuzz.Add(currentValue);\n
    \           n = n / 10;\n            while (n % 10 == 0) {\n                n
    = n / 10;\n                divisibleBy11Or13 = true;\n                divisibleByFizz
    = false;\n            }\n            if (n % 10 == 7) {\n                if (divisibleBy11Or13
    && divisibleByFizz) {\n                    fizzbuzz.Add(7L);\n                }\n
    \               else if (divisibleBy11Or13) {\n                    fizzbuzz.Add(7L);\n
    \                   divisibleBy11Or13 = false;\n                }\n                else
    if (divisibleByFizz) {\n                    fizzbuzz.Add(7L);\n                    divisibleByFizz
    = false;\n                }\n            }\n        } while (n != 0);\n        return
    fizzbuzz.Count();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpilwej1ba.cs(23,28): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659977270
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        // Use modular arithmetic to
    determine divisibility by 11, and 13\n        if ((n % 11) == 0)\n            return
    ((n % 13) == 0) ? 0 : (1L);\n        else if ((n % 13) == 0)\n            return
    ((n % 11) == 0) ? 0 : (1L);\n        else\n            return ((n % 11) != 0)
    ? 1 : (2L);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6bec8c87891145b0a84c0a6880d456c5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6bec8c87891145b0a84c0a6880d456c5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977271
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long counter = 0;\n        bool
    isDivisibleBy11 = false;\n        bool isDivisibleBy13 = false;\n        foreach
    (long i in Enumerable.Range(0, n)) {\n            isDivisibleBy11 = i % 11 ==
    0;\n            isDivisibleBy13 = i % 13 == 0;\n            if (isDivisibleBy11
    && isDivisibleBy13) {\n                counter++;\n            }\n        }\n
    \       return counter;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L)) ==
    (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpeztwxo53.cs(20,48): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659977270
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        while
    ((n%11)==7 || (n%13)==7) {\n            ++count;\n            n /= 11;\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <74379b34d6754d0489248c391050c516>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <74379b34d6754d0489248c391050c516>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977271
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        //
    count the number of times the digit 7 appears in integers less than n which are
    divisible by 11 or 13\n        while(n>0) {\n            long mod = n%11;\n            long
    mod2 = n%13;\n            // if the integer is divisible by 11 or 13, then it
    is divisible by both 11 and 13, so count this integer\n            if(mod < 2
    && mod2 < 2) {\n                count++;\n            }\n            n/=13;\n
    \           n/=11;\n        }\n        return count;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <00a68665477845fe9b93556a8e30d746>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <00a68665477845fe9b93556a8e30d746>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977271
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long total = 0;\n        for
    (long i = 0; i <= n; i++) {\n            if (i % 11 == 0 || (n % 11 == 0 && i
    % 13 == 0)) {\n                total += 1;\n            }\n        }\n        return
    total;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c38630dd49e54d8f82c1be640c665ed3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c38630dd49e54d8f82c1be640c665ed3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977271
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n % 11 == 0)\n            return
    n;\n        if (n % 13 == 0)\n            return n;\n        return n;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8ff132cab314964b70535db3830fd03>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8ff132cab314964b70535db3830fd03>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977271
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        // return 0L;\n        var
    x = n % 11;\n        var y = n % 13;\n        var z = n % 12;\n\n        if (z
    == 2 || z == 3) return 1L;\n        if (z == 0) return 0;\n\n        if (x !=
    0 || y != 0 || z != 0) return 2L;\n\n        if (n % 13 == 0) return 3L;\n\n        return
    -1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4d6f6514e5ae45cc807d102cb51e877b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4d6f6514e5ae45cc807d102cb51e877b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977271
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n % 11 == 0 && n % 13 ==
    0) {\n            return n + 1;\n        } else if (n % 11 == 0) {\n            return
    n / 11 + FizzBuzz((n / 11));\n        } else if (n % 13 == 0) {\n            return
    n / 13 + FizzBuzz((n / 13));\n        } else {\n            return 0;\n        }\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cdc7c95befeb4e5e929c8b9c37f102f5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cdc7c95befeb4e5e929c8b9c37f102f5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977271
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        while
    (n > 0) {\n            int digit = (int)(n % 10);\n            if (digit == 7
    || digit == 3) {\n                count++;\n            }\n            n = n /
    10;\n        }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9a9e0203d79414d87cc4fdef98b3a03>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9a9e0203d79414d87cc4fdef98b3a03>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977271
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        for
    (long x = n; x != 0; x /= 11) {\n            if (x % 11 == 7)\n                count
    += 1;\n        }\n        for (long x = n; x != 0; x /= 13) {\n            if
    (x % 13 == 7)\n                count += 1;\n        }\n        return count;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b17edc3d23344314b5ff5829ddb7618a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b17edc3d23344314b5ff5829ddb7618a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977271
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        for
    (int i = 1; i <= n; i += 11) {\n            count += Fizz_i(i);\n        }\n        for
    (int i = n; i > 0; i -= 13) {\n            count += Buzz_i(i);\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl7ar71_3.cs(19,22): error CS0103: The name ''Fizz_i'' does not exist in
    the current context

    /tmp/tmpl7ar71_3.cs(21,22): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpl7ar71_3.cs(22,22): error CS0103: The name ''Buzz_i'' does not exist in
    the current context

    '
  timestamp: 1659977271
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long count = 0;\n        if
    (n % 11 == 0)\n            count += 1;\n        if (n % 13 == 0)\n            count
    += 1;\n        return count;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2bf427352f854b9ba68dd4f48cc3f1f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2bf427352f854b9ba68dd4f48cc3f1f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977271
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        if (n < 0) {\n            throw
    new ArgumentOutOfRangeException(\"n\", \"value must be positive.\");\n        }\n
    \       if (n % 11 == 0 || n % 13 == 0) {\n            // FizzBuzz of 0\n            return
    0;\n        }\n        // FizzBuzz of n\n        long count = n * (n - 1) / 2;\n
    \       while (n % 10 != 0) {\n            count += 1;\n            n /= 10;\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b2157683ab0e47fb9fab327be47140da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b2157683ab0e47fb9fab327be47140da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659977271
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        long counter = 0;\n        foreach
    (var a in BigInteger.DivRem(n, 11, out _)) {\n            if ((a % 11) == 7 ||
    (a % 13) == 7) {\n                counter++;\n            }\n        }\n        return
    counter;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L))
    == (0L));\n    Debug.Assert(FizzBuzz((78L)) == (2L));\n    Debug.Assert(FizzBuzz((79L))
    == (3L));\n    Debug.Assert(FizzBuzz((100L)) == (3L));\n    Debug.Assert(FizzBuzz((200L))
    == (6L));\n    Debug.Assert(FizzBuzz((4000L)) == (192L));\n    Debug.Assert(FizzBuzz((10000L))
    == (639L));\n    Debug.Assert(FizzBuzz((100000L)) == (8026L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqmyjytda.cs(18,27): error CS1579: foreach statement cannot operate on
    variables of type ''BigInteger'' because ''BigInteger'' does not contain a public
    instance definition for ''GetEnumerator''

    '
  timestamp: 1659977271
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return the number of times the digit 7 appears in integers less
    than n which are divisible by 11 or 13.\n    // >>> FizzBuzz((50L))\n    // (0L)\n
    \   // >>> FizzBuzz((78L))\n    // (2L)\n    // >>> FizzBuzz((79L))\n    // (3L)\n
    \   public static long FizzBuzz(long n) {\n        List<long> results = new List<long>();\n
    \       bool flag = false;\n        long current = n % 11;\n        long div =
    n % 13;\n        while (current != 7) {\n            results.Add(current);\n            current
    = n % 11;\n        }\n        flag = (current == 7);\n        while (!flag) {\n
    \           results.Add(current);\n            current = n % 13;\n        }\n
    \       foreach (long i in results) {\n            if (i % 13 == 0 || i % 11 ==
    0) {\n                continue;\n            } else {\n                return
    i;\n            }\n        }\n        return 0;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(FizzBuzz((50L)) == (0L));\n    Debug.Assert(FizzBuzz((78L))
    == (2L));\n    Debug.Assert(FizzBuzz((79L)) == (3L));\n    Debug.Assert(FizzBuzz((100L))
    == (3L));\n    Debug.Assert(FizzBuzz((200L)) == (6L));\n    Debug.Assert(FizzBuzz((4000L))
    == (192L));\n    Debug.Assert(FizzBuzz((10000L)) == (639L));\n    Debug.Assert(FizzBuzz((100000L))
    == (8026L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659977276

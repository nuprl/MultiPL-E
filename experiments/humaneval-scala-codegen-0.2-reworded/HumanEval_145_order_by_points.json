{
  "name": "HumanEval_145_order_by_points",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function which sorts the given list of integers\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[Long](1l.toLong, 11l.toLong, -1l.toLong, -11l.toLong, -12l.toLong)))\n    // (List[Long](-1l.toLong, -11l.toLong, 1l.toLong, -12l.toLong, 11l.toLong))\n    // >>> orderByPoints((List[Long]()))\n    // (List[Long]())\n    def orderByPoints(nums : List[Long]) : List[Long] = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(orderByPoints((List[Long](1l.toLong, 11l.toLong, -1l.toLong, -11l.toLong, -12l.toLong))).equals((List[Long](-1l.toLong, -11l.toLong, 1l.toLong, -12l.toLong, 11l.toLong))));\n    assert(orderByPoints((List[Long](1234l.toLong, 423l.toLong, 463l.toLong, 145l.toLong, 2l.toLong, 423l.toLong, 423l.toLong, 53l.toLong, 6l.toLong, 37l.toLong, 3457l.toLong, 3l.toLong, 56l.toLong, 0l.toLong, 46l.toLong))).equals((List[Long](0l.toLong, 2l.toLong, 3l.toLong, 6l.toLong, 53l.toLong, 423l.toLong, 423l.toLong, 423l.toLong, 1234l.toLong, 145l.toLong, 37l.toLong, 46l.toLong, 56l.toLong, 463l.toLong, 3457l.toLong))));\n    assert(orderByPoints((List[Long]())).equals((List[Long]())));\n    assert(orderByPoints((List[Long](1l.toLong, -11l.toLong, -32l.toLong, 43l.toLong, 54l.toLong, -98l.toLong, 2l.toLong, -3l.toLong))).equals((List[Long](-3l.toLong, -32l.toLong, -98l.toLong, -11l.toLong, 1l.toLong, 2l.toLong, 43l.toLong, 54l.toLong))));\n    assert(orderByPoints((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong, 10l.toLong, 11l.toLong))).equals((List[Long](1l.toLong, 10l.toLong, 2l.toLong, 11l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong))));\n    assert(orderByPoints((List[Long](0l.toLong, 6l.toLong, 6l.toLong, -76l.toLong, -21l.toLong, 23l.toLong, 4l.toLong))).equals((List[Long](-76l.toLong, -21l.toLong, 0l.toLong, 4l.toLong, 23l.toLong, 6l.toLong, 6l.toLong))));\n    }\n\n}\n",
  "completions": [
    "        nums.sort(new Comparator<Long>() {\n            def compare(x : Long, y : Long) : Int = {\n                var xs = x.toString.toInt\n                var ys = y.toString.toInt\n                if (xs < ys) return -1\n                if (xs > ys) return 1\n                return 0\n            }\n        })",
    "        var sorted = nums.sort(Comparator.comparing(n -> n.toString().chars().map(c -> c - '0').sum()))\n        return sorted",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a)\n            var sum2 = sumDigits(b)\n            if (sum1 < sum2) return -1\n            if (sum1 > sum2) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their strings.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            if (a.length() < b.length()) return -1\n            if (a.length() > b.length()) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of their characters.\n    // For example:\n    // >>> orderByChars((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\"))\n    // >>> orderByChars((List[String]()))\n    // (List[String]())\n    def orderByChars(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            if (a.length() < b.length()) return -1\n            if (a.length() > b.length()) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of their vowels.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"bb\", \"cc",
    "        nums.sort(Comparator.comparing(n -> n.toString().chars().map(c -> c - '0').sum()))",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA != sumB) {\n                return sumA - sumB;\n            } else {\n                return a - b;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels contained in them.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var countA = countVowels(a);\n            var countB = countVowels(b);\n            if (countA != countB) {\n                return countA - countB;\n            } else {\n                return a - b;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of consonants contained in them.\n    // For example:\n    // >>> orderByConsonants((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\",",
    "        nums.sort(new (__ -> {\n            var sum = 0l\n            for (i <- 0 until nums.length) {\n                sum += nums[i].toLong\n            }\n            return sum\n        }))",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a)\n            var sum2 = sumDigits(b)\n            if (sum1 == sum2) {\n                return a - b\n            } else {\n                return sum1 - sum2\n            }\n        })\n    }\n\n    // Return the sum of digits of the given number\n    def sumDigits(n : Long) : Long = {\n        var sum = 0l\n        while (n > 0) {\n            sum += n % 10\n            n /= 10\n        }\n        return sum",
    "        var sorted = nums.sort(Comparator.comparingLong(x -> x / 10).thenComparingLong(x -> x % 10))\n        return sorted",
    "        nums.sort(Comparator.comparing(n -> n.toString().chars().map(c -> c - '0').sum()))",
    "        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = sumDigits(n1);\n            var sum2 = sumDigits(n2);\n            if (sum1 < sum2) return -1;\n            if (sum1 > sum2) return 1;\n            return 0;\n        }))",
    "        nums.sort((a, b) -> {\n            var sum1 = a.toLong + b.toLong\n            var sum2 = b.toLong + a.toLong\n            return sum1.compareTo(sum2)\n        })",
    "        nums.sort((a, b) -> {\n            var sum1 = a.toLong + b.toLong\n            var sum2 = b.toLong + a.toLong\n            if (sum1 == sum2) {\n                return a.compareTo(b)\n            } else {\n                return sum1.compareTo(sum2)\n            }\n        })",
    "        nums.sort(new (__ -> 0) {\n            def apply(x : Long, y : Long) : Int = {\n                var sum = 0\n                for (i <- 0 until x.toString.length) {\n                    sum = sum + x.toString.charAt(i).toInt\n                }\n                for (i <- 0 until y.toString.length) {\n                    sum = sum + y.toString.charAt(i).toInt\n                }\n                sum\n            }\n        })",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA != sumB) {\n                return sumA - sumB;\n            } else {\n                return a - b;\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels contained in them.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")))\n    // (List[String](\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var countA = countVowels(a);\n            var countB = countVowels(b);\n            if (countA != countB) {\n                return countA - countB;\n            } else {\n                return a.compareTo(b);\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of consonants contained in them.\n    // For example:\n    // >>> orderByConsonants((List[String](\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")))\n    // (List[String](\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"))\n    // >>> orderByConsonants((List[String]()))\n    // (List[String]())\n    def orderByConsonants(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var countA = countConsonants(a);\n            var countB = countConsonants(b);\n            if (countA != countB) {\n                return countA - countB;\n            } else {\n",
    "        nums.sort(Comparator.comparing(x -> x.toString().replaceAll(\"[^0-9]\", \"\").length()))",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var aSum = a.toLong\n                var bSum = b.toLong\n                if (aSum == bSum) {\n                    return a.compareTo(b)\n                } else {\n                    return aSum - bSum\n                }\n            }\n        })",
    "        nums.sort((x, y) -> {\n            var xSum = 0\n            var ySum = 0\n            for (i <- 0 until nums.size) {\n                xSum += nums[i].toLong\n            }\n            for (i <- 0 until nums.size) {\n                ySum += nums[i].toLong\n            }\n            if (xSum == ySum) {\n                return nums.indexOf(x) - nums.indexOf(y)\n            } else {\n                return xSum - ySum\n            }\n        })",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order based on the length of the string.\n    // For example:\n    // >>> orderByLengths((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByLengths((List[String]()))\n    // (List[String]())\n    def orderByLengths(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                if (a.length() < b.length()) return -1\n                if (a.length() > b.length()) return 1\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order based on the number of vowels contained in the string.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var countA = countVowels(a)\n                var countB = countVowels(b)\n                if (countA < countB) return -1\n                if (countA > countB) return 1\n                return a - b\n            }\n        })\n    }",
    "        nums.sort((x, y) -> {\n            var xSum = 0\n            var ySum = 0\n            for (i <- 0 until nums.length) {\n                xSum += nums[i].toLong\n            }\n            for (i <- 0 until nums.length) {\n                ySum += nums[i].toLong\n            }\n            if (xSum < ySum) {\n                return -1\n            } else if (xSum > ySum) {\n                return 1\n            } else {\n                return 0\n            }\n        })",
    "        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = 0\n            var sum2 = 0\n            for (i <- 0 until nums.length) {\n                sum1 += nums[i].toLong\n            }\n            for (i <- 0 until nums.length) {\n                sum2 += nums[i].toLong\n            }\n            return sum1.compareTo(sum2)\n        }))",
    "        var sorted = nums.sort(Comparator.comparingInt(n -> (int)n))\n        var sum = 0\n        for (i <- 0 until sorted.size) {\n            sum += (sorted.get(i) * 10)\n        }\n        var result = sorted.zipWithIndex().map(t -> t._2 + \":\" + t._1).toList\n        result.sort(Comparator.comparingInt(t -> (int)t.split(\":\")[0]))\n        return result",
    "        var sorted = nums.sort(Comparator.comparing(n -> n / 10.0).thenComparing(n -> n % 10.0))\n        return sorted",
    "        var sorted = nums.sort(Comparator.comparingInt(n -> n.toString().chars().map(_.digitValue()).sum()))\n        return sorted",
    "        var sorted = nums.sort(Comparator.comparing(x -> x.toString().replaceAll(\"[^0-9]\", \"\")))\n        var sum = 0l\n        for (i <- 0 until sorted.length) {\n            sum += Long.parseLong(sorted[i].toString().replaceAll(\"[^0-9]\", \"\"))\n        }\n        var result = sorted.sort(Comparator.comparing(x -> x.toString().replaceAll(\"[^0-9]\", \"\")).reversed())\n        result.sort(Comparator.comparing(x -> sum - Long.parseLong(x.toString().replaceAll(\"[^0-9]\", \"\"))))\n        return result",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var sumA = a.toString().chars().map(_.toInt).sum()\n                var sumB = b.toString().chars().map(_.toInt).sum()\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return 0\n            }\n        })",
    "        var sorted = nums.sort(Comparator.comparingInt(n -> n.toString().chars().map(c -> c - '0').sum()))\n        return sorted",
    "        nums.sort((a, b) -> {\n            var sum1 = a.toLong + b.toLong\n            var sum2 = b.toLong + a.toLong\n            if (sum1 == sum2) {\n                return a.compareTo(b)\n            } else {\n                return sum1 - sum2\n            }\n        })",
    "        nums.sort(new (__ -> 0) {\n            def apply(x : Long, y : Long) : Int = {\n                var xs = x.toString.toInt\n                var ys = y.toString.toInt\n                var xd = xs % 10\n                var yd = ys % 10\n                if (xd < yd) return -1\n                if (xd > yd) return 1\n                if (xs < ys) return -1\n                if (xs > ys) return 1\n                return 0\n            }\n        })",
    "        var sorted = nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        })\n        return sorted\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"2\", \"12\", \"3\")))\n    // (List[String](\"1\", \"2\", \"3\", \"11\", \"12\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        var sorted = nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        })\n        return sorted\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"2\", \"12\", \"3\")))\n    // (List[String](\"1\", \"2\", \"3\", \"11\", \"12\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        var sorted = nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n",
    "        nums.sort(new Comparator<Long>() {\n            def compare(x : Long, y : Long) : Int = {\n                var xs = x.toString.toInt\n                var ys = y.toString.toInt\n                if (xs < ys) return -1\n                if (xs > ys) return 1\n                if (xs == ys) return x.compareTo(y)\n                return 0\n            }\n        })",
    "        nums.sort(new (__ -> (__.toLong + __.toLong) * 10 + __.toLong) / 10.0)",
    "        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = sumDigits(n1);\n            var sum2 = sumDigits(n2);\n            if (sum1 == sum2) {\n                return n1 - n2;\n            } else {\n                return sum1 - sum2;\n            }\n        })).toList\n    }\n\n    // Return the sum of digits of the given number.\n    def sumDigits(n : Long) : Long = {\n        var sum = 0l;\n        while (n > 0l) {\n            sum = sum + (n % 10l);\n            n = n / 10l;\n        }\n        return sum",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var aSum = a.toLong\n                var bSum = b.toLong\n                if (aSum < bSum) return -1\n                if (aSum > bSum) return 1\n                return 0\n            }\n        })",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints2(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints3(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to",
    "        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = 0\n            var sum2 = 0\n            for (i <- 0 until nums.length) {\n                sum1 += nums[i].toLong\n                sum2 += nums[i].toLong * 10\n            }\n            return sum1 - sum2\n        }))",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA != sumB) {\n                return sumA - sumB;\n            } else {\n                return a - b;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA != sumB) {\n                return sumA - sumB;\n            } else {\n                return a - b;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA != sumB)",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var aSum = 0\n                var bSum = 0\n                for (i <- 0 until a.toString.length) {\n                    aSum += a.toString.charAt(i)\n                    bSum += b.toString.charAt(i)\n                }\n                if (aSum < bSum) return -1\n                if (aSum > bSum) return 1\n                return 0\n            }\n        })",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA != sumB) {\n                return sumA - sumB;\n            } else {\n                return a - b;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their common prefix.\n    // For example:\n    // >>> orderByPrefix((List[String](\"ab\", \"abc\", \"abcd\", \"abd\", \"abef\")))\n    // (List[String](\"ab\", \"abc\", \"abd\", \"abef\", \"abcd\"))\n    // >>> orderByPrefix((List[String]()))\n    // (List[String]())\n    def orderByPrefix(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var lenA = commonPrefixLength(a, b);\n            var lenB = commonPrefixLength(b, a);\n            if (lenA != lenB) {\n                return lenA - lenB;\n            } else {\n                return a.compareTo(b);\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their common prefix.\n    // For example:\n    // >>> orderByPrefix2((List[String](\"ab\", \"abc\", \"abcd\", \"abd\", \"abef\")))\n    // (List[String](\"ab\", \"abc\", \"abd\", \"abef\", \"abcd\"))\n    // >>> orderByPrefix2((List[String]()))\n    // (List[String]())\n    def orderByPrefix2(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var lenA = commonPrefixLength(a, b);\n            var lenB = commonPrefixLength(b, a);\n            if (lenA != lenB) {\n                return lenA - lenB;\n            } else {",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a)\n            var sum2 = sumDigits(b)\n            if (sum1 == sum2) {\n                return a - b\n            } else {\n                return sum1 - sum2\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their strings.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eee\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var len1 = a.length()\n            var len2 = b.length()\n            if (len1 == len2) {\n                return a - b\n            } else {\n                return len1 - len2\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels in their strings.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eee\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var vowels1 = countVowels(a)\n            var vowels2 = countVowels(b)\n            if (vowels1 == vowels2) {\n                return a - b\n            } else {\n                return vowels1 - vowels2\n            }\n        })\n    }\n\n    //",
    "        var sorted = nums.sort(Comparator.comparingLong(x -> x.toString().chars().map(_.digitValue()).sum()))\n        return sorted",
    "        nums.sort(new Comparator<Long>() {\n            def compare(x : Long, y : Long) : Int = {\n                var xs = x.toString.toInt\n                var ys = y.toString.toInt\n                if (xs > ys) return 1\n                if (xs < ys) return -1\n                return 0\n            }\n        })",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their first word.\n    // For example:\n    // >>> orderByWords((List[String](\n    // \"Hello\", \"Hi\", \"Hi\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"Hello\", \"",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their strings.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var lenA = a.length();\n            var lenB = b.length();\n            if (lenA == lenB) {\n                return a - b;\n            } else {\n                return lenA - lenB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of their occurrences.\n    // For example:\n    // >>> orderByOccurrences((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\"))\n    // >>> orderByOccurrences((List[String]()))\n    // (List[String]())\n    def orderByOccurrences(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var countA = nums.count(a);\n            var countB = nums.count(b);\n            if (countA == countB) {\n                return a - b;\n            } else {\n                return countA - countB;\n            }\n        });\n    }\n\n    // Write a function which",
    "        nums.sort(new (__ -> {\n            var sum = 0l\n            for (i <- 0 until nums.length) {\n                sum += nums[i].toLong\n            }\n            return sum\n        }))",
    "        nums.sort(new (__ -> 0) {\n            def apply(x : Long, y : Long) : Int = {\n                var xs = x.toString.toInt\n                var ys = y.toString.toInt\n                if (xs < ys) return -1\n                if (xs > ys) return 1\n                if (x < y) return -1\n                if (x > y) return 1\n                return 0\n            }\n        })",
    "        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = sumDigits(n1);\n            var sum2 = sumDigits(n2);\n            if (sum1 < sum2) return -1;\n            if (sum1 > sum2) return 1;\n            return 0;\n        })).toList()\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = sumDigits(n1);\n            var sum2 = sumDigits(n2);\n            if (sum1 < sum2) return -1;\n            if (sum1 > sum2) return 1;\n            return 0;\n        })).toList()\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = sum",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA == sumB) {\n                    return a.index - b.index\n                } else {\n                    return sumA - sumB\n                }\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels contained in each string.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var countA = countVowels(a)\n                var countB = countVowels(b)\n                if (countA == countB) {\n                    return a.index - b.index\n                } else {\n                    return countA - countB\n                }\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of consonants contained in each string.\n    // For example:\n    // >>> orderByConsonants((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByConsonants((List[String]()))\n    // (List[String]())\n    def orderByConsonants(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var countA = countConsonants(",
    "        var sorted = nums.sort(Comparator.comparingLong(n -> n.toString().chars().map(_.toInt).sum()))\n        return sorted",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        })\n    }\n\n    // Return the sum of digits of the given number.\n    def sumDigits(n : Long) : Long = {\n        var sum = 0l\n        while (n != 0) {\n            sum += n % 10\n            n /= 10\n        }\n        return sum",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 == sum2) {\n                return a - b;\n            } else {\n                return sum1 - sum2;\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 == sum2) {\n                return a - b;\n            } else {\n                return sum1 - sum2;\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 == sum2) {\n                return a - b;\n            } else {\n                return sum1 - sum2;\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 != sum2) {\n                return sum1 - sum2;\n            } else {\n                return a - b;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of words in each string.\n    // For example:\n    // >>> orderByWords((List[String](\n    // \"Hello world\",\n    // \"Hello world\",\n    // \"Hello world\",\n    // \"Hello world\",\n    // \"Hello world\")))\n    // (List[String](\n    // \"Hello world\",\n    // \"Hello world\",\n    // \"Hello world\",\n    // \"Hello world\",\n    // \"Hello world\"))\n    // >>> orderByWords((List[String]()))\n    // (List[String]())\n    def orderByWords(words : List[String]) : List[String] = {\n        words.sort((a, b) -> {\n            var count1 = countWords(a);\n            var count2 = countWords(b);\n            if (count1 != count2) {\n                return count1 - count2;\n            } else {\n                return a - b;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of words in each string.\n    // For example:\n    // >>> orderByWords((List[String](\n    // \"Hello world\",\n    // \"Hello world\",\n    // \"Hello world\",\n    // \"Hello world\",\n    // \"Hello world\")))\n    // (List[String](\n    // \"Hello world\",\n    // \"Hello world\",\n    // \"Hello world\",\n    // \"Hello world\",\n    // \"Hello world\"))\n    // >>> orderByWords((List[String]()))\n    // (List[String]())\n    def orderByWords2(words : List[String]) : List[String] = {\n        words.sort((a, b) -> {\n            var count1 = countWords(",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of the strings.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var lenA = a.length();\n            var lenB = b.length();\n            if (lenA == lenB) {\n                return a - b;\n            } else {\n                return lenA - lenB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels contained in the strings.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var lenA = countVowels(a);\n            var lenB = countVowels(b);\n            if (lenA == lenB) {\n                return a - b;\n            } else {\n                return lenA - lenB;\n            }\n        });\n    }\n\n    //",
    "        nums.sort((x, y) -> {\n            var xSum = x.toLong % 10\n            var ySum = y.toLong % 10\n            if (xSum == ySum) {\n                return x.toLong - y.toLong\n            } else {\n                return xSum - ySum\n            }\n        })",
    "        var sorted = nums.sort(Comparator.comparing(n -> n / 10).thenComparing(n -> n % 10))\n        var result = sorted.toList()\n        for (i <- 0 until sorted.size - 1) {\n            if (sorted.get(i) == sorted.get(i + 1)) {\n                result = result.insert(i + 1, sorted.get(i))\n            }\n        }\n        return result",
    "        var sorted = nums.sort(Comparator.comparingInt(n -> (int)n))\n        var sum = 0\n        for (i <- 0 until sorted.length) {\n            sum += (sorted[i] % 10)\n            sorted[i] = sum\n        }\n        return sorted",
    "        nums.sort(new (__ -> {\n            var sum = 0l\n            for (i <- 0 until nums.length) {\n                sum += nums[i].toLong\n            }\n            return sum\n        }))",
    "        nums.sort((x, y) -> {\n            var xSum = x.toLong % 10\n            var ySum = y.toLong % 10\n            if (xSum == ySum) {\n                return x.compareTo(y)\n            } else {\n                return xSum - ySum\n            }\n        })",
    "        var sorted = nums.sort(Comparator.comparingInt(n -> (int)n))\n        var result = sorted.map(n -> n.toString()).toList\n        return result",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a)\n            var sum2 = sumDigits(b)\n            if (sum1 != sum2) {\n                return sum1 - sum2\n            } else {\n                return a - b\n            }\n        })",
    "        nums.sort(Comparator.comparingLong(n -> n.toString().chars().map(_.toChar).reduce((a, b) -> a * 10 + b).toLong()))",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var aSum = a.toString().chars().map(_.toInt).sum()\n                var bSum = b.toString().chars().map(_.toInt).sum()\n                if (aSum == bSum) {\n                    return a.compareTo(b)\n                } else {\n                    return aSum - bSum\n                }\n            }\n        })",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var aSum = sumDigits(a)\n                var bSum = sumDigits(b)\n                if (aSum == bSum) {\n                    return a.index - b.index\n                } else {\n                    return aSum - bSum\n                }\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels in each string.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var aVowels = countVowels(a)\n                var bVowels = countVowels(b)\n                if (aVowels == bVowels) {\n                    return a.index - b.index\n                } else {\n                    return aVowels - bVowels\n                }\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of consonants in each string.\n    // For example:\n    // >>> orderByConsonants((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByConsonants((List[String]()))\n    // (List[String]())\n    def orderByConsonants(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a)\n            var sum2 = sumDigits(b)\n            if (sum1 != sum2) {\n                return sum1 - sum2\n            } else {\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")))\n    // (List[String](\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var count1 = countVowels(a)\n            var count2 = countVowels(b)\n            if (count1 != count2) {\n                return count1 - count2\n            } else {\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of consonants.\n    // For example:\n    // >>> orderByConsonants((List[String](\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")))\n    // (List[String](\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"))\n    // >>> orderByConsonants((List[String]()))\n    // (List[String]())\n    def orderByConsonants(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var count1 = countConsonants(a)\n            var count2 = countConsonants(b)\n            if (count1 != count2) {\n                return count1 - count2\n            } else {\n                return a - b\n            }\n        })\n    }\n\n",
    "        var sorted = nums.sort(Comparator.comparing(n -> n / 10.0).thenComparing(n -> n % 10.0))\n        return sorted",
    "        nums.sort(new Comparator<Long>() {\n            def compare(x : Long, y : Long) : Int = {\n                var x_sum = x.toString.map(_.toInt).sum()\n                var y_sum = y.toString.map(_.toInt).sum()\n                if (x_sum < y_sum) return -1\n                if (x_sum > y_sum) return 1\n                return 0\n            }\n        })",
    "        nums.sort(new Comparator<Long>() {\n            def compare(x : Long, y : Long) : Int = {\n                var x_sum = 0\n                var y_sum = 0\n                for (i <- 0 until x.toString.length) {\n                    x_sum += x.toString.charAt(i) * (10 ** i)\n                }\n                for (i <- 0 until y.toString.length) {\n                    y_sum += y.toString.charAt(i) * (10 ** i)\n                }\n                if (x_sum == y_sum) {\n                    return x.compareTo(y)\n                } else {\n                    return x_sum - y_sum\n                }\n            }\n        })",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a)\n            var sumB = sumDigits(b)\n            if (sumA < sumB) return -1\n            if (sumA > sumB) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumDigits(a)\n            var sumB = sumDigits(b)\n            if (sumA < sumB) return -1\n            if (sumA > sumB) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumDigits(a)\n            var sumB = sumDigits(b)\n            if (sumA < sumB) return -1\n            if (sum",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a)\n            var sumB = sumDigits(b)\n            if (sumA != sumB) {\n                return sumA - sumB\n            } else {\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of the strings.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var lenA = a.length()\n            var lenB = b.length()\n            if (lenA != lenB) {\n                return lenA - lenB\n            } else {\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels contained in the strings.\n    // For example:\n    // >>> orderByVowels((List[String](\n    // \"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\")))\n    // (List[String](\n    // \"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var vowelsA = countVowels(a)\n            var vowelsB = countVowels(b)\n            if (vowelsA != vowelsB) {\n                return vowelsA - vowelsB\n            } else {\n                return a - b\n            }\n        ",
    "        var sorted = nums.sort(Comparator.comparingInt(n -> (int)n))\n        var result = sorted.map(n -> n.toLong)\n        return result",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var sumA = 0l\n                var sumB = 0l\n                for (i <- 0 until a.toString.length) {\n                    sumA += a.toString.charAt(i) * (10l ** i)\n                }\n                for (i <- 0 until b.toString.length) {\n                    sumB += b.toString.charAt(i) * (10l ** i)\n                }\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return 0\n            }\n        })",
    "        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = sumDigits(n1);\n            var sum2 = sumDigits(n2);\n            if (sum1 < sum2) return -1;\n            if (sum1 > sum2) return 1;\n            return 0;\n        })).toList()\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels contained in them.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> (n1, n2) -> {\n            var count1 = countVowels(n1);\n            var count2 = countVowels(n2);\n            if (count1 < count2) return -1;\n            if (count1 > count2) return 1;\n            return 0;\n        })).toList()\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of consonants contained in them.\n    // For example:\n    // >>> orderByConsonants((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var aSum = a.toLong\n                var bSum = b.toLong\n                if (aSum < bSum) return -1\n                if (aSum > bSum) return 1\n                return a.compareTo(b)\n            }\n        })",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum",
    "        nums.sort(new (__ -> {\n            var sum = 0l\n            for (i <- 0 until nums.length) {\n                sum += nums[i].toLong\n            }\n            return sum\n        }))",
    "        nums.sort(new (__ -> (nums[i] + nums[i+1]) - (nums[i] + nums[i+1])));",
    "        var sorted = nums.sort(Comparator.comparingInt(n -> n / 10).thenComparingInt(n -> n % 10))\n        return sorted",
    "        nums.sort((a, b) -> {\n            var sum1 = 0\n            var sum2 = 0\n            for (i <- 0 until nums.length) {\n                sum1 += nums[i].toLong\n                sum2 += nums[i].toLong * i\n            }\n            return sum1 - sum2\n        })",
    "        nums.sort(Comparator.comparing(n -> sumDigits(n))).toList()\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their first character.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eee\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        nums.sort(Comparator.comparing(n -> n.length())).toList()\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their first character.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eee\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength2(nums : List[String]) : List[String] = {\n        nums.sort(Comparator.comparing(n -> n.length())).toList()\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their first character.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eee\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength3(nums : List[String]) : List[String] = {\n        nums.sort(Comparator.comparing(n -> n.length())).toList()\n    }",
    "        var sorted = nums.toJavaList()\n        sorted.sort((a, b) -> {\n            var sumA = sumDigits(a)\n            var sumB = sumDigits(b)\n            if (sumA < sumB) return -1\n            if (sumA > sumB) return 1\n            return a - b\n        })\n        return sorted\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order based on the length of the strings.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        var sorted = nums.toJavaList()\n        sorted.sort((a, b) -> {\n            if (a.length() < b.length()) return -1\n            if (a.length() > b.length()) return 1\n            return a - b\n        })\n        return sorted\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order based on the number of vowels contained in the strings.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        var sorted = nums.toJavaList()\n        sorted.sort((a, b) -> {\n            var countA = countVowels(a)\n            var countB = countVowels(b)\n            if (countA < countB) return -1\n            if (countA > countB) return 1\n            return a - b\n        })\n        return sorted",
    "        nums.sort(new (__ -> 0) {\n            def apply(x : Long, y : Long) : Int = {\n                var xs = x.toString.toInt\n                var ys = y.toString.toInt\n                if (xs < ys) return -1\n                if (xs > ys) return 1\n                if (x < y) return -1\n                if (x > y) return 1\n                return 0\n            }\n        })",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a)\n            var sumB = sumDigits(b)\n            if (sumA != sumB) {\n                return sumA - sumB\n            } else {\n                return a - b\n            }\n        })\n    }\n\n    // Return the sum of digits of the given number.\n    def sumDigits(n : Long) : Long = {\n        var sum = 0l\n        while (n != 0) {\n            sum += n % 10\n            n /= 10\n        }\n        return sum",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : int {\n                var a_sum = 0\n                var b_sum = 0\n                for (i <- 0 until a.toString().length()) {\n                    var digit = a.toString().charAt(i) - '0'\n                    a_sum += digit * Math.pow(10, i)\n                }\n                for (i <- 0 until b.toString().length()) {\n                    var digit = b.toString().charAt(i) - '0'\n                    b_sum += digit * Math.pow(10, i)\n                }\n                return a_sum - b_sum\n            }\n        })",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sum1 = sumDigits(a)\n                var sum2 = sumDigits(b)\n                if (sum1 == sum2) {\n                    return a.index - b.index\n                } else {\n                    return sum1 - sum2\n                }\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order based on the number of vowels in each string.\n    // For example:\n    // >>> orderByVowels((List[String](\n    // \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\")))\n    // (List[String](\n    // \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var count1 = countVowels(a)\n                var count2 = countVowels(b)\n                if (count1 == count2) {\n                    return a.index - b.index\n                } else {\n                    return count1 - count2\n                }\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order based on the number of consonants in each string.\n    // For example:\n    // >>> orderByConsonants((List[String](\n    // \"",
    "        nums.sort((x, y) -> {\n            var x_sum = 0\n            var y_sum = 0\n            for (i <- 0 until x.toString.length) {\n                x_sum += x.toString.charAt(i) - '0'\n                y_sum += y.toString.charAt(i) - '0'\n            }\n            if (x_sum == y_sum) {\n                return x.toString.compareTo(y.toString)\n            } else {\n                return x_sum - y_sum\n            }\n        })",
    "        nums.sort(Comparator.comparing(n -> n.toString()))",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                return a.toLong() + b.toLong()\n            }\n        })",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels contained in them.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var countA = countVowels(a)\n                var countB = countVowels(b)\n                if (countA < countB) return -1\n                if (countA > countB) return 1\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of consonants contained in them.\n    // For example:\n    // >>> orderByConsonants((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a)\n            var sumB = sumDigits(b)\n            if (sumA < sumB) return -1\n            if (sumA > sumB) return 1\n            return a - b\n        })\n    }\n\n    // Return the sum of digits of the given number.\n    def sumDigits(n : Long) : Long = {\n        var sum = 0l\n        while (n > 0) {\n            sum += n % 10\n            n /= 10\n        }\n        return sum",
    "        var sorted = nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return a - b\n            }\n        })\n        return sorted\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels contained in them.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        var sorted = nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var countA = countVowels(a)\n                var countB = countVowels(b)\n                if (countA < countB) return -1\n                if (countA > countB) return 1\n                return a - b\n            }\n        })\n        return sorted\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of consonants contained in them.\n    // For example:\n    // >>> orderByConsonants((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByConsonants((List[String]()))\n    // (List[String]())\n    def orderByConsonants(nums : List[String]) : List[String] = {\n        var sorted = nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var countA = countCons",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a: Long, b: Long) : Int = {\n                var aSum = a.toLong\n                var bSum = b.toLong\n                if (aSum < bSum) return -1\n                if (aSum > bSum) return 1\n                return a.compareTo(b)\n            }\n        })",
    "        nums.sort(new Comparator<Long>() {\n            def compare(x : Long, y : Long) : Int = {\n                var x_sum = x.toString.map(_.toInt).sum()\n                var y_sum = y.toString.map(_.toInt).sum()\n                if (x_sum < y_sum) return -1\n                if (x_sum > y_sum) return 1\n                return 0\n            }\n        })",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels contained in each string.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var countA = countVowels(a)\n                var countB = countVowels(b)\n                if (countA < countB) return -1\n                if (countA > countB) return 1\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of consonants contained in each string.\n    // For example:\n    // >>> orderByConsonants((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByConsonants((List[String]()))\n    // (List[String]())\n    def orderByConsonants(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var countA = countConsonants(a)\n                var countB = countConsonants",
    "        var sorted = nums.sort(Comparator.comparing(n -> n.toString().chars().map(c -> c - '0').sum()))\n        return sorted",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA != sumB) {\n                return sumA - sumB;\n            } else {\n                return a - b;\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA != sumB) {\n                return sumA - sumB;\n            } else {\n                return a - b;\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA != sumB)",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a)\n            var sum2 = sumDigits(b)\n            if (sum1 < sum2) return -1\n            if (sum1 > sum2) return 1\n            return a - b\n        })",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of integers\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[Long](1l.toLong, 11l.toLong, -1l.toLong, -11l.toLong, -12l.toLong)))\n    // (List[Long](-1l.toLong, -11l.toLong, 1l.toLong, -12l.toLong, 11l.toLong))\n    // >>> orderByPoints((List[Long]()))\n    // (List[Long]())\n    def orderByPoints2(nums : List[Long]) : List[Long] = {\n        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of integers\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[Long](1l.toLong, 11l.toLong, -1l.toLong, -11l.toLong, -12l.toLong)))\n    // (List[Long](-1l.toLong, -11l.toLong, 1l.toLong, -12l.toLong, 11l.toLong))\n    // >>> orderByPoints((List[Long]()))",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var sumA = a.toString().chars().map(c -> c - '0').sum()\n                var sumB = b.toString().chars().map(c -> c - '0').sum()\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return 0\n            }\n        })",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var sumA = a.toString().chars().map(_.toInt).sum()\n                var sumB = b.toString().chars().map(_.toInt).sum()\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return 0\n            }\n        })",
    "        var sorted = nums.toJavaList\n        sorted.sort(Comparator.comparingInt(n -> (int)n))\n        return sorted",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 != sum2) {\n                return sum1 - sum2;\n            } else {\n                return a - b;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 != sum2) {\n                return sum1 - sum2;\n            } else {\n                return a - b;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 != sum2)",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a)\n            var sumB = sumDigits(b)\n            if (sumA < sumB) return -1\n            if (sumA > sumB) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their strings.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eee\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            if (a.length() < b.length()) return -1\n            if (a.length() > b.length()) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of their characters.\n    // For example:\n    // >>> orderByChars((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eee\"))\n    // >>> orderByChars((List[String]()))\n    // (List[String]())\n    def orderByChars(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            if (a.length() < b.length()) return -1\n            if (a.length() > b.length()) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of their vowels.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"bb\", \"cc",
    "        var sorted = nums.sort(Comparator.comparingInt(n -> (int)n))\n        var result = sorted.map(n -> n.toString()).toList\n        return result",
    "        nums.sort(new (__ -> {\n            var sum = 0l\n            for (i <- 0 until nums.length) {\n                sum += nums[i].toLong\n            }\n            return sum\n        }))",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their strings.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var lenA = a.length();\n            var lenB = b.length();\n            if (lenA == lenB) {\n                return a - b;\n            } else {\n                return lenA - lenB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels in their strings.\n    // For example:\n    // >>> orderByVowels((List[String](\n    // \"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\n    // \"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var lenA = countVowels(a);\n            var lenB = countVowels(b);\n            if (lenA == lenB) {\n                return a - b;\n            } else {\n                return lenA - lenB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA != sumB) {\n                return sumA - sumB;\n            } else {\n                return a - b;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their first word.\n    // For example:\n    // >>> orderByWords((List[String](\n    // \"Hello\", \"World\", \"Hello\", \"World\", \"Hello\", \"World\")))\n    // (List[String](\n    // \"Hello\", \"Hello\", \"World\", \"World\", \"Hello\", \"World\"))\n    // >>> orderByWords((List[String]()))\n    // (List[String]())\n    def orderByWords(words : List[String]) : List[String] = {\n        words.sort((a, b) -> {\n            var lenA = a.split(\" \")[0].length();\n            var lenB = b.split(\" \")[0].length();\n            if (lenA != lenB) {\n                return lenA - lenB;\n            } else {\n                return a.compareTo(b);\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their first word.\n    // For example:\n    // >>> orderByWords((List[String](\n    // \"Hello\", \"World\", \"Hello\", \"World\", \"Hello\", \"World\")))\n    // (List[String](\n    // \"Hello\", \"Hello\", \"World\", \"World\", \"Hello\", \"World\"))\n    // >>> orderByWords((List[String]()))\n    // (List[String]())\n    def orderByWords2(words : List[String]) : List[String] = {\n        words.sort((a, b) -> {\n            var lenA = a.split(\" \")[0].length();\n            var lenB = b.split(\" \")[0].length();\n            if (lenA != lenB) {\n                return lenA - lenB;\n",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA < sumB) {\n                    return -1\n                } else if (sumA > sumB) {\n                    return 1\n                } else {\n                    return a - b\n                }\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels in each string.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort(new Comparator<String>() {\n            def compare(a : String, b : String) : Int = {\n                var countA = countVowels(a)\n                var countB = countVowels(b)\n                if (countA < countB) {\n                    return -1\n                } else if (countA > countB) {\n                    return 1\n                } else {\n                    return a - b\n                }\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of consonants in each string.\n    // For example:\n    // >>> orderByConsonants((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByConsonants((List[String]()))\n    // (List[String]())\n    def orderByConsonants(nums : List[String]) : List[String] = {\n",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a)\n            var sumB = sumDigits(b)\n            if (sumA < sumB) return -1\n            if (sumA > sumB) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their strings.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            if (a.length() < b.length()) return -1\n            if (a.length() > b.length()) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels contained in their strings.\n    // For example:\n    // >>> orderByVowels((List[String](\n    // \"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\")))\n    // (List[String](\n    // \"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var countA = countVowels(a)\n            var countB = countVowels(b)\n            if (countA < countB) return -1\n            if (countA > countB) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of consonants contained in their strings.",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum",
    "        nums.sort(new (__ -> {\n            var sum = 0l\n            for (i <- 0 until nums.length) {\n                sum += nums[i].toLong\n            }\n            return sum\n        }))",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        });",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var aSum = a.toLong\n                var bSum = b.toLong\n                if (aSum == bSum) {\n                    return a.compareTo(b)\n                } else {\n                    return aSum - bSum\n                }\n            }\n        })",
    "        var sorted = nums.sort(Comparator.comparing(n -> n / 10).thenComparing(n -> n % 10))\n        return sorted",
    "        var sorted = nums.sort(Comparator.comparingInt(n -> (int)n))\n        var result = sorted.map(n -> n.toLong)\n        return result",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return a.compareTo(b)\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels contained in each string.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var countA = countVowels(a)\n                var countB = countVowels(b)\n                if (countA < countB) return -1\n                if (countA > countB) return 1\n                return a.compareTo(b)\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of consonants contained in each string.\n    // For example:\n    // >>> orderByConsonants((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByConsonants((List[String]()))\n    // (List[String]())\n    def orderByConsonants(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var countA = countConsonants(a)",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a: Long, b: Long) : Int = {\n                var aSum = a.toLong * 10 + a.toLong\n                var bSum = b.toLong * 10 + b.toLong\n                if (aSum == bSum) {\n                    return a.toLong - b.toLong\n                } else {\n                    return aSum - bSum\n                }\n            }\n        })",
    "        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = sumDigits(n1);\n            var sum2 = sumDigits(n2);\n            if (sum1 != sum2) {\n                return sum1 - sum2;\n            } else {\n                return n1 - n2;\n            }\n        })).toJavaList\n    }\n\n    // Return the sum of digits of the given number.\n    def sumDigits(n : Long) : Long = {\n        var sum = 0l\n        while (n > 0) {\n            sum = sum + (n % 10)\n            n = n / 10\n        }\n        return sum",
    "        nums.sort(new (__ -> (__.toLong + __.toLong) % 10) {\n            override def compare(x: Long, y: Long) : Int = {\n                if (x.toLong + y.toLong) % 10 > 9 {\n                    return -1\n                } else if (x.toLong + y.toLong) % 10 < 0 {\n                    return 1\n                } else {\n                    return super.compare(x, y)\n                }\n            }\n        })",
    "        var sorted = nums.toJavaList\n        var sum = 0\n        for (i <- 0 until sorted.size) {\n            sum += nums.apply(i).toLong\n        }\n        var sortedBySum = sorted.sort(Comparator.comparing(nums.apply(i).toLong).reversed())\n        var sortedByIndex = sorted.sort(Comparator.comparing(nums.apply(i).toLong).reversed())\n        return sortedBySum.appendAll(sortedByIndex)",
    "        var sorted = nums.sort(Comparator.comparing(n -> n.toString()))\n        var sortedByPoints = sorted.map(n -> n.toString().chars().reduce(0, (a, b) -> a + b)).toList\n        return sortedByPoints",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        });\n    }\n\n    // Return the sum of digits in the given number.\n    // For example:\n    // >>> sumDigits(123456789l)\n    // 9\n    // >>> sumDigits(1234567890123456789l)\n    // 9\n    // >>> sumDigits(12345678901234567890123456789l)\n    // 9\n    def sumDigits(n : Long) : Long = {\n        var sum = 0l;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // Note: if there are several items with similar sum of their characters,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // Note: if there are several items with similar sum of their characters,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (sumA",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                return a.toLong - b.toLong\n            }\n        })",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels contained in them.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")))\n    // (List[String](\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var countA = countVowels(a);\n            var countB = countVowels(b);\n            if (countA < countB) return -1;\n            if (countA > countB) return 1;\n            return a - b;\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of consonants contained in them.\n    // For example:\n    // >>> orderByConsonants((List[String](\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")))\n    // (List[String](\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"))\n    // >>> orderByConsonants((List[String]()))\n    // (List[String]())\n    def orderByConsonants(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var countA = countConsonants(a);\n            var countB = countConsonants(b);\n            if (countA < countB) return -1;\n            if (countA > countB) return 1;\n            return a -",
    "        var sorted = nums.sort(Comparator.comparing(x -> x.toString().chars().map(c -> c - '0').sum()))\n        return sorted",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 != sum2) {\n                return sum1 - sum2;\n            } else {\n                return a - b;\n            }\n        })",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                return (a + b).toInt - (b + a).toInt\n            }\n        })",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var sumA = a.toString().chars().map(_.toInt).sum()\n                var sumB = b.toString().chars().map(_.toInt).sum()\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return 0\n            }\n        })",
    "        nums.sort(Comparator.comparing(n -> n / 10).thenComparing(n -> n % 10))",
    "        var sorted = nums.sort(Comparator.comparingLong(n -> n / 10).thenComparingLong(n -> n % 10))\n        return sorted",
    "        var sorted = nums.sort((a, b) -> {\n            var sumA = a.toLong + b.toLong\n            var sumB = b.toLong + a.toLong\n            return sumA.compareTo(sumB)\n        })\n        return sorted",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        });\n    }\n\n    // Return the sum of digits of the given number.\n    // For example:\n    // >>> sumDigits(1l)\n    // 1\n    // >>> sumDigits(11l)\n    // 2\n    // >>> sumDigits(-1l)\n    // 1\n    // >>> sumDigits(-11l)\n    // 2\n    // >>> sumDigits(-12l)\n    // 3\n    def sumDigits(n : Long) : Long = {\n        var sum = 0l;\n        while (n > 0) {\n            sum += n % 10;\n            n /= 10;\n        }\n        return sum;",
    "        var sorted = nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var aSum = sumDigits(a)\n                var bSum = sumDigits(b)\n                if (aSum == bSum) {\n                    return a.index - b.index\n                } else {\n                    return aSum - bSum\n                }\n            }\n        })\n        return sorted\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their strings.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        var sorted = nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var aLen = a.length()\n                var bLen = b.length()\n                if (aLen == bLen) {\n                    return a.index - b.index\n                } else {\n                    return aLen - bLen\n                }\n            }\n        })\n        return sorted\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels in their strings.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        var sorted = nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var aVowels = countVowels(a)\n                var bVowels = countVowels",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 != sum2) {\n                return sum1 - sum2;\n            } else {\n                return a - b;\n            }\n        })",
    "        var sorted = nums.toJavaList()\n        sorted.sort(Comparator.comparingInt(n -> (int)n))\n        return sorted",
    "        nums.sort(new (__ -> {\n            var sum = 0l\n            for (i <- 0 until nums.length) {\n                sum += nums[i].toLong\n            }\n            return sum\n        }))",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA == sumB) {\n                return a.compareTo(b);\n            } else {\n                return sumA - sumB;\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints2(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (sumA == sumB) {\n                return a.compareTo(b);\n            } else {\n                return sumA - sumB;\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints3(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (sumA == sumB) {\n                return a.compareTo(b);\n            } else {\n                return sumA - sumB;\n            }\n        })\n    }\n\n    // Write a function which sorts the",
    "        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = 0\n            var sum2 = 0\n            for (i <- 0 until nums.size) {\n                sum1 += nums[i].toLong\n                sum2 += nums[i].toLong * i\n            }\n            return sum1 - sum2\n        }))",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 != sum2) {\n                return sum1 - sum2;\n            } else {\n                return a - b;\n            }\n        });\n        return nums;\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels in each string.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var count1 = countVowels(a);\n            var count2 = countVowels(b);\n            if (count1 != count2) {\n                return count1 - count2;\n            } else {\n                return a - b;\n            }\n        });\n        return nums;\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of consonants in each string.\n    // For example:\n    // >>> orderByConsonants((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByConsonants((List[String]()))\n    // (List[String]())\n    def orderByConsonants(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var count1 = countConsonants(a);\n            var count2 = countConsonants(b);\n            if (count1 != count2) {\n                return count1 - count",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA != sumB) {\n                return sumA - sumB;\n            } else {\n                return a - b;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of the strings.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var lenA = a.length();\n            var lenB = b.length();\n            if (lenA != lenB) {\n                return lenA - lenB;\n            } else {\n                return a - b;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels in the strings.\n    // For example:\n    // >>> orderByVowels((List[String](\n    // \"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\n    // \"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var lenA = countVowels(a);\n            var lenB = countVowels(b);\n            if (lenA != lenB) {\n                return lenA - lenB;\n            } else {\n                return a - b;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var aSum = a.toLong\n                var bSum = b.toLong\n                if (aSum < bSum) return -1\n                if (aSum > bSum) return 1\n                return a.compareTo(b)\n            }\n        })",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a)\n            var sumB = sumDigits(b)\n            if (sumA != sumB) {\n                return sumA - sumB\n            } else {\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order based on the length of the strings.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"ccc\", \"dddd\", \"bb\", \"a\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var lenA = a.length()\n            var lenB = b.length()\n            if (lenA != lenB) {\n                return lenA - lenB\n            } else {\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order based on the number of vowels in the strings.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"ccc\", \"dddd\", \"bb\", \"a\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var lenA = a.length()\n            var lenB = b.length()\n            if (lenA != lenB) {\n                return lenA - lenB\n            } else {\n                return countVowels(a) - countVowels(b)\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order based",
    "        nums.sort((a, b) -> {\n            var sum1 = a.toLong + b.toLong\n            var sum2 = b.toLong + a.toLong\n            if (sum1 == sum2) {\n                return a.compareTo(b)\n            } else {\n                return sum1 - sum2\n            }\n        })",
    "        nums.sort(Comparator.comparing(n -> n.toString().chars().map(_.toChar).reduce((a, b) -> a + b).getAsInt()))",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 != sum2) {\n                return sum1 - sum2;\n            } else {\n                return a - b;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of words in each string.\n    // For example:\n    // >>> orderByWords((List[String](\n    // \"Hello, world!\",\n    // \"Hello, world!\",\n    // \"Hello, world!\",\n    // \"Hello, world!\",\n    // \"Hello, world!\")))\n    // (List[String](\n    // \"Hello, world!\",\n    // \"Hello, world!\",\n    // \"Hello, world!\",\n    // \"Hello, world!\",\n    // \"Hello, world!\"))\n    def orderByWords(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var count1 = countWords(a);\n            var count2 = countWords(b);\n            if (count1 != count2) {\n                return count1 - count2;\n            } else {\n                return a - b;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of words in each string.\n    // For example:\n    // >>> orderByWords((List[String](\n    // \"Hello, world!\",\n    // \"Hello, world!\",\n    // \"Hello, world!\",\n    // \"Hello, world!\",\n    // \"Hello, world!\")))\n    // (List[String](\n    // \"Hello, world!\",\n    // \"Hello, world!\",\n    // \"Hello, world!\",\n    // \"Hello, world!\",\n    // \"Hello, world!\"))\n    def orderByWords2(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var count1 = countWords(a);\n            var count2 = countWords(b);\n            if (count1 !=",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 == sum2) {\n                return a - b;\n            } else {\n                return sum1 - sum2;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels in each string.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var count1 = countVowels(a);\n            var count2 = countVowels(b);\n            if (count1 == count2) {\n                return a - b;\n            } else {\n                return count1 - count2;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of consonants in each string.\n    // For example:\n    // >>> orderByConsonants((List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"))\n    // >>> orderByConsonants((List[String]()))\n    // (List[String]())\n    def orderByConsonants(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var count1 = countConsonants(a);\n            var count2 = countConsonants(b);\n            if (count1 == count2) {\n                return a - b;\n            } else {\n                return count1 - count",
    "        nums.sort(Comparator.comparing(n -> n / 10).thenComparing(n -> n % 10))",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a)\n            var sum2 = sumDigits(b)\n            if (sum1 < sum2) return -1\n            if (sum1 > sum2) return 1\n            return a - b\n        })",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var sum1 = a.toLong + b.toLong\n                var sum2 = a.toLong - b.toLong\n                if (sum1 > sum2) return 1\n                if (sum1 < sum2) return -1\n                return 0\n            }\n        })",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return a.compareTo(b)\n            }\n        })",
    "        var sorted = nums.sort(Comparator.comparing(x -> x.toString().chars().map(_.toInt).sum()))\n        sorted",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA != sumB) {\n                return sumA - sumB;\n            } else {\n                return a - b;\n            }\n        });",
    "        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = 0l\n            var sum2 = 0l\n            for (i <- 0 until nums.size) {\n                sum1 += nums.get(i).toLong\n            }\n            for (i <- 0 until nums.size) {\n                sum2 += nums.get(i).toLong\n            }\n            if (sum1 == sum2) {\n                return (n1 - n2).toLong\n            } else {\n                return (sum1 - sum2).toLong\n            }\n        }))",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a)\n            var sum2 = sumDigits(b)\n            if (sum1 != sum2) {\n                return sum1 - sum2\n            } else {\n                return a - b\n            }\n        })",
    "        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = sumDigits(n1);\n            var sum2 = sumDigits(n2);\n            if (sum1 == sum2) {\n                return n1 - n2;\n            } else {\n                return sum1 - sum2;\n            }\n        })).toList\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = sumDigits(n1);\n            var sum2 = sumDigits(n2);\n            if (sum1 == sum2) {\n                return n1 - n2;\n            } else {\n                return sum1 - sum2;\n            }\n        })).toList\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> (n1, n2) ->",
    "        var sorted = nums.sort(Comparator.comparing(x -> x.toString().replaceAll(\"[^0-9]\", \"\").toLong()))\n        var result = sorted.toList()\n        result.reverse()\n        return result",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a)\n            var sumB = sumDigits(b)\n            if (sumA < sumB) return -1\n            if (sumA > sumB) return 1\n            return a - b\n        })",
    "        nums.sort(new (__ -> 0) {\n            def apply(x : Long, y : Long) : Int = {\n                var sum = 0\n                for (i <- 0 until x.toInt) {\n                    sum += x.toInt * 10\n                }\n                for (i <- 0 until y.toInt) {\n                    sum += y.toInt * 10\n                }\n                sum\n            }\n        })",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var sumA = a.toString().chars().reduce(0, (x, y) -> x + y)\n                var sumB = b.toString().chars().reduce(0, (x, y) -> x + y)\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return 0\n            }\n        })",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var sumA = 0l\n                var sumB = 0l\n                for (i <- 0 until a.toString.length) {\n                    sumA = sumA + a.toString.charAt(i).toInt\n                }\n                for (i <- 0 until b.toString.length) {\n                    sumB = sumB + b.toString.charAt(i).toInt\n                }\n                if (sumA < sumB) {\n                    return -1\n                } else if (sumA > sumB) {\n                    return 1\n                } else {\n                    return 0\n                }\n            }\n        })",
    "        nums.sort(new (__ -> {\n            var sum = 0l\n            for (i <- 0 until nums.length) {\n                sum += nums[i].toLong\n            }\n            return sum\n        }))",
    "        nums.sort((a, b) -> {\n            var aSum = sumDigits(a)\n            var bSum = sumDigits(b)\n            if (aSum == bSum) {\n                return a - b\n            } else {\n                return aSum - bSum\n            }\n        })\n    }\n\n    // Return the sum of digits of the given number\n    def sumDigits(n : Long) : Long = {\n        var sum = 0l\n        while (n > 0) {\n            sum += n % 10\n            n /= 10\n        }\n        return sum",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their first word.\n    // For example:\n    // >>> orderByLength((List[String](\n    // \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"Hi\", \"Hello\", \"",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sum1 = a.toLong + b.toLong\n                var sum2 = a.toLong - b.toLong\n                if (sum1 == sum2) {\n                    return a.toLong - b.toLong\n                } else {\n                    return sum1 - sum2\n                }\n            }\n        })",
    "        nums.sort(Comparator.comparing(x -> x.toString().chars().map(c -> c - '0').sum()))",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of the strings.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            if (a.length() < b.length()) return -1;\n            if (a.length() > b.length()) return 1;\n            return a - b;\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of vowels contained in the strings.\n    // For example:\n    // >>> orderByVowels((List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\", \"eeeee\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var countA = countVowels(a);\n            var countB = countVowels(b);\n            if (countA < countB) return -1;\n            if (countA > countB) return 1;\n            return a - b;\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA < sumB) return -",
    "        nums.sort(Comparator.comparing(n -> n.toString().replaceAll(\"[^0-9]\", \"\")))",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA != sumB) {\n                return sumA - sumB;\n            } else {\n                return a - b;\n            }\n        })",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 == sum2) {\n                return a - b;\n            } else {\n                return sum1 - sum2;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of integers\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[Long](1l.toLong, 11l.toLong, -1l.toLong, -11l.toLong, -12l.toLong)))\n    // (List[Long](-1l.toLong, -11l.toLong, 1l.toLong, -12l.toLong, 11l.toLong))\n    // >>> orderByPoints((List[Long]()))\n    // (List[Long]())\n    def orderByPoints2(nums : List[Long]) : List[Long] = {\n        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 == sum2) {\n                return a - b;\n            } else {\n                return sum1 - sum2;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of integers\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[Long](1l.toLong, 11l.toLong, -1l.toLong, -11l.toLong, -12l.toLong)))\n    // (List[Long](-1l.toLong, -11l.toLong, 1l.toLong, -12l.toLong, 11l.toLong))\n    // >>> orderByPoints((List[Long]()))",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their first word.\n    // For example:\n    // >>> orderByWords((List[String](\n    // \"Hello\", \"World\", \"Hello\", \"World\", \"Hello\", \"World\")))\n    // (List[String](\n    // \"Hello\", \"Hello\", \"World\", \"World\", \"Hello\", \"World\"))\n    // >>> orderByWords((List[String]()))\n    // (List[String]())\n    def orderByWords(words : List[String]) : List[String] = {\n        words.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var lenA = len(a)\n                var lenB = len(b)\n                if (lenA < lenB) return -1\n                if (lenA > lenB) return 1\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their first word.\n    // For example:\n    // >>> orderByWords((List[String](\n    // \"Hello\", \"World\", \"Hello\", \"World\", \"Hello\", \"World\")))\n    // (List[String](\n    // \"Hello\", \"Hello\", \"World\", \"World\", \"Hello\", \"World\"))\n    // >>> orderByWords((List[String]()))\n    // (List[String]())\n    def orderByWords2(words : List[String]) : List[String] = {\n        words.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var lenA = len(a)\n                var lenB = len(b)\n                if (lenA < lenB) return -1\n                if (len",
    "        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = 0\n            var sum2 = 0\n            for (i <- 0 until nums.size) {\n                sum1 += nums[i].toLong\n                sum2 += nums[i].toLong * i\n            }\n            return sum1 - sum2\n        }))",
    "        nums.sort(new (__ -> 0) {\n            def apply(x : Long, y : Long) : Int = {\n                var sum = 0\n                for (i <- 0 until x) {\n                    sum += x.toLong\n                }\n                for (i <- 0 until y) {\n                    sum += y.toLong\n                }\n                sum\n            }\n        })",
    "        nums.sort(Comparator.comparingInt(n -> (int)n.toLong()))",
    "        nums.sort(new (__ -> {\n            var sum = 0l\n            for (i <- 0 until nums.length) {\n                sum += nums[i].toLong\n            }\n            return sum\n        }))",
    "        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = 0l\n            var sum2 = 0l\n            for (i <- 0 until nums.size) {\n                sum1 += nums[i].toLong\n                sum2 += nums[i].toLong\n            }\n            return sum1 - sum2\n        }))",
    "        var sorted = nums.sort(Comparator.comparing(n -> n.toString()))\n        var result = sorted.map(n -> n.toString()).toList\n        return result",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // Note: if there are several items with similar sum of their characters,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"ab\", \"b\", \"ba\", \"c\")))\n    // (List[String](\"a\", \"ab\", \"ba\", \"b\", \"c\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // Note: if there are several items with similar sum of their characters,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"ab\", \"b\", \"ba\", \"c\")))\n    // (List[String](\"a\", \"ab\", \"ba\", \"b\", \"c\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (",
    "        var sorted = nums.sort(Comparator.comparingInt(n -> (int)n))\n        var result = sorted.toList()\n        result.sort(Comparator.comparingInt(n -> (int)n))\n        return result",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var aSum = sumDigits(a)\n                var bSum = sumDigits(b)\n                if (aSum < bSum) return -1\n                if (aSum > bSum) return 1\n                return a - b\n            }\n        })\n    }\n\n    // Return the sum of digits of the given number.\n    def sumDigits(n : Long) : Long = {\n        var sum = 0l\n        while (n > 0) {\n            sum += n % 10\n            n /= 10\n        }\n        return sum",
    "        nums.sort((x, y) -> {\n            var sum1 = sumDigits(x);\n            var sum2 = sumDigits(y);\n            if (sum1 == sum2) {\n                return x - y;\n            } else {\n                return sum1 - sum2;\n            }\n        });\n        return nums;",
    "        nums.sort((x, y) -> {\n            var xSum = 0\n            var ySum = 0\n            for (i <- 0 until nums.size) {\n                xSum += nums[i].toLong\n            }\n            for (i <- 0 until nums.size) {\n                ySum += nums[i].toLong\n            }\n            if (xSum < ySum) {\n                return -1\n            } else if (xSum > ySum) {\n                return 1\n            } else {\n                return 0\n            }\n        })",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return a - b\n            }\n        })",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // Note: if there are several items with similar sum of their characters,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // Note: if there are several items with similar sum of their characters,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (sumA",
    "        var sorted = nums.toJavaList()\n        sorted.sort(Comparator.comparingInt(n -> (int)n))\n        return sorted",
    "        var sorted = nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var aSum = sumDigits(a)\n                var bSum = sumDigits(b)\n                if (aSum == bSum) {\n                    return a.index - b.index\n                } else {\n                    return aSum - bSum\n                }\n            }\n        })\n        return sorted\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order by the length of their strings.\n    // For example:\n    // >>> orderByLength((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        var sorted = nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                return b.length() - a.length()\n            }\n        })\n        return sorted\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order by the number of their occurrences.\n    // For example:\n    // >>> orderByOccurrences((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByOccurrences((List[String]()))\n    // (List[String]())\n    def orderByOccurrences(nums : List[String]) : List[String] = {\n        var sorted = nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                return b.count - a.count\n            }\n        })\n        return sorted\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order by the number of their occurrences.\n    // For example:\n    // >>> orderByOccurrences((List[String](\"a\", \"bb\", \"cc",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a)\n            var sum2 = sumDigits(b)\n            if (sum1 < sum2) return -1\n            if (sum1 > sum2) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a)\n            var sum2 = sumDigits(b)\n            if (sum1 < sum2) return -1\n            if (sum1 > sum2) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"-1\", \"-11\", \"-12\")))\n    // (List[String](-1, -11, 1, 11, 12))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a)\n            var sum2 = sumDigits(b)\n            if (sum1 < sum2) return -1\n            if (sum",
    "        var sorted = nums.sort(Comparator.comparingInt(n -> (int)n))\n        var result = sorted.map(n -> n.toLong).toJavaList()\n        return result",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA == sumB) {\n                return a.compareTo(b);\n            } else {\n                return sumA - sumB;\n            }\n        });",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA == sumB) {\n                return a - b;\n            } else {\n                return sumA - sumB;\n            }\n        });\n        return nums;\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their strings.\n    // For example:\n    // >>> orderByLengths((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByLengths((List[String]()))\n    // (List[String]())\n    def orderByLengths(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var lenA = a.length();\n            var lenB = b.length();\n            if (lenA == lenB) {\n                return a - b;\n            } else {\n                return lenA - lenB;\n            }\n        });\n        return nums;\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the number of their occurrences.\n    // For example:\n    // >>> orderByOccurrences((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByOccurrences((List[String]()))\n    // (List[String]())\n    def orderByOccurrences(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var countA = nums.count(a);\n            var countB = nums.count(b);\n            if (countA == countB) {\n                return a - b;\n            } else {\n                return countA - countB;\n            }\n        });\n        return nums;\n    }\n\n    ",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a)\n            var sumB = sumDigits(b)\n            if (sumA == sumB) {\n                return a - b\n            } else {\n                return sumA - sumB\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a)\n            var sumB = sumChars(b)\n            if (sumA == sumB) {\n                return a - b\n            } else {\n                return sumA - sumB\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a)\n            var sumB = sumChars(b)\n            if (sumA == sumB) {\n                return a - b\n            } else {\n                return sumA - sumB\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    ",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 < sum2) return -1;\n            if (sum1 > sum2) return 1;\n            return a - b;\n        });\n    }\n\n    // Write a function which sorts the given list of integers\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[Long](1l.toLong, 11l.toLong, -1l.toLong, -11l.toLong, -12l.toLong)))\n    // (List[Long](-1l.toLong, -11l.toLong, 1l.toLong, -12l.toLong, 11l.toLong))\n    // >>> orderByPoints((List[Long]()))\n    // (List[Long]())\n    def orderByPoints2(nums : List[Long]) : List[Long] = {\n        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a);\n            var sum2 = sumDigits(b);\n            if (sum1 < sum2) return -1;\n            if (sum1 > sum2) return 1;\n            return a - b;\n        });\n    }\n\n    // Write a function which sorts the given list of integers\n    // in ascending order according to the sum of their digits.\n    // Note: if there are several items with similar sum of their digits,\n    // order them based on their index in original list.\n    // For example:\n    // >>> orderByPoints((List[Long](1l.toLong, 11l.toLong, -1l.toLong, -11l.toLong, -12l.toLong)))\n    // (List[Long](-1l.toLong, -11l.toLong, 1l.toLong, -12l.toLong, 11l.toLong))\n    // >>> orderByPoints((List[Long]()))\n    ",
    "        nums.sort(new Comparator<Long>() {\n            def compare(a : Long, b : Long) : Int = {\n                var aSum = a.toLong\n                var bSum = b.toLong\n                if (aSum < bSum) return -1\n                if (aSum > bSum) return 1\n                return a.compareTo(b)\n            }\n        })",
    "        nums.sort((a, b) -> {\n            var sum1 = sumDigits(a)\n            var sum2 = sumDigits(b)\n            if (sum1 < sum2) return -1\n            if (sum1 > sum2) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their first word.\n    // For example:\n    // >>> orderByLength((List[String](\n    // \"Hello\", \"World\", \"Hello\", \"World\", \"Hello\", \"World\")))\n    // (List[String](\n    // \"Hello\", \"Hello\", \"World\", \"World\", \"Hello\", \"World\"))\n    // >>> orderByLength((List[String]()))\n    // (List[String]())\n    def orderByLength(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var len1 = firstWord(a).length()\n            var len2 = firstWord(b).length()\n            if (len1 < len2) return -1\n            if (len1 > len2) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the length of their last word.\n    // For example:\n    // >>> orderByLastWordLength((List[String](\n    // \"Hello\", \"World\", \"Hello\", \"World\", \"Hello\", \"World\")))\n    // (List[String](\n    // \"World\", \"Hello\", \"World\", \"Hello\", \"World\", \"Hello\"))\n    // >>> orderByLastWordLength((List[String]()))\n    // (List[String]())\n    def orderByLastWordLength(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var len1 = lastWord(a).length()\n            var len2 = lastWord(b).length()\n            if (len1 < len2) return -1\n            if (len1 > len2) return 1\n            return a - b\n        })\n    ",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA == sumB) {\n                    return a.index - b.index\n                } else {\n                    return sumA - sumB\n                }\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"2\", \"12\", \"3\")))\n    // (List[String](\"1\", \"2\", \"3\", \"11\", \"12\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA == sumB) {\n                    return a.index - b.index\n                } else {\n                    return sumA - sumB\n                }\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their digits.\n    // For example:\n    // >>> orderByPoints((List[String](\"1\", \"11\", \"2\", \"12\", \"3\")))\n    // (List[String](\"1\", \"2\", \"3\", \"11\", \"12\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA == sumB) {\n                    return a.index - b.index",
    "        nums.sort(new (__ -> (n1, n2) -> {\n            var sum1 = 0l\n            var sum2 = 0l\n            for (i <- 0 until nums.length) {\n                sum1 += nums[i].toLong\n            }\n            for (i <- 0 until nums.length) {\n                sum2 += nums[i].toLong\n            }\n            return sum1.compareTo(sum2)\n        }))",
    "        var sorted = nums.sort(Comparator.comparing(x -> x.toString().chars().map(_.toInt).sum()))\n        sorted.sort(Comparator.comparing(x -> nums.indexOf(x)))\n        return sorted",
    "        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var sumA = sumDigits(a)\n                var sumB = sumDigits(b)\n                if (sumA < sumB) return -1\n                if (sumA > sumB) return 1\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order based on the length of the strings.\n    // For example:\n    // >>> orderByLengths((List[String](\"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByLengths((List[String]()))\n    // (List[String]())\n    def orderByLengths(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                if (a.length() < b.length()) return -1\n                if (a.length() > b.length()) return 1\n                return a - b\n            }\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order based on the number of vowels contained in the strings.\n    // For example:\n    // >>> orderByVowels((List[String](\n    // \"a\", \"bb\", \"ccc\", \"dddd\")))\n    // (List[String](\n    // \"a\", \"bb\", \"ccc\", \"dddd\"))\n    // >>> orderByVowels((List[String]()))\n    // (List[String]())\n    def orderByVowels(nums : List[String]) : List[String] = {\n        nums.sort(new (__ -> 0) {\n            def apply(a, b) {\n                var countA = countVowels(a)\n                var countB = countVowels(b)\n                if (countA < countB) return -1\n                if (countA > countB) return 1\n                return a - b\n            }",
    "        var sorted = nums.sort((x, y) -> {\n            var xSum = x.toString().chars().map(_.toInt).sum()\n            var ySum = y.toString().chars().map(_.toInt).sum()\n            return xSum - ySum\n        })\n        return sorted",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a)\n            var sumB = sumDigits(b)\n            if (sumA < sumB) return -1\n            if (sumA > sumB) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a)\n            var sumB = sumChars(b)\n            if (sumA < sumB) return -1\n            if (sumA > sumB) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a)\n            var sumB = sumChars(b)\n            if (sumA < sumB) return -1\n            if (sumA > sumB) return 1\n            return a - b\n        })\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    ",
    "        nums.sort((a, b) -> {\n            var sumA = sumDigits(a);\n            var sumB = sumDigits(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters.\n    // For example:\n    // >>> orderByPoints((List[String](\"a\", \"b\", \"c\", \"d\", \"e\")))\n    // (List[String](\"a\", \"b\", \"c\", \"d\", \"e\"))\n    // >>> orderByPoints((List[String]()))\n    // (List[String]())\n    def orderByPoints(nums : List[String]) : List[String] = {\n        nums.sort((a, b) -> {\n            var sumA = sumChars(a);\n            var sumB = sumChars(b);\n            if (sumA < sumB) return -1;\n            if (sumA > sumB) return 1;\n            return a - b;\n        });\n    }\n\n    // Write a function which sorts the given list of strings\n    // in ascending order according to the sum of their characters"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
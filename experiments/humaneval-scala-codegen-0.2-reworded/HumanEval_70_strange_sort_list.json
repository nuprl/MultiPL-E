{
  "name": "HumanEval_70_strange_sort_list",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given list of integers, return list in strange order.\n    // Strange sorting, is when you start with the minimum value,\n    // then maximum of the remaining integers, then minimum and so on.\n    // Examples:\n    // >>> strangeSortList((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong)))\n    // (List[Long](1l.toLong, 4l.toLong, 2l.toLong, 3l.toLong))\n    // >>> strangeSortList((List[Long](5l.toLong, 5l.toLong, 5l.toLong, 5l.toLong)))\n    // (List[Long](5l.toLong, 5l.toLong, 5l.toLong, 5l.toLong))\n    // >>> strangeSortList((List[Long]()))\n    // (List[Long]())\n    def strangeSortList(lst : List[Long]) : List[Long] = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(strangeSortList((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))).equals((List[Long](1l.toLong, 4l.toLong, 2l.toLong, 3l.toLong))));\n    assert(strangeSortList((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong))).equals((List[Long](5l.toLong, 9l.toLong, 6l.toLong, 8l.toLong, 7l.toLong))));\n    assert(strangeSortList((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong))).equals((List[Long](1l.toLong, 5l.toLong, 2l.toLong, 4l.toLong, 3l.toLong))));\n    assert(strangeSortList((List[Long](5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong, 9l.toLong, 1l.toLong))).equals((List[Long](1l.toLong, 9l.toLong, 5l.toLong, 8l.toLong, 6l.toLong, 7l.toLong))));\n    assert(strangeSortList((List[Long](5l.toLong, 5l.toLong, 5l.toLong, 5l.toLong))).equals((List[Long](5l.toLong, 5l.toLong, 5l.toLong, 5l.toLong))));\n    assert(strangeSortList((List[Long]())).equals((List[Long]())));\n    assert(strangeSortList((List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong, 6l.toLong, 7l.toLong, 8l.toLong))).equals((List[Long](1l.toLong, 8l.toLong, 2l.toLong, 7l.toLong, 3l.toLong, 6l.toLong, 4l.toLong, 5l.toLong))));\n    assert(strangeSortList((List[Long](0l.toLong, 2l.toLong, 2l.toLong, 2l.toLong, 5l.toLong, 5l.toLong, -5l.toLong, -5l.toLong))).equals((List[Long](-5l.toLong, 5l.toLong, -5l.toLong, 5l.toLong, 0l.toLong, 2l.toLong, 2l.toLong, 2l.toLong))));\n    assert(strangeSortList((List[Long](111111l.toLong))).equals((List[Long](111111l.toLong))));\n    }\n\n}\n",
  "completions": [
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var maxIndex = 0\n        var minIndex = 0\n        var i = 0\n        while (i < lst.size) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n                minIndex = i\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n                maxIndex = i\n            }\n            i = i + 1\n        }\n        result = result.append(min)\n        result = result.append(max)\n        for (i = minIndex; i < maxIndex; i = i + 1) {\n            result = result.append(lst.apply(i))\n        }\n        return result",
    "        var result = List[Long](lst.toSeq().toList())\n        var i = 0\n        while (i < result.length - 1) {\n            var j = i + 1\n            while (j < result.length) {\n                if (result.get(i) > result.get(j)) {\n                    var temp = result.get(i)\n                    result.set(i, result.get(j))\n                    result.set(j, temp)\n                }\n                j = j + 1\n            }\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while(i < lst.size) {\n            if(lst.apply(i) < min) {\n                min = lst.apply(i)\n            }\n            if(lst.apply(i) > max) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        var j = 0\n        while(j < lst.size) {\n            if(lst.apply(j) == min) {\n                result = result.append(max)\n            } else if(lst.apply(j) == max) {\n                result = result.append(min)\n            } else {\n                result = result.append(lst.apply(j))\n            }\n            j = j + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var maxIndex = 0\n        var minIndex = 0\n        for (i <- lst.size - 1) {\n            if (lst.apply(i) < min) {\n                min = lst.apply(i)\n                minIndex = i\n            }\n            if (lst.apply(i) > max) {\n                max = lst.apply(i)\n                maxIndex = i\n            }\n        }\n        result = append(result, lst.apply(minIndex))\n        result = append(result, lst.apply(maxIndex))\n        for (i <- lst.size - 2) {\n            result = append(result, lst.apply(i))\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail()) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst.tail()) {\n            if(i < min) {\n                result = result.append(i)\n            }\n            if(i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        for(i <- lst.tail) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst.tail) {\n            if(i < min) {\n                result = result.append(i)\n            }\n            if(i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n            result = result.append(i)\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.size) {\n            var min = lst.apply(i)\n            var max = lst.apply(i)\n            var j = i + 1\n            while (j < lst.size) {\n                if (lst.apply(j) < min) {\n                    min = lst.apply(j)\n                }\n                if (lst.apply(j) > max) {\n                    max = lst.apply(j)\n                }\n                j = j + 1\n            }\n            result = result.updated(i, max)\n            i = i + 1\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var rest = lst.tail\n        var result = List[Long](min)\n        for (i <- 1 to rest.length) {\n            if (rest.head < max) {\n                max = rest.head\n                result = result.append(max)\n            }\n            rest = rest.tail\n        }\n        result = result.append(max)\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var rest = lst.tail\n        var result = ListBuffer[Long]()\n        for (i <- 1 to rest.length) {\n            if (rest.head < min) {\n                min = rest.head\n            }\n            if (rest.head > max) {\n                max = rest.head\n            }\n            result.append(rest.head)\n            rest = rest.tail\n        }\n        result.append(min)\n        result.append(max)\n        return result.toList",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            }\n            if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst.tail) {\n            if (i < min) {\n                result = result.append(i)\n            }\n            if (i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.length) {\n            if (lst.apply(i) < min) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i) > max) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        for (i <- 1 to lst.length - 1) {\n            if (lst.apply(i) < min) {\n                result = result.append(min)\n                min = lst.apply(i)\n            }\n            if (lst.apply(i) > max) {\n                result = result.append(max)\n                max = lst.apply(i)\n            }\n            result = result.append(lst.apply(i))\n        }\n        return result",
    "        var result = List[Long](lst)\n        var min = result.head\n        var max = result.head\n        var rest = result.tail\n        for(i <- 1 until rest.length) {\n            var curr = rest[i]\n            if(curr < min) {\n                min = curr\n            }\n            if(curr > max) {\n                max = curr\n            }\n        }\n        var result2 = List[Long](min, max)\n        for(i <- 1 until rest.length) {\n            result2 = result2.append(rest[i])\n        }\n        return result2",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n            result = result.append(i)\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result.toList",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst.tail) {\n            if (i < min) {\n                result = result.append(i)\n            } else if (i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            result = result.append(lst.apply(i))\n            i = i + 1\n        }\n        return result.append(max).append(min)",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for (i <- lst.tail()) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst.tail()) {\n            if (i < min) {\n                result = result.append(i)\n            } else if (i > max) {\n                result = result.append(i)\n            } else {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        if (lst.isEmpty()) {\n            return lst\n        }\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst) {\n            if (i < min) {\n                result.append(i)\n                min = i\n            } else if (i > max) {\n                result.append(i)\n                max = i\n            }\n        }\n        result.append(min)\n        result.append(max)\n        return result.toList",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        for(i <- lst.tail) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst) {\n            if(i < min) {\n                result = result.append(i)\n                min = i\n            }\n            if(i > max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail()) {\n            if(i < min) {\n                min = i\n            } else if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst) {\n            if(i < min) {\n                result = result.append(i)\n                min = i\n            } else if(i > max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        if (lst.isEmpty()) {\n            return lst\n        }\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n            result.append(i)\n        }\n        result.append(min)\n        result.append(max)\n        return result.toList",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n            result = result.append(i)\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result.toList",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var maxIndex = 0\n        var minIndex = 0\n        var i = 0\n        while (i < lst.size) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n                minIndex = i\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n                maxIndex = i\n            }\n            i = i + 1\n        }\n        result = result.append(min)\n        result = result.append(max)\n        i = minIndex\n        while (i < maxIndex) {\n            result = result.append(lst.apply(i))\n            i = i + 1\n        }\n        i = maxIndex\n        while (i < lst.size) {\n            result = result.append(lst.apply(i))\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var sorted = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.size) {\n            var min = lst.apply(i)\n            var max = lst.apply(i)\n            var j = i + 1\n            while (j < lst.size) {\n                if (lst.apply(j) < min) {\n                    min = lst.apply(j)\n                }\n                if (lst.apply(j) > max) {\n                    max = lst.apply(j)\n                }\n                j = j + 1\n            }\n            result = result.append(min)\n            result = result.append(max)\n            sorted = sorted.append(min)\n            sorted = sorted.append(max)\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).toLong > max.toLong) {\n                max = lst.apply(i)\n            }\n            if (lst.apply(i).toLong < min.toLong) {\n                min = lst.apply(i)\n            }\n            i = i + 1\n        }\n        var j = i\n        while (j < lst.size) {\n            result = result.append(lst.apply(j))\n            j = j + 1\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var maxIndex = 0\n        var minIndex = 0\n        for(i <- lst.size - 1) {\n            if(lst.apply(i) < min) {\n                min = lst.apply(i)\n                minIndex = i\n            }\n            if(lst.apply(i) > max) {\n                max = lst.apply(i)\n                maxIndex = i\n            }\n        }\n        result = append(result, lst.apply(minIndex))\n        result = append(result, lst.apply(maxIndex))\n        for(i <- lst.size - 2) {\n            if(lst.apply(i) < min) {\n                min = lst.apply(i)\n                minIndex = i\n            }\n            if(lst.apply(i) > max) {\n                max = lst.apply(i)\n                maxIndex = i\n            }\n            result = append(result, lst.apply(minIndex))\n            result = append(result, lst.apply(maxIndex))\n        }\n        result = append(result, lst.apply(minIndex))\n        return result",
    "        var result = List[Long](lst.toLong, lst.toLong, lst.toLong, lst.toLong)\n        var i = 0\n        while (i < lst.size && lst.get(i) == lst.get(i)) {\n            i += 1\n        }\n        if (i == lst.size) {\n            return result\n        }\n        var j = lst.size - 1\n        while (j > i && lst.get(j) == lst.get(j)) {\n            j -= 1\n        }\n        var k = i\n        while (k < j) {\n            var temp = lst.get(k)\n            lst.set(k, lst.get(j))\n            lst.set(j, temp)\n            k += 1\n            j -= 1\n        }\n        return result",
    "        var result = List[Long](lst.toLong, lst.toLong, lst.toLong, lst.toLong)\n        for (i <- 0 until lst.length - 1) {\n            var min = lst.head\n            var max = lst.head\n            for (j <- i + 1 until lst.length) {\n                if (lst[j] < min) {\n                    min = lst[j]\n                }\n                if (lst[j] > max) {\n                    max = lst[j]\n                }\n            }\n            result = result.updated(i, max)\n            result = result.updated(i, min)\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        for(i <- lst.tail) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst) {\n            if(i < min) {\n                result = result.append(i)\n            }\n            if(i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for (i <- lst.tail()) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst.tail()) {\n            if (i < min) {\n                result = result.append(i)\n                min = i\n            } else if (i > max) {\n                result = result.append(i)\n                max = i\n            } else {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for (i <- lst.tail()) {\n            if (i < min) {\n                min = i\n            }\n            if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst) {\n            if (i < min) {\n                result = result.append(i)\n            }\n            if (i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        var maxIndex = 0\n        var minIndex = 0\n        for (i <- lst.size - 1) {\n            if (lst[i] < min) {\n                min = lst[i]\n                minIndex = i\n            }\n            if (lst[i] > max) {\n                max = lst[i]\n                maxIndex = i\n            }\n        }\n        result = append(result, lst[minIndex])\n        result = append(result, lst[maxIndex])\n        for (i <- lst.size - 2) {\n            if (lst[i] < min) {\n                result = append(result, lst[i])\n            }\n            if (lst[i] > max) {\n                result = append(result, lst[i])\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var maxIndex = 0\n        var minIndex = 0\n        for(i <- lst.size - 1) {\n            if(lst.apply(i) < min) {\n                min = lst.apply(i)\n                minIndex = i\n            }\n            if(lst.apply(i) > max) {\n                max = lst.apply(i)\n                maxIndex = i\n            }\n        }\n        result = append(result, lst.apply(minIndex))\n        result = append(result, lst.apply(maxIndex))\n        for(i <- lst.size - 2) {\n            if(lst.apply(i) < min) {\n                min = lst.apply(i)\n                minIndex = i\n            }\n            if(lst.apply(i) > max) {\n                max = lst.apply(i)\n                maxIndex = i\n            }\n            result = append(result, lst.apply(minIndex))\n            result = append(result, lst.apply(maxIndex))\n        }\n        result = append(result, lst.apply(minIndex))\n        return result",
    "        if (lst.isEmpty()) {\n            return lst\n        }\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            }\n            if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst) {\n            if (i < min) {\n                result.append(i)\n                min = i\n            }\n            if (i > max) {\n                result.append(i)\n                max = i\n            }\n        }\n        return result.toList",
    "        var result = List[Long](lst.toLong)\n        var max = 0l\n        var min = 0l\n        for(var i = 0; i < lst.size; i++) {\n            if(lst.get(i) > max) {\n                max = lst.get(i)\n            }\n            if(lst.get(i) < min) {\n                min = lst.get(i)\n            }\n        }\n        var i = 0\n        while(i < lst.size) {\n            if(lst.get(i) == max) {\n                result = result.append(lst.get(i))\n                i = i + 1\n            } else if(lst.get(i) == min) {\n                result = result.append(lst.get(i))\n                i = i + 1\n            } else {\n                i = i + 1\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        var i = 1\n        while (i < lst.size()) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        for (i <- 1 to lst.size()) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                result = result.append(lst.apply(i))\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                result = result.append(lst.apply(i))\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        result = result.append(min)\n        result = result.append(max)\n        for (i <- 1 to lst.size - 2) {\n            result = result.append(lst.apply(i + 1))\n        }\n        return result",
    "        var result = List[Long]()\n        var sorted = List[Long](lst)\n        sorted.sort(Comparator.comparingLong(x -> x))\n        var i = 0\n        while (i < sorted.size()) {\n            var j = i + 1\n            while (j < sorted.size() && sorted.apply(j) == sorted.apply(i)) {\n                j += 1\n            }\n            result = result.append(sorted.apply(i))\n            i = j\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var sorted = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.length) {\n            var min = lst.apply(i)\n            var max = lst.apply(i)\n            for (j = i + 1; j < lst.length; j++) {\n                if (lst.apply(j) < min) {\n                    min = lst.apply(j)\n                }\n                if (lst.apply(j) > max) {\n                    max = lst.apply(j)\n                }\n            }\n            result = result.updated(i, max)\n            sorted = sorted.updated(i, min)\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail()) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst.tail()) {\n            if(i < min) {\n                result = result.append(i)\n            }\n            if(i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var max = lst.head\n        var min = lst.head\n        var result = List[Long](max)\n        var i = 1\n        while (i < lst.size) {\n            var cur = lst.apply(i)\n            if (cur > max) max = cur\n            if (cur < min) min = cur\n            result = result.append(cur)\n            i = i + 1\n        }\n        if (min > max) {\n            result = result.append(min)\n            result = result.append(max)\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        lst = lst.tail\n        while (!lst.isEmpty()) {\n            if (lst.head < min) {\n                min = lst.head\n            }\n            if (lst.head > max) {\n                max = lst.head\n            }\n            lst = lst.tail\n        }\n        result = result.append(max)\n        result = result.append(min)\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var rest = lst.tail\n        for (i <- rest.size - 1) {\n            if (rest.head < max) {\n                max = rest.head\n            }\n            if (rest.head > min) {\n                min = rest.head\n            }\n            rest = rest.tail\n        }\n        return (lst.prepend(min).prepend(max).prepend(min).prepend(max))",
    "        if (lst.isEmpty()) {\n            return lst\n        }\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            }\n            if (i > max) {\n                max = i\n            }\n            result = result.append(i)\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result.toList",
    "        var result = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.length) {\n            var min = lst[i]\n            var j = i + 1\n            while (j < lst.length) {\n                if (lst[j] < min) {\n                    min = lst[j]\n                }\n                j = j + 1\n            }\n            result = result.updated(i, min)\n            i = i + 1\n        }\n        return result",
    "        if (lst.isEmpty()) {\n            return lst\n        }\n        var min = lst.head\n        var max = lst.head\n        var rest = lst.tail.map(x -> x - min).toSeq\n        var result = ListBuffer[Long]()\n        for (var i = 0; i < rest.size(); i++) {\n            var value = rest.apply(i)\n            if (value < min) {\n                min = value\n            }\n            if (value > max) {\n                max = value\n            }\n            result.append(value)\n        }\n        result.append(min)\n        result.append(max)\n        return result.toList",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        lst = lst.tail\n        while (lst.nonEmpty()) {\n            if (lst.head < min) {\n                min = lst.head\n            }\n            if (lst.head > max) {\n                max = lst.head\n            }\n            lst = lst.tail\n        }\n        for (i <- 0 until min) {\n            result = result.append(min)\n        }\n        for (i <- 0 until max) {\n            result = result.append(max)\n        }\n        for (i <- 0 until lst) {\n            result = result.append(lst.head)\n            lst = lst.tail\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst) {\n            if (i < min) {\n                result.append(i)\n                min = i\n            } else if (i > max) {\n                result.append(i)\n                max = i\n            }\n        }\n        result.append(min)\n        result.append(max)\n        return result.toList",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        lst = lst.tail\n        while (lst.nonEmpty()) {\n            var cur = lst.head\n            if (cur < min) {\n                min = cur\n            } else if (cur > max) {\n                max = cur\n            }\n            lst = lst.tail\n        }\n        result = result.append(max).append(min)\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        for (i = 0; i < lst.size; i = i + 1) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                result = result.append(lst.apply(i))\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                result = result.append(lst.apply(i))\n            }\n        }\n        return result",
    "        var result = List[Long](lst)\n        var min = result.head\n        var max = result.head\n        var i = 1\n        while (i < result.length) {\n            if (result.head > result[i]) {\n                max = result[i]\n            } else if (result[i] > result.head) {\n                min = result[i]\n            }\n            i = i + 1\n        }\n        result = result.map(x -> {\n            if (x == min) {\n                return max\n            } else if (x == max) {\n                return min\n            } else {\n                return x\n            }\n        })\n        return result",
    "        var result = List[Long]()\n        var max = 0l\n        var min = 0l\n        var i = 0\n        for (i < lst.size) {\n            if (lst.get(i) > max) {\n                max = lst.get(i)\n            }\n            if (lst.get(i) < min) {\n                min = lst.get(i)\n            }\n            result = result.append(lst.get(i))\n            i = i + 1\n        }\n        result = result.append(max)\n        result = result.append(min)\n        return result",
    "        var result = List[Long]()\n        var sorted = lst.sort(Comparator.comparingLong(x -> x))\n        var max = sorted.head\n        var min = sorted.tail.head\n        for (i <- 1 to sorted.size - 2) {\n            var current = sorted.apply(i)\n            if (current > max) {\n                max = current\n            }\n            if (current < min) {\n                min = current\n            }\n        }\n        result = result.append(min)\n        result = result.append(max)\n        result = result.appendAll(sorted.tail.tail)\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var rest = lst.tail\n        var result = ListBuffer[Long]()\n        for (i <- rest.toList.iterator()) {\n            if (i.head < min) {\n                min = i.head\n            }\n            if (i.head > max) {\n                max = i.head\n            }\n        }\n        for (i <- rest.toList.iterator()) {\n            if (i.head < min) {\n                result.append(i.head)\n            }\n            if (i.head > max) {\n                result.append(i.head)\n            }\n        }\n        return result.toList",
    "        var result = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.length) {\n            var min = lst[i]\n            var j = i + 1\n            while (j < lst.length) {\n                if (lst[j] < min) {\n                    min = lst[j]\n                }\n                j = j + 1\n            }\n            result = result.updated(i, min)\n            i = i + 1\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head()\n        var max = lst.head()\n        var result = List[Long](min)\n        var i = 1\n        while (i < lst.size()) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            result = result.append(lst.apply(i))\n            i = i + 1\n        }\n        return result.append(max).append(min)",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        for (i <- lst.tail) {\n            if (i < min) min = i\n            if (i > max) max = i\n        }\n        for (i <- lst) {\n            if (i < min) {\n                result = result.append(i)\n                min = i\n            }\n            if (i > max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst) {\n            if(i < min) {\n                result = result.append(i)\n                min = i\n            }\n            if(i > max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var maxIndex = 0\n        var minIndex = 0\n        var i = 0\n        for(i = 1; i < lst.size(); i++) {\n            if(lst.apply(i) < min) {\n                min = lst.apply(i)\n                minIndex = i\n            }\n            if(lst.apply(i) > max) {\n                max = lst.apply(i)\n                maxIndex = i\n            }\n        }\n        result = append(result, lst.apply(minIndex))\n        result = append(result, lst.apply(maxIndex))\n        for(i = 0; i < lst.size(); i++) {\n            if(i != minIndex && i != maxIndex) {\n                result = append(result, lst.apply(i))\n            }\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var rest = lst.tail\n        var result = ListBuffer[Long]()\n        for (i <- 1 to rest.length) {\n            if (rest.head < max) {\n                max = rest.head\n            }\n            if (rest.head > min) {\n                min = rest.head\n            }\n            result.append(rest.head)\n            rest = rest.tail\n        }\n        result.append(min)\n        result.append(max)\n        return result.toList",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst) {\n            if (i < min) {\n                result = result.append(i)\n                min = i\n            } else if (i > max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        var result = List[Long](lst)\n        var min = result.head\n        var max = result.head\n        var rest = result.tail\n        var i = 1\n        while (i < rest.length) {\n            if (rest.head > max) {\n                max = rest.head\n            }\n            if (rest.tail.head < min) {\n                min = rest.tail.head\n            }\n            var temp = rest.head\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail\n            rest = rest.tail",
    "        var result = List[Long]()\n        var max = lst.reduce(Long.MIN_VALUE, (a, b) => a.max(b))\n        var min = lst.reduce(Long.MAX_VALUE, (a, b) => a.min(b))\n        for (i <- 0 until lst.size) {\n            var value = lst.apply(i)\n            if (value == max) {\n                result = result.append(value)\n                max = lst.apply(i + 1).max(max)\n            } else if (value == min) {\n                result = result.append(value)\n                min = lst.apply(i + 1).min(min)\n            } else {\n                result = result.append(value)\n            }\n        }\n        return result",
    "        if (lst.isEmpty()) {\n            return lst\n        }\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        for (i <- lst.tail) {\n            if (i < max) {\n                max = i\n            } else if (i > min) {\n                min = i\n            }\n        }\n        result = result.append(max)\n        result = result.append(min)\n        result = result.appendAll(lst.tail.filter(_ < max).map(_ + 1))\n        result = result.appendAll(lst.tail.filter(_ > min).map(_ - 1))\n        return result",
    "        var result = List[Long]()\n        var max = 0l\n        var min = 0l\n        var i = 0\n        for (i < lst.size) {\n            if (lst.get(i) > max) {\n                max = lst.get(i)\n            }\n            if (lst.get(i) < min) {\n                min = lst.get(i)\n            }\n            result = result.append(lst.get(i))\n            i = i + 1\n        }\n        if (max == min) {\n            result = result.append(max)\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i) < min) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i) > max) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i) < min) {\n                result = result.append(lst.apply(i))\n            }\n            if (lst.apply(i) > max) {\n                result = result.append(lst.apply(i))\n            }\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i) < min) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i) > max) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i) < min) {\n                result = result.append(min)\n                min = lst.apply(i)\n            }\n            if (lst.apply(i) > max) {\n                result = result.append(max)\n                max = lst.apply(i)\n            }\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for (i <- lst.tail()) {\n            if (i < min) {\n                min = i\n            }\n            if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst.tail()) {\n            if (i < min) {\n                result = result.append(i)\n            }\n            if (i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long](lst)\n        var max = result.max\n        var min = result.min\n        var idx = 0\n        var idxMax = 0\n        var idxMin = 0\n        var idxMaxMin = 0\n        var idxMinMax = 0\n        var idxMaxMinMax = 0\n        var idxMinMaxMin = 0\n        var idxMaxMinMax = 0\n        var idxMinMaxMin = 0\n        var idxMaxMinMaxMin = 0\n        var idxMinMaxMinMax = 0\n        var idxMaxMinMaxMin = 0\n        var idxMinMaxMinMaxMin = 0\n        var idxMaxMinMaxMinMax = 0\n        var idxMinMaxMinMaxMinMax = 0\n        var idxMaxMinMaxMinMaxMinMax = 0\n        var idxMinMaxMinMaxMinMaxMinMax = 0\n        var idxMaxMinMaxMinMaxMinMaxMinMax = 0\n        var idxMinMaxMinMaxMinMaxMinMaxMinMax = 0\n        var idxMaxMinMaxMinMaxMinMaxMinMaxMinMax = 0\n        var idxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 0\n        var idxMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 0\n        var idxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 0\n        var idxMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 0\n        var idxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 0\n        var idxMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 0\n        var idxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 0\n        var idxMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 0\n        var idxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 0\n        var idxMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax = 0\n        var idxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        for (i <- lst.tail) {\n            if (i < min) min = i\n            if (i > max) max = i\n            result = result.append(i)\n        }\n        result = result.append(max)\n        result = result.append(min)\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst) {\n            if (i < min) {\n                result = result.append(i)\n                min = i\n            } else if (i > max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for (i <- lst.tail()) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst.tail()) {\n            if (i < min) {\n                result = result.append(i)\n            } else if (i > max) {\n                result = result.append(i)\n            } else {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while(i < lst.size) {\n            if(lst.apply(i).toLong > max.toLong) {\n                max = lst.apply(i)\n            }\n            if(lst.apply(i).toLong < min.toLong) {\n                min = lst.apply(i)\n            }\n            i = i + 1\n        }\n        var j = 0\n        while(j < lst.size) {\n            if(lst.apply(j).toLong < min.toLong) {\n                result = result.append(lst.apply(j))\n            }\n            if(lst.apply(j).toLong > max.toLong) {\n                result = result.append(lst.apply(j))\n            }\n            j = j + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while(i < lst.size) {\n            if(lst.apply(i) < min) {\n                min = lst.apply(i)\n            }\n            if(lst.apply(i) > max) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        var j = 0\n        while(j < lst.size) {\n            if(lst.apply(j) == min) {\n                result = result.append(max)\n            } else if(lst.apply(j) == max) {\n                result = result.append(min)\n            } else {\n                result = result.append(lst.apply(j))\n            }\n            j = j + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var sorted = lst.sort(Comparator.comparingLong(x -> x))\n        for (i <- 0 until sorted.length - 1) {\n            var min = sorted[i]\n            var max = sorted[sorted.length - 1 - i]\n            result = result.append(min)\n            result = result.append(max)\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var min = lst.head\n        var max = lst.head\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst.tail) {\n            if (i < min) {\n                result = result.prepend(i)\n            } else if (i > max) {\n                result = result.prepend(i)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 0\n        while (i < lst.size) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        result = result.append(min)\n        result = result.append(max)\n        for (i = 0; i < lst.size; i = i + 1) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                result = result.append(lst.apply(i))\n            }\n        }\n        for (i = 0; i < lst.size; i = i + 1) {\n            if (lst.apply(i).compareTo(max) > 0) {\n                result = result.append(lst.apply(i))\n            }\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).compareTo(max) < 0) {\n                max = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(min) > 0) {\n                min = lst.apply(i)\n            }\n            result = result.append(lst.apply(i))\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).toLong > max.toLong) {\n                max = lst.apply(i)\n            }\n            if (lst.apply(i).toLong < min.toLong) {\n                min = lst.apply(i)\n            }\n            i = i + 1\n        }\n        var j = 0\n        while (j < lst.size) {\n            if (lst.apply(j).toLong < min.toLong) {\n                result = result.append(min)\n                min = lst.apply(j)\n            }\n            if (lst.apply(j).toLong > max.toLong) {\n                result = result.append(max)\n                max = lst.apply(j)\n            }\n            j = j + 1\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            }\n            if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst.tail) {\n            if (i == min) {\n                result = result.append(i)\n                min = i\n            }\n            if (i == max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        var maxIndex = 0\n        for (i <- 1 until lst.length) {\n            if (lst[i] > max) {\n                max = lst[i]\n                maxIndex = i\n            }\n        }\n        result = append(result, max)\n        result = append(result, lst.take(maxIndex).toList())\n        result = append(result, min)\n        result = append(result, lst.drop(maxIndex + 1).toList())\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        for (i <- lst.tail) {\n            if (i < min) min = i\n            if (i > max) max = i\n            result = result.append(i)\n        }\n        result = result.append(max)\n        result = result.append(min)\n        return result",
    "        var result = List[Long]()\n        var sorted = List[Long](lst)\n        sorted.sort(Comparator.comparingLong(x -> x))\n        var i = 0\n        while (i < sorted.size()) {\n            var min = sorted.apply(i)\n            var max = sorted.apply(i)\n            for (var j = i + 1; j < sorted.size(); j++) {\n                if (sorted.apply(j) < min) {\n                    min = sorted.apply(j)\n                }\n                if (sorted.apply(j) > max) {\n                    max = sorted.apply(j)\n                }\n            }\n            result = result.append(min)\n            result = result.append(max)\n            i = i + 2\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i) < min) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i) > max) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i) < min) {\n                result = result.append(min)\n                min = lst.apply(i)\n            }\n            if (lst.apply(i) > max) {\n                result = result.append(max)\n                max = lst.apply(i)\n            }\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for (i <- lst.tail()) {\n            if (i < min) {\n                min = i\n            }\n            if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst.tail()) {\n            if (i < min) {\n                result = result.append(i)\n            }\n            if (i > max) {\n                result = result.append(i)\n            }\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail()) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst.tail()) {\n            if(i < min) {\n                result = result.append(i)\n            }\n            if(i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long](lst)\n        var min = result.head\n        var max = result.head\n        var maxIndex = 0\n        var minIndex = 0\n        var i = 1\n        while (i < result.length) {\n            if (result.apply(i) < min) {\n                min = result.apply(i)\n                minIndex = i\n            }\n            if (result.apply(i) > max) {\n                max = result.apply(i)\n                maxIndex = i\n            }\n            i = i + 1\n        }\n        var temp = result.apply(minIndex)\n        result = result.apply(minIndex).toLong + result.apply(maxIndex).toLong + result.apply(minIndex).toLong\n        result = result.apply(minIndex).toLong + result.apply(maxIndex).toLong + result.apply(minIndex).toLong\n        result = result.apply(minIndex).toLong + result.apply(maxIndex).toLong + result.apply(minIndex).toLong\n        result = result.apply(minIndex).toLong + result.apply(maxIndex).toLong + result.apply(minIndex).toLong\n        result = result.apply(minIndex).toLong + result.apply(maxIndex).toLong + result.apply(minIndex).toLong\n        result = result.apply(minIndex).toLong + result.apply(maxIndex).toLong + result.apply(minIndex).toLong\n        result = result.apply(minIndex).toLong + result.apply(maxIndex).toLong + result.apply(minIndex).toLong\n        result = result.apply(minIndex).toLong + result.apply(maxIndex).toLong + result.apply(minIndex).toLong\n        result = result.apply(minIndex).toLong + result.apply(maxIndex).toLong + result.apply(minIndex).toLong\n        result = result.apply(minIndex).toLong + result.apply(maxIndex).toLong + result.apply(minIndex).toLong\n        result = result.apply(minIndex).toLong + result.apply(maxIndex).toLong + result.apply(minIndex).toLong\n        result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                result = result.append(lst.apply(i))\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                result = result.append(lst.apply(i))\n            }\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result",
    "        if (lst.isEmpty()) {\n            return lst\n        }\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            }\n            if (i > max) {\n                max = i\n            }\n            result = result.append(i)\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result.toList",
    "        var result = List[Long]()\n        var sorted = List[Long](lst)\n        sorted.sort(Comparator.comparingLong(x -> x))\n        var i = 0\n        while (i < sorted.size()) {\n            var j = i + 1\n            while (j < sorted.size() && sorted.get(j) == sorted.get(i)) {\n                j += 1\n            }\n            result = result.append(sorted.get(i))\n            i = j\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var rest = lst.tail\n        var result = List[Long](min)\n        for (i <- 1 to rest.length) {\n            if (rest.head > max) {\n                max = rest.head\n            }\n            if (rest.head < min) {\n                min = rest.head\n            }\n            result = result.append(rest.head)\n            rest = rest.tail\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail()) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst) {\n            if(i < min) {\n                result = result.append(i)\n                min = i\n            }\n            if(i > max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.size) {\n            var min = lst.apply(i)\n            var max = lst.apply(i)\n            for (j = i + 1; j < lst.size; j++) {\n                if (lst.apply(j) < min) {\n                    min = lst.apply(j)\n                }\n                if (lst.apply(j) > max) {\n                    max = lst.apply(j)\n                }\n            }\n            result = result.updated(i, max)\n            result = result.updated(i, min)\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            }\n            if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst) {\n            if (i < min) {\n                result = result.append(i)\n            }\n            if (i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        if (lst.isEmpty()) {\n            return lst\n        }\n        var min = lst.head\n        var max = lst.head\n        var rest = lst.tail\n        var result = ListBuffer[Long]()\n        for (var i = 0; i < rest.length; i++) {\n            if (rest[i] < min) {\n                min = rest[i]\n            }\n            if (rest[i] > max) {\n                max = rest[i]\n            }\n        }\n        for (var i = 0; i < rest.length; i++) {\n            if (rest[i] == min) {\n                result = result.append(min)\n            }\n            if (rest[i] == max) {\n                result = result.append(max)\n            }\n        }\n        for (var i = 0; i < rest.length; i++) {\n            if (rest[i] == min) {\n                result = result.append(min)\n            }\n            if (rest[i] == max) {\n                result = result.append(max)\n            }\n        }\n        return result.toList",
    "        var result = List[Long]()\n        var i = 0\n        var j = 0\n        var k = 0\n        while (i < lst.length) {\n            var min = lst[i]\n            var max = min\n            var minIndex = i\n            var maxIndex = i\n            var minValue = lst[i]\n            var maxValue = minValue\n            var maxValueIndex = i\n            var minValueIndex = i\n            var minValueIndexValue = lst[i]\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var minValueIndexValue = lst[i]\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValueIndexValue\n            var maxValueIndexValue = minValue",
    "        var result = List[Long]()\n        var sorted = List[Long](lst.toSeq().sort(Comparator.naturalOrder()))\n        var max = sorted.head\n        var min = sorted.head\n        var maxIndex = 0\n        var minIndex = 0\n        var i = 0\n        while (i < sorted.size) {\n            if (sorted.apply(i) > max) {\n                max = sorted.apply(i)\n                maxIndex = i\n            }\n            if (sorted.apply(i) < min) {\n                min = sorted.apply(i)\n                minIndex = i\n            }\n            i = i + 1\n        }\n        result = result.append(sorted.apply(minIndex))\n        result = result.append(sorted.apply(maxIndex))\n        result = result.append(sorted.apply(minIndex))\n        result = result.append(sorted.apply(maxIndex))\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n            result = result.append(i)\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result.toList",
    "        var result = List[Long]()\n        var max = lst.max()\n        var min = lst.min()\n        var i = 0\n        while (i < lst.size) {\n            if (lst.apply(i) == max) {\n                result = result.append(max)\n                i = i + 1\n            } else if (lst.apply(i) == min) {\n                result = result.append(min)\n                i = i + 1\n            } else {\n                result = result.append(lst.apply(i))\n                i = i + 1\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail()) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst) {\n            if(i < min) {\n                result = result.append(i)\n            }\n            if(i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst.tail) {\n            if (i < min) {\n                result = result.append(i)\n                min = i\n            } else if (i > max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        for(i <- lst.tail) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst.tail) {\n            if(i == min) {\n                result = result.append(i)\n                min = i\n            }\n            if(i == max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var curr = lst.head\n        for(i <- lst.tail) {\n            if(i < min) {\n                min = i\n            } else if(i > max) {\n                max = i\n            }\n            result = result.append(i)\n        }\n        return result",
    "        if (lst.isEmpty()) {\n            return lst\n        }\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            }\n            if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst) {\n            if (i < min) {\n                result.append(i)\n            }\n            if (i > max) {\n                result.append(i)\n            }\n        }\n        result.append(min)\n        result.append(max)\n        return result.toList",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while(i < lst.size) {\n            if(lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            if(lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        result = result.append(min)\n        result = result.append(max)\n        result = result.appendAll(lst.tail.toList())\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        lst = lst.tail\n        while (lst.nonEmpty()) {\n            if (lst.head < min) {\n                min = lst.head\n            }\n            if (lst.head > max) {\n                max = lst.head\n            }\n            lst = lst.tail\n        }\n        result = result.append(max)\n        result = result.append(min)\n        result = result.appendAll(lst)\n        return result",
    "        var result = List[Long]()\n        var max = 0l\n        var min = 0l\n        for (i <- 0 until lst.length) {\n            if (i == 0) {\n                min = lst[i]\n                max = min\n            } else {\n                max = lst[i]\n            }\n            result = result.append(max)\n            result = result.append(min)\n            min = max\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail()) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst.tail()) {\n            if(i < min) {\n                result = result.append(i)\n            }\n            if(i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        var i = 1\n        while (i < lst.size()) {\n            if (lst.apply(i) < min) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i) > max) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        var j = 0\n        while (j < lst.size()) {\n            if (lst.apply(j) == min) {\n                result = result.append(max)\n            } else if (lst.apply(j) == max) {\n                result = result.append(min)\n            } else {\n                result = result.append(lst.apply(j))\n            }\n            j = j + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        result = result.append(min)\n        result = result.append(max)\n        for (i <- 1 to lst.size - 2) {\n            result = result.append(lst.apply(i + 1))\n        }\n        return result",
    "        var result = List[Long]()\n        var sorted = lst.sort(Comparator.comparingLong(x -> x))\n        var max = sorted.reduce(0l, (x, y) -> x + y)\n        var min = sorted.reduce(Long.MAX_VALUE, (x, y) -> Math.min(x, y))\n        for (i <- 0 until sorted.length) {\n            if (sorted[i] == max) {\n                result = result.append(min)\n                result = result.append(sorted[i])\n            } else if (sorted[i] == min) {\n                result = result.append(sorted[i])\n                result = result.append(max)\n            } else {\n                result = result.append(sorted[i])\n            }\n        }\n        return result",
    "        if (lst.isEmpty()) {\n            return lst\n        }\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            }\n            if (i > max) {\n                max = i\n            }\n            result.append(i)\n        }\n        result.append(min)\n        result.append(max)\n        return result.toList",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        var i = 1\n        while(i < lst.length) {\n            if(lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            if(lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        for(i = 0; i < lst.length; i++) {\n            if(lst.apply(i).compareTo(min) == 0) {\n                result = result.append(max)\n            } else if(lst.apply(i).compareTo(max) == 0) {\n                result = result.append(min)\n            } else {\n                result = result.append(lst.apply(i))\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        var i = 1\n        while (i < lst.size()) {\n            if (lst.apply(i) < min) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i) > max) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        var j = 0\n        while (j < lst.size()) {\n            if (lst.apply(j) == min) {\n                result = result.append(lst.apply(j))\n            }\n            if (lst.apply(j) == max) {\n                result = result.append(lst.apply(j))\n            }\n            j = j + 1\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst.tail) {\n            if (i < min) {\n                result = result.append(i)\n            } else if (i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                result = result.append(lst.apply(i))\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                result = result.append(lst.apply(i))\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i) < min) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i) > max) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        var j = 0\n        while (j < lst.size) {\n            if (lst.apply(j) == min) {\n                result = result.append(lst.apply(j))\n            }\n            if (lst.apply(j) == max) {\n                result = result.append(lst.apply(j))\n            }\n            j = j + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        for(i <- lst.tail) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst.tail) {\n            if(i < min) {\n                result = result.append(i)\n            }\n            if(i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var maxIndex = 0\n        var minIndex = 0\n        for(i <- lst.size - 1) {\n            if(lst[i] < min) {\n                min = lst[i]\n                minIndex = i\n            }\n            if(lst[i] > max) {\n                max = lst[i]\n                maxIndex = i\n            }\n        }\n        result = append(result, lst[minIndex])\n        result = append(result, lst[maxIndex])\n        for(i <- lst.size - 2) {\n            if(lst[i] < lst[i + 1]) {\n                result = append(result, lst[i])\n            } else {\n                result = append(result, lst[i + 1])\n            }\n        }\n        result = append(result, lst[lst.size - 1])\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        var i = 1\n        while (i < lst.size()) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            result = result.append(lst.apply(i))\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long](lst)\n        var sorted = List[Long](lst)\n        var i = 0\n        while (i < result.length) {\n            var min = result[i]\n            var j = i + 1\n            while (j < result.length) {\n                if (result[j] < min) {\n                    min = result[j]\n                }\n                j += 1\n            }\n            if (min != result[i]) {\n                result = result.update(i, min)\n                sorted = sorted.update(i, min)\n            }\n            i += 1\n        }\n        return sorted",
    "        var result = List[Long]()\n        var max = lst.reduce(0l)\n        var min = lst.reduce(Long.MAX_VALUE)\n        var i = 0\n        while (i < lst.size) {\n            var cur = lst.apply(i)\n            if (cur > max) {\n                max = cur\n            }\n            if (cur < min) {\n                min = cur\n            }\n            result = result.append(cur)\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        var i = 1\n        while (i < lst.size()) {\n            var cur = lst.apply(i)\n            if (cur < min) {\n                min = cur\n            } else if (cur > max) {\n                max = cur\n            }\n            result = result.append(cur)\n            i = i + 1\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        for(i <- lst.tail) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst) {\n            if(i < min) {\n                result = result.append(i)\n            }\n            if(i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var max = 0l\n        var min = 0l\n        for (i <- 0 until lst.length) {\n            if (i == 0) {\n                min = lst[i]\n            } else {\n                max = lst[i]\n            }\n            result = result.append(max)\n            result = result.append(min)\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while(i < lst.size) {\n            if(lst.apply(i) < min) {\n                min = lst.apply(i)\n            }\n            if(lst.apply(i) > max) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        var j = 0\n        while(j < lst.size) {\n            if(lst.apply(j) == min) {\n                result = result.append(max)\n            } else if(lst.apply(j) == max) {\n                result = result.append(min)\n            } else {\n                result = result.append(lst.apply(j))\n            }\n            j = j + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var curr = lst.head\n        var i = 0\n        while (i < lst.size) {\n            if (curr > max) {\n                max = curr\n            }\n            if (curr < min) {\n                min = curr\n            }\n            curr = lst.apply(i)\n            i = i + 1\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result",
    "        var result = List[Long](lst.toLong)\n        var sorted = List[Long](lst.toLong)\n        var min = lst.head\n        var max = lst.head\n        var i = 0\n        while (i < lst.size) {\n            if (sorted.size == 0) {\n                sorted = List[Long](lst.toLong)\n                min = lst.head\n                max = lst.head\n            }\n            if (sorted.size == 1) {\n                result = sorted\n                break\n            }\n            if (sorted.size == 2) {\n                if (sorted.head > max) {\n                    max = sorted.head\n                }\n                if (sorted.head < min) {\n                    min = sorted.head\n                }\n                sorted = List[Long](lst.toLong)\n            } else {\n                if (sorted.head > max) {\n                    max = sorted.head\n                }\n                if (sorted.head < min) {\n                    min = sorted.head\n                }\n                sorted = sorted.tail\n            }\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var sorted = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.size) {\n            var min = lst.apply(i)\n            var max = lst.apply(i)\n            var j = i + 1\n            while (j < lst.size) {\n                if (lst.apply(j) < min) {\n                    min = lst.apply(j)\n                }\n                if (lst.apply(j) > max) {\n                    max = lst.apply(j)\n                }\n                j = j + 1\n            }\n            result = result.updated(i, max)\n            sorted = sorted.updated(i, min)\n            i = i + 1\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var rest = lst.tail\n        var result = List[Long](min)\n        for (i <- 1 to rest.length - 1) {\n            if (rest.head > max) {\n                max = rest.head\n            }\n            if (rest.head < min) {\n                min = rest.head\n            }\n            rest = rest.tail\n        }\n        result = result.append(max)\n        result = result.append(min)\n        result = result.appendAll(rest)\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            result = result.append(lst.apply(i))\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.length) {\n            var min = lst[i]\n            var j = i + 1\n            while (j < lst.length) {\n                if (lst[j] < min) {\n                    min = lst[j]\n                }\n                j += 1\n            }\n            result = result.updated(i, min)\n            i += 1\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var sorted = List[Long](lst.toLong)\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).toLong > max.toLong) {\n                max = lst.apply(i)\n            }\n            if (lst.apply(i).toLong < min.toLong) {\n                min = lst.apply(i)\n            }\n            i = i + 1\n        }\n        var j = 0\n        while (j < lst.size) {\n            if (lst.apply(j).toLong < min.toLong) {\n                result = result.append(lst.apply(j))\n            }\n            if (lst.apply(j).toLong > max.toLong) {\n                result = result.append(lst.apply(j))\n            }\n            j = j + 1\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        lst = lst.tail\n        while (!lst.isEmpty()) {\n            if (lst.head < min) {\n                min = lst.head\n            }\n            if (lst.head > max) {\n                max = lst.head\n            }\n            lst = lst.tail\n        }\n        lst = List[Long](min, max)\n        while (!lst.isEmpty()) {\n            result = result.append(lst.head)\n            lst = lst.tail\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail()) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst) {\n            if(i < min) {\n                result = result.append(i)\n                min = i\n            }\n            if(i > max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.length) {\n            var min = lst[i]\n            var j = i + 1\n            while (j < lst.length) {\n                if (lst[j] < min) {\n                    min = lst[j]\n                }\n                j += 1\n            }\n            result = result.updated(i, min)\n            i += 1\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).toLong > max.toLong) {\n                max = lst.apply(i)\n            }\n            if (lst.apply(i).toLong < min.toLong) {\n                min = lst.apply(i)\n            }\n            i = i + 1\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var maxIndex = 0\n        var minIndex = 0\n        for(i <- lst.size - 1) {\n            if(lst.apply(i) < min) {\n                min = lst.apply(i)\n                minIndex = i\n            }\n            if(lst.apply(i) > max) {\n                max = lst.apply(i)\n                maxIndex = i\n            }\n        }\n        result = append(result, lst.apply(minIndex))\n        result = append(result, lst.apply(maxIndex))\n        for(i <- lst.size - 2) {\n            if(lst.apply(i) < lst.apply(i + 1)) {\n                result = append(result, lst.apply(i))\n            } else {\n                result = append(result, lst.apply(i + 1))\n            }\n        }\n        result = append(result, lst.apply(lst.size - 1))\n        return result",
    "        var result = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.length) {\n            var min = lst[i]\n            var j = i + 1\n            while (j < lst.length) {\n                if (lst[j] < min) {\n                    min = lst[j]\n                }\n                j += 1\n            }\n            result = result.updated(i, min)\n            i += 1\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        result = result.append(min)\n        result = result.append(max)\n        for (i <- lst.size - 2) {\n            result = result.append(lst.apply(i + 1))\n        }\n        return result",
    "        var result = List[Long]()\n        var sorted = List[Long](lst)\n        sorted.sort(Comparator.comparingLong(x -> x))\n        var i = 0\n        while (i < sorted.size()) {\n            var j = i + 1\n            while (j < sorted.size() && sorted.get(j) == sorted.get(i)) {\n                j += 1\n            }\n            result = result.append(sorted.get(i))\n            result = result.append(sorted.get(j - 1))\n            i = j\n        }\n        return result",
    "        var result = List[Long](lst)\n        var min = result.head\n        var max = result.head\n        var maxIndex = 0\n        var minIndex = 0\n        for(i <- 1 until result.length) {\n            if(result[i] < min) {\n                min = result[i]\n                minIndex = i\n            }\n            if(result[i] > max) {\n                max = result[i]\n                maxIndex = i\n            }\n        }\n        result = result.take(maxIndex - minIndex)\n        result = result.append(max)\n        result = result.append(min)\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i) < min) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i) > max) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        for (i <- 1 to lst.size - 1) {\n            if (lst.apply(i) < min) {\n                result = result.append(min)\n                min = lst.apply(i)\n            }\n            if (lst.apply(i) > max) {\n                result = result.append(max)\n                max = lst.apply(i)\n            }\n            result = result.append(lst.apply(i))\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        var i = 1\n        while (i < lst.size()) {\n            if (lst.apply(i) < min) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i) > max) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        for (i <- lst.size() - 1) {\n            result = result.append(lst.apply(i))\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result",
    "        var result = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.length) {\n            var min = lst[i]\n            var j = i + 1\n            while (j < lst.length) {\n                if (lst[j] < min) {\n                    min = lst[j]\n                }\n                j = j + 1\n            }\n            result = result.updated(i, min)\n            i = i + 1\n        }\n        return result",
    "        if (lst.isEmpty()) {\n            return lst\n        }\n        var min = lst.head\n        var max = lst.head\n        var rest = lst.tail\n        var result = ListBuffer[Long]()\n        for (i <- 1 until rest.length) {\n            if (rest.head < max) {\n                result.append(rest.head)\n                rest = rest.tail\n            } else {\n                result.append(max)\n                max = rest.head\n                rest = rest.tail\n            }\n        }\n        result.append(max)\n        result.append(min)\n        return result.toList",
    "        var result = List[Long]()\n        var sorted = lst.sort(Comparator.comparingLong(x -> x))\n        for (i <- 0 until sorted.length - 1) {\n            var max = sorted[i]\n            var min = sorted[i + 1]\n            for (j <- i + 2 until sorted.length) {\n                if (sorted[j] > max) {\n                    max = sorted[j]\n                }\n            }\n            result = result.append(max)\n            result = result.append(min)\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        for(i <- lst.tail) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst.tail) {\n            if(i < min) {\n                result = result.append(i)\n            }\n            if(i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst) {\n            if (i < min) {\n                result = result.append(i)\n                min = i\n            } else if (i > max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        if (lst.isEmpty()) {\n            return lst\n        }\n        var min = lst.head\n        var max = lst.head\n        var rest = lst.tail\n        var result = ListBuffer[Long]()\n        for (var i = 0; i < rest.length; i++) {\n            if (rest[i] < min) {\n                min = rest[i]\n            }\n            if (rest[i] > max) {\n                max = rest[i]\n            }\n        }\n        for (var i = 0; i < rest.length; i++) {\n            if (rest[i] == min) {\n                result.append(min)\n            }\n            if (rest[i] == max) {\n                result.append(max)\n            }\n        }\n        for (var i = 0; i < rest.length; i++) {\n            if (rest[i] == min) {\n                result.append(min)\n            }\n            if (rest[i] == max) {\n                result.append(max)\n            }\n        }\n        return result.toList",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail()) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst) {\n            if(i < min) {\n                result = result.append(i)\n                min = i\n            }\n            if(i > max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        var result = List[Long](lst)\n        var i = 0\n        while (i < result.length - 1) {\n            var j = i + 1\n            while (j < result.length) {\n                if (result.get(i) > result.get(j)) {\n                    var temp = result.get(i)\n                    result.set(i, result.get(j))\n                    result.set(j, temp)\n                }\n                j = j + 1\n            }\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while(i < lst.size) {\n            if(lst.apply(i) < min) {\n                min = lst.apply(i)\n            }\n            if(lst.apply(i) > max) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        for(i = 0; i < lst.size; i = i + 1) {\n            if(lst.apply(i) < min) {\n                result = result.append(min)\n                min = lst.apply(i)\n            }\n            if(lst.apply(i) > max) {\n                result = result.append(max)\n                max = lst.apply(i)\n            }\n            result = result.append(lst.apply(i))\n        }\n        return result",
    "        var result = List[Long](lst.toLong, lst.toLong)\n        var i = 0\n        while (i < lst.size) {\n            var min = lst.apply(i)\n            var max = lst.apply(i)\n            for (var j = i + 1; j < lst.size; j++) {\n                if (lst.apply(j) < min) {\n                    min = lst.apply(j)\n                }\n                if (lst.apply(j) > max) {\n                    max = lst.apply(j)\n                }\n            }\n            result = result.updated(i, max)\n            result = result.updated(i, min)\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var sorted = List[Long](lst.toLongs().toSeq())\n        var max = sorted.max()\n        var min = sorted.min()\n        var i = 0\n        while (i < sorted.size()) {\n            if (sorted.apply(i) == max) {\n                result = result.append(sorted.apply(i))\n                i = i + 1\n            } else if (sorted.apply(i) == min) {\n                result = result.append(sorted.apply(i))\n                i = i + 1\n            } else {\n                i = i + 1\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail()) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst.tail()) {\n            if(i < min) {\n                result = result.append(i)\n            }\n            if(i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var sorted = List[Long](lst.toSeq().sorted(Comparator.naturalOrder()).toSeq())\n        var index = 0\n        while(index < sorted.size()) {\n            var min = sorted.apply(index)\n            var max = sorted.apply(index)\n            for(i <- index + 1) {\n                if(sorted.apply(i) < min) {\n                    min = sorted.apply(i)\n                }\n                if(sorted.apply(i) > max) {\n                    max = sorted.apply(i)\n                }\n            }\n            result = result.append(min)\n            result = result.append(max)\n            index = index + 2\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.tail().head()\n        var i = 0\n        while (i < lst.size()) {\n            if (lst.apply(i) < min) {\n                result = result.append(lst.apply(i))\n                i = i + 1\n            } else if (lst.apply(i) > max) {\n                result = result.append(lst.apply(i))\n                i = i + 1\n            } else {\n                i = i + 1\n            }\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var sorted = List[Long](lst.toLong)\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).toLong > max.toLong) {\n                max = lst.apply(i)\n            }\n            if (lst.apply(i).toLong < min.toLong) {\n                min = lst.apply(i)\n            }\n            i = i + 1\n        }\n        var j = 0\n        while (j < lst.size) {\n            if (lst.apply(j).toLong == min.toLong) {\n                result = result.append(lst.apply(j))\n                j = j + 1\n            } else if (lst.apply(j).toLong == max.toLong) {\n                result = result.append(lst.apply(j))\n                j = j + 1\n            } else {\n                result = result.append(lst.apply(j))\n                j = j + 1\n            }\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var rest = lst.tail.filter(x -> x < max)\n        var restMin = rest.head\n        var restMax = rest.head\n        var restRest = rest.tail.filter(x -> x < restMax)\n        var restRestMin = restRest.head\n        var restRestMax = restRest.head\n        var restRestRest = restRest.tail.filter(x -> x < restRestMax)\n        var restRestRestMin = restRestRest.head\n        var restRestRestMax = restRestRest.head\n        var restRestRestRest = restRestRest.tail.filter(x -> x < restRestRestMax)\n        var restRestRestRestMin = restRestRestRest.head\n        var restRestRestRestMax = restRestRestRest.head\n        var restRestRestRestRest = restRestRestRest.tail.filter(x -> x < restRestRestRestMax)\n        var restRestRestRestRestMin = restRestRestRestRest.head\n        var restRestRestRestRestMax = restRestRestRestRest.head\n        var restRestRestRestRestRest = restRestRestRestRest.tail.filter(x -> x < restRestRestRestRestMax)\n        var restRestRestRestRestRestMin = restRestRestRestRestRest.head\n        var restRestRestRestRestRestMax = restRestRestRestRestRest.head\n        var restRestRestRestRestRestRest = restRestRestRestRestRest.tail.filter(x -> x < restRestRestRestRestRestMax)\n        var restRestRestRestRestRestRestMin = restRestRestRestRestRestRest.head\n        var restRestRestRestRestRestRestMax = restRestRestRestRestRestRest.head\n        var restRestRestRestRestRestRestRest = restRestRestRestRestRestRest.tail.filter(x -> x < restRestRestRestRestRestRestMax)\n        var restRestRestRestRestRestRestRestMin = restRestRestRestRestRestRestRest.head\n        var restRestRestRestRestRestRestRestMax = restRestRestRestRestRestRestRest.head\n        var restRestRestRestRestRestRestRestRest",
    "        var result = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.size) {\n            var j = i\n            var min = lst.apply(i)\n            while (j < lst.size - 1) {\n                if (lst.apply(j) < min) {\n                    min = lst.apply(j)\n                }\n                j = j + 1\n            }\n            result = result.updated(i, min)\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var sorted = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.length) {\n            var min = lst[i]\n            var minIndex = i\n            var j = i + 1\n            while (j < lst.length) {\n                if (lst[j] < min) {\n                    min = lst[j]\n                    minIndex = j\n                }\n                j = j + 1\n            }\n            result = result.update(minIndex, lst.update(i, min))\n            sorted = sorted.update(i, min)\n            i = i + 1\n        }\n        return result",
    "        if (lst.isEmpty()) {\n            return lst\n        }\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n            result = result.append(i)\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result.toList",
    "        var result = List[Long](lst.toLong, lst.toLong, lst.toLong, lst.toLong)\n        var i = 0\n        while (i < lst.size && lst.get(i) == lst.get(i)) {\n            i = i + 1\n        }\n        if (i < lst.size) {\n            var j = i + 1\n            while (j < lst.size && lst.get(j) == lst.get(j)) {\n                j = j + 1\n            }\n            result = result.updated(i, lst.get(i))\n            result = result.updated(j, lst.get(j))\n            result = result.updated(i + 1, lst.get(i + 1))\n            result = result.updated(i + 2, lst.get(i + 2))\n        }\n        return result",
    "        var result = List[Long](lst.toLongs().toArray())\n        var sorted = List[Long](lst.toLongs().toArray())\n        var i = 0\n        while (i < result.size) {\n            var min = result[i]\n            var j = i + 1\n            while (j < result.size) {\n                if (result[j] < min) {\n                    min = result[j]\n                }\n                j = j + 1\n            }\n            if (min != result[i]) {\n                result = result.update(i, min)\n                sorted = sorted.update(i, min)\n            }\n            i = i + 1\n        }\n        return sorted",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i) < min) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i) > max) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        var j = 0\n        while (j < lst.size) {\n            if (lst.apply(j) == min) {\n                result = result.append(max)\n            } else if (lst.apply(j) == max) {\n                result = result.append(min)\n            } else {\n                result = result.append(lst.apply(j))\n            }\n            j = j + 1\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.size) {\n            var min = lst.apply(i)\n            var max = lst.apply(i)\n            var j = i + 1\n            while (j < lst.size) {\n                if (lst.apply(j) < min) {\n                    min = lst.apply(j)\n                }\n                if (lst.apply(j) > max) {\n                    max = lst.apply(j)\n                }\n                j = j + 1\n            }\n            result = result.updated(i, max)\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail()) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst.tail()) {\n            if(i < min) {\n                result = result.append(i)\n                min = i\n            }\n            if(i > max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        for (i <- lst.tail) {\n            if (i < min) min = i\n            if (i > max) max = i\n            result = result.append(i)\n        }\n        result = result.append(max)\n        result = result.append(min)\n        return result",
    "        var result = List[Long](lst)\n        var min = result.head\n        var max = result.head\n        var rest = result.tail\n        for (i <- 1 until rest.length) {\n            if (rest.head < min) {\n                min = rest.head\n            }\n            if (rest.head > max) {\n                max = rest.head\n            }\n            rest = rest.tail\n        }\n        var temp = min\n        for (i <- 1 until rest.length) {\n            if (rest.head < temp) {\n                temp = rest.head\n            }\n            result = result.append(temp)\n            rest = rest.tail\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n            result.append(i)\n        }\n        result.append(min)\n        result.append(max)\n        return result.toList",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n            result = result.append(i)\n        }\n        result = result.append(min).append(max)\n        return result.toList",
    "        var result = List[Long]()\n        var max = lst.max()\n        var min = lst.min()\n        var i = 0\n        for (i < lst.size) {\n            var value = lst.apply(i)\n            if (value == max) {\n                result = result.append(value)\n                i = i + 1\n                max = lst.apply(i)\n            } else if (value == min) {\n                result = result.append(value)\n                i = i + 1\n                min = lst.apply(i)\n            } else {\n                result = result.append(value)\n            }\n        }\n        return result",
    "        var result = List[Long](lst)\n        var min = result.head\n        var max = result.head\n        var minIndex = 0\n        var maxIndex = 0\n        for (i <- 1 until result.length) {\n            if (result[i] < min) {\n                min = result[i]\n                minIndex = i\n            }\n            if (result[i] > max) {\n                max = result[i]\n                maxIndex = i\n            }\n        }\n        var temp = result[minIndex]\n        result[minIndex] = result[maxIndex]\n        result[maxIndex] = temp\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n            result = result.append(i)\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result.toList",
    "        var result = List[Long](lst.toLong)\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i).toLong > max.toLong) {\n                max = lst.apply(i)\n            }\n            if (lst.apply(i).toLong < min.toLong) {\n                min = lst.apply(i)\n            }\n            i = i + 1\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var rest = lst.tail\n        var result = ListBuffer[Long]()\n        for (i <- 1 to rest.length) {\n            if (rest.head < max) {\n                max = rest.head\n            }\n            if (rest.head > min) {\n                min = rest.head\n            }\n            result.append(rest.head)\n            rest = rest.tail\n        }\n        result.append(min)\n        result.append(max)\n        return result.toList",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        var maxIndex = 0\n        var minIndex = 0\n        var i = 1\n        while (i < lst.size()) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n                minIndex = i\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n                maxIndex = i\n            }\n            i = i + 1\n        }\n        result = append(result, lst.apply(minIndex))\n        result = append(result, lst.apply(maxIndex))\n        for (i = minIndex + 1; i < maxIndex; i = i + 1) {\n            result = append(result, lst.apply(i))\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 0\n        while (i < lst.size) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        for (i = 0; i < lst.size; i++) {\n            if (lst.apply(i).compareTo(min) == 0) {\n                result = result.append(lst.apply(i))\n            }\n            if (lst.apply(i).compareTo(max) == 0) {\n                result = result.append(lst.apply(i))\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var i = 1\n        while (i < lst.size) {\n            if (lst.apply(i) < min) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i) > max) {\n                max = lst.apply(i)\n            }\n            i = i + 1\n        }\n        var j = 0\n        while (j < lst.size) {\n            if (lst.apply(j) == min) {\n                result = result.append(max)\n                j = j + 1\n            } else if (lst.apply(j) == max) {\n                result = result.append(min)\n                j = j + 1\n            } else {\n                result = result.append(lst.apply(j))\n                j = j + 1\n            }\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var sorted = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.length) {\n            var min = lst[i]\n            var j = i + 1\n            while (j < lst.length) {\n                if (lst[j] < min) {\n                    min = lst[j]\n                }\n                j = j + 1\n            }\n            result = result.update(min)\n            sorted = sorted.update(min)\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var sorted = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.size) {\n            var min = lst.apply(i)\n            var max = lst.apply(i)\n            var j = i + 1\n            while (j < lst.size) {\n                if (lst.apply(j) < min) {\n                    min = lst.apply(j)\n                }\n                if (lst.apply(j) > max) {\n                    max = lst.apply(j)\n                }\n                j = j + 1\n            }\n            result = result.append(min)\n            result = result.append(max)\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail()) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst) {\n            if(i < min) {\n                result = result.append(i)\n                min = i\n            }\n            if(i > max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        var maxIndex = 0\n        var minIndex = 0\n        var i = 0\n        while (i < lst.size) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n                minIndex = i\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n                maxIndex = i\n            }\n            i = i + 1\n        }\n        result = append(result, min)\n        result = append(result, max)\n        for (i = minIndex + 1; i < maxIndex; i = i + 1) {\n            result = append(result, lst.apply(i))\n        }\n        for (i = maxIndex + 1; i < lst.size; i = i + 1) {\n            result = append(result, lst.apply(i))\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n            result = result.append(i)\n        }\n        return result",
    "        var result = List[Long](lst.toLong)\n        var i = 0\n        while (i < lst.size) {\n            var min = lst.apply(i)\n            var max = lst.apply(i)\n            for (var j = i + 1; j < lst.size; j++) {\n                if (lst.apply(j) < min) {\n                    min = lst.apply(j)\n                }\n                if (lst.apply(j) > max) {\n                    max = lst.apply(j)\n                }\n            }\n            result = result.updated(i, max)\n            result = result.updated(i, min)\n            i = i + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail()) {\n            if(i < min) {\n                min = i\n            } else if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst.tail()) {\n            if(i < min) {\n                result = result.append(i)\n                min = i\n            } else if(i > max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        result = result.append(min)\n        result = result.append(max)\n        return result",
    "        var result = List[Long]()\n        var max = lst.max()\n        var min = lst.min()\n        var i = 0\n        for (i = 0; i < lst.size(); i++) {\n            if (lst[i] == max) {\n                result = result.append(min)\n                min = lst[i]\n            } else if (lst[i] == min) {\n                result = result.append(max)\n                max = lst[i]\n            } else {\n                result = result.append(lst[i])\n            }\n        }\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        lst = lst.tail\n        while (lst.nonEmpty()) {\n            var curr = lst.head\n            if (curr < min) {\n                min = curr\n            } else if (curr > max) {\n                max = curr\n            }\n            lst = lst.tail\n        }\n        result = result.append(max)\n        result = result.append(min)\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head()\n        var max = lst.head()\n        var result = List[Long](min)\n        var i = 1\n        while (i < lst.size()) {\n            if (lst.apply(i).compareTo(min) < 0) {\n                min = lst.apply(i)\n            }\n            if (lst.apply(i).compareTo(max) > 0) {\n                max = lst.apply(i)\n            }\n            result = result.append(lst.apply(i))\n            i = i + 1\n        }\n        return result.append(max).append(min)",
    "        if (lst.isEmpty()) {\n            return lst\n        }\n        var min = lst.head()\n        var max = min\n        var rest = lst.tail()\n        var result = ListBuffer[Long]()\n        while (rest.nonEmpty()) {\n            var curr = rest.head()\n            if (curr < min) {\n                result.append(min)\n                min = curr\n            } else if (curr > max) {\n                result.append(max)\n                max = curr\n            } else {\n                result.append(curr)\n            }\n            rest = rest.tail()\n        }\n        result.append(min)\n        result.append(max)\n        return result.toList",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var result = ListBuffer[Long]()\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n            result.append(i)\n        }\n        result.append(min)\n        result.append(max)\n        return result.toList",
    "        var result = List[Long]()\n        var sorted = lst.sort(Comparator.comparingLong(x -> x))\n        for (i <- 0 until sorted.length - 1) {\n            var min = sorted[i]\n            var max = sorted[i + 1]\n            for (j <- i + 1 until sorted.length - 1) {\n                if (sorted[j] > max) {\n                    max = sorted[j]\n                }\n            }\n            result = result.append(min)\n            result = result.append(max)\n        }\n        return result",
    "        if (lst.isEmpty()) {\n            return lst\n        }\n        var min = lst.head\n        var max = lst.head\n        var result = List[Long](min)\n        for (i <- lst.tail) {\n            if (i < min) {\n                min = i\n            } else if (i > max) {\n                max = i\n            }\n        }\n        for (i <- lst) {\n            if (i < min) {\n                result = result.append(i)\n            } else if (i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head\n        var max = lst.head\n        for(i <- lst.tail) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst) {\n            if(i < min) {\n                result = result.append(i)\n            }\n            if(i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long](lst)\n        var min = result.head\n        var max = result.head\n        var rest = result.tail\n        var i = 1\n        while (i < rest.length) {\n            if (rest[i].compareTo(min) < 0) {\n                min = rest[i]\n            }\n            if (rest[i].compareTo(max) > 0) {\n                max = rest[i]\n            }\n            i = i + 1\n        }\n        var j = 0\n        while (j < rest.length) {\n            if (rest[j].compareTo(min) < 0) {\n                result = result.prepend(min)\n                min = rest[j]\n            }\n            if (rest[j].compareTo(max) > 0) {\n                result = result.prepend(max)\n                max = rest[j]\n            }\n            j = j + 1\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail()) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst.tail()) {\n            if(i < min) {\n                result = result.append(i)\n            }\n            if(i > max) {\n                result = result.append(i)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        for(i <- lst.tail()) {\n            if(i < min) {\n                min = i\n            }\n            if(i > max) {\n                max = i\n            }\n        }\n        for(i <- lst.tail()) {\n            if(i < min) {\n                result = result.append(i)\n                min = i\n            }\n            if(i > max) {\n                result = result.append(i)\n                max = i\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        var min = lst.head()\n        var max = lst.head()\n        var maxIndex = 0\n        var minIndex = 0\n        var i = 0\n        for(i = 1; i < lst.size(); i++) {\n            if(lst.apply(i) > max) {\n                max = lst.apply(i)\n                maxIndex = i\n            }\n            if(lst.apply(i) < min) {\n                min = lst.apply(i)\n                minIndex = i\n            }\n        }\n        result = append(result, lst.apply(minIndex))\n        result = append(result, lst.apply(maxIndex))\n        for(i = minIndex + 1; i < maxIndex; i++) {\n            result = append(result, lst.apply(i))\n        }\n        result = append(result, lst.apply(maxIndex))\n        return result",
    "        if (lst.isEmpty()) return lst\n        var min = lst.head\n        var max = lst.head\n        var rest = lst.tail\n        var result = List[Long](min)\n        for (i <- 1 to rest.length) {\n            if (rest.head < max) {\n                max = rest.head\n                result = result.append(max)\n                rest = rest.tail\n            } else {\n                min = rest.head\n                result = result.append(min)\n                rest = rest.tail\n            }\n        }\n        return result"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
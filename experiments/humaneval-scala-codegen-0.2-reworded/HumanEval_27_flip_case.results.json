{
  "name": "HumanEval_27_flip_case",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, subString : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + subString.length) == subString) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in reverse.\n    // >>> repeatCountReverse(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCountReverse(string : String, subString : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(string.length - i, string.length - i + subString.length) == subString) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in a given direction.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", \"forward\")\n    // 2\n    def repeatCount(string : String, subString : String, direction : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + subString.length) == subString) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in a given direction.\n    // >>> repeatCountReverse(\"abcabcabc\", \"abc\", \"forward\")\n    // 2\n    def repeatCountReverse(string : String, subString : String, direction : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_snuejl3.scala:69:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_snuejl3.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_snuejl3.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_snuejl3.scala:68:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp_snuejl3.scala:62:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m62 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstring(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abcabc\")\n    // 3\n    def countSubstring2(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abcabc\")\n    // 3\n    def countSubstring3(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abcabc\")\n    // 3\n    def countSubstring4(string : String, substring : String\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphowfvxm7.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphowfvxm7.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphowfvxm7.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphowfvxm7.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphowfvxm7.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphowfvxm7.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphowfvxm7.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphowfvxm7.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELL",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // separated by a space.\n    // >>> separateAdjacentLetters(\"abcd\")\n    // \"a b c d\"\n    def separateAdjacentLetters(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i == string.length - 1) {\n                result = result + string.charAt(i)\n            } else {\n                result = result + string.charAt(i) + \" \"\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have\n    // been separated by a space.\n    // >>> separateAdjacentLetters(\"aabcd\")\n    // \"a a b c d\"\n    def separateAdjacentLetters2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i == string.length - 1) {\n                result = result + string.charAt(i)\n            } else {\n                result = result + string.charAt(i) + \" \"\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet\n    // have been removed.\n    // >>> removeExtraLetters(\"abcd\")\n    // \"ab\"\n    def removeExtraLetters(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) in \"abcdefghijklmnopqrstuvwxyz\") {\n                result = result + string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet\n    // have been removed.\n    // >>>\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuplcjxta.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuplcjxta.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuplcjxta.scala:54:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i) in \u001b[31m\"abcdefghijklmnopqrstuvwxyz\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value in is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuplcjxta.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuplcjxta.scala:67:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuplcjxta.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated, ignoring case.\n    // >>> repeatCountIgnoreCase(\"abcabcabc\", \"ABC\")\n    // 2\n    def repeatCountIgnoreCase(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equalsIgnoreCase(substring)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the longest substring that is a palindrome.\n    // >>> longestPalindrome(\"abccba\")\n    // \"ccb\"\n    def longestPalindrome(string : String) : String = {\n        var max = \"\"\n        for (i <- 0 until string.length) {\n            var sub = string.substring(i, i + 1)\n            var count = repeatCount(string, sub)\n            if (count > 1 && count == repeatCountIgnoreCase(string, sub)) {\n                max = sub\n            }\n        }\n        return max\n    }\n\n    // For a given string, return the longest substring that is a palindrome, ignoring case.\n    // >>> longestPalindromeIgnoreCase(\"abccba\")\n    \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8_6t8rj9.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8_6t8rj9.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8_6t8rj9.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8_6t8rj9.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8_6t8rj9.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8_6t8rj9.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8_6t8rj9.scala:67:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase.toUpperCase\n        return s\n    }\n\n    // For a given string, return the number of times a substring is contained in the string.\n    // >>> countSubstring(\"ababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292942,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph5jossdj.scala:21:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph5jossdj.scala:16:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph5jossdj.scala:17:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmph5jossdj.scala:18:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equals(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"hello world\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring leading and trailing whitespace.\n    // >>> countIgnoreCaseTrim(\"  hello world  \")\n    // 1\n    def countIgnoreCaseTrim(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, ignoring leading and trailing whitespace, and ignoring case of letters.\n    // >>> countIgnoreCaseTrim(\"  hello world  \")\n    // 1\n    def countIgnoreCaseTrim2(string : String) : Int = {\n        var result = 0\n\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu0oahb3e.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu0oahb3e.scala:63:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equals(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a new string where \"not \" has been added to the front,\n    // and \"beautiful\" has been added to the back.\n    // >>> makeNice(\"Hello\")\n    // \"not beautiful\"\n    def makeNice(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == \"H\") {\n                result = result + \"not \"\n            } else {\n                result = result + string.charAt(i)\n            }\n        }\n        result = result + \" beautiful\"\n        return result\n    }\n\n    // For a given string, return a string where the first and last chars have been exchanged.\n    // >>> makeAnagram(\"code\")\n    // \"eodc\"\n    def makeAnagram(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(string.length - 1 - i)\n        }\n        result = result + string.charAt(0)\n        return result\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front,\n    // \"beautiful\" has been added to the back, and all lowercase letters have been converted to uppercase.\n    // >>> makeNiceAnagram(\"code\")\n    // \"Not beautiful\"\n    def makeNiceAnagram(string : String) : String = {\n        var result =\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp_llqhvzt.scala:62:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mresult\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_llqhvzt.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_llqhvzt.scala:35:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m35 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i) == \u001b[31m\"H\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_llqhvzt.scala:63:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeNonAlphabetChars(\"Hello\")\n    // \"ello\"\n    def removeNonAlphabetChars(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are the same are removed.\n    // >>> removeAdjacentDuplicates(\"code\")\n    // \"cde\"\n    def removeAdjacentDuplicates(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i == 0 || string.charAt(i - 1) != c) {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are in the same alphabet are removed.\n    // >>> removeAdjacentAlphabetChars(\"code\")\n    // \"e\"\n    def removeAdjacentAlphabetChars(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i == 0 || string.charAt(i - 1) >= 'a' && string.charAt(i - 1) <= 'z') {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are in the same alphabet are\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpik_r9474.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpik_r9474.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpik_r9474.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpik_r9474.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpik_r9474.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpik_r9474.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpik_r9474.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result.concat(string.charAt(i).toUpperCase)\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equals(\"world\")) {\n                result = result + 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"hello world\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result = result + 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndCase(\"hello world\")\n    // 1\n    def countIgnoreCaseAndCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCaseAndCase(\"world\")) {\n                result = result + 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters, and ignoring the case of the letters\n    // of the substring \"world\".\n    // >>> countIgnoreCaseAndCaseAndIgnore(\"hello world\")\n    // 1\n    def count\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmpa_x0jxim.scala:61:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcount\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m             ^\u001b[0m\n\u001b[31m   |\u001b[0m             Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa_x0jxim.scala:69:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa_x0jxim.scala:10:52 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.concat(string.charAt(i).toUpperCase)\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa_x0jxim.scala:49:56 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            \u001b[33mif\u001b[0m (string.substring(i, i + \u001b[31m\"world\"\u001b[0m.length).equalsIgnoreCaseAndCase(\u001b[31m\"world\"\u001b[0m)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value equalsIgnoreCaseAndCase is not a member of String\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_x0jxim.scala:64:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_x0jxim.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpa_x0jxim.scala:66:11 -------------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"Hello world\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world\")\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjbvpe55j.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjbvpe55j.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjbvpe55j.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjbvpe55j.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjbvpe55j.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjbvpe55j.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjbvpe55j.scala:42:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjbvpe55j.scala:57:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equals(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"Hello world!\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world!\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world!\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase2(string : String)\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292948,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmpzunmrqen.scala:60:54 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountIgnoreCaseAndIgnoreCase2\u001b[0m(\u001b[36mstring\u001b[0m : \u001b[35mString\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                     Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzunmrqen.scala:68:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzunmrqen.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzunmrqen.scala:63:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzunmrqen.scala:64:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzunmrqen.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer e",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string.\n    // >>> countAppearances(\"hello\", \"hello\")\n    // 2\n    def countAppearances(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string, ignoring case.\n    // >>> countAppearancesIgnoreCase(\"hello\", \"HELLO\")\n    // 2\n    def countAppearancesIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toUpperCase == substring.charAt(0).toUpperCase) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string, ignoring case, and\n    // ignoring case of the substring.\n    // >>> countAppearancesIgnoreCase(\"hello\", \"HELLO\")\n    // 2\n    def countAppearancesIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toUpperCase == substring.charAt(0).toUpperCase) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string, ignoring case, and\n    // ignoring case of the substring.\n    // >>> countAppearancesIgnoreCase(\"hello\", \"HELLO\")\n    // 2\n    def countAppearancesIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3z55r0g_.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3z55r0g_.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3z55r0g_.scala:34:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toUpperCase == substring.charAt(\u001b[31m0\u001b[0m).toUpperCase) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3z55r0g_.scala:48:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toUpperCase == substring.charAt(\u001b[31m0\u001b[0m).toUpperCase) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp3z55r0g_.scala:61:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmp3z55r0g_.scala:45:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountAppearancesIgnoreCase\u001b[0m(\u001b[36mstring\u001b[0m : \u001b[35mString\u001b[0m, \u001b[36msubstring\u001b[0m : \u001b[35mString\u001b[0m) : \u001b[35mInt\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef countAppearancesIgnoreCase(string: String, substring: String): Int in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCount(string : String, subString : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + subString.length) == subString) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated,\n    // ignoring case.\n    // >>> repeatCountIgnoreCase(\"abcabcabc\", \"ABC\")\n    // 3\n    def repeatCountIgnoreCase(string : String, subString : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + subString.length).equalsIgnoreCase(subString)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated,\n    // ignoring case, and ignoring the case of the first character.\n    // >>> repeatCountIgnoreCaseFirst(\"abcabcabc\", \"ABC\")\n    // 3\n    def repeatCountIgnoreCaseFirst(string : String, subString : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + subString.length).equalsIgnoreCase(subString)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated,\n    // ignoring case, and ignoring the case of the first character, and ignoring\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz2cq7_1e.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz2cq7_1e.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz2cq7_1e.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz2cq7_1e.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz2cq7_1e.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2cq7_1e.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz2cq7_1e.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is contained in the string.\n    // >>> countSubstring(\"abcabcabc\", \"abc\")\n    // 3\n    def countSubstring(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equals(substring)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is contained in the string,\n    // ignoring case.\n    // >>> countSubstringIgnoreCase(\"abcABCabc\", \"abc\")\n    // 3\n    def countSubstringIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equalsIgnoreCase(substring)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is contained in the string,\n    // ignoring case, and ignoring the case of the substring.\n    // >>> countSubstringIgnoreCase(\"abcABCabc\", \"ABC\")\n    // 3\n    def countSubstringIgnoreCaseIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equalsIgnoreCase(substring)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is contained in the string,\n    // ignoring case, and ignoring the case of the substring.\n    // >>> countSubstringIgnoreCaseIgnoreCase(\"abcABCabc\", \"ABC\")\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292948,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpc3slzxmf.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpc3slzxmf.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpc3slzxmf.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc3slzxmf.scala:61:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc3slzxmf.scala:62:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpc3slzxmf.scala:63:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabc\", \"abc\")\n    // 2\n    def countSubstring(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equals(substring)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string,\n    // ignoring case.\n    // >>> countSubstringIgnoreCase(\"abcabcabc\", \"ABC\")\n    // 2\n    def countSubstringIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equalsIgnoreCase(substring)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string,\n    // ignoring case and non-alphabetical characters.\n    // >>> countSubstringIgnoreCase(\"abcabcabc\", \"ABC\")\n    // 2\n    def countSubstringIgnoreCaseAndNonAlpha(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equalsIgnoreCase(substring) &&\n                string.substring(i, i + substring.length).chars().allMatch(Character.isLetter)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string,\n    // ignoring case and non-\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292947,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_id9974o.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_id9974o.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_id9974o.scala:61:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_id9974o.scala:62:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_id9974o.scala:63:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times a substring is contained in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstring(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i\n            while (j < string.length && substring.charAt(0) == string.charAt(j)) {\n                j += 1\n            }\n            if (j - i >= substring.length) {\n                result += 1\n            }\n            i = j\n        }\n        result\n    }\n\n    // For a given string, return the number of times a substring is contained in the string,\n    // ignoring case.\n    // >>> countSubstringIgnoreCase(\"abcabcabcabc\", \"ABC\")\n    // 3\n    def countSubstringIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i\n            while (j < string.length && substring.charAt(0) == string.charAt(j).toUpperCase()) {\n                j += 1\n            }\n            if (j - i >= substring.length) {\n                result += 1\n            }\n            i = j\n        }\n        result\n    }\n\n    // For a given string, return the number of times a substring is contained in the string,\n    // ignoring case and order.\n    // >>> countSubstringIgnoreCaseOrder(\"abcabcabcabc\", \"ABC\")\n    // 3\n    def countSubstringIgnoreCaseOrder(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj6ign6tg.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj6ign6tg.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj6ign6tg.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj6ign6tg.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj6ign6tg.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpj6ign6tg.scala:33:14 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m            i = j\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj6ign6tg.scala:46:80 ------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m            \u001b[33mwhile\u001b[0m (j < string.length && substring.charAt(\u001b[31m0\u001b[0m) == string.charAt(j).toUpperCase()) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var ch = string.charAt(i)\n            if (ch >= 'a' && ch <= 'z') {\n                result += ch.toUpperCase\n            } else {\n                result += ch.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the string appears in the string.\n    // >>> countAppearances(\"hello\", \"hello\")\n    // 2\n    def countAppearances(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the string appears in the string.\n    // >>> countAppearances(\"hello\", \"lo\")\n    // 1\n    def countAppearances2(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the string appears in the string.\n    // >>> countAppearances(\"hello\", \"ll\")\n    // 0\n    def countAppearances3(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the string appears in the string.\n    // >>> countAppearances(\"hello\", \"ll\")\n    // 0\n    def countAppearances4(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpxefsrn_b.scala:65:30 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxefsrn_b.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxefsrn_b.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += ch.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxefsrn_b.scala:12:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += ch.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxefsrn_b.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += ch.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxefsrn_b.scala:14:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += ch.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxefsrn_b.scala:73:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpxefsrn_b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase\n        var r = \"\"\n        for (i <- 0 until string.length) {\n            r = r + s(string.charAt(i))\n        }\n        return r\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292950,
      "stdout": "",
      "stderr": "java.lang.StringIndexOutOfBoundsException: String index out of range: 72\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\tat java.base/java.lang.String.charAt(String.java:1515)\n\tat scala.collection.StringOps$.apply$extension(StringOps.scala:185)\n\tat Problem$.flipCase$$anonfun$1(tmpbm9_qdlf.scala:11)\n\tat scala.runtime.java8.JFunction1$mcVI$sp.apply(JFunction1$mcVI$sp.scala:18)\n\tat scala.collection.immutable.Range.foreach(Range.scala:190)\n\tat Problem$.flipCase(tmpbm9_qdlf.scala:12)\n\tat Problem$.main(tmpbm9_qdlf.scala:17)\n\tat Problem.main(tmpbm9_qdlf.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstring(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (substring.contains(c)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstring2(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (substring.contains(c)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstring3(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (substring.contains(c)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstring4(string : String, subst\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyhpz_clt.scala:66:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ':' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyhpz_clt.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyhpz_clt.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyhpz_clt.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyhpz_clt.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyhpz_clt.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyhpz_clt.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyhpz_clt.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELL",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring appears in the string.\n    // >>> countSubstring(\"hello\", \"ll\")\n    // 2\n    def countSubstring(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (substring.contains(c)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring appears in the string.\n    // >>> countSubstring(\"hello\", \"ll\")\n    // 2\n    def countSubstring2(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (substring.contains(c)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring appears in the string.\n    // >>> countSubstring(\"hello\", \"ll\")\n    // 2\n    def countSubstring3(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (substring.contains(c)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring appears in the string.\n    // >>> countSubstring(\"hello\", \"ll\")\n    // 2\n    def countSubstring4(string : String, substring : String) : Int = {\n        var result = 0\n        \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn0068vxv.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn0068vxv.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn0068vxv.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn0068vxv.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn0068vxv.scala:68:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where all characters that are not in the given set are removed.\n    // >>> removeChars(\"Hello\", \"hl\")\n    // \"eo\"\n    def removeChars(string : String, chars : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (!chars.contains(c)) {\n                result += c\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where all adjacent characters that are the same are removed.\n    // >>> removeAdjacent(\"code\")\n    // \"odc\"\n    def removeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i + 1 < string.length && string.charAt(i + 1) == c) {\n                continue\n            }\n            result += c\n        }\n        result\n    }\n\n    // For a given string, return a new string where all the words in lowercase are replaced with their uppercase equivalent.\n    // Words are defined as groups of non-space characters.\n    // >>> toUpper(\"Let's code in Java.\")\n    // \"Let's Code In Java.\"\n    def toUpper(string : String) : String = {\n        var result = \"\"\n        var word = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == ' ') {\n                if (word.length > 0) {\n                    result += word.toUpper\n                }\n                word = \"\"\n            } else {\n                word += c\n            }\n        }\n        \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphbg_9xfr.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphbg_9xfr.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphbg_9xfr.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphbg_9xfr.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphbg_9xfr.scala:42:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m                continue\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: continue\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphbg_9xfr.scala:60:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m                    result += word.toUpper\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphbg_9xfr.scala:60:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m                    result += word.toUpper\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toU",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeNonAlphabetChars(\"Hello\")\n    // \"ello\"\n    def removeNonAlphabetChars(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are the same are removed.\n    // >>> removeAdjacentDuplicates(\"code\")\n    // \"cde\"\n    def removeAdjacentDuplicates(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1) {\n                var d = string.charAt(i + 1)\n                if (c == d) {\n                    continue\n                }\n            }\n            result += c\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are in the alphabet are removed.\n    // >>> removeAdjacentAlphabetChars(\"code\")\n    // \"e\"\n    def removeAdjacentAlphabetChars(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1) {\n                var d = string.charAt(i + 1)\n                if (c >= 'a' && c <= 'z' && d >= 'a' && d <= 'z') {\n\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfn5hzxd9.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfn5hzxd9.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfn5hzxd9.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfn5hzxd9.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfn5hzxd9.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfn5hzxd9.scala:44:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m                    continue\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: continue\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfn5hzxd9.scala:57:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until string.length) {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Unit\n\u001b[31m   |\u001b[0m        Required: String\n\u001b[31m58 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mc\u001b[0m = string.charAt(i)\n\u001b[31m59 |\u001b[0m            \u001b[3",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count2(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count3(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count4(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292958,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptf8b4a47.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptf8b4a47.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptf8b4a47.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptf8b4a47.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmptf8b4a47.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptf8b4a47.scala:41:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptf8b4a47.scala:55:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared wit",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front, and \"beautiful\"\n    // has been added to the back.\n    // >>> makeNice(\"Hello\")\n    // \"not beautiful\"\n    def makeNice(string : String) : String = {\n        var result = \"not \" + string\n        result += \" beautiful\"\n        return result\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front, and \"beautiful\"\n    // has been added to the back. The string should only contain lowercase letters.\n    // >>> makeNiceLower(\"Hello\")\n    // \"not beautiful\"\n    def makeNiceLower(string : String) : String = {\n        var result = \"not \" + string\n        result += \" beautiful\"\n        return result\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front, and \"beautiful\"\n    // has been added to the back. The string should only contain lowercase letters.\n    // >>> makeNiceLower(\"Hello\")\n    // \"not beautiful\"\n    def makeNiceLower2(string : String) : String = {\n        var result = \"not \" + string\n        result += \" beautiful\"\n        return result\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front, and \"\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292961,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpx1zlj4ek.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx1zlj4ek.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx1zlj4ek.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx1zlj4ek.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx1zlj4ek.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx1zlj4ek.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1zlj4ek.scala:67:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx1zlj4ek.scala:68:",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // separated by a space.\n    // >>> separateSpaces(\"Hello\")\n    // (\"H e l l o\")\n    def separateSpaces(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i + 1 < string.length && c == string.charAt(i + 1)) {\n                result = result + c + \" \"\n            } else {\n                result = result + c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // separated by a space.\n    // >>> separateDigits(\"12345\")\n    // (\"1 2 3 4 5\")\n    def separateDigits(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (Character.isDigit(c)) {\n                result = result + c + \" \"\n            } else {\n                result = result + c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a digit or a\n    // lowercase letter have been separated by a space.\n    // >>> separateWords(\"123abc5\")\n    // (\"1 2 3 a b c 5\")\n    def separateWords(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (Character.isLetter(c) || Character.isDigit(c)) {\n                result = result + c + \" \"\n            } else {\n                result = result + c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292960,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfz6a0gxm.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfz6a0gxm.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfz6a0gxm.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfz6a0gxm.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfz6a0gxm.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"code\"))\n    // (\"cod\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i < string.length - 1) {\n                if (string.charAt(i) == string.charAt(i + 1)) {\n                    result += string.charAt(i)\n                } else {\n                    result += string.charAt(i) + string.charAt(i + 1)\n                    i += 1\n                }\n            } else {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"code123\"))\n    // (\"code1 2 3\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i < string.length - 1) {\n                if (string.charAt(i).isDigit() && string.charAt(i + 1).isDigit()) {\n                    result += string.charAt(i) + string.charAt(i + 1)\n                    i += 1\n                } else {\n                    result += string.charAt(i)\n                }\n            } else {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersOrDigits((\"code123\"))\n    // (\"code12 3\")\n    def mergeLettersOrDigits(string : String) : String = {\n        var result =\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp70t4cb5z.scala:62:20 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36mresult\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp70t4cb5z.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp70t4cb5z.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp70t4cb5z.scala:27:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                    i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp70t4cb5z.scala:44:37 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m                \u001b[33mif\u001b[0m (string.charAt(i).isDigit() && string.charAt(i + \u001b[31m1\u001b[0m).isDigit()) {\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35misDigit\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mRichChar\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp70t4cb5z.scala:46:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m                    i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E007] Type M",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // separated by a space.\n    // >>> separateAdjacentLetters(\"abcd\")\n    // \"a b c d\"\n    def separateAdjacentLetters(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i)\n            if (i + 1 < string.length && string.charAt(i) == string.charAt(i + 1)) {\n                result = result + \" \"\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have been\n    // separated by a space.\n    // >>> separateAdjacentLetters(\"aabcd\")\n    // \"a a b c d\"\n    def separateAdjacentLetters2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i)\n            if (i + 1 < string.length && string.charAt(i) != string.charAt(i + 1)) {\n                result = result + \" \"\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have been\n    // separated by a space.\n    // >>> separateAdjacentLetters2(\"aabcd\")\n    // \"a a b c d\"\n    def separateAdjacentLetters3(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i)\n            if (i + 1 < string.length && string.charAt(i) != string.charAt(i + 1)) {\n                result = result + \" \"\n            }\n        }\n        result\n    }\n\n    // For a given\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292960,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3d5m64t1.scala:68:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3d5m64t1.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3d5m64t1.scala:63:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3d5m64t1.scala:64:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3d5m64t1.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"code\"))\n    // (\"cod\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"code123\"))\n    // (\"code1\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && Character.isDigit(string.charAt(i + 1))) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"code123\"))\n    // (\"code12\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && (Character.isLetter(string.charAt(i +\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292964,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp9orwe43g.scala:64:78 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m            \u001b[33mif\u001b[0m (i < string.length - \u001b[31m1\u001b[0m && (Character.isLetter(string.charAt(i +\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9orwe43g.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9orwe43g.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9orwe43g.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9orwe43g.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9orwe43g.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9orwe43g.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase\n        var r = \"\"\n        for (i <- 0 until s.length) {\n            r = r + s.charAt(i).toUpperCase\n        }\n        r\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        var i = 0\n        while (i < string.length) {\n            if (string.substring(i).equals(substring)) {\n                count += 1\n                i += substring.length\n            } else {\n                i += 1\n            }\n        }\n        count\n    }\n\n    // For a given string, return the number of times a substring is repeated,\n    // starting at the given index.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", 2)\n    // 2\n    def repeatCount(string : String, substring : String, startIndex : Int) : Int = {\n        var count = 0\n        var i = startIndex\n        while (i < string.length) {\n            if (string.substring(i).equals(substring)) {\n                count += 1\n                i += substring.length\n            } else {\n                i += 1\n            }\n        }\n        count\n    }\n\n    // For a given string, return the number of times a substring is repeated,\n    // starting at the given index, and working backwards.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", 2, -1)\n    // 2\n    def repeatCount(string : String, substring : String, startIndex : Int, direction : Int) : Int = {\n        var count = 0\n        var i = startIndex\n        while (i >= 0) {\n            if (string.substring(i).equals(substring)) {\n                count += 1\n                i -= substring.length\n            } else {\n                i -= 1\n            }\n        }\n        count\n    }\n\n    // For a given string, return the number of times a substring is repeated,\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpylrm6411.scala:77:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpylrm6411.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            r = r + s.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpylrm6411.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpylrm6411.scala:73:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpylrm6411.scala:74:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"code\"))\n    // (\"cod\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"code123\"))\n    // (\"code1\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= '0' && c <= '9') {\n                result += c\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"code123\"))\n    // (\"code12\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            } else if (c >= '0' && c <= '9') {\n                result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292964,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2hcnftm1.scala:75:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2hcnftm1.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2hcnftm1.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2hcnftm1.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2hcnftm1.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2hcnftm1.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2hcnftm1.scala:61:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until string.length) {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Unit\n\u001b[31m   |\u001b[0m        Required: String\n\u001b[31m62 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mc\u001b[0m = string.charAt(i)\n\u001b[31m63 |\u001b[0m            \u001b[33mif\u001b[0m (c >= \u001b[31m'a'\u001b[0m && c <= \u001b[31m'z'\u001b[0m) {\n\u001b[31m64 |\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292963,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase(\"Hello\")\n    // (\"hELLO\")\n    def flipCase2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase(\"Hello\")\n    // (\"hELLO\")\n    def flipCase3(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase(\"Hello\")\n    // (\"hELLO\")\n    def flipCase4(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase(\"Hello\")\n    // (\"hELLO\")\n    def flipCase5(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase(\"Hello\")\n    // (\"hELLO\")\n    def flipCase6(string : String) : String\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292963,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpstlc2n8y.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpstlc2n8y.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpstlc2n8y.scala:21:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpstlc2n8y.scala:32:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpstlc2n8y.scala:43:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpstlc2n8y.scala:54:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E067] Syntax Error: /tmp/tmpstlc2n8y.scala:62:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mflipCase6\u001b[0m(\u001b[36mstring\u001b[0m : \u001b[35mStr",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times that a substring is contained in the string.\n    // >>> countSubstring(\"abcabcabc\", \"abc\")\n    // 3\n    def countSubstring(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equals(substring)) {\n                    result += 1\n                }\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times that a substring is contained in the string,\n    // ignoring case.\n    // >>> countSubstringIgnoreCase(\"abcABCabc\", \"abc\")\n    // 3\n    def countSubstringIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equalsIgnoreCase(substring)) {\n                    result += 1\n                }\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times that a substring is contained in the string,\n    // ignoring case, and ignoring the case of the substring.\n    // >>> countSubstringIgnoreCase(\"abcABCabc\", \"abc\")\n    // 3\n    def countSubstringIgnoreCaseIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292965,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7grmxd4m.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7grmxd4m.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7grmxd4m.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7grmxd4m.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7grmxd4m.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7grmxd4m.scala:59:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until string.length) {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Unit\n\u001b[31m   |\u001b[0m        Required: Int\n\u001b[31m60 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mj\u001b[0m = i + substring.length\n\u001b[31m61 |\u001b[0m            \u001b[33mif\u001b[0m (j <= string.length) {\n\u001b[31m62 |\u001b[0m                \n\u001b[31m63 |\u001b[0m    }\n\u001b[31m64 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase()\n            } else {\n                result += c.toLowerCase()\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"code\"))\n    // (\"cod\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"code123\"))\n    // (\"code1\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= '0' && c <= '9') {\n                result += c\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"code123\"))\n    // (\"code12\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            } else if (c >= '0' && c <= '9') {\n\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292965,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjjbmcj6d.scala:75:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjjbmcj6d.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjjbmcj6d.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjjbmcj6d.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase()\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjjbmcj6d.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjjbmcj6d.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjjbmcj6d.scala:61:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until string.length) {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Unit\n\u001b[31m   |\u001b[0m        Required: String\n\u001b[31m62 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mc\u001b[0m = string.charAt(i)\n\u001b[31m63 |\u001b[0m            \u001b[33mif\u001b[0m (c >= \u001b[31m'a'\u001b[0m && c <= \u001b[31m'z'\u001b[0m) {\n\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equals(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"Hello world!\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world!\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters, and ignoring the case of the letters\n    // in the substring \"world\".\n    // >>> countIgnoreCaseAndIgnoreCaseAndIgnoreCase(\"Hello world!\")\n    // 1\n    def countIgnoreCase\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292963,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmp6scjmplt.scala:61:23 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountIgnoreCase\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6scjmplt.scala:69:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6scjmplt.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6scjmplt.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6scjmplt.scala:64:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6scjmplt.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6scjmplt.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT D",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase(\"Hello\")\n    // \"hELLO\"\n    def flipCase2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase(\"Hello\")\n    // \"hELLO\"\n    def flipCase3(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase(\"Hello\")\n    // \"hELLO\"\n    def flipCase4(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase(\"Hello\")\n    // \"hELLO\"\n    def flipCase5(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase(\"Hello\")\n    // \"hELLO\"\n    def flipCase6(string : String) : String = {\n        var result = \"\"\n        for (i <- 0\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292965,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpe_ifmw2f.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe_ifmw2f.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe_ifmw2f.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe_ifmw2f.scala:21:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe_ifmw2f.scala:21:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe_ifmw2f.scala:32:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe_ifmw2f.scala:32:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is contained in the string.\n    // >>> countSubstring(\"abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292964,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzczjs3xl.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzczjs3xl.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzczjs3xl.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzczjs3xl.scala:19:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzczjs3xl.scala:20:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzczjs3xl.scala:21:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equals(substring)) {\n                count = count + 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the reverse order.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", true)\n    // 3\n    def repeatCount(string : String, substring : String, reverse : Boolean) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equals(substring)) {\n                count = count + 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the given direction.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", true, true)\n    // 2\n    def repeatCount(string : String, substring : String, reverse : Boolean, direction : Boolean) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equals(substring)) {\n                count = count + 1\n            }\n            if (direction) {\n                i = i + 1\n            } else {\n                i = i - 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the given direction.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", true, true, true)\n    // 2\n    def repeat\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292962,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmpbvkhfxrq.scala:62:14 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mrepeat\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m              ^\u001b[0m\n\u001b[31m   |\u001b[0m              Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbvkhfxrq.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbvkhfxrq.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpbvkhfxrq.scala:51:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m                i = i + \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpbvkhfxrq.scala:53:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m                i = i - \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbvkhfxrq.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbvkhfxrq.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase\n        var r = \"\"\n        for (i <- 0 until s.length) {\n            r = r + s.charAt(i).toUpperCase\n        }\n        r\n    }\n\n    // For a given string, return a string where \"bad\" characters are replaced with \"good\" characters.\n    // >>> replaceBadChars(\"bad\")\n    // \"good\"\n    def replaceBadChars(string : String) : String = {\n        var s = string.toLowerCase\n        var r = \"\"\n        for (i <- 0 until s.length) {\n            if (s.charAt(i) == \"b\") {\n                r = r + \"g\"\n            } else {\n                r = r + s.charAt(i)\n            }\n        }\n        r\n    }\n\n    // For a given string, return a string where \"bad\" characters are replaced with \"good\" characters.\n    // >>> replaceBadChars(\"bad\")\n    // \"good\"\n    def replaceBadChars2(string : String) : String = {\n        var s = string.toLowerCase\n        var r = \"\"\n        for (i <- 0 until s.length) {\n            if (s.charAt(i) == \"b\") {\n                r = r + \"g\"\n            } else {\n                r = r + s.charAt(i)\n            }\n        }\n        r\n    }\n\n    // For a given string, return a string where \"bad\" characters are replaced with \"good\" characters.\n    // >>> replaceBadChars(\"bad\")\n    // \"good\"\n    def replaceBadChars3(string : String) : String = {\n        var s = string.toLowerCase\n        var r = \"\"\n        for (i <- 0 until s.length) {\n            if (s.charAt(i) == \"b\") {\n                r = r + \"g\"\n            } else {\n                r = r + s.charAt(i)\n            }\n        }\n        r\n    }\n\n    // For a given string, return a string where \"bad\" characters are replaced with \"good\" characters.\n    // >>> replaceBadChars(\"\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292964,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6rakpoge.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6rakpoge.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            r = r + s.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6rakpoge.scala:23:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"b\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6rakpoge.scala:39:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"b\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp6rakpoge.scala:55:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            \u001b[33mif\u001b[0m (s.charAt(i) == \u001b[31m\"b\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6rakpoge.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6rakpoge.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the string appears in the string.\n    // >>> countAppearances(\"hello\", \"hello\")\n    // 2\n    def countAppearances(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == substring.charAt(0)) {\n                result += 1\n                for (j <- 1 until substring.length) {\n                    if (string.charAt(i + j) != substring.charAt(j)) {\n                        break\n                    }\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring appears in the string.\n    // >>> countSubstringAppearances(\"hello\", \"lo\")\n    // 2\n    def countSubstringAppearances(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == substring.charAt(0)) {\n                result += 1\n                for (j <- 1 until substring.length) {\n                    if (string.charAt(i + j) != substring.charAt(j)) {\n                        break\n                    }\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring appears in the string.\n    // >>> countSubstringAppearances(\"hello\", \"lo\")\n    // 2\n    def countSubstringAppearances2(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292965,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpe2u947cs.scala:75:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe2u947cs.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe2u947cs.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe2u947cs.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe2u947cs.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe2u947cs.scala:31:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m                        break\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpe2u947cs.scala:51:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m                        break\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Er",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var i2 = string.indexOf(substring, i)\n            if (i2 >= 0) {\n                count += 1\n                i = i2 + substring.length\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated starting at a given index.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", 2)\n    // 2\n    def repeatCount(string : String, substring : String, startIndex : Int) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var i2 = string.indexOf(substring, i)\n            if (i2 >= 0 && i2 >= startIndex) {\n                count += 1\n                i = i2 + substring.length\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated starting at a given index.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", 2)\n    // 2\n    def repeatCount(string : String, substring : String, startIndex : Int) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var i2 = string.indexOf(substring, i)\n            if (i2 >= 0 && i2 >= startIndex) {\n                count += 1\n                i = i2 + substring.length\n            }\n        }\n        return count\n    }\n\n    //\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292964,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdlzbwtbh.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdlzbwtbh.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdlzbwtbh.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdlzbwtbh.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdlzbwtbh.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpdlzbwtbh.scala:29:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                i = i2 + substring.length\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpdlzbwtbh.scala:44:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m                i = i2 + substring.length\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-ex",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equals(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countCase(\"hello world!\")\n    // 1\n    def countCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countCaseIgnore(\"hello world!\")\n    // 1\n    def countCaseIgnore(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string,\n    // ignoring case, ignoring the case of the letters, and ignoring the case of the letters.\n    // >>> countCaseIgnoreIgnore(\"hello world!\")\n    // 1\n    def countCaseIgnoreIgnore(string : String) : Int = {\n        var result = 0\n        for (i <- 0\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292964,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpmhptosio.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmhptosio.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmhptosio.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmhptosio.scala:62:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  value foreach is not a member of Int\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabc\", \"abc\")\n    // 3\n    def countSubstring(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equals(substring)) {\n                    result += 1\n                }\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabc\", \"abc\")\n    // 3\n    def countSubstring2(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equals(substring)) {\n                    result += 1\n                }\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabc\", \"abc\")\n    // 3\n    def countSubstring3(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equals(substring)) {\n                    result += 1\n                }\n            }\n        }\n        result\n    }\n\n    \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292964,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdud3yys1.scala:76:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdud3yys1.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdud3yys1.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdud3yys1.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdud3yys1.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdud3yys1.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdud3yys1.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292963,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"Hello world\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292965,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpouejuge3.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpouejuge3.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpouejuge3.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpouejuge3.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpouejuge3.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmpouejuge3.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpouejuge3.scala:42:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpouejuge3.scala:57:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count2(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count3(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count4(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292966,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_au8l37c.scala:80:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_au8l37c.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_au8l37c.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_au8l37c.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_au8l37c.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_au8l37c.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_au8l37c.scala:41:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_au8l37c.scala:55:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the given set are removed.\n    // >>> removeChars((\"Hello\", \"hi\"), \"hl\")\n    // (\"eo\")\n    def removeChars(string : String, chars : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (!chars.contains(c)) {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are the same are removed.\n    // >>> removeAdjacent((\"code\"), \"cd\")\n    // (\"e\")\n    def removeAdjacent(string : String, c : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c1 = string.charAt(i)\n            if (i < string.length - 1) {\n                var c2 = string.charAt(i + 1)\n                if (c1 == c2) {\n                    continue\n                }\n            }\n            result += c1\n        }\n        return result\n    }\n\n    // For a given string, return a string where all the letters that appear only once are removed.\n    // >>> removeDuplicates((\"code\"))\n    // (\"cde\")\n    def removeDuplicates(string : String) : String = {\n        var result = \"\"\n        var chars = Set.empty[String]\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (!chars.contains(c)) {\n                chars += c\n            }\n        }\n        for (c <- 0 until chars.length) {\n            result +=\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292974,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpiryuc7qn.scala:65:21 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m            result +=\n\u001b[31m\u001b[31m   |\u001b[0m                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                     expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpiryuc7qn.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiryuc7qn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiryuc7qn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiryuc7qn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiryuc7qn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiryuc7qn.scala:44:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m                    continue\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: continue\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismat",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equals(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"hello world!\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndCase(\"hello world!\")\n    // 1\n    def countIgnoreCaseAndCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCaseAndCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters, and ignoring the case of the letters\n    // of the substring \"world\".\n    // >>> countIgnoreCaseAndCaseAndIgnore(\"hello world!\")\n    // 1\n    def countIgnoreCaseAndCase\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292974,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmps7l_hayu.scala:61:30 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountIgnoreCaseAndCase\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmps7l_hayu.scala:69:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmps7l_hayu.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmps7l_hayu.scala:49:56 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            \u001b[33mif\u001b[0m (string.substring(i, i + \u001b[31m\"world\"\u001b[0m.length).equalsIgnoreCaseAndCase(\u001b[31m\"world\"\u001b[0m)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value equalsIgnoreCaseAndCase is not a member of String\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps7l_hayu.scala:64:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmps7l_hayu.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tm",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"code\"))\n    // (\"cod\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"code123\"))\n    // (\"code1\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1).isDigit()) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"code123\"))\n    // (\"code12\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && (string.charAt(i + 1).isLetter() || string.charAt\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292978,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgemvp58g.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgemvp58g.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgemvp58g.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgemvp58g.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgemvp58g.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgemvp58g.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgemvp58g.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpgemvp58g.scala:46:62 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m            \u001b[33mif\u001b[0m (i < string.length - \u001b[31m1\u001b[0m && string.charAt(i + \u001b[31m1\u001b[0m).isDigit()) {\n\u001b[31m\u001b[31m   |\u001b[0m                ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated, ignoring case.\n    // >>> repeatCountIgnoreCase(\"abcABCabc\", \"abc\")\n    // 2\n    def repeatCountIgnoreCase(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).toLowerCase == substring.toLowerCase) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated, ignoring case and\n    // ignoring case.\n    // >>> repeatCountIgnoreCaseIgnoreCase(\"abcABCabc\", \"abc\")\n    // 2\n    def repeatCountIgnoreCaseIgnoreCase(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).toLowerCase == substring.toLowerCase) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated, ignoring case and\n    // ignoring case.\n    // >>> repeatCountIgnoreCase\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292976,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp26ooku4a.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp26ooku4a.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp26ooku4a.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp26ooku4a.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp26ooku4a.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp26ooku4a.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp26ooku4a.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"mississippi\"))\n    // (\"miSsSiSiSiPi\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i + 1 < string.length && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i + 1 < string.length && string.charAt(i + 1).isDigit()) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i + 1 < string.length\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292978,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpm3ldn2tw.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpm3ldn2tw.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm3ldn2tw.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm3ldn2tw.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm3ldn2tw.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm3ldn2tw.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm3ldn2tw.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpm3ldn2tw.scala:46:62 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m            \u001b[33mif\u001b[0m (i + \u001b[31m1\u001b[0m < string.length && string.charAt(i + \u001b[31m1\u001b[0m).isDigit()) {\n\u001b[31m\u001b[31m   |\u001b[0m                ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring appears in the string.\n    // >>> countSubstring(\"abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292976,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnbrb9o_9.scala:29:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnbrb9o_9.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnbrb9o_9.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnbrb9o_9.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnbrb9o_9.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnbrb9o_9.scala:24:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnbrb9o_9.scala:25:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase.map(_.toUpper)\n        s.toUpperCase.map(_.toLower)\n        s\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, subString : String) : Int = {\n        var count = 0\n        var i = 0\n        while(i < string.length) {\n            if(string.substring(i, i + subString.length) == subString) {\n                count += 1\n                i += subString.length\n            } else {\n                i += 1\n            }\n        }\n        count\n    }\n\n    // For a given string, return the number of times a substring is repeated in reverse.\n    // >>> repeatCountReverse(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCountReverse(string : String, subString : String) : Int = {\n        var count = 0\n        var i = string.length - 1\n        while(i >= 0) {\n            if(string.substring(i, i + subString.length) == subString) {\n                count += 1\n                i -= subString.length\n            } else {\n                i -= 1\n            }\n        }\n        count\n    }\n\n    // For a given string, return the number of times a substring is repeated in a given direction.\n    // >>> repeatCountDirection(\"abcabcabc\", \"abc\", \"forward\")\n    // 2\n    def repeatCountDirection(string : String, subString : String, direction : String) : Int = {\n        var count = 0\n        var i = 0\n        if(direction == \"forward\") {\n            while(i < string.length) {\n                if(string.substring(i, i + subString.length) == subString) {\n                    count += 1\n                    i += subString.length\n                } else {\n                    i += 1\n                }\n            }\n        } else {\n            while(i >= 0) {\n                if(string.substring(i, i + subString.length) == sub\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292977,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprd45qdb6.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmprd45qdb6.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprd45qdb6.scala:54:12 --------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m            \u001b[33mwhile\u001b[0m(i < string.length) {\n\u001b[31m\u001b[31m   |\u001b[0m            ^\u001b[0m\n\u001b[31m   |\u001b[0m            Found:    Unit\n\u001b[31m   |\u001b[0m            Required: Int\n\u001b[31m55 |\u001b[0m                \u001b[33mif\u001b[0m(string.substring(i, i + subString.length) == subString) {\n\u001b[31m56 |\u001b[0m                    count += \u001b[31m1\u001b[0m\n\u001b[31m57 |\u001b[0m                    i += subString.length\n\u001b[31m58 |\u001b[0m                } \u001b[33melse\u001b[0m {\n\u001b[31m59 |\u001b[0m                    i += \u001b[31m1\u001b[0m\n\u001b[31m60 |\u001b[0m                }\n\u001b[31m61 |\u001b[0m            }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprd45qdb6.scala:64:64 ------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m                \u001b[33mif\u001b[0m(string.substring(i, i + subString.length) == sub\n\u001b[31m\u001b[31m   |\u001b[0m                                                                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                          Not found: sub\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmprd45qdb6.scala:72:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmprd45qdb6.scala:66:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m66 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a new string where the first and last characters are swapped.\n    // >>> swapFirstLast((\"code\"))\n    // (\"eodc\")\n    def swapFirstLast(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            result += c\n            if (i == 0 || i == string.length - 1) {\n                result += string.charAt(string.length - 1)\n                result += string.charAt(0)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a new string where every other character is\n    // swapped with the next one.\n    // >>> swapPairs((\"code\"))\n    // (\"oecd\")\n    def swapPairs(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            result += c\n            if (i % 2 == 1) {\n                result += string.charAt(string.length - 1)\n            } else {\n                result += string.charAt(0)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a new string where the first and last characters are exchanged,\n    // and every other character is exchanged with the next one.\n    // >>> swapFirstLastPairs((\"code\"))\n    // (\"oecod\")\n    def swapFirstLastPairs(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            result += c\n            if (i == 0 || i == string.length - 1) {\n                result += string.\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292978,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_3rdn4qo.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_3rdn4qo.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_3rdn4qo.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_3rdn4qo.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_3rdn4qo.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_3rdn4qo.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp_3rdn4qo.scala:66:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m66 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292963,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated, ignoring case.\n    // >>> repeatCountIgnoreCase(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCountIgnoreCase(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).toLowerCase == substring.toLowerCase) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated, ignoring case,\n    // and ignoring case in the substring.\n    // >>> repeatCountIgnoreCase(\"abcabcabc\", \"abc\", \"abc\")\n    // 2\n    def repeatCountIgnoreCase2(string : String, substring : String, substring2 : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).toLowerCase == substring.toLowerCase &&\n                string.substring(i, i + substring2.length).toLowerCase == substring2.toLowerCase) {\n                count += 1\n            }\n        }\n        return count\n    \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292978,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpep935083.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpep935083.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpep935083.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpep935083.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeNonAlphabetChars(\"Hello\")\n    // \"ello\"\n    def removeNonAlphabetChars(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) in alphabet) {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are the same are removed.\n    // >>> removeAdjacentDuplicates(\"code\")\n    // \"cde\"\n    def removeAdjacentDuplicates(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i == 0 or string.charAt(i) != string.charAt(i - 1)) {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all repeating characters are removed,\n    // except for the first and last character.\n    // >>> removeRepeatingChars(\"code\")\n    // \"e\"\n    def removeRepeatingChars(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length - 1) {\n            if (i == 0 or string.charAt(i) != string.charAt(i - 1)) {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all repeating characters are removed,\n    // including the first and last character.\n    // >>> removeRepeatingChars(\"code\")\n    // \"cde\"\n    def removeRepeatingChars2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292978,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp260ly650.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp260ly650.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp260ly650.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp260ly650.scala:21:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i) in alphabet) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value in is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp260ly650.scala:21:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i) in alphabet) {\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                    Not found: alphabet\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp260ly650.scala:34:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m            \u001b[33mif\u001b[0m (i == \u001b[31m0\u001b[0m or string.charAt(i) != string.charAt(i - \u001b[31m1\u001b[0m)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value or is not a member of Boolean\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp260ly650.scala:48:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m            \u001b[33mif\u001b[0m (i == \u001b[31m0\u001b[0m or string.charAt(i) != string.charAt(i - \u001b[31m1\u001b[0m)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string.\n    // >>> countAppearances(\"hello\", \"hello\")\n    // 2\n    def countAppearances(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string.\n    // >>> countAppearances(\"hello\", \"lo\")\n    // 1\n    def countAppearances2(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string.\n    // >>> countAppearances(\"hello\", \"ll\")\n    // 0\n    def countAppearances3(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string.\n    // >>> countAppearances(\"hello\", \"\")\n    // 1\n    def countAppearances4(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292977,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnqgudo23.scala:75:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnqgudo23.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnqgudo23.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnqgudo23.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnqgudo23.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front,\n    // and \"not\" has been removed from the back.\n    // >>> notNotify((\"not good\"))\n    // (\"good\")\n    def notNotify(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == \"n\") {\n                result = result + \"not \"\n            } else {\n                result = result + string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front,\n    // and \"not\" has been removed from the back.\n    // >>> notNotify((\"not good\"))\n    // (\"good\")\n    def notNotify2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == \"n\") {\n                result = result + \"not \"\n            } else {\n                result = result + string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front,\n    // and \"not\" has been removed from the back.\n    // >>> notNotify((\"not good\"))\n    // (\"good\")\n    def notNotify3(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == \"n\") {\n                result = result + \"not \"\n            } else {\n                result = result + string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front,\n    // and \"not\" has been removed\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292979,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpew4bd_nr.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpew4bd_nr.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmpew4bd_nr.scala:22:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i) == \u001b[31m\"n\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpew4bd_nr.scala:38:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i) == \u001b[31m\"n\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpew4bd_nr.scala:54:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i) == \u001b[31m\"n\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpew4bd_nr.scala:67:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpew4bd_nr.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"Hello world!\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world!\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase(\"\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292979,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplwyr9ija.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplwyr9ija.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplwyr9ija.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplwyr9ija.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplwyr9ija.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmplwyr9ija.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplwyr9ija.scala:42:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplwyr9ija.scala:57:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCount(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == substring) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated, ignoring case.\n    // >>> repeatCountIgnoreCase(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCountIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c.toLowerCase == substring.toLowerCase) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated, ignoring case and\n    // ignoring case of the substring.\n    // >>> repeatCountIgnoreCaseAndIgnoreCase(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCountIgnoreCaseAndIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c.toLowerCase == substring.toLowerCase) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated, ignoring case and\n    // ignoring case of the substring,\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292979,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwvzjru0s.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwvzjru0s.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwvzjru0s.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwvzjru0s.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwvzjru0s.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwvzjru0s.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == substring) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwvzjru0s.scala:41:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m            \u001b[33mif\u001b[0m (c.toLowerCase == substring.toLowerCase) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwvzjru0s.scala:56:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, subString : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == subString.charAt(0)) {\n                count += 1\n                for (j <- 1 until subString.length) {\n                    if (string.charAt(i + j) != subString.charAt(j)) {\n                        break\n                    }\n                    count += 1\n                }\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string,\n    // ignoring case.\n    // >>> repeatCountIgnoreCase(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCountIgnoreCase(string : String, subString : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == subString.charAt(0)) {\n                count += 1\n                for (j <- 1 until subString.length) {\n                    if (string.charAt(i + j).toLowerCase() != subString.charAt(j).toLowerCase()) {\n                        break\n                    }\n                    count += 1\n                }\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string,\n    // ignoring case, and ignoring the case of the substring.\n    // >>> repeatCountIgnoreCaseAndIgnoreCase(\"abcabcabc\", \"abc\")\n    //\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292979,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2tv0t9k2.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2tv0t9k2.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2tv0t9k2.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2tv0t9k2.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2tv0t9k2.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2tv0t9k2.scala:31:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m                        break\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2tv0t9k2.scala:51:45 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m                    \u001b[33mif\u001b[0m (string.charAt(i + j).toLowerCase() != subString.charAt(j).toLowerCase()) {\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        value toLowerCase is not a member o",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"mississippi\"))\n    // (\"miSsSiSiSpi\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1).isDigit()) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292979,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2nj884t9.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2nj884t9.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2nj884t9.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2nj884t9.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2nj884t9.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2nj884t9.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2nj884t9.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp2nj884t9.scala:46:62 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m            \u001b[33mif\u001b[0m (i < string.length - \u001b[31m1\u001b[0m && string.charAt(i + \u001b[31m1\u001b[0m).isDigit()) {\n\u001b[31m\u001b[31m   |\u001b[0m                ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstring(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (substring.contains(c)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstring2(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (substring.contains(c)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstring3(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (substring.contains(c)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstring4(string : String, subst\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyhpz_clt.scala:66:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ':' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpyhpz_clt.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyhpz_clt.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyhpz_clt.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyhpz_clt.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpyhpz_clt.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyhpz_clt.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyhpz_clt.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELL",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase.toUpperCase\n        return s\n    }\n\n    // For a given string, return the number of times that a substring is repeated in the string.\n    // >>> countOccurrences(\"abab\", \"ab\")\n    // 2\n    def countOccurrences(string : String, subString : String) : Int = {\n        var s = string.split(subString)\n        var count = 0\n        for (i <- 0 until s.length) {\n            if (s(i).equals(s(i + 1))) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated in the string,\n    // ignoring case.\n    // >>> countOccurrencesIgnoreCase(\"abab\", \"ab\")\n    // 2\n    def countOccurrencesIgnoreCase(string : String, subString : String) : Int = {\n        var s = string.toLowerCase.split(subString.toLowerCase)\n        var count = 0\n        for (i <- 0 until s.length) {\n            if (s(i).equals(s(i + 1))) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated in the string,\n    // ignoring case and ignoring non-alphabetic characters.\n    // >>> countOccurrencesIgnoreCaseAndNonAlpha(\"abab\", \"ab\")\n    // 2\n    def countOccurrencesIgnoreCaseAndNonAlpha(string : String, subString : String) : Int = {\n        var s = string.toLowerCase.split(subString.toLowerCase)\n        var count = 0\n        for (i <- 0 until s.length) {\n            if (s(i).equals(s(i + 1))) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated in the string,\n    // ignoring case and ignoring non-alphabetic characters.\n    // >>> countOccurrencesIgnoreCaseAnd\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292974,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpppho2g45.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpppho2g45.scala:61:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpppho2g45.scala:62:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpppho2g45.scala:63:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, replace all spaces with '%20'.\n    // >>> replaceSpaces(\"Hello\")\n    // \"Hello\"\n    def replaceSpaces(string : String) : String = {\n        return string.replaceAll(\" \", \"%20\")\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeNonAlpha(\"Hello\")\n    // \"ello\"\n    def removeNonAlpha(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeNonAlpha(\"Hello\")\n    // \"ello\"\n    def removeNonAlpha2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeNonAlpha(\"Hello\")\n    // \"ello\"\n    def removeNonAlpha3(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string,\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292979,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8scyyfkj.scala:77:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8scyyfkj.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8scyyfkj.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8scyyfkj.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8scyyfkj.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8scyyfkj.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8scyyfkj.scala:73:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeNonAlphabetChars(\"Hello\")\n    // \"ello\"\n    def removeNonAlphabetChars(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are the same are removed.\n    // >>> removeAdjacentDuplicates(\"code\")\n    // \"cd\"\n    def removeAdjacentDuplicates(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i == 0 || string.charAt(i - 1) != c) {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all repeating characters are removed,\n    // except for the last one.\n    // >>> removeRepeatingChars(\"code\")\n    // \"e\"\n    def removeRepeatingChars(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i == 0 || string.charAt(i - 1) != c) {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all repeating characters are removed,\n    // including the last one.\n    // >>> removeAllRepeatingChars(\"code\")\n    \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292978,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw_su0l32.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_su0l32.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_su0l32.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_su0l32.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_su0l32.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw_su0l32.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw_su0l32.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, replace all spaces with %20.\n    // >>> replaceSpaces((\"Hello World\"))\n    // (\"Hello%20World\")\n    def replaceSpaces(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == ' ') {\n                result += \"%20\"\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the string reversed.\n    // >>> reverse((\"Hello\"))\n    // (\"olleH\")\n    def reverse(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            result += c\n        }\n        return result\n    }\n\n    // For a given string, return the string with the first letter capitalized.\n    // >>> capitalize((\"hello\"))\n    // (\"Hello\")\n    def capitalize(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i == 0) {\n                result += c.toUpperCase\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the string with the first letter capitalized and the rest lowercased.\n    // >>> capitalizeAndLowercase((\"Hello\"))\n    // (\"Hello\")\n    def capitalizeAndLowercase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i == 0) {\n\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292980,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4m0xws_1.scala:81:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m81 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4m0xws_1.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4m0xws_1.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4m0xws_1.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4m0xws_1.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4m0xws_1.scala:56:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4m0xws_1.scala:56:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4m0xws_1.scala:69:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m        \u001b[33mfo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in reverse order.\n    // >>> repeatCountReverse(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCountReverse(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(string.length - i - substring.length, string.length - i) == substring) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the given direction.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", \"forward\")\n    // 2\n    def repeatCount(string : String, substring : String, direction : String) : Int = {\n        if (direction == \"forward\") {\n            return repeatCount(string, substring)\n        } else {\n            return repeatCountReverse(string, substring)\n        }\n    }\n\n    // For a given string, return the number of times a substring is repeated in the given direction.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", \"backward\")\n    // 2\n    def repeatCountReverse(string : String, substring : String, direction : String) : Int = {\n        if (direction == \"forward\") {\n            return repeatCountReverse(string, substring)\n        } else {\n            return repeatCount(string\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292979,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa6yooi12.scala:60:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa6yooi12.scala:68:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa6yooi12.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa6yooi12.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E134] Type Error: /tmp/tmpa6yooi12.scala:59:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mreturn\u001b[0m repeatCount(string\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mNone of the overloaded alternatives of \u001b[33mmethod\u001b[0m \u001b[35mrepeatCount\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m with types\n\u001b[31m   |\u001b[0m (string: String, substring: String, direction: String): Int\n\u001b[31m   |\u001b[0m (string: String, substring: String): Int\n\u001b[31m   |\u001b[0mmatch arguments ((string : String))\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa6yooi12.scala:67:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpa6yooi12.scala:61:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m61 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too fa",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase.toUpperCase\n        return s\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var s = string.split(\" \")\n        var count = 0\n        for (i <- 0 to s.length - 1) {\n            if (s[i].equals(\"world\")) {\n                count = count + 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front,\n    // and \"beautiful\" has been removed.\n    // >>> fixOdds(\"This string has some words in it.\")\n    // \"This string has some words in it.\"\n    def fixOdds(string : String) : String = {\n        var s = string.toLowerCase.toUpperCase\n        var s2 = s.replaceAll(\"not \", \"\")\n        var s3 = s2.replaceAll(\"beautiful\", \"\")\n        return s3\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front,\n    // and \"beautiful\" has been removed.\n    // >>> fixOdds2((\"This string has some words in it.\"))\n    // \"This string has some words in it.\"\n    def fixOdds2(string : String) : String = {\n        var s = string.toLowerCase.toUpperCase\n        var s2 = s.replaceAll(\"not \", \"\")\n        var s3 = s2.replaceAll(\"beautiful\", \"\")\n        return s3\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front,\n    // and \"beautiful\" has been removed.\n    // >>> fixOdds3((\"This string has some words in it.\"))\n    // \"This string has some words in it.\"\n    def fixOdds3(string : String) : String = {\n        var s = string.toLowerCase.toUpperCase\n        var s2 = s.replaceAll\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292978,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6qyv4gs1.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mif\u001b[0m (s[\u001b[35mi\u001b[0m].equals(\u001b[31m\"world\"\u001b[0m)) {\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6qyv4gs1.scala:55:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // separated by a space.\n    // >>> separateAdjacentLetters(\"abcd\")\n    // \"a b c d\"\n    def separateAdjacentLetters(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i)\n            if (i < string.length - 1) {\n                result += \" \"\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have\n    // been separated by a space.\n    // >>> separateAdjacentLetters(\"aabcd\")\n    // \"a a b c d\"\n    def separateAdjacentLetters2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i)\n            if (i < string.length - 1) {\n                result += \" \"\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have\n    // been separated by a space.\n    // >>> separateAdjacentLetters3(\"aabcd\")\n    // \"a a b c d\"\n    def separateAdjacentLetters3(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i)\n            if (i < string.length - 1) {\n                result += \" \"\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have\n    // been separated by a space.\n    // >>> separateAdjacentLetters4(\"aabcd\")\n    // \"a a b c d\"\n    def separateAdjacentLetters4(string\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292980,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9omp1t6g.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ':' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9omp1t6g.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9omp1t6g.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9omp1t6g.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9omp1t6g.scala:67:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9omp1t6g.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9omp1t6g.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longe",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a new string where the first character is in upper case and the rest are in lower case.\n    // >>> capitalize(\"Hello\")\n    // (\"HELLO\")\n    def capitalize(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i == 0) {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a new string where the first character is in lower case and the rest are in upper case.\n    // >>> lowercaseFirst(\"Hello\")\n    // (\"hello\")\n    def lowercaseFirst(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i == 0) {\n                result += c.toLowerCase\n            } else {\n                result += c.toUpperCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a new string where the first character is in upper case and the rest are in lower case.\n    // >>> uppercaseFirst(\"Hello\")\n    // (\"HELLO\")\n    def uppercaseFirst(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i == 0) {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a new string where the first character is in lower\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp216edhpr.scala:76:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp216edhpr.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp216edhpr.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp216edhpr.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp216edhpr.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp216edhpr.scala:28:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp216edhpr.scala:28:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp216edhpr.scala:30:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is repeated in reverse order.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", true)\n    // 2\n    def repeatCount(string : String, substring : String, reverse : Boolean) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is repeated in a given direction.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", \"forward\")\n    // 2\n    // >>> repeatCount(\"abcabcabc\", \"abc\", \"backward\")\n    // 0\n    def repeatCount(string : String, substring : String, direction : String) : Int = {\n        if (direction == \"forward\") {\n            return repeatCount(string, substring)\n        } else if (direction == \"backward\") {\n            return repeatCount(string, substring, true)\n        } else {\n            throw new IllegalArgumentException(\"Invalid direction: \" + direction)\n        }\n    }\n\n    // For a given string, return the number of times that a substring is repeated in a given direction.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", \"forward\")\n    // 2\n    // >>> repeatCount(\"abcabcabc\", \"abc\", \"backward\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292987,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdvsnwfly.scala:67:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdvsnwfly.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpdvsnwfly.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdvsnwfly.scala:62:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdvsnwfly.scala:63:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdvsnwfly.scala:64:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase\n        var r = \"\"\n        for (i <- 0 until s.length) {\n            r = r + s.charAt(i).toUpperCase\n        }\n        r\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        var i = 0\n        while (i < string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equals(substring)) {\n                    count += 1\n                }\n                i = j\n            } else {\n                break\n            }\n        }\n        count\n    }\n\n    // For a given string, return the longest substring that is a palindrome.\n    // >>> longestPalindrome(\"abccba\")\n    // \"ba\"\n    def longestPalindrome(string : String) : String = {\n        var max = \"\"\n        var i = 0\n        while (i < string.length) {\n            var j = i + 1\n            while (j < string.length) {\n                if (string.substring(i, j).equals(string.substring(j, i))) {\n                    j += 1\n                } else {\n                    break\n                }\n            }\n            if (j - i > max.length) {\n                max = string.substring(i, j)\n            }\n            i = j\n        }\n        max\n    }\n\n    // For a given string, return the longest substring that is a palindrome.\n    // >>> longestPalindrome(\"abccba\")\n    // \"ba\"\n    def longestPalindrome2(string : String) : String = {\n        var max = \"\"\n        var i = 0\n        while (i < string.length) {\n            var j = i + 1\n            while (j < string.length) {\n                if (string.substring(i, j).equals(string.substring(\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292987,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmptztg363p.scala:68:67 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m                \u001b[33mif\u001b[0m (string.substring(i, j).equals(string.substring(\n\u001b[31m\u001b[31m   |\u001b[0m                                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptztg363p.scala:77:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptztg363p.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            r = r + s.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptztg363p.scala:30:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                break\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptztg363p.scala:48:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m                    break\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmptztg363p.scala:70:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m70 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase\n        var r = \"\"\n        for (i <- 0 until s.length) {\n            r = r + s.charAt(i).toUpperCase\n        }\n        r\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var s = string.toLowerCase\n        var r = 0\n        for (i <- 0 until s.length) {\n            if (s.substring(i, i + \"world\".length).equals(\"world\")) {\n                r = r + 1\n            }\n        }\n        r\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countCase(\"Hello world!\")\n    // 1\n    def countCase(string : String) : Int = {\n        var s = string.toLowerCase\n        var r = 0\n        for (i <- 0 until s.length) {\n            if (s.substring(i, i + \"world\".length).equals(\"world\")) {\n                r = r + 1\n            }\n        }\n        r\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring leading and trailing whitespace.\n    // >>> countCaseTrim(\"  Hello world!  \")\n    // 1\n    def countCaseTrim(string : String) : Int = {\n        var s = string.toLowerCase\n        var r = 0\n        for (i <- 0 until s.length) {\n            if (s.substring(i, i + \"world\".length).equals(\"world\")) {\n                r = r + 1\n            }\n        }\n        r\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string,\n    // ignoring case, ignoring leading and trailing whitespace, and ignoring case of the letters.\n    // >>> countCaseTrimIgnoreCase\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpp8d09e7x.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpp8d09e7x.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            r = r + s.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp8d09e7x.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp8d09e7x.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpp8d09e7x.scala:67:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equals(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"hello WORLD\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndIgnoreCase(\"hello WORLD\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndIgnoreCase(\"hello WORLD\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase2(string : String) : Int = {\n        var result = 0\n        for\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292989,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp2mdcf_35.scala:62:11 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m        \u001b[33mfor\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m           ^\u001b[0m\n\u001b[31m   |\u001b[0m           pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2mdcf_35.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase(\"Hello\")\n    // \"hELLO\"\n    def flipCase2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase(\"Hello\")\n    // \"hELLO\"\n    def flipCase3(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase(\"Hello\")\n    // \"hELLO\"\n    def flipCase4(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase(\"Hello\")\n    // \"hELLO\"\n    def flipCase5(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase(\"Hello\")\n    // \"hELLO\"\n    def flipCase6(string : String) : String = {\n        var result = \"\"\n        for (i <- 0\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292965,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpe_ifmw2f.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe_ifmw2f.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe_ifmw2f.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe_ifmw2f.scala:21:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe_ifmw2f.scala:21:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe_ifmw2f.scala:32:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpe_ifmw2f.scala:32:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of lowercase characters.\n    // >>> countLowercase((\"Hello\"))\n    // 5\n    def countLowercase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toLowerCase == string.charAt(i)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of uppercase characters.\n    // >>> countUppercase((\"Hello\"))\n    // 5\n    def countUppercase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toUpperCase == string.charAt(i)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of lowercase characters.\n    // >>> countLowercase((\"Hello\"))\n    // 5\n    def countLowercase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toLowerCase == string.charAt(i)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of uppercase characters.\n    // >>> countUppercase((\"Hello\"))\n    // 5\n    def countUppercase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toUpperCase == string.charAt(i)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of lowercase characters.\n    // >>> countLowercase((\"Hello\"))\n    // 5\n    def countLowercase\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmpchen6mlr.scala:70:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountLowercase\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpchen6mlr.scala:78:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpchen6mlr.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpchen6mlr.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpchen6mlr.scala:21:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toLowerCase == string.charAt(i)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpchen6mlr.scala:34:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toUpperCase == string.charAt(i)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpchen6mlr.scala:47:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toLowerCase == string.charAt(i)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += (c - 'a' + 'A')\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var i1 = string.indexOf(substring, i)\n            if (i1 >= 0) {\n                count += 1\n                i = i1 + substring.length\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the reverse direction.\n    // >>> repeatCountReverse(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCountReverse(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var i1 = string.lastIndexOf(substring, i)\n            if (i1 >= 0) {\n                count += 1\n                i = i1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the forward direction.\n    // >>> repeatCountForward(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCountForward(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var i1 = string.indexOf(substring, i)\n            if (i1 >= 0) {\n                count += 1\n                i = i1 + substring.length\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the reverse direction.\n    // >>>\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292985,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpqwzbo5n3.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpqwzbo5n3.scala:29:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                i = i1 + substring.length\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpqwzbo5n3.scala:44:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m                i = i1\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpqwzbo5n3.scala:59:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m                i = i1 + substring.length\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqwzbo5n3.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqwzbo5n3.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqwzbo5n3.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(flipCase((\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated starting at a given index.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", 2)\n    // 2\n    def repeatCount(string : String, substring : String, startIndex : Int) : Int = {\n        var count = 0\n        for (i <- startIndex until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated starting at a given index.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", 2)\n    // 2\n    def repeatCount(string : String, substring : String, startIndex : Int) : Int = {\n        var count = 0\n        for (i <- startIndex until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated starting at a given index.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", 2)\n    // 2\n    def repeatCount(string : String, subst\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292992,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf_qcn6h4.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ':' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpf_qcn6h4.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpf_qcn6h4.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpf_qcn6h4.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpf_qcn6h4.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpf_qcn6h4.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmpf_qcn6h4.scala:49:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mrepeatCount\u001b[0m(\u001b[36mstring\u001b[0m : \u001b[35mString\u001b[0m, \u001b[36msubstring\u001b[0m : \u001b[35mString\u001b[0m, \u001b[36mstartIndex\u001b[0m : \u001b[35mInt\u001b[0m) : \u001b[35mInt\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef repeatCount(string: String, substring: String, startIndex: Int): Int in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 36 and\n\u001b[31m   |\u001b[0mdef repeatCount(string: ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is contained in the string.\n    // >>> countSubstring(\"abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292964,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzczjs3xl.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzczjs3xl.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzczjs3xl.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzczjs3xl.scala:19:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzczjs3xl.scala:20:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzczjs3xl.scala:21:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times that the string appears in the string.\n    // >>> countAppearances(\"hello\", \"hello\")\n    // 2\n    def countAppearances(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times that the string appears in the string.\n    // >>> countAppearances(\"hello\", \"lo\")\n    // 0\n    def countAppearances2(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n                for (j <- 1 until substring.length) {\n                    if (string.charAt(i + j) != substring.charAt(j)) {\n                        break\n                    } else {\n                        result += 1\n                    }\n                }\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times that the string appears in the string.\n    // >>> countAppearances(\"hello\", \"ll\")\n    // 1\n    def countAppearances3(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n                for (j <- 1 until substring.length) {\n                    if (string.charAt(i + j) != substring.charAt(j)) {\n                        break\n                    } else {\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292992,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1jmpd10p.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1jmpd10p.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1jmpd10p.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1jmpd10p.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1jmpd10p.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1jmpd10p.scala:43:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m                        break\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1jmpd10p.scala:63:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m                        break\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp1jmpd1",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front, and \"!\" has been added to the back.\n    // >>> fix(\"Hello, world!\")\n    // \"not Hello, world!\"\n    def fix(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \",\") {\n                result += \"not \"\n            } else {\n                result += c\n            }\n        }\n        result += \"!\"\n        return result\n    }\n\n    // For a given string, return a string where the first and last characters have been exchanged.\n    // >>> flipFirstAndLast(\"code\")\n    // \"eodc\"\n    def flipFirstAndLast(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            result += c\n        }\n        return result\n    }\n\n    // For a given string, return a string where \"not\" has been added in front of every substring that starts with an \"n\".\n    // >>> fixN(\"annoying\")\n    // \"not annoying\"\n    def fixN(string : String) : String = {\n        var result = \"\"\n        for (i <-\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpsie7z141.scala:68:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m        \u001b[33mfor\u001b[0m (i <-\n\u001b[31m\u001b[31m   |\u001b[0m                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                 expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsie7z141.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsie7z141.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsie7z141.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsie7z141.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsie7z141.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpsie7z141.scala:41:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\",\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equals(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"hello world!\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndIgnoreCase(\"hello world!\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndIgnoreCase(\"hello world!\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase2(string : String) : Int = {\n        var result = 0\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp647_hc3q.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp647_hc3q.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp647_hc3q.scala:62:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292963,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // separated by a space.\n    // >>> separateAdjacent((\"abcd\"))\n    // (\"a bcd\")\n    def separateAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i == string.length - 1) {\n                result += string.charAt(i)\n            } else {\n                result += string.charAt(i) + \" \"\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have\n    // been separated by a space.\n    // >>> separateNonAdjacent((\"abcd\"))\n    // (\"a b c d\")\n    def separateNonAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i == string.length - 1) {\n                result += string.charAt(i)\n            } else {\n                result += string.charAt(i) + \" \"\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have\n    // been separated by a space.\n    // >>> separateNonAdjacent2((\"abcd\"))\n    // (\"a b c d\")\n    def separateNonAdjacent2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i == string.length - 1) {\n                result += string.charAt(i)\n            } else {\n                result += string.charAt(i) + \" \"\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have\n    // been separated by a space.\n    // >>> separateNonAdjacent3\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292992,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplnmevzja.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplnmevzja.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplnmevzja.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplnmevzja.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplnmevzja.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmplnmevzja.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times that a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n            }\n        }\n        count\n    }\n\n    // For a given string, return the number of times that a substring is repeated, ignoring case.\n    // >>> repeatCountIgnoreCase(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCountIgnoreCase(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equalsIgnoreCase(substring)) {\n                count += 1\n            }\n        }\n        count\n    }\n\n    // For a given string, return the number of times that a substring is repeated, ignoring case,\n    // and ignoring the case of the substring.\n    // >>> repeatCountIgnoreCaseAndCase(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCountIgnoreCaseAndCase(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equalsIgnoreCase(substring)) {\n                count += 1\n            }\n        }\n        count\n    }\n\n    // For a given string, return the number of times that a substring is repeated, ignoring case,\n    // and ignoring the case of the substring.\n    //\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292993,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvxyjm5dk.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvxyjm5dk.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvxyjm5dk.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvxyjm5dk.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvxyjm5dk.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvxyjm5dk.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpvxyjm5dk.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where the first and last characters are swapped.\n    // >>> swapFirstLast((\"code\"))\n    // (\"eodc\")\n    def swapFirstLast(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            result += c\n            if (i == 0 || i == string.length - 1) {\n                result += string.charAt(string.length - 1 - i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where every other character is\n    // swapped with the next one.\n    // >>> swapPairs((\"code\"))\n    // (\"oec\")\n    def swapPairs(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            result += c\n            if (i % 2 == 1) {\n                result += string.charAt(string.length - 1 - i / 2)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where the first and last characters are\n    // swapped and every other character is swapped with the next one.\n    // >>> swapFirstLastPairs((\"code\"))\n    // (\"oec\")\n    def swapFirstLastPairs(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            result += c\n            if (i == 0 || i == string.length - 1) {\n                result += string.charAt(string.length - 1 - i)\n            } else if (i % 2 == 1) {\n                \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292993,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp06vmck41.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp06vmck41.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp06vmck41.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp06vmck41.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp06vmck41.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp06vmck41.scala:57:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until string.length) {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Unit\n\u001b[31m   |\u001b[0m        Required: String\n\u001b[31m58 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mc\u001b[0m = string.charAt(i)\n\u001b[31m59 |\u001b[0m            result += c\n\u001b[31m60 |\u001b[0m            \u001b[33mif\u001b[0m (i == \u001b[31m0\u001b[0m || i == string.length - \u001b[31m1\u001b[0m) {\n\u001b[31m61 |\u001b[0m                result += string.charAt(string.length - \u001b[31m1\u001b[0m - i)\n\u001b[31m62 |\u001b[0m            } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (i % \u001b[31m2\u001b[0m == \u001b[31m1\u001b[0m) {\n\u001b[31m63 |\u001b[0m                \n\u001b[31m64 |\u001b[0m    }\n\u001b[31m65 |\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeNonAlphabetChars(\"Hello\")\n    // \"ello\"\n    def removeNonAlphabetChars(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are the same are removed.\n    // >>> removeAdjacentDuplicates(\"code\")\n    // \"cde\"\n    def removeAdjacentDuplicates(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                continue\n            }\n            result += c\n        }\n        return result\n    }\n\n    // For a given string, return a string where all repeating characters are removed,\n    // except for the first and last character.\n    // >>> removeRepeatingChars(\"code\")\n    // \"e\"\n    def removeRepeatingChars(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length - 1) {\n            var c = string.charAt(i)\n            if (i > 0 && string.charAt(i - 1) == c) {\n                continue\n            }\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                continue\n            }\n            result += c\n        }\n        \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292993,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6hom4gv9.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6hom4gv9.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6hom4gv9.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6hom4gv9.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6hom4gv9.scala:42:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m                continue\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: continue\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6hom4gv9.scala:58:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m                continue\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: continue\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6hom4gv9.scala:61:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m                continue\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: continue\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring appears in the string.\n    // >>> countSubstring(\"abcabcabc\", \"abc\")\n    // 3\n    def countSubstring(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equals(substring)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring appears in the string.\n    // >>> countSubstring(\"abcabcabc\", \"abc\")\n    // 3\n    def countSubstring2(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equals(substring)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring appears in the string.\n    // >>> countSubstring(\"abcabcabc\", \"abc\")\n    // 3\n    def countSubstring3(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equals(substring)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292993,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwrwhxoqx.scala:76:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwrwhxoqx.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwrwhxoqx.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwrwhxoqx.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwrwhxoqx.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwrwhxoqx.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwrwhxoqx.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"Hello world\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters, and ignoring the case of the letters\n    // of the substring \"world\".\n    // >>> countIgnore\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292993,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1si1t3hh.scala:75:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1si1t3hh.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1si1t3hh.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1si1t3hh.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1si1t3hh.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmp1si1t3hh.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp1si1t3hh.scala:42:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp1si1t3hh.scala:57:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).isLowerCase()) {\n                result += string.charAt(i).toUpperCase()\n            } else {\n                result += string.charAt(i).toLowerCase()\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292992,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzxo0y1sg.scala:10:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).isLowerCase()) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value isLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzxo0y1sg.scala:11:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzxo0y1sg.scala:11:43 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m                result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzxo0y1sg.scala:13:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                result += string.charAt(i).toLowerCase()\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzxo0y1sg.scala:13:43 ------------------------\u001b[0m\u001b[0m\n\u001b[31m13 |\u001b[0m                result += string.charAt(i).toLowerCase()\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292963,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"Hello world!\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world!\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase(\"\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292979,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplwyr9ija.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplwyr9ija.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplwyr9ija.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplwyr9ija.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplwyr9ija.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmplwyr9ija.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplwyr9ija.scala:42:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplwyr9ija.scala:57:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase\n        var r = \"\"\n        for (i <- 0 until s.length) {\n            r = r + s.charAt(i).toUpperCase\n        }\n        r\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var s = string.toLowerCase\n        var r = 0\n        for (i <- 0 until s.length) {\n            if (s.substring(i, i + \"world\".length).equals(\"world\")) {\n                r = r + 1\n            }\n        }\n        r\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countCase(\"Hello world!\")\n    // 1\n    def countCase(string : String) : Int = {\n        var s = string.toLowerCase\n        var r = 0\n        for (i <- 0 until s.length) {\n            if (s.substring(i, i + \"world\".length).equals(\"world\")) {\n                r = r + 1\n            }\n        }\n        r\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, ignoring leading and trailing whitespace.\n    // >>> countCaseTrim(\"  Hello world!  \")\n    // 1\n    def countCaseTrim(string : String) : Int = {\n        var s = string.toLowerCase\n        var r = 0\n        for (i <- 0 until s.length) {\n            if (s.substring(i, i + \"world\".length).equals(\"world\")) {\n                r = r + 1\n            }\n        }\n        r\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, ignoring leading and trailing whitespace.\n    // >>> countCaseTrim2(\"  Hello world!  \")\n    // 1\n    def\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292992,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpx2j304j8.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpx2j304j8.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx2j304j8.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            r = r + s.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx2j304j8.scala:67:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx2j304j8.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx2j304j8.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"mississippi\"))\n    // (\"miSsSiSiSiSpi\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i + 1 < string.length && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i + 1 < string.length && string.charAt(i + 1).isDigit()) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i + 1 < string.\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292994,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwi38h85d.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwi38h85d.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwi38h85d.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwi38h85d.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwi38h85d.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwi38h85d.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwi38h85d.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpwi38h85d.scala:46:62 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m            \u001b[33mif\u001b[0m (i + \u001b[31m1\u001b[0m < string.length && string.charAt(i + \u001b[31m1\u001b[0m).isDigit()) {\n\u001b[31m\u001b[31m   |\u001b[0m      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"mississippi\"))\n    // (\"miSsIssIppI\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1).isDigit()) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && (\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292994,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmptwr7411j.scala:64:42 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m            \u001b[33mif\u001b[0m (i < string.length - \u001b[31m1\u001b[0m && (\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptwr7411j.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptwr7411j.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptwr7411j.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptwr7411j.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptwr7411j.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptwr7411j.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E05",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292963,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is contained in the string.\n    // >>> countSubstring(\"abcabcabc\", \"abc\")\n    // 3\n    def countSubstring(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equals(substring)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is contained in the string,\n    // ignoring case.\n    // >>> countSubstringIgnoreCase(\"abcabcabc\", \"ABC\")\n    // 3\n    def countSubstringIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equalsIgnoreCase(substring)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is contained in the string,\n    // ignoring case and leading characters.\n    // >>> countSubstringIgnoreCaseLeading(\"abcabcabc\", \"ABC\")\n    // 3\n    def countSubstringIgnoreCaseLeading(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.sub\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292995,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpx0_g1_zj.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpx0_g1_zj.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx0_g1_zj.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx0_g1_zj.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx0_g1_zj.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx0_g1_zj.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx0_g1_zj.scala:62:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m                \u001b[33mif\u001b[0m (string.sub\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value sub is not a member of String\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpx0_g1_zj.scala:64:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m64 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Lin",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"mississippi\"))\n    // (\"misisipi\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i)\n            if (i + 1 < string.length && string.charAt(i) == string.charAt(i + 1)) {\n                result += string.charAt(i + 1)\n                i += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit character.\n    // >>> mergeNumbers((\"1 2 3\"))\n    // (\"12 3\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i)\n            if (i + 1 < string.length && string.charAt(i) >= '0' && string.charAt(i) <= '9' && string.charAt(i + 1) >= '0' && string.charAt(i + 1) <= '9') {\n                result += string.charAt(i + 1)\n                i += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are not letters or\n    // digits have been merged into a single character.\n    // >>> mergePunctuation((\"Hello!\"))\n    // (\"Helo!\")\n    def mergePunctuation(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i)\n            if (i + 1 < string.length && !(string.charAt(i) >= 'a'\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292996,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgckvgli5.scala:56:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgckvgli5.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgckvgli5.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgckvgli5.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgckvgli5.scala:25:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgckvgli5.scala:41:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgckvgli5.scala:63:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpgckvgli5.scala:57:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += (c - 'a' + 'A')\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == 'w' && string.substring(i).equals(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"hello world\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == 'W' && string.substring(i).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case and leading and trailing whitespace.\n    // >>> countIgnoreCaseTrim(\"  hello world  \")\n    // 1\n    def countIgnoreCaseTrim(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == 'W' && string.substring(i).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292996,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6zxm5g1r.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6zxm5g1r.scala:67:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6zxm5g1r.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6zxm5g1r.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var index = string.indexOf(substring, i)\n            if (index >= 0) {\n                count += 1\n                i = index + substring.length\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the reverse direction.\n    // >>> repeatCountReverse(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCountReverse(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var index = string.lastIndexOf(substring, i)\n            if (index >= 0) {\n                count += 1\n                i = index - substring.length\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the forward direction.\n    // >>> repeatCountForward(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCountForward(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            var index = string.indexOf(substring, i)\n            if (index >= 0) {\n                count += 1\n                i = index + substring.length\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the backward direction.\n    // >>> repeatCountBackward\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293001,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkym9mfij.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkym9mfij.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkym9mfij.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkym9mfij.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkym9mfij.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpkym9mfij.scala:29:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                i = index + substring.length\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpkym9mfij.scala:44:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m                i = index - substring.length\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compili",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // separated by a space.\n    // >>> separateSpaces(\"Hello\")\n    // (\"H e l l o\")\n    def separateSpaces(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == result.charAt(result.length - 1)) {\n                result = result + \" \"\n            }\n            result = result + c\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have\n    // been separated by a space.\n    // >>> separateSpaces(\"Hello\")\n    // (\"H e l l o\")\n    def separateNonSpaces(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c != result.charAt(result.length - 1)) {\n                result = result + \" \"\n            }\n            result = result + c\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have\n    // been separated by a space.\n    // >>> separateSpaces(\"Hello\")\n    // (\"H e l l o\")\n    def separateNonSpaces2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c != result.charAt(result.length - 1)) {\n                result = result + \" \"\n            }\n            result = result + c\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have\n    // been separated by a space.\n    // >>> separateSpaces(\"Hello\")\n    \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292999,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmppb0ymvlj.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmppb0ymvlj.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppb0ymvlj.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppb0ymvlj.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppb0ymvlj.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n                i += substring.length - 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated,\n    // starting at the given index.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", 2)\n    // 2\n    def repeatCount(string : String, substring : String, startIndex : Int) : Int = {\n        var count = 0\n        for (i <- startIndex until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n                i += substring.length - 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated,\n    // starting at the given index, and using the given replacement string.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", 2, \"ABC\")\n    // 2\n    def repeatCount(string : String, substring : String, startIndex : Int, replacement : String) : Int = {\n        var count = 0\n        for (i <- startIndex until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n                i += substring.length - 1\n            }\n        }\n        return count\n    }\n\n    //\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293003,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsro4inw_.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsro4inw_.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsro4inw_.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsro4inw_.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsro4inw_.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsro4inw_.scala:28:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                i += substring.length - \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsro4inw_.scala:43:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m                i += substring.length - \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpsro4inw_.scala:58:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m                i +",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is contained in the string.\n    // >>> countSubstring(\"abababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293003,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1ynx6oww.scala:24:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1ynx6oww.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1ynx6oww.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1ynx6oww.scala:19:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1ynx6oww.scala:20:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1ynx6oww.scala:21:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string\n        for (i <- 0 until s.length) {\n            var c = s.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                s = s.substring(0, i) + c.toUpperCase() + s.substring(i + 1)\n            }\n        }\n        return s\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"abcba\"))\n    // (\"abcb\")\n    def mergeAdjacent(string : String) : String = {\n        var s = string\n        for (i <- 0 until s.length) {\n            var c = s.charAt(i)\n            if (i + 1 < s.length && c == s.charAt(i + 1)) {\n                s = s.substring(0, i) + c + s.substring(i + 2)\n            }\n        }\n        return s\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"abcd1234\"))\n    // (\"abcd1234\")\n    def mergeNumbers(string : String) : String = {\n        var s = string\n        for (i <- 0 until s.length) {\n            var c = s.charAt(i)\n            if (i + 1 < s.length && Character.isDigit(c) && Character.isDigit(s.charAt(i + 1))) {\n                s = s.substring(0, i) + c + s.substring(i + 2)\n            }\n        }\n        return s\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"abcd1234\"))\n    // (\"abc1234\")\n    def mergeLettersNumbers(string : String) : String = {\n        var s = string\n        for (i <- 0 until s.length) {\n            var\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293003,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpuwlcelu1.scala:55:15 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            \u001b[33mvar\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m               ^\u001b[0m\n\u001b[31m   |\u001b[0m               pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuwlcelu1.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuwlcelu1.scala:12:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                s = s.substring(\u001b[31m0\u001b[0m, i) + c.toUpperCase() + s.substring(i + \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuwlcelu1.scala:63:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpuwlcelu1.scala:57:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated,\n    // ignoring case.\n    // >>> repeatCountIgnoreCase(\"abcABCabc\", \"abc\")\n    // 3\n    def repeatCountIgnoreCase(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equalsIgnoreCase(substring)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> repeatCountIgnoreCase(\"abcABCabc\", \"abc\")\n    // 3\n    def repeatCountIgnoreCaseAndCase(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equalsIgnoreCase(substring)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated,\n    // ignoring case, and ignoring the case\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293005,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0gx4t17x.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0gx4t17x.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0gx4t17x.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0gx4t17x.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0gx4t17x.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0gx4t17x.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0gx4t17x.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the given set are removed.\n    // >>> removeChars(\"Hello\", \"hl\")\n    // \"eo\"\n    def removeChars(string : String, chars : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (!chars.contains(c)) {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are the same are removed.\n    // >>> removeAdjacent(\"code\")\n    // \"odc\"\n    def removeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i + 1 < string.length && string.charAt(i + 1) == c) {\n                continue\n            }\n            result += c\n        }\n        return result\n    }\n\n    // For a given string, return a new string where all the words in lowercase are replaced with their uppercase equivalent.\n    // Words are defined as groups of non-space characters.\n    // >>> replaceWords(\"Let's eat, Grandma!\")\n    // \"Let's eat, Grandma!\"\n    def replaceWords(string : String) : String = {\n        var result = \"\"\n        var words = string.split(\" \")\n        for (word <- words) {\n            var upperWord = word.toUpperCase\n            result += upperWord + \" \"\n        }\n        return result.trim()\n    }\n\n    // For a given string, return a string where all the words are reversed.\n    // Words are defined as groups of non\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgbctypld.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgbctypld.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgbctypld.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgbctypld.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpgbctypld.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgbctypld.scala:42:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m                continue\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: continue\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgbctypld.scala:67:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase.replaceAll(\"(.)\", (_, $1).toUpperCase)\n        s = s.toUpperCase.replaceAll(\"(.)\", (_, $1).toLowerCase)\n        return s\n    }\n\n    // For a given string, return the number of times that a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCount(string : String, subString : String) : Int = {\n        var count = 0\n        var i = 0\n        while (i < string.length) {\n            var j = string.indexOf(subString, i)\n            if (j == -1) break\n            i = j + 1\n            count += 1\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated in reverse.\n    // >>> repeatCountReverse(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCountReverse(string : String, subString : String) : Int = {\n        var count = 0\n        var i = string.length - 1\n        while (i >= 0) {\n            var j = string.lastIndexOf(subString, i)\n            if (j == -1) break\n            i = j - 1\n            count += 1\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated in a given direction.\n    // >>> repeatCountDirection(\"abcabcabc\", \"abc\", Direction.FORWARD)\n    // 3\n    def repeatCountDirection(string : String, subString : String, direction : Direction) : Int = {\n        var count = 0\n        var i = 0\n        while (i < string.length) {\n            var j = string.indexOf(subString, i)\n            if (j == -1) break\n            i = j + 1\n            if (direction == Direction.FORWARD) {\n                count += 1\n            } else {\n                count -= 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293000,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8quto_bt.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmp8quto_bt.scala:8:54 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36ms\u001b[0m = string.toLowerCase.replaceAll(\u001b[31m\"(.)\"\u001b[0m, (_, $1).toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m  |\u001b[0m     Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m     I could not infer the type of the parameter _$1 of expanded function:\n\u001b[31m  |\u001b[0m     _$1 => (_$1, $1).toUpperCase.\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8quto_bt.scala:8:57 -------------------------\u001b[0m\u001b[0m\n\u001b[31m8 |\u001b[0m        \u001b[33mvar\u001b[0m \u001b[36ms\u001b[0m = string.toLowerCase.replaceAll(\u001b[31m\"(.)\"\u001b[0m, (_, $1).toUpperCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                                         ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                         Not found: $1\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmp8quto_bt.scala:9:45 ------------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        s = s.toUpperCase.replaceAll(\u001b[31m\"(.)\"\u001b[0m, (_, $1).toLowerCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                             ^\u001b[0m\n\u001b[31m  |\u001b[0m     Missing parameter type\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m     I could not infer the type of the parameter _$2 of expanded function:\n\u001b[31m  |\u001b[0m     _$2 => (_$2, $1).toLowerCase.\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8quto_bt.scala:9:48 -------------------------\u001b[0m\u001b[0m\n\u001b[31m9 |\u001b[0m        s = s.toUpperCase.replaceAll(\u001b[31m\"(.)\"\u001b[0m, (_, $1).toLowerCase)\n\u001b[31m\u001b[31m  |\u001b[0m                                                ^^\u001b[0m\n\u001b[31m  |\u001b[0m                                                Not found: $1\n\u001b[31m  |\u001b[0m\n\u001b[31m  |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8quto_bt.scala:21:25 --------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of lowercase characters.\n    // >>> countLowercase((\"Hello\"))\n    // 5\n    def countLowercase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toLowerCase == string.charAt(i)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of uppercase characters.\n    // >>> countUppercase((\"Hello\"))\n    // 5\n    def countUppercase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toUpperCase == string.charAt(i)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of lowercase characters.\n    // >>> countLowercase((\"Hello\"))\n    // 5\n    def countLowercase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toLowerCase == string.charAt(i)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of uppercase characters.\n    // >>> countUppercase((\"Hello\"))\n    // 5\n    def countUppercase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toUpperCase == string.charAt(i)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of lowercase characters.\n    // >>> countLowercase((\"Hello\"))\n    // 5\n    def countLowercase\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292991,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmpchen6mlr.scala:70:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountLowercase\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpchen6mlr.scala:78:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpchen6mlr.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpchen6mlr.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpchen6mlr.scala:21:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toLowerCase == string.charAt(i)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpchen6mlr.scala:34:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toUpperCase == string.charAt(i)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpchen6mlr.scala:47:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toLowerCase == string.charAt(i)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"mississippi\"))\n    // (\"miSsSiSiSiPi\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i + 1 < string.length && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= '0' && c <= '9') {\n                result += c\n            } else {\n                if (i + 1 < string.length && string.charAt(i + 1) >= '0' && string.charAt(i + 1) <= '9') {\n                    result += string.charAt(i + 1)\n                    i += 1\n                } else {\n                    result += c\n                }\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersOrDigits((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeLet\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmpo8rq_17j.scala:64:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmergeLet\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^\u001b[0m\n\u001b[31m   |\u001b[0m                Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo8rq_17j.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo8rq_17j.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo8rq_17j.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo8rq_17j.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo8rq_17j.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo8rq_17j.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo8rq_17j.scala:51:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCount(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == substring) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated,\n    // ignoring case.\n    // >>> repeatCountIgnoreCase(\"abcabcabc\", \"ABC\")\n    // 3\n    def repeatCountIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c.toUpperCase == substring.toUpperCase) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated,\n    // ignoring case, and ignoring non-alphabetic characters.\n    // >>> repeatCountIgnoreCaseAndNonAlpha(\"abcabcabc\", \"ABC\")\n    // 3\n    def repeatCountIgnoreCaseAndNonAlpha(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c.isLetter() && substring.toUpperCase == c.toUpperCase) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated,\n\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpknbh4onj.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpknbh4onj.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpknbh4onj.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpknbh4onj.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpknbh4onj.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmpknbh4onj.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == substring) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpknbh4onj.scala:42:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m            \u001b[33mif\u001b[0m (c.toUpperCase == substring.toUpperCase) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpknbh4onj.scala:57:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // separated by a space.\n    // >>> separateAdjacentLetters(\"abcd\")\n    // \"a b c d\"\n    def separateAdjacentLetters(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i + 1 < string.length && string.charAt(i) == string.charAt(i + 1)) {\n                result += string.charAt(i) + \" \"\n            } else {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have been\n    // separated by a space.\n    // >>> separateAdjacentLetters(\"abcd\")\n    // \"a b c d\"\n    def separateAdjacentLetters2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i + 1 < string.length && string.charAt(i) != string.charAt(i + 1)) {\n                result += string.charAt(i) + \" \"\n            } else {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not a letter are removed.\n    // >>> removeNonLetters(\"Hello, world!\")\n    // \"ello, world\"\n    def removeNonLetters(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (Character.isLetter(string.charAt(i))) {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not a letter are removed.\n    //\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6lc50acd.scala:69:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6lc50acd.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6lc50acd.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6lc50acd.scala:64:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6lc50acd.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6lc50acd.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the longest substring that is a palindrome.\n    // >>> longestPalindrome(\"abccccdd\")\n    // \"cccc\"\n    def longestPalindrome(string : String) : String = {\n        var max = \"\"\n        for (i <- 0 until string.length) {\n            for (j <- i until string.length) {\n                if (string.substring(i, j).equals(string.substring(j, i))) {\n                    if (j - i > max.length) {\n                        max = string.substring(i, j)\n                    }\n                }\n            }\n        }\n        return max\n    }\n\n    // For a given string, return the longest substring that contains only lowercase letters.\n    // >>> longestLowerCasePalindrome(\"abccccdd\")\n    // \"cccc\"\n    def longestLowerCasePalindrome(string : String) : String = {\n        var max = \"\"\n        for (i <- 0 until string.length) {\n            for (j <- i until string.length) {\n                if (string.substring(i, j).toLowerCase == string.substring(j, i).toLowerCase) {\n                    if (j - i > max.length) {\n                        max = string.substring(i, j)\n                    }\n                }\n            }\n        }\n        return max\n    }\n\n    // For a given string, return the longest substring that contains only uppercase letters.\n    //\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpo9kon408.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo9kon408.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpo9kon408.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo9kon408.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo9kon408.scala:67:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpo9kon408.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"mississippi\"))\n    // (\"miSsSiSiSiSiSpi\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= '0' && c <= '9') {\n                result += c\n            } else {\n                if (i < string.length - 1 && string.charAt(i + 1) >= '0' && string.charAt(i + 1) <= '9') {\n                    result += string.charAt(i)\n                    i += 1\n                } else {\n                    result += c\n                }\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeLettersNumbers\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmp084xb8r6.scala:64:27 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmergeLettersNumbers\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp084xb8r6.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp084xb8r6.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp084xb8r6.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp084xb8r6.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp084xb8r6.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp084xb8r6.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp084xb8r6.scala:51:22 ---------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"code\"))\n    // (\"cod\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"code123\"))\n    // (\"code1\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= '0' && c <= '9') {\n                result += c\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"code123\"))\n    // (\"code12\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            } else if (c >= '0' && c <= '9') {\n                result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292964,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2hcnftm1.scala:75:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2hcnftm1.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2hcnftm1.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2hcnftm1.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2hcnftm1.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2hcnftm1.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2hcnftm1.scala:61:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until string.length) {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Unit\n\u001b[31m   |\u001b[0m        Required: String\n\u001b[31m62 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mc\u001b[0m = string.charAt(i)\n\u001b[31m63 |\u001b[0m            \u001b[33mif\u001b[0m (c >= \u001b[31m'a'\u001b[0m && c <= \u001b[31m'z'\u001b[0m) {\n\u001b[31m64 |\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equals(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"Hello world!\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world!\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world!\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase2(string : String) : Int = {\n        var result = 0\n\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7unu9smf.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7unu9smf.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7unu9smf.scala:63:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"mississippi\"))\n    // (\"miSsSiSiPi\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i + 1 < string.length && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i + 1 < string.length && string.charAt(i + 1).isDigit()) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i + 1 < string.length &&\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293008,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp98vpz5hq.scala:64:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m            \u001b[33mif\u001b[0m (i + \u001b[31m1\u001b[0m < string.length &&\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp98vpz5hq.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp98vpz5hq.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp98vpz5hq.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp98vpz5hq.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp98vpz5hq.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp98vpz5hq.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E050] T",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"mississippi\"))\n    // (\"miSsSiSiSiSpi\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= '0' && c <= '9') {\n                result += c\n            } else {\n                if (i < string.length - 1 && string.charAt(i + 1) >= '0' && string.charAt(i + 1) <= '9') {\n                    result += string.charAt(i)\n                    i += 1\n                } else {\n                    result += c\n                }\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeLettersNumbers(string : String\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293006,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzz_gedwc.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzz_gedwc.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzz_gedwc.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzz_gedwc.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzz_gedwc.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzz_gedwc.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzz_gedwc.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzz_gedwc.scala:51:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m                    i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value += is not a m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                c = c.toUpperCase()\n            } else {\n                c = c.toLowerCase()\n            }\n            result += c\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated,\n    // ignoring case.\n    // >>> repeatCountIgnoreCase(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCountIgnoreCase(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equalsIgnoreCase(substring)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated,\n    // ignoring case, and ignoring the case of the characters in the substring.\n    // >>> repeatCountIgnoreCaseAndCase(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCountIgnoreCaseAndCase(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equalsIgnoreCase(substring)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated,\n\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp56gldim9.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp56gldim9.scala:12:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                c = c.toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp56gldim9.scala:14:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                c = c.toLowerCase()\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp56gldim9.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp56gldim9.scala:67:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp56gldim9.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"mississippi\"))\n    // (\"miSsSiSiSiPi\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1).isDigit()) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293008,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2db3eqf.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr2db3eqf.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpr2db3eqf.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpr2db3eqf.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpr2db3eqf.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpr2db3eqf.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpr2db3eqf.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpr2db3eqf.scala:46:62 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m            \u001b[33mif\u001b[0m (i < string.length - \u001b[31m1\u001b[0m && string.charAt(i + \u001b[31m1\u001b[0m).isDigit()) {\n\u001b[31m\u001b[31m   |\u001b[0m                ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is repeated in the string.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length) == substring) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated in the string,\n    // ignoring case.\n    // >>> repeatCountIgnoreCase(\"abcABCabc\", \"abc\")\n    // 2\n    def repeatCountIgnoreCase(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).toLowerCase == substring.toLowerCase) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated in the string,\n    // ignoring case, and ignoring non-alphabetic characters.\n    // >>> repeatCountIgnoreCaseAndNonAlpha(\"abcABCabc\", \"abc\")\n    // 2\n    def repeatCountIgnoreCaseAndNonAlpha(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).toLowerCase == substring.toLowerCase &&\n                string.charAt(i) >= 'a' && string.charAt(i) <= 'z') {\n                count += 1\n            }\n        \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293009,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpntc15wsg.scala:67:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpntc15wsg.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpntc15wsg.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpntc15wsg.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpntc15wsg.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpntc15wsg.scala:66:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpntc15wsg.scala:60:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m60 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // separated by a space.\n    // >>> separateSpaces(\"Hello\")\n    // (\"H e l l o\")\n    def separateSpaces(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == result.charAt(result.length - 1)) {\n                result = result + \" \" + c\n            } else {\n                result = result + c\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have\n    // been separated by a space.\n    // >>> separateSpaces(\"Hello\")\n    // (\"H e l l o\")\n    def separateNonSpaces(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c != result.charAt(result.length - 1)) {\n                result = result + \" \" + c\n            } else {\n                result = result + c\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have\n    // been separated by a space.\n    // >>> separateNonSpaces(\"Hello\")\n    // (\"H e l l o\")\n    def separateNonSpaces2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c != result.charAt(result.length - 1)) {\n                result = result + \" \" + c\n            } else {\n                result = result + c\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have\n    //\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293007,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpisu82ehd.scala:75:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpisu82ehd.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpisu82ehd.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpisu82ehd.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpisu82ehd.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstring(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equals(substring)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstring2(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equals(substring)) {\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstring3(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equals(substring)) {\n                    result += 1\n                }\n            }\n        }\n        \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293010,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpq310wb94.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpq310wb94.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpq310wb94.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpq310wb94.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq310wb94.scala:57:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until string.length) {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Unit\n\u001b[31m   |\u001b[0m        Required: Int\n\u001b[31m58 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mj\u001b[0m = i + substring.length\n\u001b[31m59 |\u001b[0m            \u001b[33mif\u001b[0m (j <= string.length) {\n\u001b[31m60 |\u001b[0m                \u001b[33mif\u001b[0m (string.substring(i, j).equals(substring)) {\n\u001b[31m61 |\u001b[0m                    result += \u001b[31m1\u001b[0m\n\u001b[31m62 |\u001b[0m                }\n\u001b[31m63 |\u001b[0m            }\n\u001b[31m64 |\u001b[0m        }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\")\n    // 3\n    def countSubstring(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i\n            while (j < string.length && string.charAt(j) == string.charAt(i)) {\n                j += 1\n            }\n            result += j - i\n            i = j\n        }\n        result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\")\n    // 3\n    def countSubstring2(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i\n            while (j < string.length && string.charAt(j) == string.charAt(i)) {\n                j += 1\n            }\n            result += j - i\n            i = j\n        }\n        result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\")\n    // 3\n    def countSubstring3(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i\n            while (j < string.length && string.charAt(j) == string.charAt(i)) {\n                j += 1\n            }\n            result += j - i\n            i = j\n        }\n        result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>>\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293010,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4rv02ie4.scala:77:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4rv02ie4.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4rv02ie4.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4rv02ie4.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4rv02ie4.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp4rv02ie4.scala:31:14 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m            i = j\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp4rv02ie4.scala:47:14 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            i = j\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp4rv02ie4.scala:63:14 -----------------------------\u001b[0m\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is repeated in the string.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstring(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i\n            while (j < string.length && string.charAt(j) == substring.charAt(0)) {\n                j += 1\n            }\n            if (j - i >= substring.length) {\n                result += 1\n            }\n            i = j\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is repeated in the string,\n    // ignoring case.\n    // >>> countSubstringIgnoreCase(\"abcabcabcabc\", \"ABC\")\n    // 3\n    def countSubstringIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var j = i\n            while (j < string.length && string.charAt(j).toUpperCase() == substring.charAt(0).toUpperCase()) {\n                j += 1\n            }\n            if (j - i >= substring.length) {\n                result += 1\n            }\n            i = j\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is repeated in the string,\n    // ignoring case, and ignoring the case of the substring.\n    // >>> countSubstringIgnoreCaseIgnoreCase(\"abcabcabcabc\", \"ABC\")\n    // 3\n    def countSubstringIgnoreCaseIgnoreCase(string : String, substring : String) :\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293010,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfi3m47yo.scala:62:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfi3m47yo.scala:69:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfi3m47yo.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfi3m47yo.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfi3m47yo.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfi3m47yo.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpfi3m47yo.scala:33:14 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m            i = j\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfi3m47yo.scala:46:57 ------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m            \u001b[33mwhile\u001b[0m (j < string.length && string.charAt(j).toUpperCase() == substr",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstring(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equals(substring)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in reverse order.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\")\n    // 3\n    def countSubstringReverse(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equals(substring)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the given direction.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\", \"forward\")\n    // 3\n    def countSubstring(string : String, substring : String, direction : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equals(substring)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the given direction.\n    // >>> countSubstring(\"abcabcabcabc\", \"abc\", \"reverse\")\n    // 3\n    def countSubstringReverse(string : String, substring : String, direction : String) : Int = {\n        var result = 0\n        for (i <- 0\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293012,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptnl5b095.scala:60:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptnl5b095.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptnl5b095.scala:59:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  value foreach is not a member of Int\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a new string where the first character is in upper case and the rest are in lower case.\n    // >>> capitalize(\"Hello\")\n    // (\"HELLO\")\n    def capitalize(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i == 0) {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a new string where the first character is in lower case and the rest are in upper case.\n    // >>> lowercaseFirst(\"Hello\")\n    // (\"hello\")\n    def lowercaseFirst(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i == 0) {\n                result += c.toLowerCase\n            } else {\n                result += c.toUpperCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a new string where the first character is in upper case and the rest are in lower case.\n    // >>> upperCaseFirst(\"Hello\")\n    // (\"HELLO\")\n    def upperCaseFirst(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i == 0) {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a new string where the first character is in lower case and\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293016,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpv6815e0o.scala:76:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv6815e0o.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv6815e0o.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv6815e0o.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv6815e0o.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv6815e0o.scala:28:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv6815e0o.scala:28:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m28 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpv6815e0o.scala:30:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m              ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase\n        var r = \"\"\n        for (i <- 0 until s.length) {\n            r = r + s.charAt(i).toUpperCase\n        }\n        r\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var s = string.toLowerCase\n        var r = 0\n        for (i <- 0 until s.length) {\n            if (s.substring(i, i + \"world\".length).equals(\"world\")) {\n                r = r + 1\n            }\n        }\n        r\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front,\n    // and \"beautiful\" has been removed from the end.\n    // >>> fix(\"This dinner is not beautiful\")\n    // \"This dinner is not not\"\n    def fix(string : String) : String = {\n        var s = string.toLowerCase\n        var r = \"\"\n        for (i <- 0 until s.length) {\n            if (s.substring(i, i + \"not\".length) == \"not\") {\n                r = r + \"not \"\n            }\n            if (s.substring(i, i + \"beautiful\".length) == \"beautiful\") {\n                break\n            }\n            r = r + s.charAt(i)\n        }\n        r\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front,\n    // and \"beautiful\" has been removed from the end.\n    // >>> fix(\"This dinner is not beautiful\")\n    // \"This dinner is not not\"\n    def fix2(string : String) : String = {\n        var s = string.toLowerCase\n        var r = \"\"\n        for (i <- 0 until s.length) {\n            if (s.substring(i, i + \"not\".length) == \"not\") {\n                r = r + \"not \"\n            }\n            if (s.substring(i\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293015,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu5wti416.scala:61:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu5wti416.scala:69:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu5wti416.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            r = r + s.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpu5wti416.scala:42:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m                break\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu5wti416.scala:60:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mif\u001b[0m (s.substring(i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Found:    String\n\u001b[31m   |\u001b[0m                Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu5wti416.scala:68:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: String\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpu5wti416.scala:62:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m62 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string.\n    // >>> countAppearances(\"hello\", \"hello\")\n    // 2\n    def countAppearances(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string, ignoring case.\n    // >>> countAppearancesIgnoreCase(\"hello\", \"hello\")\n    // 2\n    def countAppearancesIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toLowerCase == substring.charAt(0).toLowerCase) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string, ignoring case and\n    // ignoring case.\n    // >>> countAppearancesIgnoreCaseIgnoreCase(\"hello\", \"hello\")\n    // 2\n    def countAppearancesIgnoreCaseIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toLowerCase == substring.charAt(0).toLowerCase) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string, ignoring case and\n    // ignoring case.\n    // >>> countAppearancesIgnoreCaseIgnoreCase(\"hello\", \"hello\")\n    // 2\n    def countAppearancesIgnoreCaseIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <-\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293017,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp0bm0nt3l.scala:61:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m        \u001b[33mfor\u001b[0m (i <-\n\u001b[31m\u001b[31m   |\u001b[0m                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                 expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0bm0nt3l.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0bm0nt3l.scala:34:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toLowerCase == substring.charAt(\u001b[31m0\u001b[0m).toLowerCase) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0bm0nt3l.scala:48:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toLowerCase == substring.charAt(\u001b[31m0\u001b[0m).toLowerCase) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmp0bm0nt3l.scala:59:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountAppearancesIgnoreCaseIgnoreCase\u001b[0m(\u001b[36mstring\u001b[0m : \u001b[35mString\u001b[0m, \u001b[36msubstring\u001b[0m : \u001b[35mString\u001b[0m) : \u001b[35mInt\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef countAppearancesIgnoreCaseIgnoreCase(string: String, substring: String): Int in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 45 and\n\u001b[31m   |\u001b[0mdef countAppearancesIgnoreCaseIgnoreCase(string: String, substring: String): Int in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 59\n\u001b[31m   |\u001b[0mhave the same type after erasure.\n\u001b[31",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase\n        var r = \"\"\n        for (i <- 0 until s.length) {\n            r = r + s.charAt(i).toUpperCase\n        }\n        r\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        var i = 0\n        while (i < string.length) {\n            if (string.substring(i).equals(substring)) {\n                count = count + 1\n                i = i + substring.length\n            } else {\n                i = i + 1\n            }\n        }\n        count\n    }\n\n    // For a given string, return the number of times a substring is repeated in reverse order.\n    // >>> repeatCountReverse(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCountReverse(string : String, substring : String) : Int = {\n        var count = 0\n        var i = string.length - substring.length\n        while (i >= 0) {\n            if (string.substring(i).equals(substring)) {\n                count = count + 1\n                i = i - substring.length\n            } else {\n                i = i - 1\n            }\n        }\n        count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the given direction.\n    // >>> repeatCountDirection(\"abcabcabc\", \"abc\", \"forward\")\n    // 2\n    def repeatCountDirection(string : String, substring : String, direction : String) : Int = {\n        var count = 0\n        var i = 0\n        if (direction == \"forward\") {\n            while (i < string.length) {\n                if (string.substring(i).equals(substring)) {\n                    count = count + 1\n                    i = i + substring.length\n                } else {\n                    i = i + 1\n                }\n            }\n        } else {\n            i = string.\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293018,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr3xoalg3.scala:67:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr3xoalg3.scala:75:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpr3xoalg3.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            r = r + s.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpr3xoalg3.scala:74:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpr3xoalg3.scala:68:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m68 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase\n        var t = string.toUpperCase\n        return t\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCount(string : String, subString : String) : Int = {\n        var count = 0\n        var index = 0\n        while (index < string.length) {\n            var i = string.indexOf(subString, index)\n            if (i == -1) break\n            index = i + 1\n            count += 1\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in reverse order.\n    // >>> repeatCountReverse(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCountReverse(string : String, subString : String) : Int = {\n        var count = 0\n        var index = 0\n        while (index < string.length) {\n            var i = string.lastIndexOf(subString, index)\n            if (i == -1) break\n            index = i + 1\n            count += 1\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the given direction.\n    // >>> repeatCount(\"abcabcabc\", \"abc\", \"forward\")\n    // 3\n    def repeatCount(string : String, subString : String, direction : String) : Int = {\n        var count = 0\n        var index = 0\n        if (direction == \"forward\") {\n            while (index < string.length) {\n                var i = string.indexOf(subString, index)\n                if (i == -1) break\n                index = i + 1\n                count += 1\n            }\n        } else {\n            while (index < string.length) {\n                var i = string.lastIndexOf(subString, index)\n                if (i == -1) break\n                index = i + 1\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293013,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpy7iqfdoi.scala:75:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy7iqfdoi.scala:21:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mif\u001b[0m (i == -\u001b[31m1\u001b[0m) break\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy7iqfdoi.scala:36:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m            \u001b[33mif\u001b[0m (i == -\u001b[31m1\u001b[0m) break\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy7iqfdoi.scala:52:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m                \u001b[33mif\u001b[0m (i == -\u001b[31m1\u001b[0m) break\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy7iqfdoi.scala:59:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m                \u001b[33mif\u001b[0m (i == -\u001b[31m1\u001b[0m) break\n\u001b[31m\u001b[31m   |\u001b[0m                             ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                             Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy7iqfdoi.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy7iqfdoi.scala:71:11 ------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the given set are removed.\n    // >>> removeChars(\"Hello\", \"hl\")\n    // \"eo\"\n    def removeChars(string : String, chars : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (!chars.contains(c)) {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are the same are removed.\n    // >>> removeAdjacent(\"code\")\n    // \"odec\"\n    def removeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i + 1 < string.length && string.charAt(i + 1) == c) {\n                continue\n            }\n            result += c\n        }\n        return result\n    }\n\n    // For a given string, return a string where all the lowercase letters in the string are moved to the front,\n    // and all the uppercase letters to the end.\n    // >>> moveLetters(\"code\")\n    // \"ecod\"\n    def moveLetters(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where the first and\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293019,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpias58lx1.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpias58lx1.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpias58lx1.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpias58lx1.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpias58lx1.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpias58lx1.scala:42:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m                continue\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: continue\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpias58lx1.scala:58:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpias58lx1.scala:58:28 ------------------------\u001b[0m\u001b[0m\n\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count2(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count3(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count4(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result +=\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293020,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp0og2dvdg.scala:70:25 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m                result +=\n\u001b[31m\u001b[31m   |\u001b[0m                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                         expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0og2dvdg.scala:79:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0og2dvdg.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0og2dvdg.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0og2dvdg.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0og2dvdg.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0og2dvdg.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0og2dvdg.scala:41:16 ----",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // exchanged.\n    // >>> exchangeCase(\"code\")\n    // (\"eodc\")\n    // >>> exchangeCase(\"abAB\")\n    // (\"AbBA\")\n    def exchangeCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i + 1 < string.length && c == string.charAt(i + 1)) {\n                result = result + c.toLowerCase()\n                i = i + 1\n            } else {\n                result = result + c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where \"not \" has been added to the front, and \"mr.\"\n    // has been added to the back.\n    // >>> addNotAndMr((\"Hello\"))\n    // (\"not Hello mr.\")\n    def addNotAndMr(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \" \") {\n                result = result + \" not \"\n            } else if (c == \".\") {\n                result = result + \" mr.\"\n            } else {\n                result = result + c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where the first and last characters have been exchanged,\n    // so \"Hello\" yields \"lllo\". The original string will be length 1 or more.\n    // >>> frontBack((\"Hello\"))\n    // (\"lllo\")\n    def frontBack(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i == 0) {\n                result = result + c.toLowerCase\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293020,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpljxi19xv.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpljxi19xv.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpljxi19xv.scala:26:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m                result = result + c.toLowerCase()\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpljxi19xv.scala:27:18 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m                i = i + \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpljxi19xv.scala:43:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\" \"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpljxi19xv.scala:45:23 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m            } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (c == \u001b[31m\".\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpljxi19xv.scala:63:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m                result = result + c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"mississippi\"))\n    // (\"miSsSiSiPi\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"1-2-3\"))\n    // (\"1-23\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= '0' && c <= '9') {\n                result += c\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"1-2-3\"))\n    // (\"123\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            } else if (c >=\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293021,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpt3o7jhvi.scala:65:27 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m            } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (c >=\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt3o7jhvi.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpt3o7jhvi.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpt3o7jhvi.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpt3o7jhvi.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpt3o7jhvi.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpt3o7jhvi.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpt3o7jhvi.s",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeNonAlpha((\"Hello\"))\n    // (\"e\")\n    def removeNonAlpha(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are the same are removed.\n    // >>> removeAdjacent((\"code\"))\n    // (\"co\")\n    def removeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1) {\n                var next = string.charAt(i + 1)\n                if (c == next) {\n                    i += 1\n                } else {\n                    result += c\n                }\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are in the alphabet are removed.\n    // >>> removePunctuation((\"code.\"))\n    // (\"cod\")\n    def removePunctuation(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293020,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2td7zomk.scala:77:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2td7zomk.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2td7zomk.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2td7zomk.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2td7zomk.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2td7zomk.scala:44:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m                    i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2td7zomk.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2td7zomk.scala:73:11 ---------------",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase\n        var r = \"\"\n        for (i <- 0 until s.length) {\n            r = r + s.charAt(i).toUpperCase\n        }\n        r\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var s = string.toLowerCase\n        var r = 0\n        for (i <- 0 until s.length) {\n            if (s.substring(i, i + \"world\".length).equals(\"world\")) {\n                r = r + 1\n            }\n        }\n        r\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count2(string : String) : Int = {\n        var s = string.toLowerCase\n        var r = 0\n        for (i <- 0 until s.length) {\n            if (s.substring(i, i + \"world\".length).equals(\"world\")) {\n                r = r + 1\n            }\n        }\n        r\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count3(string : String) : Int = {\n        var s = string.toLowerCase\n        var r = 0\n        for (i <- 0 until s.length) {\n            if (s.substring(i, i + \"world\".length).equals(\"world\")) {\n                r = r + 1\n            }\n        }\n        r\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count4(string : String) : Int = {\n        var s = string.toLowerCase\n        var r = 0\n        for (i <- 0 until s.length) {\n            if (s.substring(i\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293021,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0eq20pw7.scala:66:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0eq20pw7.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0eq20pw7.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            r = r + s.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0eq20pw7.scala:65:27 --------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m            \u001b[33mif\u001b[0m (s.substring(i\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Found:    String\n\u001b[31m   |\u001b[0m                Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0eq20pw7.scala:73:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp0eq20pw7.scala:67:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m67 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"code\"))\n    // (\"cod\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"code123\"))\n    // (\"code1\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && Character.isDigit(string.charAt(i + 1))) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersOrDigits((\"code123\"))\n    // (\"code12\")\n    def mergeLettersOrDigits(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && (Character.isLetter(string.char\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293022,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8la00m1j.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8la00m1j.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8la00m1j.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8la00m1j.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8la00m1j.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8la00m1j.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8la00m1j.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8la00m1j.scala:48:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return a new string where the first character is uppercase and the rest are lowercase.\n    // >>> capitalize(\"Hello\")\n    // (\"HELLO\")\n    def capitalize(string : String) : String = {\n        var result = \"\"\n        result += string.charAt(0).toUpperCase\n        for (i <- 1 until string.length) {\n            result += string.charAt(i).toLowerCase\n        }\n        return result\n    }\n\n    // For a given string, return a new string where the first character is lowercase and the rest are uppercase.\n    // >>> capitalize(\"Hello\")\n    // (\"hello\")\n    def uncapitalize(string : String) : String = {\n        var result = \"\"\n        result += string.charAt(0).toLowerCase\n        for (i <- 1 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return a new string where the first character is uppercase and the rest are lowercase.\n    // >>> capitalize(\"Hello\")\n    // (\"HELLO\")\n    def capitalizeFirst(string : String) : String = {\n        var result = \"\"\n        result += string.charAt(0).toUpperCase\n        for (i <- 1 until string.length) {\n            result += string.charAt(i)\n        }\n        return result\n    }\n\n    // For a given string, return a new string where the first character is lowercase and the rest are uppercase.\n    // >>> capitalize(\"Hello\")\n    // (\"hello\")\n    def uncapitalizeFirst(string : String) : String = {\n        var result = \"\"\n        result += string.charAt(0).toLowerCase\n        for (i <- 1 until string.length) {\n            result += string.charAt(i)\n        }\n        return result\n    }\n\n    // For a given string, return a new string where the first character\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293023,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwf64szq1.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwf64szq1.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwf64szq1.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwf64szq1.scala:20:15 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        result += string.charAt(\u001b[31m0\u001b[0m).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwf64szq1.scala:20:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        result += string.charAt(\u001b[31m0\u001b[0m).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwf64szq1.scala:22:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m            result += string.charAt(i).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwf64szq1.scala:22:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m            result += string.charAt(i).toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwf64szq1.sca",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292949,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpicny93nn.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase\n        var upper = s.toUpperCase\n        return upper\n    }\n\n    // For a given string, return the number of lowercase characters.\n    // >>> countLowercase((\"Hello\"))\n    // 5\n    def countLowercase(string : String) : Int = {\n        var s = string.toLowerCase\n        var count = 0\n        while (s.nonEmpty) {\n            count = count + 1\n            s = s.tail\n        }\n        return count\n    }\n\n    // For a given string, return the number of uppercase characters.\n    // >>> countUppercase((\"Hello\"))\n    // 5\n    def countUppercase(string : String) : Int = {\n        var s = string.toUpperCase\n        var count = 0\n        while (s.nonEmpty) {\n            count = count + 1\n            s = s.tail\n        }\n        return count\n    }\n\n    // For a given string, return the number of lowercase characters.\n    // >>> countLowercase((\"Hello\"))\n    // 5\n    def countLowercase(string : String) : Int = {\n        var s = string.toLowerCase\n        var count = 0\n        while (s.nonEmpty) {\n            count = count + 1\n            s = s.tail\n        }\n        return count\n    }\n\n    // For a given string, return the number of uppercase characters.\n    // >>> countUppercase((\"Hello\"))\n    // 5\n    def countUppercase(string : String) : Int = {\n        var s = string.toUpperCase\n        var count = 0\n        while (s.nonEmpty) {\n            count = count + 1\n            s = s.tail\n        }\n        return count\n    }\n\n    // For a given string, return the number of lowercase characters.\n    // >>> countLowercase((\"Hello\"))\n    // 5\n    def countLowercase(string : String) : Int = {\n        var s = string.toLowerCase\n        var count = 0\n        while (s.nonEmpty) {\n            count = count + 1\n            s = s.tail\n        }\n        return count\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293016,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmpb9v63ysz.scala:42:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountLowercase\u001b[0m(\u001b[36mstring\u001b[0m : \u001b[35mString\u001b[0m) : \u001b[35mInt\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef countLowercase(string: String): Int in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 16 and\n\u001b[31m   |\u001b[0mdef countLowercase(string: String): Int in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 42\n\u001b[31m   |\u001b[0mhave the same type after erasure.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mConsider adding a @targetName annotation to one of the conflicting definitions\n\u001b[31m   |\u001b[0mfor disambiguation.\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmpb9v63ysz.scala:55:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountUppercase\u001b[0m(\u001b[36mstring\u001b[0m : \u001b[35mString\u001b[0m) : \u001b[35mInt\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef countUppercase(string: String): Int in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 29 and\n\u001b[31m   |\u001b[0mdef countUppercase(string: String): Int in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 55\n\u001b[31m   |\u001b[0mhave the same type after erasure.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mConsider adding a @targetName annotation to one of the conflicting definitions\n\u001b[31m   |\u001b[0mfor disambiguation.\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmpb9v63ysz.scala:68:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountLowercase\u001b[0m(\u001b[36mstring\u001b[0m : \u001b[35mString\u001b[0m) : \u001b[35mInt\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef countLowercase(string: String): Int in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 42 and\n\u001b[31m   |\u001b[0mdef countLowercase(string: String): Int in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 68\n\u001b[31m   |\u001b[0mhave the same type after erasure.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mConsider adding a @targetName annotation to one of the conflicting definitions\n\u001b[31m   |\u001b[0mfor disambiguation.\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"Hello world!\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world!\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase(\"\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292979,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplwyr9ija.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplwyr9ija.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplwyr9ija.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplwyr9ija.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplwyr9ija.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmplwyr9ija.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplwyr9ija.scala:42:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmplwyr9ija.scala:57:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, subString : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + subString.length) == subString) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated, ignoring case.\n    // >>> repeatCountIgnoreCase(\"abcabcabc\", \"ABC\")\n    // 2\n    def repeatCountIgnoreCase(string : String, subString : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + subString.length).toUpperCase() == subString.toUpperCase()) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated, ignoring case and\n    // lowercase.\n    // >>> repeatCountIgnoreCaseAndLowercase(\"abcabcabc\", \"ABC\")\n    // 2\n    def repeatCountIgnoreCaseAndLowercase(string : String, subString : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + subString.length).toUpperCase() == subString.toUpperCase() &&\n                string.charAt(i).toLowerCase() == string.charAt(i).toLowerCase()) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times that a substring is repeated, ignoring case and\n    // lowercase.\n    // >>> repeatCountIgnoreCaseAndLowercase\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293020,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3x_vado1.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3x_vado1.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3x_vado1.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3x_vado1.scala:49:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                string.charAt(i).toLowerCase() == string.charAt(i).toLowerCase()) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3x_vado1.scala:61:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3x_vado1.scala:62:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3x_vado1.scala:63:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string.\n    // >>> countAppearances(\"hello\", \"hello\")\n    // 2\n    def countAppearances(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times it appears in the string, ignoring case.\n    // >>> countAppearancesIgnoreCase(\"hello\", \"HELLO\")\n    // 2\n    def countAppearancesIgnoreCase(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toUpperCase == substring.charAt(0).toUpperCase) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times it appears in the string, ignoring case.\n    // >>> countAppearancesIgnoreCase(\"hello\", \"HELLO\")\n    // 2\n    def countAppearancesIgnoreCase(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).toUpperCase == substring.charAt(0).toUpperCase) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times it appears in the string, ignoring case.\n    // >>> countAppearancesIgnoreCase(\"hello\", \"HELLO\")\n    // 2\n    def countAppearancesIgnoreCase(string\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293022,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpffdpjxj_.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ':' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpffdpjxj_.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpffdpjxj_.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpffdpjxj_.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpffdpjxj_.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpffdpjxj_.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpffdpjxj_.scala:39:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toUpperCase == substring.charAt(\u001b[31m0\u001b[0m).toUpperCase) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpffdpjxj_.scala:52:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).toUpperCase",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292963,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"hello world\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndIgnoreCase(\"hello world\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndIgnoreCase(\"hello world\")\n    // 1\n    def count\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293021,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmpjzadz430.scala:68:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcount\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m             ^\u001b[0m\n\u001b[31m   |\u001b[0m             Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjzadz430.scala:76:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjzadz430.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjzadz430.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjzadz430.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjzadz430.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjzadz430.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjzadz430.scala:42:16 -----------------------------------------\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += (c - 'a' + 'A')\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the string.\n    // >>> countSubstring(\"ababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293018,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnl5dgj3l.scala:29:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnl5dgj3l.scala:24:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnl5dgj3l.scala:25:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnl5dgj3l.scala:26:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times that a substring is contained in the string.\n    // >>> countSubstring(\"ababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293023,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbuykisl1.scala:29:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbuykisl1.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbuykisl1.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbuykisl1.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbuykisl1.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbuykisl1.scala:24:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbuykisl1.scala:25:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"mississippi\"))\n    // (\"misisipi\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"1-2 3\"))\n    // (\"12 3\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= '0' && c <= '9') {\n                result += c\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"1-2 3\"))\n    // (\"123\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            } else if (c >= '0' && c\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293026,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa6wavm1d.scala:66:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpa6wavm1d.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa6wavm1d.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa6wavm1d.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa6wavm1d.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa6wavm1d.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa6wavm1d.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa6wavm1d.scala:65:35 --------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m            } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (c >= \u001b[31m'0'\u001b[0m && c\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equals(substring)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the reverse order.\n    // >>> repeatCountReverse(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCountReverse(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(string.length - i - substring.length, string.length - i).equals(substring)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the order of first occurrence.\n    // >>> repeatCountFirst(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCountFirst(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equals(substring)) {\n                count += 1\n                break\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the number of times a substring is repeated in the order of last occurrence.\n    // >>> repeatCountLast(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCountLast(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpkcdp5htd.scala:61:14 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m            \u001b[33mif\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m              ^\u001b[0m\n\u001b[31m   |\u001b[0m              expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkcdp5htd.scala:70:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkcdp5htd.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkcdp5htd.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkcdp5htd.scala:49:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m                break\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpkcdp5htd.scala:69:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpkcdp5htd.scala:63:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m63 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292963,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeNonAlphabetChars(\"Hello\")\n    // \"ello\"\n    def removeNonAlphabetChars(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) in alphabet) {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are the same are removed.\n    // >>> removeAdjacentDuplicates(\"code\")\n    // \"cde\"\n    def removeAdjacentDuplicates(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i == 0 or string.charAt(i) != string.charAt(i - 1)) {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are in the alphabet are removed.\n    // >>> removeAdjacentAlphabetChars(\"code\")\n    // \"e\"\n    def removeAdjacentAlphabetChars(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) in alphabet and i != 0) {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are not in the alphabet are removed.\n    // >>> removeNonAlphabetChars(\"code\")\n    // \"cde\"\n    def removeNonAlphabetChars2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) in\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293025,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpewaq1ylp.scala:60:35 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i) in\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpewaq1ylp.scala:69:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpewaq1ylp.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpewaq1ylp.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpewaq1ylp.scala:21:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i) in alphabet) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value in is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpewaq1ylp.scala:21:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i) in alphabet) {\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                    Not found: alphabet\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpewaq1ylp.scala:34:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m            \u001b[33mif\u001b[0m (i == \u001b[31m0\u001b[0m or string.charAt(i) != string.char",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result.concat(string.charAt(i).toUpperCase)\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the string appears in the string.\n    // >>> countAppearances(\"Hello\", \"ll\")\n    // 2\n    def countAppearances(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring appears in the string.\n    // >>> countSubstringAppearances(\"Hello\", \"ll\")\n    // 2\n    def countSubstringAppearances(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equals(substring)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring appears in the string.\n    // >>> countSubstringAppearances(\"Hello\", \"ll\")\n    // 2\n    def countSubstringAppearances2(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equals(substring)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring appears in the string.\n    // >>> countSubstringAppearances(\"Hello\", \"ll\")\n    // 2\n    def countSubstringAppearances3(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equals(\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp9fsbt8pm.scala:60:65 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m            \u001b[33mif\u001b[0m (string.substring(i, i + substring.length).equals(\n\u001b[31m\u001b[31m   |\u001b[0m                                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9fsbt8pm.scala:69:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9fsbt8pm.scala:10:52 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result.concat(string.charAt(i).toUpperCase)\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp9fsbt8pm.scala:68:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp9fsbt8pm.scala:62:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m62 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var s = string.toLowerCase\n        var r = \"\"\n        for (i <- 0 until s.length) {\n            r = r + s.charAt(i).toUpperCase\n        }\n        r\n    }\n\n    // For a given string, return the number of times a substring is contained in the string.\n    // >>> countSubstring(\"hello\", \"ll\")\n    // 2\n    def countSubstring(string : String, substring : String) : Int = {\n        var count = 0\n        var i = 0\n        while (i < string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equals(substring)) {\n                    count += 1\n                }\n            }\n            i += 1\n        }\n        count\n    }\n\n    // For a given string, return the number of times a substring is contained in the string,\n    // ignoring case.\n    // >>> countSubstringIgnoreCase(\"hello\", \"ll\")\n    // 2\n    def countSubstringIgnoreCase(string : String, substring : String) : Int = {\n        var count = 0\n        var i = 0\n        while (i < string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equalsIgnoreCase(substring)) {\n                    count += 1\n                }\n            }\n            i += 1\n        }\n        count\n    }\n\n    // For a given string, return the number of times a substring is contained in the string,\n    // ignoring case, and ignoring the case of the substring.\n    // >>> countSubstringIgnoreCase(\"hello\", \"ll\")\n    // 2\n    def countSubstringIgnoreCaseAndIgnoreCase(string : String, substring : String) : Int = {\n        var count = 0\n        var i = 0\n        while (i < string.length) {\n            var j = i + substring.length\n            if (j <= string.length) {\n                if (string.substring(i, j).equalsIgn\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293027,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzp5kzgj9.scala:64:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpzp5kzgj9.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzp5kzgj9.scala:11:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m11 |\u001b[0m            r = r + s.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzp5kzgj9.scala:63:43 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m                \u001b[33mif\u001b[0m (string.substring(i, j).equalsIgn\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m value equalsIgn is not a member of String - did you mean String.equals?\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpzp5kzgj9.scala:65:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m65 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // separated by a space.\n    // >>> separateAdjacentLetters(\"abcd\")\n    // \"a b c d\"\n    def separateAdjacentLetters(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i + 1 < string.length && string.charAt(i) == string.charAt(i + 1)) {\n                result = result + string.charAt(i) + \" \"\n            } else {\n                result = result + string.charAt(i)\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have been\n    // separated by a space.\n    // >>> separateAdjacentLetters(\"Able was I ere I saw Elba\")\n    // \"Able was I ere I saw Elba\"\n    def separateAdjacentLetters2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i + 1 < string.length && string.charAt(i) != string.charAt(i + 1)) {\n                result = result + string.charAt(i) + \" \"\n            } else {\n                result = result + string.charAt(i)\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where all characters that are not a letter are removed.\n    // >>> removeNonLetters(\"Able was I ere I saw Elba\")\n    // \"I saw Elba\"\n    def removeNonLetters(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (string.charAt(i).isLetter()) {\n                result = result + string.charAt(i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293028,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpqm_d5dyg.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpqm_d5dyg.scala:53:33 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i).isLetter()) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m              \u001b[33mmethod\u001b[0m \u001b[35misLetter\u001b[0m in \u001b[33mclass\u001b[0m \u001b[35mRichChar\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the string appears in the string.\n    // >>> countAppearances(\"Hello\", \"ll\")\n    // 2\n    def countAppearances(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n                for (j <- 1 until substring.length) {\n                    if (string.charAt(i + j) != substring.charAt(j)) {\n                        break\n                    }\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the string appears in the string.\n    // >>> countAppearances(\"Hello\", \"ll\")\n    // 2\n    def countAppearances2(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n                for (j <- 1 until substring.length) {\n                    if (string.charAt(i + j) != substring.charAt(j)) {\n                        break\n                    }\n                    result += 1\n                }\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the string appears in the string.\n    // >>> countAppearances(\"Hello\", \"ll\")\n    // 2\n    def countAppearances3(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n                for (j <- 1 until substring.length) {\n                    if (string.charAt(i + j) != substring.charAt(j))\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293029,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkl_roxup.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    'then' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkl_roxup.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkl_roxup.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkl_roxup.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl_roxup.scala:25:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                        break\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkl_roxup.scala:44:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m                        break\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: break\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpkl_roxup.scala:64:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m64 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, replace all spaces with '%20'.\n    // >>> replaceSpaces(\"Hello\")\n    // \"Hello\"\n    def replaceSpaces(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == ' ') {\n                result += \"%20\"\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeExtraChars(\"Hello\")\n    // \"ello\"\n    def removeExtraChars(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeExtraChars(\"Hello\")\n    // \"ello\"\n    def removeExtraChars2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeExtraChars(\"Hello\")\n    // \"ello\"\n    def removeExtraChars3(string : String) : String = {\n        var result = \"\"\n        for (i\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293030,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5r536d29.scala:70:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5r536d29.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5r536d29.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5r536d29.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5r536d29.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var ch = string.charAt(i)\n            if (ch >= 'a' && ch <= 'z') {\n                result += ch.toUpperCase\n            } else {\n                result += ch.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var ch = string.charAt(i)\n            if (ch == \"world\") {\n                result += 1\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"Hello world\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var ch = string.charAt(i)\n            if (ch == \"world\") {\n                result += 1\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the first letter of each word.\n    // >>> countIgnoreCase2(\"Hello world\")\n    // 1\n    def countIgnoreCase2(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var ch = string.charAt(i)\n            if (ch == \"world\") {\n                result += 1\n            } else if (ch == \" \") {\n                result = 0\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the first letter of each word.\n    // >>> countIgnoreCase3(\"Hello world\")\n    \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293032,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpho928ve9.scala:77:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m77 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpho928ve9.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += ch.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpho928ve9.scala:12:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += ch.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpho928ve9.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += ch.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpho928ve9.scala:14:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += ch.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmpho928ve9.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (ch == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpho928ve9.scala:42:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m            \u001b[33mif\u001b[0m (ch == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpho928ve9.scala:57:16 -----------------------------------------\u001b[0m\u001b[0m\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"abcba\"))\n    // (\"abcb\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"1a2b3c\"))\n    // (\"123\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= '0' && c <= '9') {\n                result += c\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"1a2b3c\"))\n    // (\"abc123\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            } else if (c >= '0' &&\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpz35mif_x.scala:65:34 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m            } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (c >= \u001b[31m'0'\u001b[0m &&\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz35mif_x.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz35mif_x.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz35mif_x.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz35mif_x.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz35mif_x.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz35mif_x.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E007] Type Mism",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equals(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countCase(\"hello world\")\n    // 1\n    def countCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring leading and trailing whitespace.\n    // >>> countCaseTrim(\"  hello world  \")\n    // 1\n    def countCaseTrim(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string,\n    // ignoring case, ignoring leading and trailing whitespace, and treating the string as a list of words.\n    // >>> countCaseTrimSplit(\"  hello world  \")\n    // 1\n    def countCaseTrimSplit(string : String) : Int = {\n        var result = 0\n        for (i <- 0\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpseqi_roa.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpseqi_roa.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpseqi_roa.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpseqi_roa.scala:62:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                  value foreach is not a member of Int\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293033,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_58b012i.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"hello world\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase(\"hello world\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase(\"hello world\")\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293035,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpx9gq604i.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx9gq604i.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx9gq604i.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx9gq604i.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx9gq604i.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx9gq604i.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx9gq604i.scala:42:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpx9gq604i.scala:57:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 3\n    def repeatCount(string : String, substring : String) : Int = {\n        var count = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equals(substring)) {\n                count += 1\n            }\n        }\n        return count\n    }\n\n    // For a given string, return the longest substring that is a palindrome.\n    // >>> longestPalindrome(\"abccba\")\n    // \"abc\"\n    def longestPalindrome(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var j = i\n            while (j < string.length && string.charAt(j) == string.charAt(i)) {\n                j += 1\n            }\n            if (j - i > result.length) {\n                result = string.substring(i, j)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the longest substring that is a palindrome.\n    // >>> longestPalindrome(\"abccba\")\n    // \"abc\"\n    def longestPalindrome2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var j = i\n            while (j < string.length && string.charAt(j) == string.charAt(i)) {\n                j += 1\n            }\n            if (j - i > result.length) {\n                result = string.substring(i, j)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the longest substring that is a palindrome.\n    // >>> longestPalindrome(\"abccba\")\n    // \"abc\"\n    def longest\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmp31gik7d7.scala:65:15 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mlongest\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m               ^\u001b[0m\n\u001b[31m   |\u001b[0m               Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp31gik7d7.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp31gik7d7.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp31gik7d7.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp31gik7d7.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp31gik7d7.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp31gik7d7.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT END",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"mississippi\"))\n    // (\"miSsSiSiSiSpi\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= '0' && c <= '9') {\n                result += c\n            } else {\n                if (i < string.length - 1 && string.charAt(i + 1) >= '0' && string.charAt(i + 1) <= '9') {\n                    result += string.charAt(i)\n                    i += 1\n                } else {\n                    result += c\n                }\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"1-2 3\"))\n    // (\"1-2 3\")\n    def mergeLettersNumbers(\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293034,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpm0q0seia.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpm0q0seia.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm0q0seia.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm0q0seia.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm0q0seia.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm0q0seia.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm0q0seia.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpm0q0seia.scala:51:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m                    i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value += ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"Hello world\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world\")\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292950,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjbvpe55j.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjbvpe55j.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjbvpe55j.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjbvpe55j.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjbvpe55j.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjbvpe55j.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjbvpe55j.scala:42:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpjbvpe55j.scala:57:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"code\"))\n    // (\"cod\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"code123\"))\n    // (\"code1\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1).isDigit()) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersOrDigits((\"code123\"))\n    // (\"code12\")\n    def mergeLettersOrDigits(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && (string.charAt(i + 1).is\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293036,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkc2gw7mp.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkc2gw7mp.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkc2gw7mp.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkc2gw7mp.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkc2gw7mp.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkc2gw7mp.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkc2gw7mp.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpkc2gw7mp.scala:46:62 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m            \u001b[33mif\u001b[0m (i < string.length - \u001b[31m1\u001b[0m && string.charAt(i + \u001b[31m1\u001b[0m).isDigit()) {\n\u001b[31m\u001b[31m   |\u001b[0m                ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeNonAlphabetChars(\"Hello\")\n    // \"ello\"\n    def removeNonAlphabetChars(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) in alphabet) {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are the same are removed.\n    // >>> removeAdjacentDuplicates(\"code\")\n    // \"cde\"\n    def removeAdjacentDuplicates(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i == 0 or string.charAt(i) != string.charAt(i - 1)) {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are not the same are removed.\n    // >>> removeAdjacentDifferences(\"code\")\n    // \"e\"\n    def removeAdjacentDifferences(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i == 0 or string.charAt(i) != string.charAt(i - 1)) {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are not the same are removed.\n    // >>> removeAdjacentDifferences(\"code\")\n    // \"e\"\n    def removeAdjacentDifferences2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i == 0 or string.char\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293036,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj90e6i7n.scala:61:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpj90e6i7n.scala:69:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj90e6i7n.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj90e6i7n.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj90e6i7n.scala:21:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i) in alphabet) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value in is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj90e6i7n.scala:21:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            \u001b[33mif\u001b[0m (string.charAt(i) in alphabet) {\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                    Not found: alphabet\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj90e6i7n.scala:34:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m            \u001b[33mif\u001b[0m (i == \u001b[31m0\u001b[0m or string.charAt(i) != string.charAt(i - \u001b[31m1\u001b[0m)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value or is not a member of Boolean\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpj90e6i7n.scala:47:23 ---",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is repeated in the string.\n    // >>> countOccurrences(\"ababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababababab\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293035,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpx24jejia.scala:29:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx24jejia.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx24jejia.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx24jejia.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpx24jejia.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx24jejia.scala:24:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx24jejia.scala:25:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world!\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equals(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countCase(\"hello world!\")\n    // 1\n    def countCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countCaseIgnoreCase(\"hello world!\")\n    // 1\n    def countCaseIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCase(\"hello world!\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293035,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphrxy6ktw.scala:72:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphrxy6ktw.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphrxy6ktw.scala:71:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmphrxy6ktw.scala:65:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m65 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string.\n    // >>> countAppearances(\"Hello\", \"ll\")\n    // 2\n    def countAppearances(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string.\n    // >>> countAppearances(\"Hello\", \"ll\")\n    // 2\n    def countAppearances2(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string.\n    // >>> countAppearances(\"Hello\", \"ll\")\n    // 2\n    def countAppearances3(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string.\n    // >>> countAppearances(\"Hello\", \"ll\")\n    // 2\n    def countAppearances4(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.charAt(i) == substring.charAt(0)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293036,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3jj7e3o5.scala:75:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3jj7e3o5.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3jj7e3o5.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3jj7e3o5.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3jj7e3o5.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3jj7e3o5.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeNonAlphabet((\"Hello\"))\n    // (\"ello\")\n    def removeNonAlphabet(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where all adjacent characters that are the same are removed.\n    // >>> removeAdjacent((\"abcd\"))\n    // (\"cd\")\n    def removeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1) {\n                var c2 = string.charAt(i + 1)\n                if (c == c2) {\n                    continue\n                }\n            }\n            result += c\n        }\n        result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed,\n    // and all adjacent characters that are the same are removed.\n    // >>> removeNonAlphabetAndAdjacent((\"abcd\"))\n    // (\"cd\")\n    def removeNonAlphabetAndAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            }\n        }\n        result\n    }\n\n    // For a given string, return a string where all characters that are\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293036,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4ykmad1p.scala:75:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4ykmad1p.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4ykmad1p.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4ykmad1p.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4ykmad1p.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4ykmad1p.scala:44:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m                    continue\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: continue\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4ykmad1p.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is contained in the string.\n    // >>> countSubstring(\"Hello\", \"lo\")\n    // 2\n    def countSubstring(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equals(substring)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is contained in the string,\n    // ignoring case.\n    // >>> countSubstringIgnoreCase(\"Hello\", \"lo\")\n    // 2\n    def countSubstringIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equalsIgnoreCase(substring)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is contained in the string,\n    // ignoring case, and ignoring the case of the substring.\n    // >>> countSubstringIgnoreCase(\"Hello\", \"lo\")\n    // 2\n    def countSubstringIgnoreCaseIgnoreCase(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + substring.length).equalsIgnoreCase(substring)) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times that a substring is contained in the string,\n    // ignoring case, and ignoring the case of the substring.\n    // >>> countSubstringIgnoreCase(\"Hello\", \"lo\")\n    // 2\n    \n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293036,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcik8y3_x.scala:68:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcik8y3_x.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpcik8y3_x.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcik8y3_x.scala:63:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcik8y3_x.scala:64:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcik8y3_x.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equals(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"Hello world\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring \"world\".\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters in the substring \"world\".\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase2(string : String) : Int\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293037,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7hq_mua_.scala:68:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7hq_mua_.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7hq_mua_.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E067] Syntax Error: /tmp/tmp7hq_mua_.scala:60:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcountIgnoreCaseAndIgnoreCase2\u001b[0m(\u001b[36mstring\u001b[0m : \u001b[35mString\u001b[0m) : \u001b[35mInt\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDeclaration of \u001b[33mmethod\u001b[0m \u001b[35mcountIgnoreCaseAndIgnoreCase2\u001b[0m not allowed here: only classes can have declared but undefined members\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7hq_mua_.scala:63:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7hq_mua_.scala:64:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7hq_mua_.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292963,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, replace all spaces with '%20'.\n    // >>> replaceSpaces((\"Hello World\"))\n    // (\"Hello%20World\")\n    def replaceSpaces(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == ' ') {\n                result += \"%20\"\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string.\n    // >>> countAppearances((\"hello\"), (\"hello\"))\n    // 2\n    def countAppearances(string : String, subString : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == subString) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string.\n    // >>> countAppearances((\"hello\"), (\"hello\"), (\"hello\"))\n    // 3\n    def countAppearances(string : String, subString : String, subString2 : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == subString || c == subString2) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times it appears in the string.\n    // >>> countAppearances((\"hello\"), (\"hello\"), (\"hello\"), (\"hello\"))\n    // 6\n    def countAppearances(string : String, subString : String, subString2 : String,\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293038,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph32p4t5f.scala:68:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph32p4t5f.scala:75:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph32p4t5f.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph32p4t5f.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph32p4t5f.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph32p4t5f.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmph32p4t5f.scala:43:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m            \u001b[33mif\u001b[0m (c == subString) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmph32p4t5f.scala:57:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m            \u001b[33mif\u001b[0m (c == subString || c == subString2) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the alphabet are removed.\n    // >>> removeNonAlphabet((\"Hello\"))\n    // (\"e\")\n    def removeNonAlphabet(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all adjacent characters that are the same are removed.\n    // >>> removeAdjacent((\"code\"))\n    // (\"co\")\n    def removeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                continue\n            }\n            result += c\n        }\n        return result\n    }\n\n    // For a given string, return a string where all repeating characters are removed.\n    // >>> removeRepeating((\"GeeksforGeeks\"))\n    // (\"GE\")\n    def removeRepeating(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                continue\n            }\n            result += c\n        }\n        return result\n    }\n\n    // For a given string, return a string where all repeating characters are removed.\n    // >>> removeRepeating((\"GeeksforGeeks\"))\n    // (\"GE\")\n    def remove\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293038,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmphm05k1sz.scala:67:14 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mremove\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m              ^\u001b[0m\n\u001b[31m   |\u001b[0m              Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphm05k1sz.scala:75:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphm05k1sz.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphm05k1sz.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphm05k1sz.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmphm05k1sz.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphm05k1sz.scala:42:16 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m                continue\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Not found: continue\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphm05k1sz.scala:57:16 --",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"mississippi\"))\n    // (\"misisipi\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && string.charAt(i + 1) == c) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit.\n    // >>> mergeNumbers((\"1-2 3\"))\n    // (\"12 3\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && Character.isDigit(string.charAt(i + 1))) {\n                result += c\n                i += 1\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"1-2 3\"))\n    // (\"123\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (i < string.length - 1 && (Character.isLetter\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293039,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4asorwxt.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4asorwxt.scala:73:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4asorwxt.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4asorwxt.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4asorwxt.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4asorwxt.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4asorwxt.scala:30:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m30 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp4asorwxt.scala:48:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m                i += \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value += is not a member of Int ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result = result + string.charAt(i).toUpperCase()\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equals(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"hello world\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndCase(\"hello world\")\n    // 1\n    def countIgnoreCaseAndCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            if (string.substring(i, i + \"world\".length).equalsIgnoreCaseAndCase(\"world\")) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndCase(\"hello world\")\n    // 1\n    def countIgnoreCaseAndCase2(string : String) : Int = {\n        var result = 0\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293039,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvrywd81l.scala:10:47 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result = result + string.charAt(i).toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpvrywd81l.scala:49:56 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            \u001b[33mif\u001b[0m (string.substring(i, i + \u001b[31m\"world\"\u001b[0m.length).equalsIgnoreCaseAndCase(\u001b[31m\"world\"\u001b[0m)) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value equalsIgnoreCaseAndCase is not a member of String\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpvrywd81l.scala:62:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where the first and last characters are swapped.\n    // >>> swapFirstLast((\"code\"))\n    // (\"eodc\")\n    def swapFirstLast(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            result += c\n            if (i == 0 || i == string.length - 1) {\n                result += string.charAt(string.length - 1 - i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where every other character is\n    // swapped with the next one, starting with the first.\n    // >>> swapPairs((\"code\"))\n    // (\"oec\")\n    def swapPairs(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            result += c\n            if (i % 2 == 1) {\n                result += string.charAt(string.length - 1 - i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where every other character is\n    // swapped with the previous one, starting with the last.\n    // >>> swapPairsReverse((\"code\"))\n    // (\"cod\")\n    def swapPairsReverse(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            result += c\n            if (i % 2 == 1) {\n                result += string.charAt(i - 1)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293039,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw_xx7ixd.scala:75:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_xx7ixd.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_xx7ixd.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_xx7ixd.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpw_xx7ixd.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw_xx7ixd.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpw_xx7ixd.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated.\n    // >>> repeatCount(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCount(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == substring) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the reverse order.\n    // >>> repeatCountReverse(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCountReverse(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(string.length - i - 1)\n            if (c == substring) {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the order of first occurrence.\n    // >>> repeatCountFirst(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCountFirst(string : String, substring : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == substring) {\n                result += 1\n                break\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times a substring is repeated in the order of last occurrence.\n    // >>> repeatCountLast(\"abcabcabc\", \"abc\")\n    // 2\n    def repeatCountLast(string : String, substring\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5e2foeo4.scala:67:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ':' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5e2foeo4.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5e2foeo4.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5e2foeo4.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5e2foeo4.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5e2foeo4.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmp5e2foeo4.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == substring) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmp5e2foeo4.scala:41:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m            \u001b[33mif\u001b[0m (c == substring) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case.\n    // >>> countIgnoreCase(\"Hello world\")\n    // 1\n    def countIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world\")\n    // 1\n    def countIgnoreCaseAndIgnoreCase(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        return result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string,\n    // ignoring case, and ignoring the case of the letters.\n    // >>> countIgnoreCaseAndIgnoreCase(\"Hello world\")\n    // 1\n    def count\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmpi3uf3h2l.scala:68:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mcount\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m             ^\u001b[0m\n\u001b[31m   |\u001b[0m             Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi3uf3h2l.scala:76:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi3uf3h2l.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi3uf3h2l.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi3uf3h2l.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi3uf3h2l.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmpi3uf3h2l.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmpi3uf3h2l.scala:42:16 -----------------------------------------\u001b[0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // merged into a single character.\n    // >>> mergeAdjacent((\"mississippi\"))\n    // (\"miSsSiSiSiSp\")\n    def mergeAdjacent(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i + 1 < string.length && string.charAt(i) == string.charAt(i + 1)) {\n                result += string.charAt(i)\n            } else {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are digits have been\n    // merged into a single digit character.\n    // >>> mergeNumbers((\"1 2 3\"))\n    // (\"1 2 3\")\n    def mergeNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i + 1 < string.length && string.charAt(i) == string.charAt(i + 1) && Character.isDigit(string.charAt(i))) {\n                result += string.charAt(i)\n            } else {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are either a letter or a\n    // digit have been merged into a single character.\n    // >>> mergeLettersNumbers((\"1a2b3c\"))\n    // (\"1a2b3c\")\n    def mergeLettersNumbers(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i + 1 < string.length && (Character.isLetter(string.charAt(i)) || Character.isDigit(string.charAt(i)))) {\n                result += string.char\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpajytfu4f.scala:64:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpajytfu4f.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpajytfu4f.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpajytfu4f.scala:55:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += string.char\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpajytfu4f.scala:55:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m                result += string.char\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m       value char is not a member of String - did you mean string.chars?\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpajytfu4f.scala:57:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292963,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2k0i5o1t.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c >= 'a' && c <= 'z') {\n                result += c.toUpperCase\n            } else {\n                result += c.toLowerCase\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count2(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count3(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n        result\n    }\n\n    // For a given string, return the number of times the substring \"world\" occurs in the string.\n    // >>> count(\"Hello world\")\n    // 1\n    def count4(string : String) : Int = {\n        var result = 0\n        for (i <- 0 until string.length) {\n            var c = string.charAt(i)\n            if (c == \"world\") {\n                result += 1\n            }\n        }\n\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664292958,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptf8b4a47.scala:12:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptf8b4a47.scala:12:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m12 |\u001b[0m                result += c.toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptf8b4a47.scala:14:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptf8b4a47.scala:14:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m14 |\u001b[0m                result += c.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value toLowerCase is not a member of Char\n\u001b[31m\u001b[31m-- Error: /tmp/tmptf8b4a47.scala:27:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptf8b4a47.scala:41:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared with == or !=\n\u001b[31m\u001b[31m-- Error: /tmp/tmptf8b4a47.scala:55:16 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            \u001b[33mif\u001b[0m (c == \u001b[31m\"world\"\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Values of types Char and String cannot be compared wit",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // For a given string, flip lowercase characters to uppercase and uppercase to lowercase.\n    // >>> flipCase((\"Hello\"))\n    // (\"hELLO\")\n    def flipCase(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            result += string.charAt(i).toUpperCase\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are the same have been\n    // separated by a space.\n    // >>> separateAdjacentLetters(\"abcd\")\n    // \"a b c d\"\n    def separateAdjacentLetters(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i + 1 < string.length && string.charAt(i) == string.charAt(i + 1)) {\n                result += string.charAt(i) + \" \"\n            } else {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where adjacent characters that are not the same have been\n    // separated by a space.\n    // >>> separateAdjacentLetters(\"abcd\")\n    // \"a b c d\"\n    def separateAdjacentLetters2(string : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (i + 1 < string.length && string.charAt(i) != string.charAt(i + 1)) {\n                result += string.charAt(i) + \" \"\n            } else {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where all characters that are not in the given set\n    // have been removed.\n    // >>> removeChars(\"aabbccddeeff\", \"abc\")\n    // \"eee\"\n    def removeChars(string : String, chars : String) : String = {\n        var result = \"\"\n        for (i <- 0 until string.length) {\n            if (!chars.contains(string.charAt(i))) {\n                result += string.charAt(i)\n            }\n        }\n        return result\n    }\n\n    // For a given string, return a string where\n    }\n    def main(args: Array[String]) = {\n    assert(flipCase((\"\")).equals((\"\")));\n    assert(flipCase((\"Hello!\")).equals((\"hELLO!\")));\n    assert(flipCase((\"These violent delights have violent ends\")).equals((\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n",
      "timestamp": 1664293040,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_bp7_t6e.scala:69:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_bp7_t6e.scala:10:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_bp7_t6e.scala:10:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m10 |\u001b[0m            result += string.charAt(i).toUpperCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value toUpperCase is not a member of Char\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_bp7_t6e.scala:64:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    assert(flipCase((\u001b[31m\"\"\u001b[0m)).equals((\u001b[31m\"\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_bp7_t6e.scala:65:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    assert(flipCase((\u001b[31m\"Hello!\"\u001b[0m)).equals((\u001b[31m\"hELLO!\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_bp7_t6e.scala:66:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m    assert(flipCase((\u001b[31m\"These violent delights have violent ends\"\u001b[0m)).equals((\u001b[31m\"tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\"\u001b[0m)));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: flipCase\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
{
  "name": "HumanEval_88_sort_array",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Given a list of non-negative integers, return a coscala of the given list after sorting,\n    // you will sort the given list in ascending order if the sum( first index value, last index value) is odd,\n    // or sort it in descending order if the sum( first index value, last index value) is even.\n    // Note:\n    // * don't change the given list.\n    // Examples:\n    // >>> sortArray((List[Long]()))\n    // (List[Long]())\n    // >>> sortArray((List[Long](5l.toLong)))\n    // (List[Long](5l.toLong))\n    // >>> sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong, 5l.toLong)))\n    // (List[Long](0l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong))\n    // >>> sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong, 5l.toLong, 6l.toLong)))\n    // (List[Long](6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 0l.toLong))\n    def sortArray(array : List[Long]) : List[Long] = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(sortArray((List[Long]())).equals((List[Long]())));\n    assert(sortArray((List[Long](5l.toLong))).equals((List[Long](5l.toLong))));\n    assert(sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong, 5l.toLong))).equals((List[Long](0l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong))));\n    assert(sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong, 5l.toLong, 6l.toLong))).equals((List[Long](6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 0l.toLong))));\n    assert(sortArray((List[Long](2l.toLong, 1l.toLong))).equals((List[Long](1l.toLong, 2l.toLong))));\n    assert(sortArray((List[Long](15l.toLong, 42l.toLong, 87l.toLong, 32l.toLong, 11l.toLong, 0l.toLong))).equals((List[Long](0l.toLong, 11l.toLong, 15l.toLong, 32l.toLong, 42l.toLong, 87l.toLong))));\n    assert(sortArray((List[Long](21l.toLong, 14l.toLong, 23l.toLong, 11l.toLong))).equals((List[Long](23l.toLong, 21l.toLong, 14l.toLong, 11l.toLong))));\n    }\n\n}\n",
  "completions": [
    "        if (array.length == 0) return array\n        var sortedArray = array.toJavaList\n        sortedArray.sort(Comparator.comparingLong(x -> x))\n        if (sortedArray.length % 2 == 0) {\n            sortedArray.reverse()\n        }\n        return sortedArray",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array.head.toLong\n        for (i <- 1 until array.length) {\n            sum += array[i].toLong\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toLong).reversed())\n        } else {\n            array.sort(Comparator.comparing(Long::toLong))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(Long::toLong).reversed())\n        } else {\n            array.sort(Comparator.comparingLong(Long::toLong))\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(Comparator.reverseOrder())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(Long::toLong))\n        } else {\n            array.sort(Comparator.comparingLong(Long::toLong).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array.reduce(0l)\n        if (sum % 2 == 0) {\n            return array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            return array.sort(Comparator.comparingLong(x -> -x))\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array\n    }\n\n    // Given a list of non-negative integers, return a coscala of the given list after sorting,\n    // you will sort the given list in ascending order if the sum( first index value, last index value) is odd,\n    // or sort it in descending order if the sum( first index value, last index value) is even.\n    // Note:\n    // * don't change the given list.\n    // Examples:\n    // >>> sortArray((List[Long]()))\n    // (List[Long]())\n    // >>> sortArray((List[Long](5l.toLong)))\n    // (List[Long](5l.toLong))\n    // >>> sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong, 5l.toLong)))\n    // (List[Long](0l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong))\n    // >>> sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong, 5l.toLong, 6l.toLong)))\n    // (List[Long](6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 0l.toLong))\n    def sortArray2(array : List[Long]) : List[Long] = {\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array.reduce(_.sum)\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array.head.toLong + array.last().toLong\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            array.sort(Comparator.comparingLong(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            array.sort(Comparator.comparingLong(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (var i = 0; i < array.length; i++) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            array.sort(Comparator.comparingLong(x -> -x))\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array\n    }\n\n    // Given a list of non-negative integers, return a coscala of the given list after sorting,\n    // you will sort the given list in ascending order if the sum( first index value, last index value) is odd,\n    // or sort it in descending order if the sum( first index value, last index value) is even.\n    // Note:\n    // * don't change the given list.\n    // Examples:\n    // >>> sortArray((List[Long]()))\n    // (List[Long]())\n    // >>> sortArray((List[Long](5l.toLong)))\n    // (List[Long](5l.toLong))\n    // >>> sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong, 5l.toLong)))\n    // (List[Long](0l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong))\n    // >>> sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong, 5l.toLong, 6l.toLong)))\n    // (List[Long](6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 0l.toLong))\n    def sortArray2(array : List[Long]) : List[Long] = {\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array[0]\n        var i = 1\n        while (i < array.length) {\n            sum += array[i]\n            i += 1\n        }\n        if (sum % 2 == 1) {\n            return sortArray(array.toSeq().sort(Comparator.comparing(x -> x)).toList())\n        } else {\n            return sortArray(array.toSeq().sort(Comparator.comparing(x -> x)).reverse().toList())\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            array.sort(Comparator.comparingLong(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sortedArray = array.toSeq().toBuffer()\n        var sum = 0l\n        for (i <- 0 until sortedArray.length) {\n            sum += sortedArray.get(i)\n        }\n        if (sum % 2 == 0) {\n            sortedArray.sort(Comparator.comparingLong(x -> x))\n        } else {\n            sortedArray.sort(Comparator.comparingLong(x -> -x))\n        }\n        return sortedArray.toList()",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            array.sort(Comparator.comparingLong(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            for (i <- 0 until array.length) {\n                array[i] = array[i] * -1\n            }\n        }\n        array.sort()\n        return array",
    "        var sortedArray = array.toJavaList()\n        sortedArray.sort(Comparator.comparingLong(x -> x))\n        return sortedArray",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        var sortedArray = array.toJavaList()\n        sortedArray.sort()\n        var sum = 0l\n        for (var i = 0; i < sortedArray.size(); i++) {\n            sum += sortedArray.apply(i)\n        }\n        if (sum % 2 == 1) {\n            return sortedArray.reverse()\n        } else {\n            return sortedArray\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array.head\n        for (i <- 1 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (var i = 0; i < array.length; i++) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort(Comparator.comparing(Long::toLong))\n        } else {\n            array.sort(Comparator.comparing(Long::toLong).reversed())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            array.sort(Comparator.comparingLong(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array.head.toLong + array.last.toLong\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array\n    }\n\n    // Given a list of non-negative integers, return a coscala of the given list after sorting,\n    // you will sort the given list in ascending order if the sum( first index value, last index value) is odd,\n    // or sort it in descending order if the sum( first index value, last index value) is even.\n    // Note:\n    // * don't change the given list.\n    // Examples:\n    // >>> sortArray((List[Long]()))\n    // (List[Long]())\n    // >>> sortArray((List[Long](5l.toLong)))\n    // (List[Long](5l.toLong))\n    // >>> sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong, 5l.toLong)))\n    // (List[Long](0l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong))\n    // >>> sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong, 5l.toLong, 6l.toLong)))\n    // (List[Long](6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 0l.toLong))\n    def sortArray2(array : List[Long]) : List[Long] = {\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            scala.collection.immutable.List.sort(array)\n        } else {\n            scala.collection.immutable.List.sort(array, scala.math.Ordering.Descending())\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            for (i <- 0 until array.length - 1) {\n                array[i] = array[i] * -1\n            }\n        }\n        array.sort()\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (var i = 0; i < array.length; i++) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = array.reduce(_.sum)\n        if (sum % 2 == 0) {\n            return array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            return array.sort(Comparator.comparingLong(x -> -x))\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (var i = 0; i < array.length; i++) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            return sortArray(array).reverse()\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            return sortArray(array).reverse()\n        } else {\n            return sortArray(array)\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(Comparator.reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (var i = 0; i < array.length; i++) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            return sortArray(array.sort(Comparator.comparingLong(Long::longValue)))\n        } else {\n            return sortArray(array.sort(Comparator.comparingLong(Long::longValue).reversed()))\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        var sum = 0L\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        var sorted = array.toJavaList\n        sorted.sort(Comparator.comparingLong(x -> x))\n        return sorted",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = array.reduce(0l)\n        if (sum % 2 == 0) {\n            return array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            return array.sort(Comparator.comparingLong(x -> -x))\n        }",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort((a, b) -> b - a)\n        } else {\n            array.sort((a, b) -> a - b)\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort((a, b) -> b - a)\n        } else {\n            array.sort((a, b) -> a - b)\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (var i = 0; i < array.length; i++) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(Long::toLong).reversed())\n        } else {\n            array.sort(Comparator.comparingLong(Long::toLong))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            scala.collection.immutable.List.sort(array)\n        } else {\n            scala.collection.immutable.List.sort(array, (a, b) -> b - a)\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array[0]\n        for (i <- 1 to array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort(Comparator.comparing(Long::toLong))\n        } else {\n            array.sort(Comparator.comparing(Long::toLong).reversed())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array.reduce(0l)\n        var result = array.copy()\n        if (sum % 2 == 1) {\n            result.sort((a, b) -> a - b)\n        } else {\n            result.sort((a, b) -> b - a)\n        }\n        return result",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array).reverse()\n        } else {\n            return sortArray(array)\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            array.sort(Comparator.comparingLong(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        if (array.length == 0) return array\n        if (array.length == 1) return array\n        if (array.length == 2) return array\n        if (array.length == 3) return array\n        if (array.length == 4) return array\n        if (array.length == 5) return array\n        if (array.length == 6) return array\n        if (array.length == 7) return array\n        if (array.length == 8) return array\n        if (array.length == 9) return array\n        if (array.length == 10) return array\n        if (array.length == 11) return array\n        if (array.length == 12) return array\n        if (array.length == 13) return array\n        if (array.length == 14) return array\n        if (array.length == 15) return array\n        if (array.length == 16) return array\n        if (array.length == 17) return array\n        if (array.length == 18) return array\n        if (array.length == 19) return array\n        if (array.length == 20) return array\n        if (array.length == 21) return array\n        if (array.length == 22) return array\n        if (array.length == 23) return array\n        if (array.length == 24) return array\n        if (array.length == 25) return array\n        if (array.length == 26) return array\n        if (array.length == 27) return array\n        if (array.length == 28) return array\n        if (array.length == 29) return array\n        if (array.length == 30) return array\n        if (array.length == 31) return array\n        if (array.length == 32) return array\n        if (array.length == 33) return array\n        if (array.length == 34) return array\n        if (array.length == 35) return array\n        if (array.length == 36) return array\n        if (array.length == 37) return array\n        if (array.length == 38) return array\n        if (array.length == 39) return array\n        if (array.length == 40) return array\n        if (array.length == 41) return array\n        if (array.length == 42",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            array.sort(Comparator.comparingLong(x -> -x))\n        }\n        return array",
    "        var sortedArray = array.toList()\n        var sum = 0l\n        for (i <- 0 until sortedArray.length) {\n            sum += sortedArray[i]\n        }\n        if (sum % 2 == 0) {\n            sortedArray.sort(Comparator.comparing(x -> x))\n        } else {\n            sortedArray.sort(Comparator.comparing(x -> -x))\n        }\n        return sortedArray",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort((a, b) -> b - a)\n        } else {\n            array.sort((a, b) -> a - b)\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort(Comparator.comparing(Long::toLong))\n        } else {\n            array.sort(Comparator.comparing(Long::toLong).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        var sortedArray = array.toJavaList()\n        sortedArray.sort()\n        if (sortedArray.length() % 2 == 0) {\n            sortedArray.reverse()\n        }\n        return sortedArray",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array.head.toLong\n        for (i <- 1 until array.length) {\n            sum += array[i].toLong\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array\n    }\n\n    // Given a list of non-negative integers, return a coscala of the given list after sorting,\n    // you will sort the given list in ascending order if the sum( first index value, last index value) is odd,\n    // or sort it in descending order if the sum( first index value, last index value) is even.\n    // Note:\n    // * don't change the given list.\n    // Examples:\n    // >>> sortArray((List[Long]()))\n    // (List[Long]())\n    // >>> sortArray((List[Long](5l.toLong)))\n    // (List[Long](5l.toLong))\n    // >>> sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong, 5l.toLong)))\n    // (List[Long](0l.toLong, 1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong, 5l.toLong))\n    // >>> sortArray((List[Long](2l.toLong, 4l.toLong, 3l.toLong, 0l.toLong, 1l.toLong, 5l.toLong, 6l.toLong)))\n    // (List[Long](6l.toLong, 5l.toLong, 4l.toLong, 3l.toLong, 2l.toLong, 1l.toLong, 0l.toLong))\n    def sortArray2(array : List[Long]) : List[Long] = {\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (var i = 0; i < array.length; i++) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array).reverse()\n        } else {\n            return sortArray(array)\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            array.sort(Comparator.comparingLong(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            return sortArray(array.sort(Comparator.comparing(x -> x)))\n        } else {\n            return sortArray(array.sort(Comparator.comparing(x -> -x)))\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array.reduce(_.sum)\n        if (sum % 2 == 0) {\n            return array.sort(Comparator.comparing(x -> x))\n        } else {\n            return array.sort(Comparator.comparing(x -> -x))\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            sort(array)\n        } else {\n            sort(array, reverse = true)\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (var i = 0; i < array.length; i++) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            for (i <- 0 until array.length) {\n                array[i] = array[i] * -1\n            }\n        }\n        array.sort()\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            scala.collection.immutable.List.sort(array)\n        } else {\n            scala.collection.immutable.List.sort(array, scala.math.Ordering.Descending())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array).reverse()\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) return array\n        var sum = array.reduce(0l)\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array).reverse()\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array.head.toLong\n        for (i <- 1 until array.length) {\n            sum += array[i].toLong\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (var i = 0; i < array.length; i++) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            return sortArray(array.sort(Comparator.comparing(x -> x)))\n        } else {\n            return sortArray(array.sort(Comparator.comparing(x -> -x)))\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array.head.toLong\n        for (i <- array.tail.toLong) {\n            sum += i\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) return array\n        var sum = 0\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            scala.collection.immutable.List.sort(array)\n        } else {\n            scala.collection.immutable.List.sort(array, scala.math.Ordering.Descending)\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        var sortedArray = array.toJavaList\n        sortedArray.sort(Comparator.comparingLong(Long::longValue))\n        return sortedArray",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            array.sort(Comparator.comparingLong(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = array.head.toLong\n        for (i <- 1 until array.length) {\n            sum += array[i].toLong\n        }\n        if (sum % 2 == 0) {\n            array.sort((a, b) -> b - a)\n        } else {\n            array.sort((a, b) -> a - b)\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            return sortArray(array.sort(Comparator.comparing(x -> x)))\n        } else {\n            return sortArray(array.sort(Comparator.comparing(x -> -x)))\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array.head * array.tail\n        if (sum % 2 == 1) {\n            return sortArray(array.tail).prepend(array.head)\n        } else {\n            return sortArray(array.tail.reverse()).prepend(array.head.reverse())\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort(Comparator.comparing(Long::toLong))\n        } else {\n            array.sort(Comparator.comparing(Long::toLong).reversed())\n        }\n        return array",
    "        var sortedArray = array.toList().sort(Comparator.comparingLong(x -> x))\n        if (sortedArray.length() % 2 == 0) {\n            sortedArray = sortedArray.reverse()\n        }\n        return sortedArray",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array.head.toLong + array.last.toLong\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array[0] + array[array.length - 1]\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array.head.toLong\n        for (i <- 1 until array.length) {\n            sum += array[i].toLong\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (var i = 0; i < array.length; i++) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (var i = 0; i < array.length; i++) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            return sortBy(array, (a, b) -> a - b)\n        } else {\n            return sortBy(array, (a, b) -> b - a)\n        }\n    }\n\n    def sortBy(array : List[Long], comparator : (a, b) -> Int) : List[Long] = {\n        var sorted = array.toJavaList().sort(comparator)\n        return sorted.toSeq().toList()",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            array.sort(Comparator.comparingLong(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) return array\n        if (array.length == 1) return array\n        if (array.length == 2) {\n            if (array[0] + array[1] == 0) return array\n            else if (array[0] + array[1] == 1) return array\n            else return array\n        }\n        if (array.length == 3) {\n            if (array[0] + array[1] + array[2] == 0) return array\n            else if (array[0] + array[1] + array[2] == 1) return array\n            else if (array[0] + array[1] + array[2] == 2) return array\n            else return array\n        }\n        if (array.length == 4) {\n            if (array[0] + array[1] + array[2] + array[3] == 0) return array\n            else if (array[0] + array[1] + array[2] + array[3] == 1) return array\n            else if (array[0] + array[1] + array[2] + array[3] == 2) return array\n            else if (array[0] + array[1] + array[2] + array[3] == 3) return array\n            else return array\n        }\n        if (array.length == 5) {\n            if (array[0] + array[1] + array[2] + array[3] + array[4] == 0) return array\n            else if (array[0] + array[1] + array[2] + array[3] + array[4] == 1) return array\n            else if (array[0] + array[1] + array[2] + array[3] + array[4] == 2) return array\n            else if (array[0] + array[1] + array[2] + array[3] + array[4] == 3) return array\n            else if (array[0] + array[1] + array[2] + array[3] + array[4] == 4) return array\n            else return array\n        }\n        if (array.length == 6) {\n            if (array[0] + array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort(Comparator.comparing(Long::toLong))\n        } else {\n            array.sort(Comparator.comparing(Long::toLong).reversed())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(Long::toLong))\n        } else {\n            array.sort(Comparator.comparingLong(Long::toLong).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = array.reduce(0l)\n        if (sum % 2 == 0) {\n            return array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            return array.sort(Comparator.comparingLong(x -> -x))\n        }",
    "        if (array.length == 0) return array\n        var sum = array.reduce(0l)\n        if (sum % 2 == 0) {\n            return array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            return array.sort(Comparator.comparingLong(x -> -x))\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) return array\n        var sum = 0\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort(Comparator.comparing(Long::toLong))\n        } else {\n            array.sort(Comparator.comparing(Long::toLong).reversed())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        var sortedArray = array.toJavaList()\n        sortedArray.sort(Comparator.comparingLong(x -> x))\n        return sortedArray",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            array.sort(Comparator.comparingLong(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            for (i <- 0 until array.length - 1) {\n                var temp = array[i]\n                array[i] = array[i + 1]\n                array[i + 1] = temp\n            }\n        } else {\n            for (i <- 0 until array.length - 1) {\n                var temp = array[i]\n                array[i] = array[i + 1]\n                array[i + 1] = temp\n            }\n        }\n        return array",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length - 1) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) {\n            return array\n        }\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            return sortArray(array.reverse())\n        } else {\n            return sortArray(array)\n        }",
    "        if (array.length == 0) return array\n        var sum = array.reduce(0l)\n        if (sum % 2 == 0) {\n            var sorted = array.sort(Comparator.comparing(x -> x))\n            return sorted\n        } else {\n            var sorted = array.sort(Comparator.comparing(x -> -x))\n            return sorted\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(reverseOrder())\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(Comparator.reverseOrder())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(Long::toString))\n        } else {\n            array.sort(Comparator.comparing(Long::toString).reversed())\n        }\n        return array",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 1) {\n            array.sort()\n        } else {\n            array.sort(Comparator.comparingLong(Long::toLong).reversed())\n        }\n        return array",
    "        if (array.length == 0) return array\n        var sum = array.reduce(0l)\n        if (sum % 2 == 0) {\n            return array.sort(Comparator.comparingLong(x -> x))\n        } else {\n            return array.sort(Comparator.comparingLong(x -> -x))\n        }",
    "        var sum = 0l\n        for (i <- 0 until array.length) {\n            sum += array[i]\n        }\n        if (sum % 2 == 0) {\n            array.sort(Comparator.comparing(x -> x))\n        } else {\n            array.sort(Comparator.comparing(x -> -x))\n        }\n        return array"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
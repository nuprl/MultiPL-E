{
  "name": "HumanEval_63_fibfib",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) == 0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n    // Please write a function to efficiently compute the n-th element of the fibfib number sequence.\n    // >>> fibfib((1l))\n    // (0l)\n    // >>> fibfib((5l))\n    // (4l)\n    // >>> fibfib((8l))\n    // (24l)\n    def fibfib(n : Long) : Long = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(fibfib((2l)) == (1l));\n    assert(fibfib((1l)) == (0l));\n    assert(fibfib((5l)) == (4l));\n    assert(fibfib((8l)) == (24l));\n    assert(fibfib((10l)) == (81l));\n    assert(fibfib((12l)) == (274l));\n    assert(fibfib((14l)) == (927l));\n    }\n\n}\n",
  "completions": [
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative number\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative number\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a positive integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0L\n        }\n        if (n == 1) {\n            return 0L\n        }\n        if (n == 2) {\n            return 1L\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0L\n        }\n        if (n == 1) {\n            return 0L\n        }\n        if (n == 2) {\n            return 1L\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0L\n        }\n        if (n == 1) {\n            return 0L\n        }\n        if (n == 2) {\n            return 1L\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a positive integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a positive integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative number\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a positive integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative number\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative number\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0L\n        }\n        if (n == 1) {\n            return 0L\n        }\n        if (n == 2) {\n            return 1L\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0L\n        }\n        if (n == 1) {\n            return 0L\n        }\n        if (n == 2) {\n            return 1L\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a positive integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative number\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative number\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative number\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative number\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a positive integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 0l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return n\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative number\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 2) {\n            return 0l\n        } else {\n            return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)\n        }",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        }\n        if (n == 1) {\n            return 0l\n        }\n        if (n == 2) {\n            return 1l\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)",
    "        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0L\n        }\n        if (n == 1) {\n            return 0L\n        }\n        if (n == 2) {\n            return 1L\n        }\n        return fibfib(n - 1) + fibfib(n - 2) + fibfib(n - 3)"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
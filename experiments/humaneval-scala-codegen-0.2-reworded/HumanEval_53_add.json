{
  "name": "HumanEval_53_add",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n",
  "completions": [
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_x_ = x_y_ * x_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_x_ = x_y_y_ * x_\n        val y_x_y_x_ = y_x_y_ * y_\n        val x_y_y_x_x_ = x_y_y_x_ * x_\n        val y_x_y_x_x_ = y_x_y_x_ * y_\n        val x_y_y_x_x_x_ = x_y_y_x_x_ * x_\n        val y_x_y_x_x_x_ = y_x_y_x_x_ * y_\n        val x_y_y_x_x_x_x_ = x_y_y_x_x_x_ * x_\n        val y_x_y_x_x_x_x_ = y_x_y_x_x_x_ * y_\n        val x_y_y_x_x_x_x_x_ = x_y_y_x_x_x_x_ * x_\n        val y_x_y_x_x_x_x_x_ = y_x_y_x_x_x_x_ * y_\n        val x_y_y_x_x_x_x_x_x_ = x_y_y_x_x_x_x_x_ * x_\n        val y_x_y_x_x_x_x_x_x_ = y_x_y_x_x_x_x_x_ * y_\n        val x_y_",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_x_y_ = x_x_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + x_x_\n        val y_x_x_ = y_x_ + x_x_\n        val x_x_x_ = x_x_ + x_x_\n        val y_x_x_ = y_x_ + x_x_\n        val x_y_x_ = x_y_ + x_x_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_y_ = x_y_ + x_x_\n        val y_x_y_ = y_x_ + x_x_\n        val x_x_y_ = x_x_ + x_x_\n        val y_x_y_ = y_x_ + x_x_\n        val x_y_y_ = x_y_ + x_x_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + x_x_\n        val y_x_x_ = y_x_ + x_x_\n        val x_x_x_ = x_x_ + x_x_\n        val y_x_x_ = y_x_ + x_x_\n        val x_y_x_ = x_y_ + x_x_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_y_ = x_y_ + x_x_\n        val y_x_y_ =",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a positive integer\")\n        }\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(5)\n    // 55\n    def sumOfSquares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a positive integer\")\n        }\n        if (n == 0) {\n            return 0\n        } else {\n            return n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sumOfCubes(5)\n    // 1023\n    def sumOfCubes(n : Long) : Long = {",
    "        x + y",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_x_y_ = x_x_ + y_y_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + y_x_\n        val y_x_y_ = y_x_ + x_y_\n        val x_x_y_y_ = x_x_y_ + y_y_\n        val y_y_x_x_ = y_y_x_ + x_x_\n        val x_y_x_y_ = x_y_x_ + y_x_\n        val y_x_y_x_ = y_x_y_ + x_y_\n        val x_y_y_x_ = x_y_y_ + y_x_\n        val x_x_y_y_ = x_x_y_ + y_y_\n        val y_x_y_y_ = y_x_y_ + x_y_\n        val x_y_y_x_ = x_y_y_ + y_x_\n        val y_x_y_x_ = y_x_y_ + x_y_\n        val x_y_y_y_ = x_y_y_ + y_y_\n        val y_x_y_y_ = y_x_y_ + x_y_\n        val x_y_y_y_ = x_y_y_ + y_y_\n        val y_x_y_y_ = y_x_y_ + x_y_\n        val x_y_y_y_ = x_y_y_ + y_y_\n        val y_x_y_y_ = y_x_y_ + x_y_\n        val x_y_y_y_ = x_y_y_ + y_y_\n        val",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_x_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_",
    "        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 + y_$eq$eq$eq$1\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 - y_$eq$eq$eq$1\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 * y_$eq$eq$eq$1\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 / y_$eq$eq$eq$1\n    }\n\n    // Return the sum of all elements in the list\n",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial\")\n        }\n        if (n == 0 || n == 1) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(5)\n    // 55\n    def sumOfSquares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative sum of squares\")\n        }\n        return (n * (n + 1) * (2 * n + 1)) / 6\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sumOfCubes(5)\n    // 125\n    def sumOfCubes(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs((-2l))\n    // (2l)\n    // >>> abs((2l))\n    // (2l)\n    def abs(x : Long) : Long = {\n        if (x < 0) {\n            -x\n        } else {\n            x\n",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * x_\n        val y_x_x_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs((-2l))\n    // (2l)\n    // >>> abs((2l))\n    // (2l)\n    def abs(x : Long) : Long = {\n        if (x < 0) {\n            (-x)\n        } else {\n            x",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 1225\n    def sum_of_cubes(n : Long) : Long = {\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (n + 2) * (3 * n + 1) / 6\n        }\n    }\n\n    // Comp",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_x_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_x_x_ = y_x_ * x_\n        val x_x_x_ = x_x_ * y_\n        val y_x_x_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_x_x_ = y_x_ * x_\n        val x_x_x_ = x_x_ * y_\n        val y_x_x_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Raise x to the power of y\n    // >>> pow((2l), (3l))\n    // (8l)\n    // >>> pow((5l), (7l))\n    // (5l)\n    def pow(x : Long, y : Long) : Long = {\n        x ** y\n    }\n\n    // Compute the greatest common divisor of two numbers x and y\n    // >>> gcd((2l), (3l))\n    // (1l)\n    // >>> gcd((5l), (7l))\n    // (1l)\n    def gcd(x : Long, y : Long) : Long = {\n        x % y\n    }\n\n    // Compute the least common multiple of two numbers x and y\n    // >>> lcm((2l), (3l))\n    // (6l)\n    // >>> lcm((5l), (7l))\n    // (35l)\n    def lcm(x : Long, y : Long) : Long = {\n        x * y / gcd(x, y)\n    }\n\n    // Compute the sum of all the natural numbers below n\n    // >>>",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(10)\n    // 385\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 0\n        } else {\n            return n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(10)\n    // 12586269025\n    def sum_of_",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_x_y_ = x_x_ + y_y_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + y_x_\n        val y_x_y_ = y_x_ + x_y_\n        val x_x_y_y_ = x_x_y_ + y_y_\n        val y_y_x_y_ = y_y_x_ + x_x_\n        val x_y_x_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_ = y_x_y_x_ + x_y_\n        val x_y_x_y_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_y_ = y_x_y_x_ + x_y_\n        val x_y_x_y_y_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_y_y_ = y_x_y_x_ + x_y_\n        val x_y_x_y_y_y_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_y_y_y_ = y_x_y_x_ + x_y_\n        val x_y_x_y_y_y_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_y_y_y_ = y_x_y_x_ + x_y_\n        val x_y_x_y_y_y_y_y_",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ - y_$_\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ * y_$_\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ / y_$_\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        val n_ = n\n        val n_$_ = n_\n        if (n_$_ < 0) {\n            throw new IllegalArgumentException(\"Negative factorial not defined\")\n        }\n        if (n_$_ == 0) {\n            1l\n        } else {\n            ",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_",
    "        x + y",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Raise x to the power of y\n    // >>> pow((2l), (3l))\n    // (8l)\n    // >>> pow((5l), (7l))\n    // (5l)\n    def pow(x : Long, y : Long) : Long = {\n        x ** y\n    }\n\n    // Compute the factorial of x\n    // >>> factorial(5l)\n    // 120l\n    def factorial(x : Long) : Long = {\n        x.factorial\n    }\n\n    // Compute the sum of the digits of x\n    // >>> sumDigits(123l)\n    // 3\n    def sumDigits(x : Long) : Long = {\n        x.sumDigits\n    }\n\n    // Compute the product of the digits of x\n    // >>> prodDigits(123l)\n    // 3\n    def prodDigits(x : Long) : Long = {\n        x.prodDigits\n    }\n\n    // Compute the sum of the digits of x raised to the power y\n    // >>> sumDigitsPow(123l, 2l)\n    // 351\n    def sum",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ * y_$_\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ - y_$_\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ / y_$_\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Int) : Int = {\n        val n_ = n\n        val n_$_ = n_\n        if (n_$_ > 0) {\n            n_$_ * factorial(n_$_ - 1)\n        } else {\n            1\n        }\n    }\n\n    // Compute the sum of the squares of",
    "        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 + y_$eq$eq$eq$1",
    "        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 + y_$eq$eq$eq$1\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 - y_$eq$eq$eq$1\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 * y_$eq$eq$eq$1\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 / y_$eq$eq$eq$1\n    }\n\n    // Calculate the factorial of a number\n    ",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_x_x_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_y_ = x_y_ * x_\n        val y_y_x_y_ = y_y_ * x_\n        val x_y_y_x_ = x_y_ * y_\n        val y_y_x_x_ = y_y_ * x_\n        val x_y_y_x_y_ = x_y_ * y_\n        val y_y_x_x_y_ = y_y_ * x_\n        val x_y_y_x_y_y_ = x_y_ * y_\n        val y_y_x_x_y_y_ = y_y_ * x_\n        val x_y_y_x_y_y_y_ = x_y_ * y_\n        val y_y_x_x_y_y_y_ = y_y_ * x_\n        val x_y_y_x_y_y_y_y_ = x_y_ * y_\n        val y_y_x_x_y_y_y_y_ = y_y_ * x_\n        val x_y_y_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(10)\n    // 385\n    def sum_of_squares(n : Long) : Long = {\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(10)\n    // 12586269025\n    def sum_of_cubes(n : Long) : Long = {\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (n + 2) * (3 * n + 1) / 6\n        }\n    }\n\n",
    "        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 + y_$eq$eq$eq$1\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 - y_$eq$eq$eq$1\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 * y_$eq$eq$eq$1\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 / y_$eq$eq$eq$1\n    }\n\n    // Compute the factorial of a number\n    ",
    "        val x_plus_y = x + y\n        x_plus_y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_minus_y = x - y\n        x_minus_y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_times_y = x * y\n        x_times_y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_div_y = x / y\n        x_div_y\n    }\n\n    // Raise x to the power y\n    // >>> pow((2l), (3l))\n    // (8l)\n    // >>> pow((5l), (7l))\n    // (5l)\n    def pow(x : Long, y : Long) : Long = {\n        val x_to_y = x ** y\n        x_to_y\n    }\n\n    // Compute the factorial of x\n    // >>> factorial(5l)\n    // 120l\n    def factorial(x : Long) : Long = {\n        val factorial = 1l\n        for (i <- 1 to x) {\n            factorial *= i\n        }\n        factorial\n    }\n\n    // Compute the binomial coefficient of x and y\n    // >>> binomial(5l, 3l)\n    // 10l\n    def binomial(x : Long, y : Long) : Long = {\n",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        val x_$_$_ = x_$_\n        val y_$_$_ = y_$_\n        val x_$_$$_ = x_$_$_\n        val y_$_$$_ = y_$_$_\n        val x_$_$$$_ = x_$_$$_\n        val y_$_$$$_ = y_$_$$_\n        val x_$_$$_$_ = x_$_$$_\n        val y_$_$$_$_ = y_$_$$_\n        val x_$_$$_$$_ = x_$_$$_$_\n        val y_$_$$_$$_ = y_$_$$_$_\n        val x_$_$$_$$$_ = x_$_$$_$$_\n        val y_$_$$_$$$_ = y_$_$$_$$_\n        val x_$_$$_$$$$_ = x_$_$$_$$$$_\n        val y_$_$$_$$$$_ = y_$_$$_$$$$_\n        val x_$_$$_$$$$$_ = x_$_$$_$$$$_\n        val y_$_$$_$$$$$_ = y_$_$$_$$$$_\n        val x_$_$$_$$$$$$_ = x_$_$$_$$$$$$_\n        val y_$_$$_$$$$$$_ = y_$_$$_$$$$$$_\n        val x_$_$$_$$$$$$$$_ = x_$_$$_$$$$$$$$_\n        val y_$_$$_$$$$$$$$_ = y_$_$$_$$$$$$$$_\n        val x_$_$$_$$$$$$$$$$_ = x_$_$$_$$$$$$$$$$_\n        val y_$_$$_$$$$$$$$$$_ = y_$_$$_$$$$$$$$$$_\n        val x_$_$$_$$$$$$$$$$$$_ = x_$_$$_$$$$$$$$$$$$_\n        val y_$_$$_$$$$$$$$$$$$_ = y_$_$$_$$$$$$$$$$$$_\n",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ - y_$_\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ * y_$_\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ / y_$_\n    }\n\n    // Return the sum of all elements in a list\n    // >>> sum([1, 2, 3])\n    // 6\n    def sum(xs : List[Long]) : Long = {\n        val xs_ = xs\n        val xs_$_ = xs_\n        xs_$_ + (0l)\n    }\n\n    // Return the product of all elements in a list\n    // >>> prod([1, 2, 3])\n    // 6\n    def",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial not defined\")\n        }\n        if (n == 0) {\n            return 1\n        }\n        return n * factorial(n - 1)\n    }\n\n    // Compute the binomial coefficient of two numbers\n    // >>> binomial(5, 2)\n    // 10\n    def binomial(n : Long, k : Long) : Long = {\n        if (k < 0 || k > n) {\n            throw new IllegalArgumentException(\"k must be between 0 and n\")\n        }\n        if (k == 0 || k == n) {\n            return 1\n        }\n        return factorial(n) / (factorial(k) * factorial(n - k))\n    }\n\n    // Compute the Fibonacci sequence\n    // >>> fibonacci(5)\n    // [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89,",
    "        x + y",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_x_ = x_y_ * x_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_x_ = x_y_y_ * x_\n        val y_x_y_x_ = y_x_y_ * y_\n        val x_y_y_x_x_ = x_y_y_x_ * x_\n        val y_x_y_x_x_ = y_x_y_x_ * y_\n        val x_y_y_x_x_x_ = x_y_y_x_x_ * x_\n        val y_x_y_x_x_x_ = y_x_y_x_x_ * y_\n        val x_y_y_x_x_x_x_ = x_y_y_x_x_x_ * x_\n        val y_x_y_x_x_x_x_ = y_x_y_x_x_x_ * y_\n        val x_y_y_x_x_x_x_x_ = x_y_y_x_x_x_x_ * x_\n        val y_x_y_x_x_x_x_x_ = y_x_y_x_x_x_x_ * y_\n        val x_y_y_x_x_x_x_x_x_ = x_y_y_x_x_x_x_x_ * x_\n        val y_x_y_x_x_x_x_x_x_ = y_x_y_x_x_x_x_x_ * y_\n        val x_y_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Int) : Int = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial not defined\")\n        }\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the nth Fibonacci number\n    // >>> fibonacci(5)\n    // 8\n    def fibonacci(n : Int) : Int = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative Fibonacci not defined\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_",
    "        val x1 = x\n        val y1 = y\n        val x2 = x1 + y1\n        return x2",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345)\n    // 5\n    def sumDigits(n : Long) : Long = {\n        n % 10\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345)\n    // 5\n    def sumDigits(n : Long) : Long = {\n        n % 10\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345)\n    // 5\n    def sumDigits(n : Long) : Long = {\n        n % 10\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345)\n    // 5\n    def sumDigits(n : Long) : Long = {\n        n % 10\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345)\n    // 5\n    def sumDigits(n : Long) : Long = {\n        n % 10\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345)\n    // 5\n    def sumDigits(n : Long",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        val x_$_$_ = x_$_\n        val y_$_$_ = y_$_\n        val x_$_$_$_ = x_$_$_\n        val y_$_$_$_ = y_$_$_\n        x_$_$_$_ + y_$_$_$_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Raise x to the power y\n    // >>> pow((2l), (3l))\n    // (8l)\n    // >>> pow((5l), (7l))\n    // (5l)\n    def pow(x : Long, y : Long) : Long = {\n        x ** y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5l)\n    // (120l)\n    def factorial(n : Long) : Long = {\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5l)\n    // (55l)\n    def sum_of_squares(n : Long) : Long = {\n        n * (n + 1) * (2 * n + 1) / 6\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5l)\n    // (125l)\n    def sum_",
    "        x + y",
    "        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_x_y_ = x_x_ + y_y_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + y_x_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val x_x_y_y_ = x_x_y_ + y_y_\n        val y_x_y_y_ = y_x_y_ + x_y_\n        val x_y_y_x_ = x_y_y_ + y_x_\n        val y_x_y_x_ = y_x_y_ + x_y_\n        val x_y_y_y_ = x_y_y_ + y_y_\n        val x_y_y_x_y_ = x_y_y_ + y_y_\n        val y_x_y_x_y_ = y_x_y_ + x_y_\n        val y_x_y_y_x_ = y_x_y_ + x_y_\n        val y_x_y_y_y_ = y_x_y_ + y_y_\n        val y_x_y_y_x_y_ = y_x_y_ + y_y_\n        val x_y_y_x_y_y_ = x_y_y_ + y_y_\n        val x_y_y_y_x_y_ = x_y_y_ + y_y_\n        val x_y_y_y_y_x_y_ = x_y_y_ + y_y_\n        val x_y_y_y_y_y_x_y_ = x_y_y_ +",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 1225\n    def sum_of_cubes(n : Long) : Long = {\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (n + 2) * (3 * n + 1) / 6\n        }\n    }\n\n    // Comp",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the value of the expression (x + y) / 2\n    // >>> div_by_two((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div_by_two((5l), (7l))\n    // (0.14285714285714285)\n    def div_by_two(x : Long, y : Long) : Double = {\n        (x + y) / 2\n    }\n\n    // Compute the value of the expression (x * y) / 2\n    // >>> div_by_two((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div_by_two((5l), (7l))\n    // (0.14285714285714285)\n    def div_by_two_mul(x : Long, y : Long) : Double = {\n        (x * y) / 2\n    }\n\n    // Compute the value of the expression (x + y) / (x - y)\n    // >>> div_by_diff((2l), (3l))\n    // (2.0)\n    // >>>",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_x_y_ = x_x_ + y_y_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + y_x_\n        val y_x_y_ = y_x_ + x_y_\n        val x_x_y_y_ = x_x_y_ + y_y_\n        val y_y_x_y_ = y_y_x_ + x_x_\n        val x_y_x_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_ = y_x_y_x_ + x_y_\n        val x_y_x_y_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_y_ = y_x_y_x_ + x_y_\n        val x_y_x_y_y_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_y_y_ = y_x_y_x_ + x_y_\n        val x_y_x_y_y_y_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_y_y_y_ = y_x_y_x_ + x_y_\n        val x_y_x_y_y_y_y_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_y_y_y_y_ = y_x_y_x_ + x_y_\n        val x_y_x_y_y_y_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial\")\n        }\n        if (n == 0 || n == 1) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative sum of squares\")\n        }\n        if (n == 0 || n == 1) {\n            return 1\n        } else {\n            return n * (n + 1) * sum_of_squares(n - 1)\n        }\n    }\n\n    // Compute the sum of the first n natural numbers\n    // >>> sum(5)\n    // 15\n    def sum(n : Long) : Long =",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ - y_$_\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ * y_$_\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ / y_$_\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        val n_ = n\n        val n_$_ = n_\n        if (n_$_ > 0) {\n            n_$_ * factorial(n_$_ - 1)\n        } else {\n            1l\n        }\n    }\n\n    // Compute the sum of the squares",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_x_ = x_y_ * x_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_x_ = x_y_y_ * x_\n        val y_x_y_x_ = y_x_y_ * y_\n        val x_y_y_x_x_ = x_y_y_x_ * x_\n        val y_x_y_x_x_ = y_x_y_x_ * y_\n        val x_y_y_x_x_x_ = x_y_y_x_x_ * x_\n        val y_x_y_x_x_x_ = y_x_y_x_x_ * y_\n        val x_y_y_x_x_x_x_ = x_y_y_x_x_x_ * x_\n        val y_x_y_x_x_x_x_ = y_x_y_x_x_x_ * y_\n        val x_y_y_x_x_x_x_x_ = x_y_y_x_x_x_x_ * x_\n        val y_x_y_x_x_x_x_x_ = y_x_y_x_x_x_x_ * y_\n        val x_y_y_x_x_x_x_x_x_ = x_y_y_x_x_x_x_x_ * x_\n        val y_x_y_x_x_x_x_x_x_ = y_x_y_x_x_x_x_x_ * y_\n        val x_y_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n <= 1) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(10)\n    // 385\n    def sum_of_squares(n : Long) : Long = {\n        if (n <= 1) {\n            0\n        } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(10)\n    // 12586269025\n    def sum_of_cubes(n : Long) : Long = {\n        if (n <= 1) {\n            0\n        } else {\n            n * (n + 1) * (n + 2) * (3 * n + 1) / 6\n        }\n    }\n\n",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs((-2l))\n    // (2l)\n    // >>> abs((2l))\n    // (2l)\n    def abs(x : Long) : Long = {\n        if (x < 0) {\n            -x\n        } else {\n            x\n",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Raise x to the power of y\n    // >>> pow((2l), (3l))\n    // (8l)\n    // >>> pow((5l), (7l))\n    // (5l)\n    def pow(x : Long, y : Long) : Long = {\n        x ** y\n    }\n\n    // Compute the greatest common divisor of two numbers x and y\n    // >>> gcd((2l), (3l))\n    // (1l)\n    // >>> gcd((5l), (7l))\n    // (1l)\n    def gcd(x : Long, y : Long) : Long = {\n        x % y\n    }\n\n    // Compute the least common multiple of two numbers x and y\n    // >>> lcm((2l), (3l))\n    // (6l)\n    // >>> lcm((5l), (7l))\n    // (35l)\n    def lcm(x : Long, y : Long) : Long = {\n        x * y / gcd(x, y)\n    }\n\n    // Compute the square root of a number x\n    // >>> sqrt",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_",
    "        val x_ = x\n        val y_ = y\n        val x__$1 = x_\n        val y__$1 = y_\n        x__$1 + y__$1",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_x_ = x_y_ * x_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_x_ = x_y_y_ * x_\n        val y_x_y_x_ = y_x_y_ * y_\n        val x_y_y_x_x_ = x_y_y_x_ * x_\n        val y_x_y_x_x_ = y_x_y_x_ * y_\n        val x_y_y_x_x_x_ = x_y_y_x_x_ * x_\n        val y_x_y_x_x_x_ = y_x_y_x_x_ * y_\n        val x_y_y_x_x_x_x_ = x_y_y_x_x_x_ * x_\n        val y_x_y_x_x_x_x_ = y_x_y_x_x_x_ * y_\n        val x_y_y_x_x_x_x_x_ = x_y_y_x_x_x_x_ * x_\n        val y_x_y_x_x_x_x_x_ = y_x_y_x_x_x_x_ * y_\n        val x_y_y_x_x_x_x_x_x_ = x_y_y_x_x_x_x_x_ * x_\n        val y_x_y_x_x_x_x_x_x_ = y_x_y_x_x_x_x_x_ * y_\n        val x_y_",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        val x__$1 = x_$_\n        val y__$1 = y_$_\n        val x__$2 = x__$1\n        val y__$2 = y__$1\n        val x__$3 = x__$2\n        val y__$3 = y__$2\n        val x__$4 = x__$3\n        val y__$4 = y__$3\n        val x__$5 = x__$4\n        val y__$5 = y__$4\n        val x__$6 = x__$5\n        val y__$6 = y__$5\n        val x__$7 = x__$6\n        val y__$7 = y__$6\n        val x__$8 = x__$7\n        val y__$8 = y__$7\n        val x__$9 = x__$8\n        val y__$9 = y__$8\n        val x__$10 = x__$9\n        val y__$10 = y__$9\n        val x__$11 = x__$10\n        val y__$11 = y__$10\n        val x__$12 = x__$11\n        val y__$12 = y__$11\n        val x__$13 = x__$12\n        val y__$13 = y__$12\n        val x__$14 = x__$13\n        val y__$14 = y__$13\n        val x__$15 = x__$14\n        val y__$15 = y__$14\n        val x__$16 = x__$15\n        val y__$16 = y__$15\n        val x__$17 = x__$16\n        val y__$17 = y__$16\n        val x__$18 = x__$17\n        val y__$18 = y__$17\n        val x__$19 = x__$18\n        val y__$19 = y__$18\n        val x__$20 = x__$19\n        val y__$20 = y__$",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_x_y_ = x_x_ + y_y_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + y_x_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ =",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_x_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_y_ = x_y_x_ * y_\n        val y_x_y_x_ = y_x_y_ * x_\n        val x_y_y_x_ = x_y_y_ * y_\n        val y_x_y_y_ = y_x_y_ * y_\n        val x_y_y_x_y_ = x_y_y_x_ * y_\n        val y_x_y_y_x_ = y_x_y_y_ * x_\n        val x_y_y_y_x_ = x_y_y_y_ * y_\n        val y_x_y_y_y_ = y_x_y_y_ * y_\n        val x_y_y_y_y_ = x_y_y_y_ * y_\n        val y_x_y_y_y_ = y_x_y_y_ * y_\n        val x_y_y_y_y_ = x_y_y_y_ * y_\n        val y_x_y_y_y_ = y_x_y_y_ * y_\n        val x_y_y_y_y_ = x_y_y_y_ * y_\n        ",
    "        x + y",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs((-2l))\n    // (2l)\n    // >>> abs((2l))\n    // (2l)\n    def abs(x : Long) : Long = {\n        if (x < 0) {\n            -x\n        } else {\n            x\n",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial not defined\")\n        }\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the binomial coefficient of a number n and k\n    // >>> binomial(5, 2)\n    // 10\n    def binomial(n : Long, k : Long) : Long = {\n        if (n < 0 || k < 0 || k > n) {\n            throw new IllegalArgumentException(\"Negative binomial coefficient not defined\")\n        }\n        if (k == 0 || k == n) {\n            1\n        } else {\n            mul(factorial(n), sub(factorial(k), factorial(n - k)))\n        }\n    }\n\n    // Compute the Fibonacci sequence\n    // >>> fibonacci(5)\n    // (0, 1, 1, 2, 3",
    "        x + y",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the first n natural numbers\n    // >>> sum(0)\n    // 0\n    // >>> sum(1)\n    // 1\n    // >>> sum(10)\n    // 55\n    def sum(n : Long) : Long = {\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) / 2\n        }\n    }\n\n    // Compute the product of the first n natural numbers\n    // >>> product(1)\n    // 1\n    // >>> product(2)\n    // 2\n    // >>> product(10)\n    // 3628800\n    def product(n : Long) : Long = {\n        if (n == 0) {\n            1\n        } else {\n            n * product(n - 1)\n        }\n    }\n\n    // Comp",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a positive integer\")\n        }\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a positive integer\")\n        }\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 10\n    def sum_of_cubes(n : Long) :",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_x_y_ = x_x_ + y_y_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + y_x_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val x_y_x_y_ = x_y_x_ + y_x_y_\n        val y_x_y_x_ = y_x_y_ + x_y_x_\n        val y_x_y_y_ = y_x_y_ + x_y_y_\n        val y_x_y_x_y_ = y_x_y_x_ + x_y_y_y_\n        val x_y_y_x_y_ = x_y_y_x_ + y_x_y_x_\n        val x_y_y_y_x_ = x_y_y_x_ + y_x_y_y_\n        val x_y_y_x_y_y_ = x_y_y_x_y_ + y_x_y_y_\n        val x_y_y_x_y_y_x_ = x_y_y_x_y_y_ + y_x_y_y_\n        val y_x_y_x_y_y_x_ = y_x_y_x_y_y_ + x_y_y_x_\n        val y_x_y_x_y_y_y_ = y_x_y_x_y_y_ + x_y_y_x_\n        val y_x_y_x_y_y_y_x_ = y_x_y_x_y_y_",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ - y_$_\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ * y_$_\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ / y_$_\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        val n_ = n\n        val n_$_ = n_\n        if (n_$_ > 0) {\n            n_$_ * factorial(n_$_ - 1)\n        } else {\n            1l\n        }\n    }\n\n    // Compute the sum of the squares",
    "        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 + y_$eq$eq$eq$1\n    }\n\n    // Subtract two numbers x and y\n    // >>> subtract((2l), (3l))\n    // (-1l)\n    // >>> subtract((5l), (7l))\n    // (-4l)\n    def subtract(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 - y_$eq$eq$eq$1\n    }\n\n    // Multiply two numbers x and y\n    // >>> multiply((2l), (3l))\n    // (6l)\n    // >>> multiply((5l), (7l))\n    // (35l)\n    def multiply(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 * y_$eq$eq$eq$1\n    }\n\n    // Divide two numbers x and y\n    // >>> divide((2l), (3l))\n    // (0.6666666666666666)\n    // >>> divide((5l), (7l))\n    // (0.14285714285714285)\n    def divide(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 / y_$eq$eq$eq$1\n    }\n\n    // Sum all elements of a list\n    // >>>",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ - y_$_\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ * y_$_\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ / y_$_\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Int) : Int = {\n        val n_ = n\n        val n_$_ = n_\n        if (n_$_ > 0) {\n            n_$_ * factorial(n_$_ - 1)\n        } else {\n            1\n        }\n    }\n\n    // Compute the sum of the squares of",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ - y_$_\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ * y_$_\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ / y_$_\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Int) : Int = {\n        val n_ = n\n        val n_$_ = n_\n        if (n_$_ > 0) {\n            n_$_ * factorial(n_$_ - 1)\n        } else {\n            1\n        }\n    }\n\n    // Compute the sum of the squares of",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_x_ = x_ * y_x_\n        val y_x_y_ = y_ * x_y_\n        val x_x_y_ = x_ * x_y_\n        val y_y_x_ = y_ * y_x_\n        val x_x_y_y_ = x_ * x_y_y_\n        val y_x_y_x_ = y_ * x_y_x_\n        val x_y_x_y_ = x_ * y_x_y_\n        val y_y_x_y_ = y_ * y_x_y_\n        val x_y_y_x_ = x_ * y_y_x_\n        val y_y_y_x_ = y_ * y_y_x_\n        val x_y_y_y_ = x_ * y_y_y_\n        val y_y_y_y_ = y_ * y_y_y_\n        val x_y_y_y_y_ = x_ * y_y_y_y_\n        val y_y_y_y_y_ = y_ * y_y_y_y_\n        val x_y_y_y_y_y_ = x_ * y_y_y_y_y_\n        val y_y_y_y_y_y_ = y_ * y_y_y_y_y_\n        val x_y_y_y_y_y_y_ = x_ * y_y_y_y_y_y_\n        val y_y_y_y_y_y_y_ = y_ * y_y_y_y_y_y_\n        val x_y_y_y_y_y_y_y_ = x_ * y_y_y_y_y_y_y_",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_\n    }\n\n    // Multiply two numbers x and y\n    // >>> mult((2l), (3l))\n    // (6l)\n    // >>> mult((5l), (7l))\n    // (35l)\n    def mult(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ * y_$_\n    }\n\n    // Return the sum of the squares of the numbers 1..n\n    // >>> sum_of_squares(10)\n    // 385\n    def sum_of_squares(n : Int) : Int = {\n        val n_ = n\n        val n_$_ = n_\n        n_$_ * n_$_\n    }\n\n    // Return the square of the sum of the even numbers from 2..n\n    // >>> square_of_sum(10)\n    // 1225\n    def square_of_sum(n : Int) : Int = {\n        val n_ = n\n        val n_$_ = n_\n        n_$_ * n_$_\n    }\n\n    // Return the sum of the squares of the numbers 1..n\n    // >>> sum_of_squares(10)\n    // 385\n    def sum_of_squares(n : Int) : Int = {\n        val n_ = n\n        val n_$_ = n_\n        n_$_ * n_$_\n    }\n\n    // Return the square of the sum of the even numbers from 2..n\n    // >>> square_of_sum(10)\n    // 1225\n    def square_of_sum(n : Int) : Int = {\n        val n_ = n\n        val n_$_ = n_\n        n_$_ * n_$_\n    }\n\n    // Return the sum of the squares of the numbers 1..n\n    // >>> sum_of_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs((-2l))\n    // (2l)\n    // >>> abs((2l))\n    // (2l)\n    def abs(x : Long) : Long = {\n        if (x < 0) {\n            -x\n        } else {\n            x\n",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Raise x to the power of y\n    // >>> pow((2l), (3l))\n    // (8l)\n    // >>> pow((5l), (7l))\n    // (5l)\n    def pow(x : Long, y : Long) : Long = {\n        x ** y\n    }\n\n    // Compute the factorial of x\n    // >>> factorial(5l)\n    // 120l\n    def factorial(x : Long) : Long = {\n        x * factorial(x - 1)\n    }\n\n    // Compute the sum of the first n natural numbers\n    // >>> sum(1l, 10l)\n    // 55l\n    def sum(start : Long, end : Long) : Long = {\n        sum(start, end - 1) + start\n    }\n\n    // Compute the product of the first n natural numbers\n    // >>> product(1l, 10l)\n    // 3628800l\n    def product(start : Long, end : Long) : Long = {\n        mul(factorial(end), product(start, end - 1))\n    }\n\n    // Compute the sum of the",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial\")\n        }\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative sum of squares\")\n        }\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 125\n    def sum_of_cubes(n : Long) : Long = {",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Raise x to the power of y\n    // >>> pow((2l), (3l))\n    // (8l)\n    // >>> pow((5l), (7l))\n    // (5l)\n    def pow(x : Long, y : Long) : Long = {\n        x ** y\n    }\n\n    // Compute the factorial of x\n    // >>> factorial(5l)\n    // 120l\n    def factorial(x : Long) : Long = {\n        x * factorial(x - 1)\n    }\n\n    // Compute the Fibonacci sequence\n    // >>> fibonacci(10l)\n    // 55l\n    def fibonacci(x : Long) : Long = {\n        if (x < 2l) {\n            x\n        } else {\n            fibonacci(x - 1) + fibonacci(x - 2)\n        }\n    }\n\n    // Compute the sum of the squares of the first ten natural numbers\n    // >>> sum_of_squares(10l)\n    // 385l\n    def sum_of_squares(x : Long) : Long = {\n        x",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(10)\n    // 385\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 0\n        } else {\n            return n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(10)\n    // 12586269025\n    def sum_of_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs(-2l)\n    // (2l)\n    // >>> abs(2l)\n    // (2l)\n    // >>> abs(-5l)\n    // (5l)\n    def abs(x : Long) : Long = {\n        if (x < 0",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial not defined\")\n        }\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative sum of squares not defined\")\n        }\n        if (n == 0) {\n            return 0\n        } else {\n            return n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 125\n    def sum_of_cubes(",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ - y_$_\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ * y_$_\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ / y_$_\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        val n_ = n\n        val n_$_ = n_\n        if (n_$_ > 0) {\n            n_$_ * factorial(n_$_ - 1)\n        } else {\n            1l\n        }\n    }\n\n    // Compute the sum of the squares",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ - y_$_\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ * y_$_\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ / y_$_\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        val n_ = n\n        val n_$_ = n_\n        if (n_$_ > 0) {\n            n_$_ * factorial(n_$_ - 1)\n        } else {\n            1l\n        }\n    }\n\n    // Compute the sum of the squares",
    "        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 + y_$eq$eq$eq$1",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial not defined\")\n        }\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative sum of squares not defined\")\n        }\n        if (n == 0) {\n            return 0\n        } else {\n            return n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 125\n    def sum_of_cubes(",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the sum of all elements in the list\n    // >>> sum([1, 2, 3])\n    // (6)\n    def sum(xs : List[Long]) : Long = {\n        xs.reduce(_.add)\n    }\n\n    // Return the product of all elements in the list\n    // >>> prod([1, 2, 3])\n    // (6)\n    def prod(xs : List[Long]) : Long = {\n        xs.reduce(_.mul)\n    }\n\n    // Return the maximum element in the list\n    // >>> max([1, 2, 3])\n    // (3)\n    def max(xs : List[Long]) : Long = {\n        xs.reduce(_.max)\n    }\n\n    // Return the minimum element in the list\n    // >>> min([1, 2, 3])\n    // (1)\n    def min(xs : List[Long]) : Long = {\n        xs.reduce(_.min)\n    }\n\n    // Return the factorial of the number x\n    // >>> factorial(5)\n    // (120)\n    def factorial(x : Long) : Long = {",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial not defined\")\n        }\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative sum of squares not defined\")\n        }\n        if (n == 0) {\n            return 0\n        } else {\n            return n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 1023\n    def sum_of_cubes",
    "        x + y",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ - y_$_\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ * y_$_\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ / y_$_\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        val n_ = n\n        val n_$_ = n_\n        n_$_ * n_$_\n    }\n\n    // Compute the sum of the first n natural numbers\n    // >>> sum(0)\n    // 0\n    // >>> sum(1)\n    // 1\n    //",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_x_ = x_y_ * x_\n        val y_x_y_ = y_x_ * y_\n        val x_x_y_ = x_x_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_x_y_y_ = x_x_y_ * y_\n        val y_x_y_x_ = y_x_y_ * x_\n        val x_y_x_y_ = x_y_x_ * y_\n        val y_y_x_x_ = y_y_x_ * x_\n        val x_y_x_y_y_ = x_y_x_y_ * y_\n        val y_y_x_x_y_ = y_y_x_x_ * y_\n        val x_y_x_y_y_y_ = x_y_x_y_y_ * y_\n        val y_y_x_y_y_x_ = y_y_x_y_y_ * x_\n        val x_y_x_y_y_x_x_ = x_y_x_y_y_ * x_\n        val y_y_x_y_y_x_x_x_ = y_y_x_y_y_ * x_x_\n        val x_y_x_y_y_x_x_x_x_ = x_y_x_y_y_ * x_x_x_\n        val y_y_x_y_y_x_x_x_x_x_ = y_y_x_y_y_ * x_x_x_x_\n        val x_y_x_y_y_x_x_x_x_x_x_ = x_y_x_y_y_ * x_",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_x_y_ = x_x_ + y_y_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + y_x_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_x_y_ =",
    "        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 + y_$eq$eq$eq$1",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_x_ = x_ * y_x_\n        val y_x_y_ = y_ * x_y_\n        val x_x_y_ = x_ * x_y_\n        val y_y_x_ = y_ * y_x_\n        val x_y_x_y_ = x_ * y_x_y_\n        val y_x_y_y_ = y_ * x_y_y_\n        val x_x_y_y_ = x_ * x_y_y_\n        val y_y_x_y_ = y_ * y_x_y_\n        val x_y_x_y_y_ = x_ * y_x_y_y_\n        val y_x_y_y_y_ = y_ * x_y_y_y_\n        val x_y_x_y_y_y_ = x_ * y_x_y_y_y_\n        val y_x_y_y_y_y_ = y_ * x_y_y_y_y_\n        val x_y_x_y_y_y_y_ = x_ * y_x_y_y_y_y_\n        val y_x_y_y_y_y_y_ = y_ * x_y_y_y_y_y_\n        val x_y_x_y_y_y_y_y_ = x_ * y_x_y_y_y_y_y_\n        val y_x_y_y_y_y_y_y_ = y_ * x_y_y_y_y_y_y_\n        val x_y_x_y_y_y_y_y_ = x_ * y_x_y_y_y_y_y_\n        val y_x_y_y",
    "        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 + y_$eq$eq$eq$1",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Sum all elements of a list\n    // >>> sum([1, 2, 3])\n    // 6\n    def sum(xs : List[Long]) : Long = {\n        xs.reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123\")\n    // 6\n    def sum(s : String) : Long = {\n        s.chars().reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123\")\n    // 6\n    def sum(s : String) : Long = {\n        s.chars().reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123\")\n    // 6\n    def sum(s : String) : Long = {\n        s.chars().reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123\")\n    // 6\n    def sum(s : String) : Long = {\n        s.chars().reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial not defined\")\n        }\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the binomial coefficient of two numbers\n    // >>> binomial(5, 2)\n    // 10\n    def binomial(n : Long, k : Long) : Long = {\n        if (n < 0 || k < 0 || k > n) {\n            throw new IllegalArgumentException(\"Negative binomial coefficient not defined\")\n        }\n        if (k == 0) {\n            1\n        } else if (k == 1) {\n            n\n        } else {\n            factorial(n) / (factorial(k) * factorial(n - k))\n        }\n    }\n\n    // Compute the Fibonacci sequence\n    // >>> fibonacci(5)\n    // [0, 1,",
    "        x + y",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_x_y_ = x_x_ + y_y_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + y_x_\n        val y_x_y_ = y_x_ + x_y_\n        val x_x_y_y_ = x_x_y_ + y_y_\n        val y_y_x_x_ = y_y_x_ + x_x_\n        val x_y_x_y_ = x_y_x_ + y_x_\n        val y_x_y_x_ = y_x_y_ + x_y_\n        val x_y_y_x_ = x_y_y_ + y_x_\n        val x_x_y_y_ = x_x_y_ + y_y_\n        val y_x_y_y_ = y_x_y_ + x_y_\n        val x_y_y_x_ = x_y_y_ + y_x_\n        val y_x_y_x_ = y_x_y_ + x_y_\n        val x_y_y_y_ = x_y_y_ + y_y_\n        val y_x_y_y_ = y_x_y_ + x_y_\n        val x_y_y_y_ = x_y_y_ + y_y_\n        val y_x_y_y_ = y_x_y_ + x_y_\n        val x_y_y_y_ = x_y_y_ + y_y_\n        val y_x_y_y_ = y_x_y_ + x_y_\n        val x_y_y_y_ = x_y_y_ + y_y_\n        val",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 1023\n    def sum_of_cubes(n : Long) : Long = {\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (n + 2) * (3 * n + 1) / 6\n        }\n    }\n\n    // Comp",
    "        x + y",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial not defined\")\n        }\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative sum of squares not defined\")\n        }\n        if (n == 0) {\n            return 0\n        } else {\n            return n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 1023\n    def sum_of_cubes",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the sum of all elements in a list\n    // >>> sum([1, 2, 3])\n    // 6\n    def sum(xs : List[Long]) : Long = {\n        xs.reduce(_.add)\n    }\n\n    // Return the product of all elements in a list\n    // >>> prod([1, 2, 3])\n    // 6\n    def prod(xs : List[Long]) : Long = {\n        xs.reduce(_.mul)\n    }\n\n    // Return the maximum element in a list\n    // >>> max([1, 2, 3])\n    // 3\n    def max(xs : List[Long]) : Long = {\n        xs.reduce(_.max)\n    }\n\n    // Return the minimum element in a list\n    // >>> min([1, 2, 3])\n    // 1\n    def min(xs : List[Long]) : Long = {\n        xs.reduce(_.min)\n    }\n\n    // Return the mean of all elements in a list\n    // >>> mean([1, 2, 3])\n    // 2.0\n    def mean(xs : List[Long]) : Double = {\n        xs",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_x_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs((-2l))\n    // (2l)\n    // >>> abs((2l))\n    // (2l)\n    def abs(x : Long) : Long = {\n        if (x < 0) {\n            (-x)\n        } else {\n            x",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0\n        } else {\n            return n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sumOfCubes(10)\n    // 12586269025\n    def sumOfCubes(n",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs((-2l))\n    // (2l)\n    // >>> abs((2l))\n    // (2l)\n    def abs(x : Long) : Long = {\n        if (x < 0) {\n            -x\n        } else {\n            x\n",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Int) : Int = {\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Int) : Int = {\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 1225\n    def sum_of_cubes(n : Int) : Int = {\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (n + 2) * (3 * n + 1) / 6\n        }\n    }\n\n    // Comp",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a positive integer\")\n        }\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a positive integer\")\n        }\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 1023\n    def sum_of_cubes(n : Long)",
    "        val x_plus_y = x + y\n        return x_plus_y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_minus_y = x - y\n        return x_minus_y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_times_y = x * y\n        return x_times_y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_div_y = x / y\n        return x_div_y\n    }\n\n    // Raise x to the power of y\n    // >>> pow((2l), (3l))\n    // (8l)\n    // >>> pow((5l), (7l))\n    // (5l)\n    def pow(x : Long, y : Long) : Long = {\n        val x_to_y = x ** y\n        return x_to_y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        val x_max_y = x > y ? x : y\n        return x_max_y\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3",
    "        x + y",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs(2l)\n    // (2l)\n    // >>> abs(-2l)\n    // (2l)\n    def abs(x : Long) : Long = {\n        if (x < 0) {\n            -x\n        } else {\n            x\n        ",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_ * y_ * y_\n        val y_x_x_ = y_ * x_ * x_\n        val x_x_y_ = x_ * x_ * y_\n        val y_y_x_ = y_ * y_ * x_\n        val x_y_x_ = x_ * y_ * x_\n        val y_x_y_ = y_ * x_ * y_\n        val x_x_y_y_ = x_ * x_ * y_ * y_\n        val y_y_x_x_ = y_ * y_ * x_ * x_\n        val x_y_x_y_ = x_ * y_ * x_ * y_\n        val y_x_y_x_ = y_ * x_ * y_ * x_\n        val x_y_y_x_ = x_ * y_ * y_ * x_\n        val y_x_y_y_ = y_ * x_ * y_ * y_\n        val x_y_y_x_x_ = x_ * y_ * y_ * x_ * x_\n        val y_x_y_x_y_ = y_ * x_ * y_ * x_ * y_\n        val x_y_x_y_y_ = x_ * y_ * x_ * y_ * y_\n        val y_x_y_y_x_x_ = y_ * x_ * y_ * y_ * x_ * x_\n        val x_y_y_x_x_y_ = x_ * y_ * y_ * x_ * x_ * y_\n        val y_x_y_x_y_y_ = y_ * x_ * y_ * x_ * y_ * y_\n        val x_y_y_x_y_y_x_ =",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_x_ = x_y_ * x_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_y_x_ = x_y_y_ * x_\n        val y_x_y_x_ = y_x_y_ * y_\n        val x_y_y_x_x_ = x_y_y_x_ * x_\n        val y_x_y_x_x_ = y_x_y_x_ * y_\n        val x_y_y_x_x_x_ = x_y_y_x_x_ * x_\n        val y_x_y_x_x_x_ = y_x_y_x_x_ * y_\n        val x_y_y_x_x_x_x_ = x_y_y_x_x_x_ * x_\n        val y_x_y_x_x_x_x_ = y_x_y_x_x_x_ * y_\n        val x_y_y_x_x_x_x_x_ = x_y_y_x_x_x_x_ * x_\n        val y_x_y_x_x_x_x_x_ = y_x_y_x_x_x_x_ * y_\n        val x_y_y_x_x_x_x_x_x_ = x_y_y_x_x_x_x_x_ * x_\n        val y_x_y_x_x_x_x_x_x_ = y_x_y_x_x_x_x_x_ * y_\n        val x_y_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n <= 1) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n <= 1) {\n            1\n        } else {\n            n * (n + 1) * sum_of_squares(n - 1)\n        }\n    }\n\n    // Compute the sum of the first n natural numbers\n    // >>> sum(5)\n    // 15\n    def sum(n : Long) : Long = {\n        if (n <= 1) {\n            1\n        } else {\n            n * (n + 1) / 2\n        }\n    }\n\n    // Compute the product of the first n natural numbers\n    // >>> product(5)\n    // 120\n    def product(",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs((-2l))\n    // (2l)\n    // >>> abs((2l))\n    // (2l)\n    def abs(x : Long) : Long = {\n        if (x < 0) {\n            -x\n        } else {\n            x\n",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(10)\n    // 385\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 0\n        } else {\n            return n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(10)\n    // 12586269025\n    def sum_of_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the sum of all elements in a list\n    // >>> sum([1, 2, 3])\n    // 6\n    def sum(xs : List[Long]) : Long = {\n        xs.reduce(_.add)\n    }\n\n    // Return the product of all elements in a list\n    // >>> prod([1, 2, 3])\n    // 6\n    def prod(xs : List[Long]) : Long = {\n        xs.reduce(_.mul)\n    }\n\n    // Return the maximum element in a list\n    // >>> max([1, 2, 3])\n    // 3\n    def max(xs : List[Long]) : Long = {\n        xs.reduce(_.max)\n    }\n\n    // Return the minimum element in a list\n    // >>> min([1, 2, 3])\n    // 1\n    def min(xs : List[Long]) : Long = {\n        xs.reduce(_.min)\n    }\n\n    // Return the average of all elements in a list\n    // >>> avg([1, 2, 3])\n    // 2.0\n    def avg(xs : List[Long]) : Double = {\n        xs",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs((-2l))\n    // (2l)\n    // >>> abs((2l))\n    // (2l)\n    def abs(x : Long) : Long = {\n        if (x < 0) {\n            -x\n        } else {\n            x\n",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ - y_$_\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ * y_$_\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ / y_$_\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_x_y_ = x_x_ + y_y_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + y_x_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val x_y_x_y_ = x_y_x_ + y_y_\n        val y_x_y_x_ = y_x_y_ + x_y_\n        val y_x_y_y_ = y_x_y_ + x_y_\n        val x_y_y_x_y_ = x_y_y_ + y_y_\n        val x_y_y_x_y_y_ = x_y_y_x_y_ + y_y_\n        val x_y_y_x_y_y_y_ = x_y_y_x_y_y_ + y_y_\n        val x_y_y_x_y_y_y_y_ = x_y_y_x_y_y_y_ + y_y_\n        val x_y_y_x_y_y_y_y_y_ = x_y_y_x_y_y_y_y_ + y_y_\n        val x_y_y_x_y_y_y_y_y_y_ = x_y_y_x_y_y_y_y_y_ + y_y_\n        val x_y_y_x_y_y_y_y_y_y_y_ = x_y_y_x_y_y_y_y_y_y_ + y_y_\n        val x_y_y_x_y",
    "        val x1 = x\n        val y1 = y\n        val x2 = x1\n        val y2 = y1\n        val x3 = x2\n        val y3 = y2\n        val x4 = x3\n        val y4 = y3\n        val x5 = x4\n        val y5 = y4\n        val x6 = x5\n        val y6 = y5\n        val x7 = x6\n        val y7 = y6\n        val x8 = x7\n        val y8 = y7\n        val x9 = x8\n        val y9 = y8\n        val x10 = x9\n        val y10 = y9\n        val x11 = x10\n        val y11 = y10\n        val x12 = x11\n        val y12 = y11\n        val x13 = x12\n        val y13 = y12\n        val x14 = x13\n        val y14 = y13\n        val x15 = x14\n        val y15 = y14\n        val x16 = x15\n        val y16 = y15\n        val x17 = x16\n        val y17 = y16\n        val x18 = x17\n        val y18 = y17\n        val x19 = x18\n        val y19 = y18\n        val x20 = x19\n        val y20 = y19\n        val x21 = x20\n        val y21 = y20\n        val x22 = x21\n        val y22 = y21\n        val x23 = x22\n        val y23 = y22\n        val x24 = x23\n        val y24 = y23\n        val x25 = x24\n        val y25 = y24\n        val x26 = x25\n        val y26 = y25\n        val x27 = x26\n        val y27 = y26\n        val x28 = x27\n        val y28 = y27\n        val x29 = x28\n        val y29 = y28\n        val x30 = x29\n        val y30 = y29\n        val x31 = x30\n        val y31 = y30\n        val x32 = x31\n        val y32 = y31\n        val",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(10)\n    // 385\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            return 0\n        } else {\n            return n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(10)\n    // 12586269025\n    def sum_of_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial not defined\")\n        }\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative sum of squares not defined\")\n        }\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 1225\n    def sum_of_cubes(n : Long",
    "        val x1 = x.toInt\n        val y1 = y.toInt\n        val x2 = x1.toInt\n        val y2 = y1.toInt\n        val x3 = x2.toInt\n        val y3 = y2.toInt\n        val x4 = x3.toInt\n        val y4 = y3.toInt\n        val x5 = x4.toInt\n        val y5 = y4.toInt\n        val x6 = x5.toInt\n        val y6 = y5.toInt\n        val x7 = x6.toInt\n        val y7 = y6.toInt\n        val x8 = x7.toInt\n        val y8 = y7.toInt\n        val x9 = x8.toInt\n        val y9 = y8.toInt\n        val x10 = x9.toInt\n        val y10 = y9.toInt\n        val x11 = x10.toInt\n        val y11 = y10.toInt\n        val x12 = x11.toInt\n        val y12 = y11.toInt\n        val x13 = x12.toInt\n        val y13 = y12.toInt\n        val x14 = x13.toInt\n        val y14 = y13.toInt\n        val x15 = x14.toInt\n        val y15 = y14.toInt\n        val x16 = x15.toInt\n        val y16 = y15.toInt\n        val x17 = x16.toInt\n        val y17 = y16.toInt\n        val x18 = x17.toInt\n        val y18 = y17.toInt\n        val x19 = x18.toInt\n        val y19 = y18.toInt\n        val x20 = x19.toInt\n        val y20 = y19.toInt\n        val x21 = x20.toInt\n        val y21 = y20.toInt\n        val x22 = x21.toInt\n        val y22 = y21.toInt\n        val x23 = x22.toInt\n        val y23 = y22.toInt\n        val x24 = x23.",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(10)\n    // 385\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0\n        } else {\n            return n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(10)\n    // 12586269025\n    def",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs((-2l))\n    // (2l)\n    // >>> abs((2l))\n    // (2l)\n    def abs(x : Long) : Long = {\n        if (x < 0) {\n            -x\n        } else {\n            x\n",
    "        val x1 = x\n        val y1 = y\n        val x2 = x1\n        val y2 = y1\n        val x3 = x2\n        val y3 = y2\n        val x4 = x3\n        val y4 = y3\n        val x5 = x4\n        val y5 = y4\n        val x6 = x5\n        val y6 = y5\n        val x7 = x6\n        val y7 = y6\n        val x8 = x7\n        val y8 = y7\n        val x9 = x8\n        val y9 = y8\n        val x10 = x9\n        val y10 = y9\n        val x11 = x10\n        val y11 = y10\n        val x12 = x11\n        val y12 = y11\n        val x13 = x12\n        val y13 = y12\n        val x14 = x13\n        val y14 = y13\n        val x15 = x14\n        val y15 = y14\n        val x16 = x15\n        val y16 = y15\n        val x17 = x16\n        val y17 = y16\n        val x18 = x17\n        val y18 = y17\n        val x19 = x18\n        val y19 = y18\n        val x20 = x19\n        val y20 = y19\n        val x21 = x20\n        val y21 = y20\n        val x22 = x21\n        val y22 = y21\n        val x23 = x22\n        val y23 = y22\n        val x24 = x23\n        val y24 = y23\n        val x25 = x24\n        val y25 = y24\n        val x26 = x25\n        val y26 = y25\n        val x27 = x26\n        val y27 = y26\n        val x28 = x27\n        val y28 = y27\n        val x29 = x28\n        val y29 = y28\n        val x30 = x29\n        val y30 = y29\n        val x31 = x30\n        val y31 = y30\n        val x32 = x31\n        val y32 = y31\n        val",
    "        x + y",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ * y_$_\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ - y_$_\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ / y_$_\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        val n_ = n\n        val n_$_ = n_\n        if (n_$_ > 0) {\n            n_$_ * factorial(n_$_ - 1)\n        } else {\n            1l\n        }\n    }\n\n    // Compute the sum of the squares",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_x_ = x_ * y_x_\n        val y_x_y_ = y_ * x_y_\n        val x_y_y_ = x_ * y_y_\n        val y_x_y_ = y_ * x_y_\n        val x_y_y_x_ = x_ * y_y_x_\n        val y_x_y_x_ = y_ * x_y_x_\n        val x_y_y_x_x_ = x_ * y_y_x_x_\n        val y_x_y_x_x_ = y_ * x_y_x_x_\n        val x_y_y_x_x_x_ = x_ * y_y_x_x_x_\n        val y_x_y_x_x_x_ = y_ * x_y_x_x_x_\n        val x_y_y_x_x_x_x_ = x_ * y_y_x_x_x_x_\n        val y_x_y_x_x_x_x_ = y_ * x_y_x_x_x_x_\n        val x_y_y_x_x_x_x_x_ = x_ * y_y_x_x_x_x_x_\n        val y_x_y_x_x_x_x_x_x_ = y_ * x_y_x_x_x_x_x_x_\n        val x_y_y_x_x_x_x_x_x_x_ = x_ * y_y_x_x_x_x_x_x_x_\n        val y_x_y_x_x_x_x_x_x_x_x_ = y_ * x_y_x_x_x_x",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Sum of all elements in a list\n    // >>> sum([1, 2, 3])\n    // 6\n    def sum(xs : List[Long]) : Long = {\n        xs.reduce(_.add)\n    }\n\n    // Product of all elements in a list\n    // >>> prod([1, 2, 3])\n    // 6\n    def prod(xs : List[Long]) : Long = {\n        xs.reduce(_.mul)\n    }\n\n    // Sum of squares of all elements in a list\n    // >>> sumSq([1, 2, 3])\n    // 14\n    def sumSq(xs : List[Long]) : Long = {\n        xs.reduce(_.mul)\n    }\n\n    // Product of squares of all elements in a list\n    // >>> prodSq([1, 2, 3])\n    // 14\n    def prodSq(xs : List[Long]) : Long = {\n        xs.reduce(_.mul)\n    }\n\n    // Sum of all elements in a stream\n    // >>> sum(Stream.of(1, 2, 3))\n    // 6\n    def sum(xs : Stream",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_x_ = x_y_ * x_\n        val y_x_y_ = y_x_ * y_\n        val x_x_y_ = x_x_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_x_y_ = x_y_x_ * y_\n        val y_x_y_x_ = y_x_y_ * x_\n        val x_y_x_y_y_ = x_y_x_y_ * y_\n        val y_x_y_x_y_ = y_x_y_x_ * y_\n        val x_y_x_y_y_y_ = x_y_x_y_y_ * y_\n        val y_x_y_x_y_y_ = y_x_y_x_y_ * y_\n        val x_y_x_y_y_y_y_ = x_y_x_y_y_y_ * y_\n        val y_x_y_x_y_y_y_ = y_x_y_x_y_y_ * y_\n        val x_y_x_y_y_y_y_y_ = x_y_x_y_y_y_y_ * y_\n        val y_x_y_x_y_y_y_y_ = y_x_y_x_y_y_y_ * y_\n        val x_y_x_y_y_y_y_y_ = x_y_x_y_y_y_y_ * y_\n        val y_x_y_x_y_y_y_y_ = y_x_y_x_y_y_y_ * y_\n        val x_y_x_y_y_y_",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_x_y_ = x_x_ + y_y_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + y_x_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val x_y_x_y_ = x_y_x_ + y_x_y_\n        val y_x_y_x_ = y_x_y_ + x_y_x_\n        val y_x_y_y_ = y_x_y_ + x_y_y_\n        val x_y_y_x_y_ = x_y_y_ + y_x_y_x_\n        val x_y_y_x_y_y_ = x_y_y_x_y_ + y_x_y_y_\n        val x_y_y_x_y_y_y_ = x_y_y_x_y_y_ + y_x_y_y_\n        val x_y_y_x_y_y_y_y_ = x_y_y_x_y_y_y_ + y_x_y_y_\n        val x_y_y_x_y_y_y_y_y_ = x_y_y_x_y_y_y_y_ + y_x_y_y_\n        val x_y_y_x_y_y_y_y_y_y_ = x_y_y_x_y_y_y_y_y_ + y_x_y_y_\n        val x_y_y_x_y_y_y_y_y_y_y_ = x_y_y_x",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_x_x_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_y_ = x_y_ * x_\n        val y_x_y_y_ = y_x_ * y_\n        val x_y_x_y_ = x_y_ * x_\n        val y_y_x_y_ = y_y_ * x_\n        val x_y_y_y_ = x_y_ * y_\n        val y_x_y_y_ = y_x_ * y_\n        val x_y_x_y_y_ = x_y_ * x_\n        val y_y_x_y_y_ = y_y_ * x_\n        val x_y_y_y_y_ = x_y_ * y_\n        val y_y_y_y_y_ = y_y_ * y_\n        val x_y_x_y_y_y_ = x_y_ * x_\n        val y_x_y_y_y_y_ = y_x_ * y_\n        val x_y_y_y_y_y_ = x_y_ * y_\n        val y_y_y_y",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Sum all elements of a list\n    // >>> sum([1, 2, 3])\n    // 6\n    def sum(xs : List[Long]) : Long = {\n        xs.reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123\")\n    // 6\n    def sum(s : String) : Long = {\n        s.chars().reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123\")\n    // 6\n    def sum(s : String) : Long = {\n        s.chars().reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123\")\n    // 6\n    def sum(s : String) : Long = {\n        s.chars().reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123\")\n    // 6\n    def sum(s : String) : Long = {\n        s.chars().reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_x_y_ = x_x_ + y_y_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + y_x_\n        val y_x_y_ = y_x_ + x_y_\n        val x_x_y_y_ = x_x_y_ + y_y_\n        val y_y_x_y_ = y_y_x_ + x_y_\n        val x_y_x_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_ = y_x_y_x_ + x_y_\n        val x_y_x_y_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_y_ = y_x_y_x_ + x_y_\n        val x_y_x_y_y_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_y_y_ = y_x_y_x_ + x_y_\n        val x_y_x_y_y_y_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_y_y_y_ = y_x_y_x_ + x_y_\n        val x_y_x_y_y_y_y_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_y_y_y_y_ = y_x_y_x_ + x_y_\n        val x_y_x_y_y_y_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the square of a number x\n    // >>> sqr(2l)\n    // (4l)\n    // >>> sqr(5l)\n    // (25l)\n    def sqr(x : Long) : Long = {\n        x * x\n    }\n\n    // Return the square root of a number x\n    // >>> sqrt(4l)\n    // (2l)\n    // >>> sqrt(25l)\n    // (5.0)\n    def sqrt(x : Long) : Double = {\n        scala.math.sqrt(x)\n    }\n\n    // Return the factorial of a number x\n    // >>> fact(5l)\n    // (120l)\n    def fact(x : Long) : Long = {\n        x * mul(x, sub(1l, x))\n    }\n\n    // Return the binomial coefficient of two numbers x and y\n    // >>> binom(5l, 2l)\n    // (10l)\n    // >>> binom(5l, 3l)\n    // (10l)\n    // >>> binom(5l, 4l)\n    //",
    "        x + y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mult((2l), (3l))\n    // (6l)\n    // >>> mult((5l), (7l))\n    // (35l)\n    def mult(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs(2l)\n    // (2l)\n    // >>> abs(-2l)\n    // (2l)\n    def abs(x : Long) : Long = {\n        if (x < 0) {\n            -x\n        } else {\n            x\n        }\n    }\n\n    // Return the square root of a number x\n    // >>> sqrt(16l)\n    // (4l)\n    // >>> sqrt(-16l)\n    // (0l)\n    def sqrt(x : Long) : Long = {\n        if (x < 0) {\n            throw new",
    "        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 + y_$eq$eq$eq$1",
    "        val x_ = x\n        val y_ = y\n        val x__$1 = x_\n        val y__$1 = y_\n        x__$1 + y__$1\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x__$1 = x_\n        val y__$1 = y_\n        x__$1 - y__$1\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x__$1 = x_\n        val y__$1 = y_\n        x__$1 * y__$1\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x__$1 = x_\n        val y__$1 = y_\n        x__$1 / y__$1\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Int) : Int = {\n        val n_ = n\n        val n__$1 = n_\n        if (n__$1 > 0) {\n            val n__$2 = n__$1 - 1\n            val n__$3 = n__$2\n            n__$3 * factorial(n__$2)\n",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ - y_$_\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ * y_$_\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ / y_$_\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        val n_ = n\n        val n_$_ = n_\n        if (n_$_ > 0) {\n            n_$_ * factorial(n_$_ - 1)\n        } else {\n            1l\n        }\n    }\n\n    // Compute the sum of the squares",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(10)\n    // 385\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0\n        } else {\n            return n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(10)\n    // 12586269025\n    def",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial\")\n        }\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative sum of squares\")\n        }\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 1023\n    def sum_of_cubes(n : Long) : Long =",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial not defined\")\n        }\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative sum of squares not defined\")\n        }\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 1023\n    def sum_of_cubes(n : Long",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Raise x to the power y\n    // >>> pow((2l), (3l))\n    // (8l)\n    // >>> pow((5l), (7l))\n    // (5l)\n    def pow(x : Long, y : Long) : Long = {\n        x ** y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Raise x to the power y\n    // >>> pow((2l), (3l))\n    // (8l)\n    // >>> pow((5l), (7l))\n    // (5l)\n    def pow(x : Long, y : Long) : Long = {\n        x ** y\n    }\n\n    // Compute the value of the following expression:\n    // (x + y) * (x + y)\n    // >>> square((2l), (3l))\n    // (18l)\n    // >>> square((5l), (7l))\n    // (49l)\n    def square(x : Long, y : Long) : Long = {\n        mul(add(x, y), add(x, y))\n    }\n\n    // Compute the value of the following expression:\n    // (x + y) * (x + y) * (x + y)\n    // >>> cube((2l), (3l))\n    // (54l)\n    // >>> cube((5l), (7l))\n    // (343l)\n    def cube(x : Long, y : Long) : Long = {\n        m",
    "        x + y",
    "        val x_ = x\n        val y_ = y\n        val x__ = x_\n        val y__ = y_\n        val x__x = x__\n        val y__y = y__\n        val x__x_ = x__x\n        val y__y_ = y__y\n        val x__x__ = x__x_\n        val y__y__ = y__y_\n        val x__x__x = x__x__\n        val y__y__y = y__y__\n        val x__x__x_ = x__x__x\n        val y__y__y_ = y__y__y\n        val x__x__x__ = x__x__x_\n        val y__y__y__ = y__y__y_\n        val x__x__x__x = x__x__x__\n        val y__y__y__y = y__y__y__\n        val x__x__x__x_ = x__x__x__x\n        val y__y__y__y_ = y__y__y__y_\n        val x__x__x__x__ = x__x__x__x_\n        val y__y__y__y__ = y__y__y__y__\n        val x__x__x__x__x = x__x__x__x__\n        val y__y__y__y__y_ = y__y__y__y__y_\n        val x__x__x__x__x_ = x__x__x__x__x\n        val y__y__y__y__y__ = y__y__y__y__y__\n        val x__x__x__x__x__ = x__x__x__x__x__\n        val y__y__y__y__y__y_ = y__y__y__y__y__y_\n        val x__x__x__x__x__x = x__x__x__x__x__\n        val y__y__y__y__y__y__ = y__y__y__y__y__y__\n        val x__x__x__x__x__x__ = x__x__x",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_ * y_y_\n        val y_x_x_ = y_ * x_x_\n        val x_x_y_ = x_ * x_y_\n        val y_y_x_ = y_ * y_x_\n        val x_y_y_y_ = x_ * y_y_y_\n        val y_x_x_y_ = y_ * x_x_y_\n        val x_x_y_y_ = x_ * x_y_y_\n        val y_y_x_x_ = y_ * y_x_x_\n        val x_y_y_x_ = x_ * y_y_x_\n        val y_x_y_x_ = y_ * x_y_x_\n        val x_y_y_x_x_ = x_ * y_y_x_x_\n        val y_x_y_x_x_ = y_ * x_y_x_x_\n        val x_y_y_x_x_x_ = x_ * y_y_x_x_x_\n        val y_x_y_x_x_x_ = y_ * x_y_x_x_x_\n        val x_y_y_x_x_x_x_ = x_ * y_y_x_x_x_x_\n        val y_x_y_x_x_x_x_ = y_ * x_y_x_x_x_x_\n        val x_y_y_x_x_x_x_x_ = x_ * y_y_x_x_x_x_x_\n        val y_x_y_x_x_x_x_x_x_ = y_ * x_y_x_x_x_x_x_x_\n",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Raise x to the power of y\n    // >>> pow((2l), (3l))\n    // (8l)\n    // >>> pow((5l), (7l))\n    // (5l)\n    def pow(x : Long, y : Long) : Long = {\n        x ** y\n    }\n\n    // Compute the factorial of x\n    // >>> factorial(5l)\n    // 120l\n    def factorial(x : Long) : Long = {\n        x * factorial(x - 1)\n    }\n\n    // Compute the binomial coefficient of x and y\n    // >>> binomial(5l, 3l)\n    // 10l\n    def binomial(x : Long, y : Long) : Long = {\n        factorial(x) / (factorial(x - y) * factorial(y))\n    }\n\n    // Compute the Fibonacci sequence\n    // >>> fibonacci(5l)\n    // (0l 1l 1l 2l 3l 5l)\n    def fibonacci(x : Long) : Seq[Long] = {\n        if (x == 0) {\n",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_x_x_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the square root of a number x\n    // >>> sqrt(16)\n    // (4.0)\n    // >>> sqrt(25)\n    // (5.0)\n    def sqrt(x : Long) : Double = {\n        x.sqrt()\n    }\n\n    // Return the factorial of a number x\n    // >>> factorial(5)\n    // (120)\n    // >>> factorial(6)\n    // (720)\n    def factorial(x : Long) : Long = {\n        x.factorial()\n    }\n\n    // Return the Fibonacci sequence for a number x\n    // >>> fibonacci(5)\n    // (5, 1, 1, 2, 3)\n    // >>> fibonacci(6)\n    // (6, 1, 1, 2, 3, 5)\n    def fibonacci(x : Long) : Seq[Long] = {\n        x.fibonacci()\n    }\n\n    // Return the sum of the digits of a number x\n    // >>> sumDigits(123)\n    // (3)\n    // >>> sumDigits(1234)\n",
    "        val x1 = x\n        val y1 = y\n        val x2 = x1\n        val y2 = y1\n        val x3 = x2\n        val y3 = y2\n        val x4 = x3\n        val y4 = y3\n        val x5 = x4\n        val y5 = y4\n        val x6 = x5\n        val y6 = y5\n        val x7 = x6\n        val y7 = y6\n        val x8 = x7\n        val y8 = y7\n        val x9 = x8\n        val y9 = y8\n        val x10 = x9\n        val y10 = y9\n        val x11 = x10\n        val y11 = y10\n        val x12 = x11\n        val y12 = y11\n        val x13 = x12\n        val y13 = y12\n        val x14 = x13\n        val y14 = y13\n        val x15 = x14\n        val y15 = y14\n        val x16 = x15\n        val y16 = y15\n        val x17 = x16\n        val y17 = y16\n        val x18 = x17\n        val y18 = y17\n        val x19 = x18\n        val y19 = y18\n        val x20 = x19\n        val y20 = y19\n        val x21 = x20\n        val y21 = y20\n        val x22 = x21\n        val y22 = y21\n        val x23 = x22\n        val y23 = y22\n        val x24 = x23\n        val y24 = y23\n        val x25 = x24\n        val y25 = y24\n        val x26 = x25\n        val y26 = y25\n        val x27 = x26\n        val y27 = y26\n        val x28 = x27\n        val y28 = y27\n        val x29 = x28\n        val y29 = y28\n        val x30 = x29\n        val y30 = y29\n        val x31 = x30\n        val y31 = y30\n        val x32 = x31\n        val y32 = y31\n        val",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial not defined\")\n        }\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(10)\n    // 385\n    def sum_of_squares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative sum of squares not defined\")\n        }\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(10)\n    // 12586269025\n    def sum_of_cubes(",
    "        x + y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs((-2l))\n    // (2l)\n    // >>> abs((2l))\n    // (2l)\n    def abs(x : Long) : Long = {\n        if (x < 0) {\n            -x\n        } else {\n            x\n",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs((-2l))\n    // (2l)\n    // >>> abs((2l))\n    // (2l)\n    def abs(x : Long) : Long = {\n        if (x < 0) {\n            -x\n        } else {\n            x\n",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Sum all elements of a list\n    // >>> sum([1, 2, 3])\n    // 6\n    def sum(xs : List[Long]) : Long = {\n        xs.reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123\")\n    // 6\n    def sum(s : String) : Long = {\n        s.chars().reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123\")\n    // 6\n    def sum(s : String) : Long = {\n        s.chars().reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123\")\n    // 6\n    def sum(s : String) : Long = {\n        s.chars().reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123\")\n    // 6\n    def sum(s : String) : Long = {\n        s.chars().reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_x_y_ = x_x_ + y_y_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + y_x_\n        val y_x_y_ = y_x_ + x_y_\n        val x_x_y_y_ = x_x_y_ + y_y_\n        val y_y_x_y_ = y_y_x_ + x_x_\n        val x_y_x_y_y_ = x_y_x_ + y_y_\n        val y_x_y_x_y_ = y_x_y_ + x_y_\n        val x_y_x_y_y_y_ = x_y_x_y_ + y_y_\n        val y_x_y_x_y_y_ = y_x_y_y_ + x_y_\n        val x_y_x_y_y_y_y_ = x_y_x_y_y_ + y_y_\n        val y_x_y_x_y_y_y_y_ = y_x_y_y_y_ + x_y_\n        val x_y_x_y_y_y_y_y_y_ = x_y_x_y_y_y_ + y_y_\n        val y_x_y_x_y_y_y_y_y_ = y_x_y_y_y_y_ + x_y_\n        val x_y_x_y_y_y_y_y_y_y_ = x_y_x_y_y_y_y_ + y_y_\n        val y_x_y_x_y_y_y_y_y_y_ = y_x_",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_x_ = x_y_ * x_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_y_ = x_y_x_ * y_\n        val y_x_y_x_ = y_x_y_ * x_\n        val x_y_y_x_ = x_y_y_ * y_\n        val y_x_y_x_y_ = y_x_y_x_ * y_\n        val x_y_y_x_y_ = x_y_y_x_ * y_\n        val y_x_y_x_y_ = y_x_y_x_ * x_\n        val x_y_y_x_y_ = x_y_y_x_ * y_\n        val y_x_y_x_y_ = y_x_y_x_ * x_\n        val x_y_y_x_y_ = x_y_y_x_ * y_\n        val y_x_y_x_y_ = y_x_y_x_ * x_\n        val x_y_y_x_y_ = x_y_y_x_ * y_\n        val y_x_y_x_y_ = y_x_y_x_ * x_\n        val x_y_y_x_y_ = x_y_y_x_ * y_\n        val y_x_y_x_y_ = y_x_y_x_ * x_\n        val x_y_y_x_y_ = x_y_y_x_ * y_\n        val y_x_y_x_y_ = y_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 1225\n    def sum_of_cubes(n : Long) : Long = {\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (n + 2) * (3 * n + 1) / 6\n        }\n    }\n\n    // Comp",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_x_y_ = x_x_ + y_y_\n        val y_x_y_ = y_x_ + x_y_\n        val x_y_y_ = x_y_ + y_y_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + x_x_\n        val y_x_x_ = y_x_ + x_x_\n        val x_x_x_ = x_x_ + x_x_\n        val y_x_x_ = y_x_ + x_x_\n        val x_y_x_ = x_y_ + x_x_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_y_ = x_y_ + x_x_\n        val y_x_y_ = y_x_ + x_x_\n        val x_x_y_ = x_x_ + x_x_\n        val y_x_y_ = y_x_ + x_x_\n        val x_y_y_ = x_y_ + x_x_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + x_x_\n        val y_x_x_ = y_x_ + x_x_\n        val x_x_x_ = x_x_ + x_x_\n        val y_x_x_ = y_x_ + x_x_\n        val x_y_x_ = x_y_ + x_x_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_y_ = x_y_ + x_x_\n        val y_x_y_ =",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Return the largest of two numbers x and y\n    // >>> max((2l), (3l))\n    // (3l)\n    // >>> max((5l), (7l))\n    // (7l)\n    def max(x : Long, y : Long) : Long = {\n        if (x > y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the smallest of two numbers x and y\n    // >>> min((2l), (3l))\n    // (2l)\n    // >>> min((5l), (7l))\n    // (5l)\n    def min(x : Long, y : Long) : Long = {\n        if (x < y) {\n            x\n        } else {\n            y\n        }\n    }\n\n    // Return the absolute value of a number x\n    // >>> abs((-2l))\n    // (2l)\n    // >>> abs((2l))\n    // (2l)\n    def abs(x : Long) : Long = {\n        if (x < 0) {\n            -x\n        } else {\n            x\n",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Raise x to the power y\n    // >>> pow((2l), (3l))\n    // (8l)\n    // >>> pow((5l), (7l))\n    // (5l)\n    def pow(x : Long, y : Long) : Long = {\n        x ** y\n    }\n\n    // Compute the factorial of x\n    // >>> factorial(5l)\n    // 120l\n    def factorial(x : Long) : Long = {\n        x * factorial(x - 1)\n    }\n\n    // Compute the sum of the digits of x\n    // >>> sumDigits(123l)\n    // 3\n    def sumDigits(x : Long) : Long = {\n        x % 10\n    }\n\n    // Compute the sum of the digits of x raised to the power y\n    // >>> sumDigitsPow(123l, 2l)\n    // 351l\n    def sumDigitsPow(x : Long, y : Long) : Long = {\n        x % 10 ** y\n    }\n\n    // Compute the sum of the digits of x raised to the power y\n    // >>> sumDig",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Int) : Int = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Int) : Int = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            0\n        } else {\n            n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 1023\n    def sum_of_cubes(",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(10)\n    // 385\n    def sumOfSquares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a non-negative integer\")\n        }\n        if (n == 0) {\n            return 0\n        } else {\n            return n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sumOfCubes(10)\n    // 12586269025\n    def sumOfCubes(n",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n <= 1) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sum_of_squares(5)\n    // 55\n    def sum_of_squares(n : Long) : Long = {\n        if (n <= 1) {\n            1\n        } else {\n            n * (n + 1) * sum_of_squares(n - 1)\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sum_of_cubes(5)\n    // 10395\n    def sum_of_cubes(n : Long) : Long = {\n        if (n <= 1) {\n            1\n        } else {\n            n * (n + 1) * (n + 2) * sum_of_cubes(n - 1)\n        }\n    }",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_",
    "        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq$eq",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_x_x_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_x_ = x_y_ * x_\n        val y_x_x_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_x_ = x_y_ * x_\n        val y_x_x_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_x_ = x_y_ * x_\n        val y_x_x_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_y_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_",
    "        x + y",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * x_\n        val y_x_x_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_y_ = x_y_ * x_\n        val y_x_y_y_ = y_x_ * y_\n        val x_y_x_y_ = x_y_ * x_\n        val y_y_x_y_ = y_y_ * x_\n        val x_y_y_x_ = x_y_ * y_\n        val y_y_x_x_ = y_y_ * x_\n        val x_y_y_x_y_ = x_y_ * y_\n        val y_y_x_x_y_ = y_y_ * x_\n        val x_y_y_x_y_ = x_y_ * y_\n        val y_y_x_y_x_ = y_y_ * x_\n        val x_y_y_x_y_ = x_y_ * y_\n        val y_y_x_y_x_ = y_y_ * x_\n        val x_y_y_x_y_ = x_y_ * y_\n        val y_y_x_y_x_ = y_",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        val x_$__ = x_$_\n        val y_$__ = y_$_\n        x_$__ + y_$__",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * y_\n        val x_y_x_ = x_y_ * x_\n        val y_y_x_ = y_y_ * x_\n        val x_",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_",
    "        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 + y_$eq$eq$eq$1\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 - y_$eq$eq$eq$1\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 * y_$eq$eq$eq$1\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$eq$eq$eq$1 = x_\n        val y_$eq$eq$eq$1 = y_\n        x_$eq$eq$eq$1 / y_$eq$eq$eq$1\n    }\n\n    // Compute the factorial of a number\n    ",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a positive integer\")\n        }\n        if (n == 0) {\n            return 1\n        } else {\n            return n * factorial(n - 1)\n        }\n    }\n\n    // Compute the sum of the squares of the first n natural numbers\n    // >>> sumOfSquares(5)\n    // 55\n    def sumOfSquares(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be a positive integer\")\n        }\n        if (n == 0) {\n            return 0\n        } else {\n            return n * (n + 1) * (2 * n + 1) / 6\n        }\n    }\n\n    // Compute the sum of the cubes of the first n natural numbers\n    // >>> sumOfCubes(5)\n    // 1023\n    def sumOfCubes(n : Long) : Long = {",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_x_y_ = x_x_ + y_y_\n        val y_y_x_ = y_y_ + x_x_\n        val x_y_x_ = x_y_ + y_x_\n        val y_x_y_ = y_x_ + x_y_\n        val x_x_y_y_ = x_x_y_ + y_y_x_\n        val y_x_y_x_ = y_x_y_ + x_y_x_\n        val x_y_x_y_ = x_y_x_ + y_x_y_\n        val y_x_y_x_y_ = y_x_y_ + x_y_x_y_\n        val x_y_x_y_y_ = x_y_x_y_ + y_x_y_x_y_\n        val y_x_y_x_y_y_ = y_x_y_x_y_ + x_y_x_y_\n        val x_y_x_y_y_y_ = x_y_x_y_y_ + y_x_y_x_y_\n        val y_x_y_x_y_y_y_ = y_x_y_x_y_y_ + x_y_x_y_\n        val x_y_x_y_y_y_y_y_ = x_y_x_y_y_y_ + y_x_y_x_y_\n        val y_x_y_x_y_y_y_y_y_ = y_x_y_x_y_y_y_ + x_y_x_y_\n        val x_y_x_y_y_y_y_y_y_y_ = x_y_x_y_y_y",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345l)\n    // 15\n    def sumDigits(x : Long) : Long = {\n        x % 10\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345l)\n    // 15\n    def sumDigits(x : Long) : Long = {\n        x % 10\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345l)\n    // 15\n    def sumDigits(x : Long) : Long = {\n        x % 10\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345l)\n    // 15\n    def sumDigits(x : Long) : Long = {\n        x % 10\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345l)\n    // 15\n    def sumDigits(x : Long) : Long = {\n        x % 10\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345l)\n    // 15\n    def sum",
    "        val x_ = x\n        val y_ = y\n        val x__ = x_\n        val y__ = y_\n        x__ + y__",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ + y_$_\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ - y_$_\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ * y_$_\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        x_$_ / y_$_\n    }\n\n    // Compute the value of the expression x + y * z\n    // >>> val((2l), (3l), (5l))\n    // (17l)\n    def val(x : Long, y : Long, z : Long) : Long = {\n        val x_ = x\n        val y_ = y\n        val z_ = z\n        val x_$_ = x_\n        val y_$_ = y_\n        val z_$_ =",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Sum all elements of a list\n    // >>> sum([1, 2, 3])\n    // 6\n    def sum(xs : List[Long]) : Long = {\n        xs.reduce(_.add)\n    }\n\n    // Sum all elements of a string\n    // >>> sum(\"123\")\n    // 6\n    def sum(s : String) : Long = {\n        s.chars().reduce(_.add)\n    }\n\n    // Sum all elements of a map\n    // >>> sum([\"a\", \"b\", \"c\"])\n    // 6\n    def sum(m : Map[String, Long]) : Long = {\n        m.reduce(_.add)\n    }\n\n    // Sum all elements of a collection\n    // >>> sum(List(1, 2, 3))\n    // 6\n    def sum(c : Iterable[Long]) : Long = {\n        c.reduce(_.add)\n    }\n\n    // Sum all elements of a collection\n    // >>> sum(List(1, 2, 3))\n    // 6\n    def sum(c : Iterable[Long]) : Long = {\n        c.reduce(_.",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Compute the factorial of a number\n    // >>> factorial(5)\n    // 120\n    def factorial(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative factorial\")\n        }\n        if (n == 0) {\n            1\n        } else {\n            n * factorial(n - 1)\n        }\n    }\n\n    // Compute the nth Fibonacci number\n    // >>> fibonacci(5)\n    // 12\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative Fibonacci\")\n        }\n        if (n == 0) {\n            0\n        } else if (n == 1) {\n            1\n        } else {\n            fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // Compute the nth Lucas number\n    // >>> lucas(5)\n    // 12\n    def lucas(n : Long) : Long = {\n        if (n < 0) {",
    "        val x_ = x\n        val y_ = y\n        val x_x_ = x_ * x_\n        val y_y_ = y_ * y_\n        val x_y_ = x_ * y_\n        val y_x_ = y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_x_y_ = x_x_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_y_y_ = x_y_ * y_\n        val y_x_y_ = y_x_ * x_\n        val x_y_x_ = x_y_ * y_\n        val y_y_x_ = y_y_ * x_\n        val x_",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Raise x to the power of y\n    // >>> pow((2l), (3l))\n    // (8l)\n    // >>> pow((5l), (7l))\n    // (5l)\n    def pow(x : Long, y : Long) : Long = {\n        x ** y\n    }\n\n    // Compute the square root of x\n    // >>> sqrt((2l))\n    // (1.4142135623730951)\n    def sqrt(x : Long) : Double = {\n        x ** (1 / 2)\n    }\n\n    // Compute the square of x\n    // >>> square((2l))\n    // (4l)\n    def square(x : Long) : Long = {\n        x * x\n    }\n\n    // Compute the factorial of x\n    // >>> factorial(5l)\n    // 120l\n    def factorial(x : Long) : Long = {\n        x * (x - 1) * (x - 2) * (x - 3) * (x - 4) * (x - 5)\n    }\n\n    // Compute the binomial coefficient of x and y",
    "        x + y\n    }\n\n    // Subtract two numbers x and y\n    // >>> sub((2l), (3l))\n    // (-1l)\n    // >>> sub((5l), (7l))\n    // (-4l)\n    def sub(x : Long, y : Long) : Long = {\n        x - y\n    }\n\n    // Multiply two numbers x and y\n    // >>> mul((2l), (3l))\n    // (6l)\n    // >>> mul((5l), (7l))\n    // (35l)\n    def mul(x : Long, y : Long) : Long = {\n        x * y\n    }\n\n    // Divide two numbers x and y\n    // >>> div((2l), (3l))\n    // (0.6666666666666666)\n    // >>> div((5l), (7l))\n    // (0.14285714285714285)\n    def div(x : Long, y : Long) : Double = {\n        x / y\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345)\n    // 5\n    def sumDigits(n : Long) : Long = {\n        n % 10\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345)\n    // 5\n    def sumDigits(n : Long) : Long = {\n        n % 10\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345)\n    // 5\n    def sumDigits(n : Long) : Long = {\n        n % 10\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345)\n    // 5\n    def sumDigits(n : Long) : Long = {\n        n % 10\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345)\n    // 5\n    def sumDigits(n : Long) : Long = {\n        n % 10\n    }\n\n    // Sum of digits of a number\n    // >>> sumDigits(12345)\n    // 5\n    def sumDigits(n : Long",
    "        val x_ = x\n        val y_ = y\n        val x_$_ = x_\n        val y_$_ = y_\n        val x_$_$_ = x_$_\n        val y_$_$_ = y_$_\n        val x_$_$_$_ = x_$_$_\n        val y_$_$_$_ = y_$_$_\n        val x_$_$_$_$_ = x_$_$_$_\n        val y_$_$_$_$_ = y_$_$_$_\n        val x_$_$_$_$_$_ = x_$_$_$_$_\n        val y_$_$_$_$_$_ = y_$_$_$_$_\n        val x_$_$_$_$_$_$_ = x_$_$_$_$_$_\n        val y_$_$_$_$_$_$_ = y_$_$_$_$_$_\n        val x_$_$_$_$_$_$_$_ = x_$_$_$_$_$_$_\n        val y_$_$_$_$_$_$_$_ = y_$_$_$_$_$_$_\n        val x_$_$_$_$_$_$_$_$_ = x_$_$_$_$_$_$_$_\n        val y_$_$_$_$_$_$_$_$_ = y_$_$_$_$_$_$_$_\n        val x_$_$_$_$_$_$_$_$_$_ = x_$_$_$_$_$_$_$_$_\n        val y_$_$_$_$_$_$_$_$_$_ = y_$_$_$_$_$_$_$_$_\n        val x_$_$_$_$_$_$_$_$_$_$_ = x_$_$"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
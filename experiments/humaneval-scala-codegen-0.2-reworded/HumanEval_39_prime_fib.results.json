{
  "name": "HumanEval_39_prime_fib",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        var result = 1l\n        var i = 2l\n        while (i < n) {\n            result = result * i\n            i = i + 1l\n        }\n        if (isPrime(result)) {\n            return result\n        } else {\n            throw new IllegalArgumentException(\"n is not prime\")\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2l)\n    // True\n    // >>> isPrime(3l)\n    // True\n    // >>> isPrime(4l)\n    // False\n    // >>> isPrime(5l)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        }\n        if (n == 2) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        var i = 3l\n        while (i <= Math.sqrt(n)) {\n            if (n % i == 0) {\n                return false\n            }\n            i = i + 1l\n        }\n        return true\n    }\n\n    // isPrime2 returns true if n is prime number.\n    // >>> isPrime2(2l)\n    // True\n    // >>> isPrime2(3l)\n    // True\n    // >>> isPrime2(4l)\n    // False\n    // >>> isPrime2(5l)\n    // True\n    def isPrime2(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        }\n        if (n == 2) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        var i = 3l\n        while (i <= Math.sqrt(n)) {\n            if (n % i == 0) {\n                return false\n            }\n            i = i + 1l\n        }\n        return true\n    }\n\n    // isPrime3 returns true if n is prime number.\n    // >>> isPrime3(\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293136,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp040e3t3d.scala:106:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m106 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp040e3t3d.scala:94:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m94 |\u001b[0m    assert(primeFib((\u001b[31m1l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp040e3t3d.scala:95:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m95 |\u001b[0m    assert(primeFib((\u001b[31m2l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp040e3t3d.scala:96:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m96 |\u001b[0m    assert(primeFib((\u001b[31m3l\u001b[0m)) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp040e3t3d.scala:97:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m97 |\u001b[0m    assert(primeFib((\u001b[31m4l\u001b[0m)) == (\u001b[31m13l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp040e3t3d.scala:98:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m98 |\u001b[0m    assert(primeFib((\u001b[31m5l\u001b[0m)) == (\u001b[31m89l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp040e3t3d.scala:99:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m99 |\u001b[0m    assert(primeFib((\u001b[31m6l\u001b[0m)) == (\u001b[31m233l\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n must be greater than 1\")\n        }\n        val fib = fibonacci(n)\n        val isPrime = isPrime(fib)\n        if (isPrime) {\n            return fib\n        } else {\n            throw new IllegalArgumentException(\"n is not a prime number\")\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(1)\n    // (1l)\n    // >>> fibonacci(2)\n    // (1l)\n    // >>> fibonacci(3)\n    // (2l)\n    // >>> fibonacci(4)\n    // (3l)\n    // >>> fibonacci(5)\n    // (5l)\n    def fibonacci(n : Long) : Long = {\n        if (n < 1) {\n            throw new IllegalArgumentException(\"n must be greater than 0\")\n        }\n        if (n == 1) {\n            return 1l\n        } else if (n == 2) {\n            return 1l\n        } else {\n            return _fibonacci(n)\n        }\n    }\n\n    def _fibonacci(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n must be greater than 1\")\n        }\n        val fib = fibonacci(n - 1)\n        val fib1 = fibonacci(n - 2)\n        return fib + fib1\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n must be greater than 1\")\n        }\n        if (n == 2) {\n            return true\n        } else if (n == 3) {\n            return true\n        } else if (n % 2 == 0\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293135,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpulj5216i.scala:79:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpulj5216i.scala:20:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35misPrime\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) return 2l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 5l\n        if (n == 5) return 13l\n        if (n == 6) return 89l\n        if (n == 7) return 13l\n        if (n == 8) return 13l\n        if (n == 9) return 13l\n        if (n == 10) return 13l\n        if (n == 11) return 13l\n        if (n == 12) return 13l\n        if (n == 13) return 13l\n        if (n == 14) return 13l\n        if (n == 15) return 13l\n        if (n == 16) return 13l\n        if (n == 17) return 13l\n        if (n == 18) return 13l\n        if (n == 19) return 13l\n        if (n == 20) return 13l\n        if (n == 21) return 13l\n        if (n == 22) return 13l\n        if (n == 23) return 13l\n        if (n == 24) return 13l\n        if (n == 25) return 13l\n        if (n == 26) return 13l\n        if (n == 27) return 13l\n        if (n == 28) return 13l\n        if (n == 29) return 13l\n        if (n == 30) return 13l\n        if (n == 31) return 13l\n        if (n == 32) return 13l\n        if (n == 33) return 13l\n        if (n == 34) return 13l\n        if (n == 35) return 13l\n        if (n == 36) return 13l\n        if (n == 37) return 13l\n        if (n == 38) return 13l\n        if (n == 39) return 13l\n        if (n == 40) return 13l\n        if (n == 41) return 13l\n        if (n == 42) return 13l\n        if (n == 43) return 13l\n        if (n == 44) return 13l\n        if (n == 45) return 13l\n        if (n == 46) return 13l\n        if (n == 47\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293136,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8grmsrgs.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val prime = scala.math.fibonacci.primeFibonacci(fib)\n        prime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293140,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1olcmbu4.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1olcmbu4.scala:17:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mprime\u001b[0m = scala.math.fibonacci.primeFibonacci(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value fibonacci is not a member of math\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            return 2l\n        } else if (n == 2) {\n            return 2l\n        } else if (n == 3) {\n            return 3l\n        } else if (n == 4) {\n            return 5l\n        } else if (n == 5) {\n            return 13l\n        } else if (n == 6) {\n            return 89l\n        } else {\n            var a = primeFib(n - 1)\n            var b = primeFib(n - 2)\n            return a + b\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpabuvc5no.scala:36)\n\tat Problem.main(tmpabuvc5no.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val prime = scala.math.fibonacci.primeFibonacci(fib)\n        prime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293140,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1olcmbu4.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1olcmbu4.scala:17:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mprime\u001b[0m = scala.math.fibonacci.primeFibonacci(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value fibonacci is not a member of math\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val isPrime = isPrime(fib)\n        if (isPrime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be >= 0\")\n        }\n        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 1l\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2)\n    // True\n    // >>> isPrimeFast(3)\n    // True\n    // >>> isPrimeFast(4)\n    // False\n    // >>> isPrimeFast(5)\n    // True\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293138,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfvgcza7g.scala:100:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpfvgcza7g.scala:17:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35misPrime\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpfvgcza7g.scala:99:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m99 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpfvgcza7g.scala:86:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m86 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) return 2l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 5l\n        if (n == 5) return 13l\n        if (n == 6) return 89l\n        if (n == 7) return 13l\n        if (n == 8) return 13l\n        if (n == 9) return 13l\n        if (n == 10) return 13l\n        if (n == 11) return 13l\n        if (n == 12) return 13l\n        if (n == 13) return 13l\n        if (n == 14) return 13l\n        if (n == 15) return 13l\n        if (n == 16) return 13l\n        if (n == 17) return 13l\n        if (n == 18) return 13l\n        if (n == 19) return 13l\n        if (n == 20) return 13l\n        if (n == 21) return 13l\n        if (n == 22) return 13l\n        if (n == 23) return 13l\n        if (n == 24) return 13l\n        if (n == 25) return 13l\n        if (n == 26) return 13l\n        if (n == 27) return 13l\n        if (n == 28) return 13l\n        if (n == 29) return 13l\n        if (n == 30) return 13l\n        if (n == 31) return 13l\n        if (n == 32) return 13l\n        if (n == 33) return 13l\n        if (n == 34) return 13l\n        if (n == 35) return 13l\n        if (n == 36) return 13l\n        if (n == 37) return 13l\n        if (n == 38) return 13l\n        if (n == 39) return 13l\n        if (n == 40) return 13l\n        if (n == 41) return 13l\n        if (n == 42) return 13l\n        if (n == 43) return 13l\n        if (n == 44) return 13l\n        if (n == 45) return 13l\n        if (n == 46) return 13l\n        if (n == 47\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293136,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8grmsrgs.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        var a = 1l\n        var b = 1l\n        var c = 0l\n        while (b < n) {\n            c = a + b\n            a = b\n            b = c\n        }\n        if (isPrime(c)) {\n            return c\n        } else {\n            throw new IllegalArgumentException(\"n is not prime\")\n        }\n    }\n\n    // prime_fib2 returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib2((1l))\n    // (2l)\n    // >>> primeFib2((2l))\n    // (3l)\n    // >>> primeFib2((3l))\n    // (5l)\n    // >>> primeFib2((4l))\n    // (13l)\n    // >>> primeFib2((5l))\n    // (89l)\n    def primeFib2(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        var a = 1l\n        var b = 1l\n        var c = 0l\n        while (b < n) {\n            c = a + b\n            a = b\n            b = c\n        }\n        if (isPrime(c)) {\n            return c\n        } else {\n            throw new IllegalArgumentException(\"n is not prime\")\n        }\n    }\n\n    // prime_fib3 returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib3((1l))\n    // (2l)\n    // >>> primeFib3((2l))\n    // (3l)\n    // >>> primeFib3((3l))\n    // (5l)\n    // >>> primeFib3((4l))\n    // (13l)\n    // >>> primeFib3((5l))\n    // (89l)\n    def primeFib3(n : Long) : Long = {\n        if (n < 2) {\n            \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp4xgrwld8.scala:93:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m93 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4xgrwld8.scala:27:12 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        \u001b[33mif\u001b[0m (isPrime(c)) {\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4xgrwld8.scala:57:12 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m        \u001b[33mif\u001b[0m (isPrime(c)) {\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Not found: isPrime\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4xgrwld8.scala:92:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp4xgrwld8.scala:79:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m79 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(n - 1)\n        val fib3 = fib + fib2\n        val fib4 = fib2 + fib3\n        val fib5 = fib3 + fib4\n        val fib6 = fib4 + fib5\n        val fib7 = fib5 + fib6\n        val fib8 = fib6 + fib7\n        val fib9 = fib7 + fib8\n        val fib10 = fib8 + fib9\n        val fib11 = fib9 + fib10\n        val fib12 = fib10 + fib11\n        val fib13 = fib11 + fib12\n        val fib14 = fib12 + fib13\n        val fib15 = fib13 + fib14\n        val fib16 = fib14 + fib15\n        val fib17 = fib15 + fib16\n        val fib18 = fib16 + fib17\n        val fib19 = fib17 + fib18\n        val fib20 = fib18 + fib19\n        val fib21 = fib19 + fib20\n        val fib22 = fib20 + fib21\n        val fib23 = fib21 + fib22\n        val fib24 = fib22 + fib23\n        val fib25 = fib23 + fib24\n        val fib26 = fib24 + fib25\n        val fib27 = fib25 + fib26\n        val fib28 = fib26 + fib27\n        val fib29 = fib27 + fib28\n        val fib30 = fib28 + fib29\n        val fib31 = fib29 + fib30\n        val fib32 = fib30 + fib31\n        val fib33 = fib31 + fib32\n        val fib34 = fib32 + fib33\n        val fib35 = fib33 + fib34\n        val fib36 = fib34 + fib35\n        val fib37 = fib35 + fib36\n        val fib38 = fib36 + fib37\n        val fib39 = fib37 + fib38\n        val fib40 = fib38 + fib39\n        val fib41 = fib39 + fib40\n        val fib42 = fib40 + fib41\n        val fib43 = fib41 + fib42\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293140,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp38kze712.scala:19:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp38kze712.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(n - \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp38kze712.scala:63:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        if (fib2 % 2 == 0) {\n            return fib2 / 2\n        } else {\n            return fib2\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293140,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp73w0koaq.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp73w0koaq.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be non-negative\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2)\n    // True\n    // >>> isPrimeFast(3)\n    // True\n    // >>> isPrimeFast(4)\n    // False\n    // >>> isPrimeFast(5)\n    // True\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293140,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphdzji59a.scala:101:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphdzji59a.scala:85:12 --------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m            \u001b[33mreturn\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Found:    Unit\n\u001b[31m   |\u001b[0m            Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphdzji59a.scala:100:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmphdzji59a.scala:87:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m87 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1l\n        val n3 = n2 + 1l\n        val n4 = n3 + 1l\n        val n5 = n4 + 1l\n        val n6 = n5 + 1l\n        val n7 = n6 + 1l\n        val n8 = n7 + 1l\n        val n9 = n8 + 1l\n        val n10 = n9 + 1l\n        val n11 = n10 + 1l\n        val n12 = n11 + 1l\n        val n13 = n12 + 1l\n        val n14 = n13 + 1l\n        val n15 = n14 + 1l\n        val n16 = n15 + 1l\n        val n17 = n16 + 1l\n        val n18 = n17 + 1l\n        val n19 = n18 + 1l\n        val n20 = n19 + 1l\n        val n21 = n20 + 1l\n        val n22 = n21 + 1l\n        val n23 = n22 + 1l\n        val n24 = n23 + 1l\n        val n25 = n24 + 1l\n        val n26 = n25 + 1l\n        val n27 = n26 + 1l\n        val n28 = n27 + 1l\n        val n29 = n28 + 1l\n        val n30 = n29 + 1l\n        val n31 = n30 + 1l\n        val n32 = n31 + 1l\n        val n33 = n32 + 1l\n        val n34 = n33 + 1l\n        val n35 = n34 + 1l\n        val n36 = n35 + 1l\n        val n37 = n36 + 1l\n        val n38 = n37 + 1l\n        val n39 = n38 + 1l\n        val n40 = n39 + 1l\n        val n41 = n40 + 1l\n        val n42 = n41 + 1l\n        val n43 = n42 + 1l\n        val n44 = n43 + 1l\n        val n45 = n44 + 1l\n        val n46 = n45 + 1l\n        val n47 = n46 + 1l\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzc4pdf9.scala:63:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1l\n        val n3 = n2 + 1l\n        val n4 = n3 + 1l\n        val n5 = n4 + 1l\n        val n6 = n5 + 1l\n        val n7 = n6 + 1l\n        val n8 = n7 + 1l\n        val n9 = n8 + 1l\n        val n10 = n9 + 1l\n        val n11 = n10 + 1l\n        val n12 = n11 + 1l\n        val n13 = n12 + 1l\n        val n14 = n13 + 1l\n        val n15 = n14 + 1l\n        val n16 = n15 + 1l\n        val n17 = n16 + 1l\n        val n18 = n17 + 1l\n        val n19 = n18 + 1l\n        val n20 = n19 + 1l\n        val n21 = n20 + 1l\n        val n22 = n21 + 1l\n        val n23 = n22 + 1l\n        val n24 = n23 + 1l\n        val n25 = n24 + 1l\n        val n26 = n25 + 1l\n        val n27 = n26 + 1l\n        val n28 = n27 + 1l\n        val n29 = n28 + 1l\n        val n30 = n29 + 1l\n        val n31 = n30 + 1l\n        val n32 = n31 + 1l\n        val n33 = n32 + 1l\n        val n34 = n33 + 1l\n        val n35 = n34 + 1l\n        val n36 = n35 + 1l\n        val n37 = n36 + 1l\n        val n38 = n37 + 1l\n        val n39 = n38 + 1l\n        val n40 = n39 + 1l\n        val n41 = n40 + 1l\n        val n42 = n41 + 1l\n        val n43 = n42 + 1l\n        val n44 = n43 + 1l\n        val n45 = n44 + 1l\n        val n46 = n45 + 1l\n        val n47 = n46 + 1l\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzc4pdf9.scala:63:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        val fib3 = scala.math.factorial.apply(fib2)\n        val fib4 = scala.math.factorial.apply(fib3)\n        val fib5 = scala.math.factorial.apply(fib4)\n        val fib6 = scala.math.factorial.apply(fib5)\n        val fib7 = scala.math.factorial.apply(fib6)\n        val fib8 = scala.math.factorial.apply(fib7)\n        val fib9 = scala.math.factorial.apply(fib8)\n        val fib10 = scala.math.factorial.apply(fib9)\n        val fib11 = scala.math.factorial.apply(fib10)\n        val fib12 = scala.math.factorial.apply(fib11)\n        val fib13 = scala.math.factorial.apply(fib12)\n        val fib14 = scala.math.factorial.apply(fib13)\n        val fib15 = scala.math.factorial.apply(fib14)\n        val fib16 = scala.math.factorial.apply(fib15)\n        val fib17 = scala.math.factorial.apply(fib16)\n        val fib18 = scala.math.factorial.apply(fib17)\n        val fib19 = scala.math.factorial.apply(fib18)\n        val fib20 = scala.math.factorial.apply(fib19)\n        val fib21 = scala.math.factorial.apply(fib20)\n        val fib22 = scala.math.factorial.apply(fib21)\n        val fib23 = scala.math.factorial.apply(fib22)\n        val fib24 = scala.math.factorial.apply(fib23)\n        val fib25 = scala.math.factorial.apply(fib24)\n        val fib26 = scala.math.factorial.apply(f\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293142,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfa5shhtx.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:18:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:19:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:21:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib6\u001b[0m = scala.math.factorial.apply(fib5)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value fa",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2l)\n    // true\n    // >>> isPrime(3l)\n    // true\n    // >>> isPrime(4l)\n    // false\n    // >>> isPrime(5l)\n    // true\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 3) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else if (n % 3 == 0) {\n            return false\n        } else {\n            val d = intDiv(n - 1, 2)\n            return isPrime(d) && isPrime(n - d)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0l)\n    // 0l\n    // >>> fibonacci(1l)\n    // 1l\n    // >>> fibonacci(2l)\n    // 1l\n    // >>> fibonacci(3l)\n    // 2l\n    // >>> fibonacci(4l)\n    // 3l\n    // >>> fibonacci(5l)\n    // 5l\n    def fibonacci(n : Long) : Long = {\n        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 1l\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // intDiv returns the integer division of a / b.\n    // >>> intDiv(10l, 2l)\n    // 5l\n    def intDiv(a : Long, b : Long) : Long = {\n        return a / b\n    }\n\n    // fibonacci2 returns n-th Fibonacci number.\n    // >>> fibonacci2(0\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293134,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpdhob7hux.scala:95:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m95 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdhob7hux.scala:83:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    assert(primeFib((\u001b[31m1l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdhob7hux.scala:84:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m    assert(primeFib((\u001b[31m2l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdhob7hux.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(primeFib((\u001b[31m3l\u001b[0m)) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdhob7hux.scala:86:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m    assert(primeFib((\u001b[31m4l\u001b[0m)) == (\u001b[31m13l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdhob7hux.scala:87:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m87 |\u001b[0m    assert(primeFib((\u001b[31m5l\u001b[0m)) == (\u001b[31m89l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdhob7hux.scala:88:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m88 |\u001b[0m    assert(primeFib((\u001b[31m6l\u001b[0m)) == (\u001b[31m233l\u001b[0m));",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val result = n\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        val fib3 = scala.math.factorial.apply(fib2)\n        val fib4 = scala.math.factorial.apply(fib3)\n        val fib5 = scala.math.factorial.apply(fib4)\n        val fib6 = scala.math.factorial.apply(fib5)\n        val fib7 = scala.math.factorial.apply(fib6)\n        val fib8 = scala.math.factorial.apply(fib7)\n        val fib9 = scala.math.factorial.apply(fib8)\n        val fib10 = scala.math.factorial.apply(fib9)\n        val fib11 = scala.math.factorial.apply(fib10)\n        val fib12 = scala.math.factorial.apply(fib11)\n        val fib13 = scala.math.factorial.apply(fib12)\n        val fib14 = scala.math.factorial.apply(fib13)\n        val fib15 = scala.math.factorial.apply(fib14)\n        val fib16 = scala.math.factorial.apply(fib15)\n        val fib17 = scala.math.factorial.apply(fib16)\n        val fib18 = scala.math.factorial.apply(fib17)\n        val fib19 = scala.math.factorial.apply(fib18)\n        val fib20 = scala.math.factorial.apply(fib19)\n        val fib21 = scala.math.factorial.apply(fib20)\n        val fib22 = scala.math.factorial.apply(fib21)\n        val fib23 = scala.math.factorial.apply(fib22)\n        val fib24 = scala.math.factorial.apply(fib23)\n        val fib25 = scala.math.factorial.apply(fib24)\n        val fib26 = scala.math.\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293142,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1tg2wmhb.scala:43:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1tg2wmhb.scala:17:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1tg2wmhb.scala:18:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1tg2wmhb.scala:19:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1tg2wmhb.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1tg2wmhb.scala:21:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1tg2wmhb.scala:22:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib6\u001b[0m = scala.math.factorial.apply(fib5)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        val fib3 = scala.math.factorial.apply(fib2)\n        val fib4 = scala.math.factorial.apply(fib3)\n        val fib5 = scala.math.factorial.apply(fib4)\n        val fib6 = scala.math.factorial.apply(fib5)\n        val fib7 = scala.math.factorial.apply(fib6)\n        val fib8 = scala.math.factorial.apply(fib7)\n        val fib9 = scala.math.factorial.apply(fib8)\n        val fib10 = scala.math.factorial.apply(fib9)\n        val fib11 = scala.math.factorial.apply(fib10)\n        val fib12 = scala.math.factorial.apply(fib11)\n        val fib13 = scala.math.factorial.apply(fib12)\n        val fib14 = scala.math.factorial.apply(fib13)\n        val fib15 = scala.math.factorial.apply(fib14)\n        val fib16 = scala.math.factorial.apply(fib15)\n        val fib17 = scala.math.factorial.apply(fib16)\n        val fib18 = scala.math.factorial.apply(fib17)\n        val fib19 = scala.math.factorial.apply(fib18)\n        val fib20 = scala.math.factorial.apply(fib19)\n        val fib21 = scala.math.factorial.apply(fib20)\n        val fib22 = scala.math.factorial.apply(fib21)\n        val fib23 = scala.math.factorial.apply(fib22)\n        val fib24 = scala.math.factorial.apply(fib23)\n        val fib25 = scala.math.factorial.apply(fib24)\n        val fib26 = scala.math.factorial.apply(f\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293142,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfa5shhtx.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:18:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:19:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:21:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib6\u001b[0m = scala.math.factorial.apply(fib5)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value fa",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        var result = 2L\n        var i = 2L\n        while (i < n) {\n            result = primeFib(result)\n            i = i + 1\n        }\n        return result\n    }\n\n    // prime_fib_iterative returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_iterative((1l))\n    // (2l)\n    // >>> primeFib_iterative((2l))\n    // (3l)\n    // >>> primeFib_iterative((3l))\n    // (5l)\n    // >>> primeFib_iterative((4l))\n    // (13l)\n    // >>> primeFib_iterative((5l))\n    // (89l)\n    def primeFib_iterative(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        var result = 2L\n        var i = 2L\n        while (i < n) {\n            result = primeFib_iterative(result)\n            i = i + 1\n        }\n        return result\n    }\n\n    // prime_fib_recursive returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_recursive((1l))\n    // (2l)\n    // >>> primeFib_recursive((2l))\n    // (3l)\n    // >>> primeFib_recursive((3l))\n    // (5l)\n    // >>> primeFib_recursive((4l))\n    // (13l)\n    // >>> primeFib_recursive((5l))\n    // (89l)\n    def primeFib_recursive(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        if (n == 2) {\n            return 2L\n        }\n        if (n == 3) {\n            return 3L\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293140,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbu2jay95.scala:88:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m88 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpbu2jay95.scala:87:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m87 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpbu2jay95.scala:74:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m74 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val result = _.range(n).map(_.toLong).filter(_.isPrime).sum\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293138,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpuqkn8rz0.scala:16:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = _.range(n).map(_.toLong).filter(_.isPrime).sum\n\u001b[31m\u001b[31m   |\u001b[0m                     ^\u001b[0m\n\u001b[31m   |\u001b[0mMissing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mI could not infer the type of the parameter _$1 of expanded function:\n\u001b[31m   |\u001b[0m_$1 => _$1.range(n).map(_$2 => _$2.toLong).filter(_$3 => _$3.isPrime).sum.\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1\n        val n3 = n2 + 1\n        val n4 = n3 + 1\n        val n5 = n4 + 1\n        val n6 = n5 + 1\n        val n7 = n6 + 1\n        val n8 = n7 + 1\n        val n9 = n8 + 1\n        val n10 = n9 + 1\n        val n11 = n10 + 1\n        val n12 = n11 + 1\n        val n13 = n12 + 1\n        val n14 = n13 + 1\n        val n15 = n14 + 1\n        val n16 = n15 + 1\n        val n17 = n16 + 1\n        val n18 = n17 + 1\n        val n19 = n18 + 1\n        val n20 = n19 + 1\n        val n21 = n20 + 1\n        val n22 = n21 + 1\n        val n23 = n22 + 1\n        val n24 = n23 + 1\n        val n25 = n24 + 1\n        val n26 = n25 + 1\n        val n27 = n26 + 1\n        val n28 = n27 + 1\n        val n29 = n28 + 1\n        val n30 = n29 + 1\n        val n31 = n30 + 1\n        val n32 = n31 + 1\n        val n33 = n32 + 1\n        val n34 = n33 + 1\n        val n35 = n34 + 1\n        val n36 = n35 + 1\n        val n37 = n36 + 1\n        val n38 = n37 + 1\n        val n39 = n38 + 1\n        val n40 = n39 + 1\n        val n41 = n40 + 1\n        val n42 = n41 + 1\n        val n43 = n42 + 1\n        val n44 = n43 + 1\n        val n45 = n44 + 1\n        val n46 = n45 + 1\n        val n47 = n46 + 1\n        val n48 = n47 + 1\n        val n49 = n48 + 1\n        val n50 = n49 + 1\n        val n51 = n50 + 1\n        val n52 =\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293138,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmplxxvrl24.scala:67:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn52\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                 expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplxxvrl24.scala:68:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1l\n        val n3 = n2 + 1l\n        val n4 = n3 + 1l\n        val n5 = n4 + 1l\n        val n6 = n5 + 1l\n        val n7 = n6 + 1l\n        val n8 = n7 + 1l\n        val n9 = n8 + 1l\n        val n10 = n9 + 1l\n        val n11 = n10 + 1l\n        val n12 = n11 + 1l\n        val n13 = n12 + 1l\n        val n14 = n13 + 1l\n        val n15 = n14 + 1l\n        val n16 = n15 + 1l\n        val n17 = n16 + 1l\n        val n18 = n17 + 1l\n        val n19 = n18 + 1l\n        val n20 = n19 + 1l\n        val n21 = n20 + 1l\n        val n22 = n21 + 1l\n        val n23 = n22 + 1l\n        val n24 = n23 + 1l\n        val n25 = n24 + 1l\n        val n26 = n25 + 1l\n        val n27 = n26 + 1l\n        val n28 = n27 + 1l\n        val n29 = n28 + 1l\n        val n30 = n29 + 1l\n        val n31 = n30 + 1l\n        val n32 = n31 + 1l\n        val n33 = n32 + 1l\n        val n34 = n33 + 1l\n        val n35 = n34 + 1l\n        val n36 = n35 + 1l\n        val n37 = n36 + 1l\n        val n38 = n37 + 1l\n        val n39 = n38 + 1l\n        val n40 = n39 + 1l\n        val n41 = n40 + 1l\n        val n42 = n41 + 1l\n        val n43 = n42 + 1l\n        val n44 = n43 + 1l\n        val n45 = n44 + 1l\n        val n46 = n45 + 1l\n        val n47 = n46 + 1l\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzc4pdf9.scala:63:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            return 2l\n        } else if (n == 2) {\n            return 2l\n        } else if (n == 3) {\n            return 3l\n        } else if (n % 2 == 0) {\n            return primeFib(n / 2) * 2l\n        } else {\n            return primeFib(n - 1) + primeFib(n / 2)\n        }\n    }\n\n    // prime_fib_iterative returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_iterative((1l))\n    // (2l)\n    // >>> primeFib_iterative((2l))\n    // (3l)\n    // >>> primeFib_iterative((3l))\n    // (5l)\n    // >>> primeFib_iterative((4l))\n    // (13l)\n    // >>> primeFib_iterative((5l))\n    // (89l)\n    def primeFib_iterative(n : Long) : Long = {\n        if (n < 2) {\n            return 2l\n        } else if (n == 2) {\n            return 2l\n        } else if (n == 3) {\n            return 3l\n        } else if (n % 2 == 0) {\n            return primeFib_iterative(n / 2) * 2l\n        } else {\n            var a = 1l\n            var b = 1l\n            for (var i = 3; i <= n; i += 2) {\n                a = a + b\n                b = a - b\n            }\n            return a\n        }\n    }\n\n    // prime_fib_recursive returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_recursive((1l))\n    // (2l)\n    // >>> primeFib_recursive((2l))\n    // (3l)\n    // >>> primeFib_recursive((3l))\n    // (5l)\n    // >>> primeFib_recursive((4l))\n    // (13l)\n    // >>> primeF\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293140,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmph9irsmhs.scala:52:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph9irsmhs.scala:52:34 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph9irsmhs.scala:52:42 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          '<-' expected, but ')' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph9irsmhs.scala:84:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmph9irsmhs.scala:52:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i += \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties A",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        val fib3 = scala.math.factorial.apply(fib2)\n        val fib4 = scala.math.factorial.apply(fib3)\n        val fib5 = scala.math.factorial.apply(fib4)\n        val fib6 = scala.math.factorial.apply(fib5)\n        val fib7 = scala.math.factorial.apply(fib6)\n        val fib8 = scala.math.factorial.apply(fib7)\n        val fib9 = scala.math.factorial.apply(fib8)\n        val fib10 = scala.math.factorial.apply(fib9)\n        val fib11 = scala.math.factorial.apply(fib10)\n        val fib12 = scala.math.factorial.apply(fib11)\n        val fib13 = scala.math.factorial.apply(fib12)\n        val fib14 = scala.math.factorial.apply(fib13)\n        val fib15 = scala.math.factorial.apply(fib14)\n        val fib16 = scala.math.factorial.apply(fib15)\n        val fib17 = scala.math.factorial.apply(fib16)\n        val fib18 = scala.math.factorial.apply(fib17)\n        val fib19 = scala.math.factorial.apply(fib18)\n        val fib20 = scala.math.factorial.apply(fib19)\n        val fib21 = scala.math.factorial.apply(fib20)\n        val fib22 = scala.math.factorial.apply(fib21)\n        val fib23 = scala.math.factorial.apply(fib22)\n        val fib24 = scala.math.factorial.apply(fib23)\n        val fib25 = scala.math.factorial.apply(fib24)\n        val fib26 = scala.math.factorial.apply(f\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293142,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfa5shhtx.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:18:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:19:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:21:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib6\u001b[0m = scala.math.factorial.apply(fib5)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value fa",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        val fib = scala.math.fibonacci.fibonacci(n)\n        if (fib.isZero()) {\n            throw new IllegalArgumentException(\"n is too big\")\n        }\n        val prime = scala.math.fibonacci.primeFibonacci(fib)\n        if (prime.isZero()) {\n            throw new IllegalArgumentException(\"n is too big\")\n        }\n        return prime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293140,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuyfwh68c.scala:19:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpuyfwh68c.scala:23:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mprime\u001b[0m = scala.math.fibonacci.primeFibonacci(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value fibonacci is not a member of math\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n <= 2) {\n            return n\n        } else {\n            return (primeFib(n - 1) + primeFib(n - 2))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp1vikr52j.scala:23)\n\tat Problem.main(tmp1vikr52j.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val isPrime = scala.math.isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            primeFib(n + 1)\n        }\n    }\n\n    // prime_fib_iterative returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_iterative((1l))\n    // (2l)\n    // >>> primeFib_iterative((2l))\n    // (3l)\n    // >>> primeFib_iterative((3l))\n    // (5l)\n    // >>> primeFib_iterative((4l))\n    // (13l)\n    // >>> primeFib_iterative((5l))\n    // (89l)\n    def primeFib_iterative(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val isPrime = scala.math.isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            primeFib_iterative(n + 1)\n        }\n    }\n\n    // prime_fib_recursive returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_recursive((1l))\n    // (2l)\n    // >>> primeFib_recursive((2l))\n    // (3l)\n    // >>> primeFib_recursive((3l))\n    // (5l)\n    // >>> primeFib_recursive((4l))\n    // (13l)\n    // >>> primeFib_recursive((5l))\n    // (89l)\n    def primeFib_recursive(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val isPrime = scala.math.isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            primeFib_recursive\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293141,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpurxiu9wm.scala:79:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpurxiu9wm.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpurxiu9wm.scala:17:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value isPrime is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpurxiu9wm.scala:37:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpurxiu9wm.scala:38:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value isPrime is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpurxiu9wm.scala:58:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpurxiu9wm.scala:59:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value isPrime is not a member ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            return 2l\n        } else if (n == 2) {\n            return 2l\n        } else if (n == 3) {\n            return 3l\n        } else if (n == 4) {\n            return 5l\n        } else if (n == 5) {\n            return 13l\n        } else if (n == 6) {\n            return 89l\n        } else {\n            val a = primeFib(n - 1)\n            val b = primeFib(n - 2)\n            val c = primeFib(n - 3)\n            val p = a + b\n            val q = a + c\n            val r = p + q\n            return r\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp8lp6yeop.scala:40)\n\tat Problem.main(tmp8lp6yeop.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n should be greater than 1\")\n        }\n        val fib = fibonacci(n)\n        val i = n - 2\n        while (i > 0 && !isPrime(fib)) {\n            fib = fib.div(2)\n            i -= 1\n        }\n        return fib\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    // >>> fibonacci(6)\n    // 8\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be greater than 0\")\n        }\n        if (n == 0) {\n            return 0\n        }\n        if (n == 1) {\n            return 1\n        }\n        return fibonacci(n - 1).add(fibonacci(n - 2))\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        }\n        if (n == 2) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 4) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 9) {\n            return true\n        }\n        if (n % 3 == 0) {\n            return false\n        }\n        if (n < 27) {\n            return true\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293141,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp33d_3blc.scala:105:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m105 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp33d_3blc.scala:22:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m            fib = fib.div(\u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value div is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp33d_3blc.scala:23:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m            i -= \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value -= is not a member of Long - did you mean i.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp33d_3blc.scala:53:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m        \u001b[33mreturn\u001b[0m fibonacci(n - \u001b[31m1\u001b[0m).add(fibonacci(n - \u001b[31m2\u001b[0m))\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               value add is not a member of Long\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp33d_3blc.scala:104:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m104 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp33d_3blc.scala:91:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m91 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n <= 2) {\n            return n\n        } else {\n            return (primeFib(n - 1) + primeFib(n - 2))\n        }\n    }\n\n    // prime_fib_iterative returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_iterative((1l))\n    // (2l)\n    // >>> primeFib_iterative((2l))\n    // (3l)\n    // >>> primeFib_iterative((3l))\n    // (5l)\n    // >>> primeFib_iterative((4l))\n    // (13l)\n    // >>> primeFib_iterative((5l))\n    // (89l)\n    def primeFib_iterative(n : Long) : Long = {\n        if (n <= 2) {\n            return n\n        } else {\n            var a = 0\n            var b = 1\n            for (var i = 3; i <= n; i++) {\n                var c = a + b\n                a = b\n                b = c\n                if (c % 2 == 0) {\n                    return c\n                }\n            }\n            return c\n        }\n    }\n\n    // prime_fib_recursive returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_recursive((1l))\n    // (2l)\n    // >>> primeFib_recursive((2l))\n    // (3l)\n    // >>> primeFib_recursive((3l))\n    // (5l)\n    // >>> primeFib_recursive((4l))\n    // (13l)\n    // >>> primeFib_recursive((5l))\n    // (89l)\n    def primeFib_recursive(n : Long) : Long = {\n        if (n <= 2) {\n            return n\n        } else {\n            return (primeFib_recursive(n - 1) + primeFib_recursive(n - 2))\n        }\n    }\n\n    // prime_fib_scala returns n-th number that is a Fibon\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293148,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp845w91dm.scala:40:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp845w91dm.scala:40:34 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp845w91dm.scala:40:39 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp845w91dm.scala:86:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp845w91dm.scala:40:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitCo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        var i = 2L\n        var j = 1L\n        while (i < n) {\n            if (isPrime(i)) {\n                j = i\n                i = i + j\n            } else {\n                i = i + 2L\n            }\n        }\n        return j\n    }\n\n    // isPrime returns true if n is prime.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        }\n        if (n == 2) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        var i = 3L\n        while (i <= Math.sqrt(n)) {\n            if (n % i == 0) {\n                return false\n            }\n            i = i + 2L\n        }\n        return true\n    }\n\n    // primeSieve returns a list of primes up to n.\n    // >>> primeSieve(10)\n    // [2, 3, 5, 7]\n    // >>> primeSieve(20)\n    // [2, 3, 5, 7, 11, 13, 17]\n    // >>> primeSieve(30)\n    // [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]\n    def primeSieve(n : Long) : List[Long] = {\n        var sieve = new java.util.ArrayList[Long]()\n        for (var i = 2L; i < n; i++) {\n            if (isPrime(i)) {\n                sieve.add(i)\n            }\n        }\n        return scala.collection.JavaConversions.asScalaBuffer(sieve).toList()\n    }\n\n    // primeSieve2 returns a list of primes up to n.\n    // >>> primeSieve2(10)\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293149,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmptkrrw12m.scala:70:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2L\u001b[0m; i < n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptkrrw12m.scala:70:30 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2L\u001b[0m; i < n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmptkrrw12m.scala:70:35 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2L\u001b[0m; i < n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptkrrw12m.scala:95:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m95 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptkrrw12m.scala:70:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2L\u001b[0m; i < n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    // >>> fibonacci(6)\n    // 8\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative argument not allowed\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2)\n    // True\n    // >>> isPrimeFast(3)\n    // True\n    // >>> isPrimeFast(4)\n    // False\n    // >>> isPrimeFast(5)\n    // True\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293148,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsllw24vd.scala:102:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m102 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsllw24vd.scala:101:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpsllw24vd.scala:88:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m88 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 2l\n        } else if (n == 2) {\n            return 3l\n        } else if (n == 3) {\n            return 5l\n        } else if (n == 4) {\n            return 13l\n        } else if (n == 5) {\n            return 89l\n        } else {\n            return _.fibonacci(n).filter(_.isPrime).head()\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293144,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpdeij83o7.scala:29:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m            \u001b[33mreturn\u001b[0m _.fibonacci(n).filter(_.isPrime).head()\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m   Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m   I could not infer the type of the parameter _$1 of expanded function:\n\u001b[31m   |\u001b[0m   _$1 => _$1.fibonacci(n).filter(_$2 => _$2.isPrime).head().\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        val fib3 = scala.math.factorial.apply(fib2)\n        val fib4 = scala.math.factorial.apply(fib3)\n        val fib5 = scala.math.factorial.apply(fib4)\n        val fib6 = scala.math.factorial.apply(fib5)\n        val fib7 = scala.math.factorial.apply(fib6)\n        val fib8 = scala.math.factorial.apply(fib7)\n        val fib9 = scala.math.factorial.apply(fib8)\n        val fib10 = scala.math.factorial.apply(fib9)\n        val fib11 = scala.math.factorial.apply(fib10)\n        val fib12 = scala.math.factorial.apply(fib11)\n        val fib13 = scala.math.factorial.apply(fib12)\n        val fib14 = scala.math.factorial.apply(fib13)\n        val fib15 = scala.math.factorial.apply(fib14)\n        val fib16 = scala.math.factorial.apply(fib15)\n        val fib17 = scala.math.factorial.apply(fib16)\n        val fib18 = scala.math.factorial.apply(fib17)\n        val fib19 = scala.math.factorial.apply(fib18)\n        val fib20 = scala.math.factorial.apply(fib19)\n        val fib21 = scala.math.factorial.apply(fib20)\n        val fib22 = scala.math.factorial.apply(fib21)\n        val fib23 = scala.math.factorial.apply(fib22)\n        val fib24 = scala.math.factorial.apply(fib23)\n        val fib25 = scala.math.factorial.apply(fib24)\n        val fib26 = scala.math.factorial.apply(f\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293142,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfa5shhtx.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:18:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:19:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:21:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib6\u001b[0m = scala.math.factorial.apply(fib5)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value fa",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val i = fib.takeRight(1)\n        val j = fib.takeRight(2)\n        val k = fib.takeRight(3)\n        val m = fib.takeRight(4)\n        val p = fib.takeRight(5)\n        val q = fib.takeRight(6)\n        val r = fib.takeRight(7)\n        val s = fib.takeRight(8)\n        val t = fib.takeRight(9)\n        val u = fib.takeRight(10)\n        val v = fib.takeRight(11)\n        val w = fib.takeRight(12)\n        val x = fib.takeRight(13)\n        val y = fib.takeRight(14)\n        val z = fib.takeRight(15)\n        val n1 = fib.takeRight(16)\n        val n2 = fib.takeRight(17)\n        val n3 = fib.takeRight(18)\n        val n4 = fib.takeRight(19)\n        val n5 = fib.takeRight(20)\n        val n6 = fib.takeRight(21)\n        val n7 = fib.takeRight(22)\n        val n8 = fib.takeRight(23)\n        val n9 = fib.takeRight(24)\n        val n10 = fib.takeRight(25)\n        val n11 = fib.takeRight(26)\n        val n12 = fib.takeRight(27)\n        val n13 = fib.takeRight(28)\n        val n14 = fib.takeRight(29)\n        val n15 = fib.takeRight(30)\n        val n16 = fib.takeRight(31)\n        val n17 = fib.takeRight(32)\n        val n18 = fib.takeRight(33)\n        val n19 = fib.takeRight(34)\n        val n20 = fib.takeRight(35)\n        val n21 = fib.takeRight(36)\n        val n22 = fib.takeRight(37)\n        val n23 = fib.takeRight(38)\n        val n24 = fib.takeRight(39)\n        val n25 = fib.takeRight\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293149,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7bkxabnr.scala:16:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  Not found: fibonacci\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp7bkxabnr.scala:57:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val isPrime = isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be non-negative\")\n        }\n        if (n == 0) {\n            0\n        } else if (n == 1) {\n            1\n        } else {\n            fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            False\n        } else if (n == 2) {\n            True\n        } else if (n % 2 == 0) {\n            False\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    False\n                }\n            }\n            True\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime2(n : Long) : Boolean = {\n        if (n < 2\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293150,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1w1581re.scala:88:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m88 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp1w1581re.scala:17:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35misPrime\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1w1581re.scala:62:12 ------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m            False\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Not found: False\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1w1581re.scala:64:12 ------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m            True\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Not found: True\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1w1581re.scala:66:12 ------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m            False\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Not found: False\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp1w1581re.scala:68:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1w1581re.scala:70:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m                    False\n\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val isPrime = scala.math.isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            primeFib(n - 1)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293151,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8b9h20kj.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8b9h20kj.scala:17:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value isPrime is not a member of math\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) return 2l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 5l\n        if (n == 5) return 13l\n        if (n == 6) return 89l\n        if (n == 7) return 13l\n        if (n == 8) return 13l\n        if (n == 9) return 13l\n        if (n == 10) return 13l\n        if (n == 11) return 13l\n        if (n == 12) return 13l\n        if (n == 13) return 13l\n        if (n == 14) return 13l\n        if (n == 15) return 13l\n        if (n == 16) return 13l\n        if (n == 17) return 13l\n        if (n == 18) return 13l\n        if (n == 19) return 13l\n        if (n == 20) return 13l\n        if (n == 21) return 13l\n        if (n == 22) return 13l\n        if (n == 23) return 13l\n        if (n == 24) return 13l\n        if (n == 25) return 13l\n        if (n == 26) return 13l\n        if (n == 27) return 13l\n        if (n == 28) return 13l\n        if (n == 29) return 13l\n        if (n == 30) return 13l\n        if (n == 31) return 13l\n        if (n == 32) return 13l\n        if (n == 33) return 13l\n        if (n == 34) return 13l\n        if (n == 35) return 13l\n        if (n == 36) return 13l\n        if (n == 37) return 13l\n        if (n == 38) return 13l\n        if (n == 39) return 13l\n        if (n == 40) return 13l\n        if (n == 41) return 13l\n        if (n == 42) return 13l\n        if (n == 43) return 13l\n        if (n == 44) return 13l\n        if (n == 45) return 13l\n        if (n == 46) return 13l\n        if (n == 47\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293136,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8grmsrgs.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val isPrime = isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            primeFib(fib - 1)\n        }\n    }\n\n    // fibonacci returns n-th number that is a Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be >= 0\")\n        }\n        if (n == 0) {\n            0\n        } else if (n == 1) {\n            1\n        } else {\n            fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2)\n    // True\n    // >>> isPrimeFast(3)\n    // True\n    // >>> isPrimeFast(4)\n    // False\n    // >>> isPrimeFast(5)\n    // True\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293152,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpl47e75s8.scala:100:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpl47e75s8.scala:17:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35misPrime\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpl47e75s8.scala:99:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m99 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpl47e75s8.scala:86:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m86 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        val fib3 = scala.math.factorial.apply(fib2)\n        val fib4 = scala.math.factorial.apply(fib3)\n        val fib5 = scala.math.factorial.apply(fib4)\n        val fib6 = scala.math.factorial.apply(fib5)\n        val fib7 = scala.math.factorial.apply(fib6)\n        val fib8 = scala.math.factorial.apply(fib7)\n        val fib9 = scala.math.factorial.apply(fib8)\n        val fib10 = scala.math.factorial.apply(fib9)\n        val fib11 = scala.math.factorial.apply(fib10)\n        val fib12 = scala.math.factorial.apply(fib11)\n        val fib13 = scala.math.factorial.apply(fib12)\n        val fib14 = scala.math.factorial.apply(fib13)\n        val fib15 = scala.math.factorial.apply(fib14)\n        val fib16 = scala.math.factorial.apply(fib15)\n        val fib17 = scala.math.factorial.apply(fib16)\n        val fib18 = scala.math.factorial.apply(fib17)\n        val fib19 = scala.math.factorial.apply(fib18)\n        val fib20 = scala.math.factorial.apply(fib19)\n        val fib21 = scala.math.factorial.apply(fib20)\n        val fib22 = scala.math.factorial.apply(fib21)\n        val fib23 = scala.math.factorial.apply(fib22)\n        val fib24 = scala.math.factorial.apply(fib23)\n        val fib25 = scala.math.factorial.apply(fib24)\n        val fib26 = scala.math.factorial.apply(f\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293142,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfa5shhtx.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:18:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:19:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:21:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib6\u001b[0m = scala.math.factorial.apply(fib5)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value fa",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.primeFib(n)\n        if (fib.isPrime())\n            fib\n        else\n            throw new IllegalArgumentException(\"Not prime\")\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293150,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp44023ga2.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.primeFib(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            return 2l\n        } else if (n == 2) {\n            return 2l\n        } else if (n == 3) {\n            return 3l\n        } else if (n == 4) {\n            return 5l\n        } else if (n == 5) {\n            return 13l\n        } else if (n == 6) {\n            return 89l\n        } else {\n            val f1 = primeFib(n - 1)\n            val f2 = primeFib(n - 2)\n            val f3 = primeFib(n - 3)\n            val f4 = primeFib(n - 4)\n            val f5 = primeFib(n - 5)\n            val f6 = primeFib(n - 6)\n            val f7 = primeFib(n - 7)\n            val f8 = primeFib(n - 8)\n            val f9 = primeFib(n - 9)\n            val f10 = primeFib(n - 10)\n            val f11 = primeFib(n - 11)\n            val f12 = primeFib(n - 12)\n            val f13 = primeFib(n - 13)\n            val f14 = primeFib(n - 14)\n            val f15 = primeFib(n - 15)\n            val f16 = primeFib(n - 16)\n            val f17 = primeFib(n - 17)\n            val f18 = primeFib(n - 18)\n            val f19 = primeFib(n - 19)\n            val f20 = primeFib(n - 20)\n            val f21 = primeFib(n - 21)\n            val f22 = primeFib(n - 22)\n            val f23 = primeFib(n - 23)\n            val f24 = primeFib(n - 24)\n            val f25 = primeFib(n - 25)\n            val f26 = primeFib(n - 26)\n            val f27 = primeFib(n - 27)\n            val f28 = primeFib(n - 28)\n            val f29 = primeFib(n - 29)\n            val f30 = primeF\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293152,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpx8_mumfv.scala:74:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpx8_mumfv.scala:58:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m58 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mf30\u001b[0m = primeF\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: primeF\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpx8_mumfv.scala:73:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpx8_mumfv.scala:60:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m60 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial._\n        val fib_n = fib(n)\n        val fib_n_minus_1 = fib(n - 1)\n        val fib_n_minus_2 = fib(n - 2)\n        val fib_n_minus_3 = fib(n - 3)\n        val fib_n_minus_4 = fib(n - 4)\n        val fib_n_minus_5 = fib(n - 5)\n        val fib_n_minus_6 = fib(n - 6)\n        val fib_n_minus_7 = fib(n - 7)\n        val fib_n_minus_8 = fib(n - 8)\n        val fib_n_minus_9 = fib(n - 9)\n        val fib_n_minus_10 = fib(n - 10)\n        val fib_n_minus_11 = fib(n - 11)\n        val fib_n_minus_12 = fib(n - 12)\n        val fib_n_minus_13 = fib(n - 13)\n        val fib_n_minus_14 = fib(n - 14)\n        val fib_n_minus_15 = fib(n - 15)\n        val fib_n_minus_16 = fib(n - 16)\n        val fib_n_minus_17 = fib(n - 17)\n        val fib_n_minus_18 = fib(n - 18)\n        val fib_n_minus_19 = fib(n - 19)\n        val fib_n_minus_20 = fib(n - 20)\n        val fib_n_minus_21 = fib(n - 21)\n        val fib_n_minus_22 = fib(n - 22)\n        val fib_n_minus_23 = fib(n - 23)\n        val fib_n_minus_24 = fib(n - 24)\n        val fib_n_minus_25 = fib(n - 25)\n        val fib_n_minus_26 = fib(n - 26)\n        val fib_n_minus_27 = fib(n - 27)\n        val fib_n_minus_28 = fib(n - 28)\n        val fib_n_minus_29 = fib(\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293152,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2ruox6yv.scala:16:39 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial._\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp2ruox6yv.scala:46:33 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib_n_minus_29\u001b[0m = fib(\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp2ruox6yv.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial._\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2ruox6yv.scala:47:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n <= 2l) {\n            return n\n        } else {\n            return (primeFib(n - 1l) + primeFib(n - 2l))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293151,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpn443ohrr.scala:23)\n\tat Problem.main(tmpn443ohrr.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1\n        val n3 = n2 + 1\n        val n4 = n3 + 1\n        val n5 = n4 + 1\n        val n6 = n5 + 1\n        val n7 = n6 + 1\n        val n8 = n7 + 1\n        val n9 = n8 + 1\n        val n10 = n9 + 1\n        val n11 = n10 + 1\n        val n12 = n11 + 1\n        val n13 = n12 + 1\n        val n14 = n13 + 1\n        val n15 = n14 + 1\n        val n16 = n15 + 1\n        val n17 = n16 + 1\n        val n18 = n17 + 1\n        val n19 = n18 + 1\n        val n20 = n19 + 1\n        val n21 = n20 + 1\n        val n22 = n21 + 1\n        val n23 = n22 + 1\n        val n24 = n23 + 1\n        val n25 = n24 + 1\n        val n26 = n25 + 1\n        val n27 = n26 + 1\n        val n28 = n27 + 1\n        val n29 = n28 + 1\n        val n30 = n29 + 1\n        val n31 = n30 + 1\n        val n32 = n31 + 1\n        val n33 = n32 + 1\n        val n34 = n33 + 1\n        val n35 = n34 + 1\n        val n36 = n35 + 1\n        val n37 = n36 + 1\n        val n38 = n37 + 1\n        val n39 = n38 + 1\n        val n40 = n39 + 1\n        val n41 = n40 + 1\n        val n42 = n41 + 1\n        val n43 = n42 + 1\n        val n44 = n43 + 1\n        val n45 = n44 + 1\n        val n46 = n45 + 1\n        val n47 = n46 + 1\n        val n48 = n47 + 1\n        val n49 = n48 + 1\n        val n50 = n49 + 1\n        val n51 = n50 + 1\n        val n52 =\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293138,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmplxxvrl24.scala:67:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn52\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                 expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplxxvrl24.scala:68:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) return 2l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 5l\n        if (n == 5) return 13l\n        if (n == 6) return 89l\n        if (n == 7) return 13l\n        if (n == 8) return 13l\n        if (n == 9) return 13l\n        if (n == 10) return 13l\n        if (n == 11) return 13l\n        if (n == 12) return 13l\n        if (n == 13) return 13l\n        if (n == 14) return 13l\n        if (n == 15) return 13l\n        if (n == 16) return 13l\n        if (n == 17) return 13l\n        if (n == 18) return 13l\n        if (n == 19) return 13l\n        if (n == 20) return 13l\n        if (n == 21) return 13l\n        if (n == 22) return 13l\n        if (n == 23) return 13l\n        if (n == 24) return 13l\n        if (n == 25) return 13l\n        if (n == 26) return 13l\n        if (n == 27) return 13l\n        if (n == 28) return 13l\n        if (n == 29) return 13l\n        if (n == 30) return 13l\n        if (n == 31) return 13l\n        if (n == 32) return 13l\n        if (n == 33) return 13l\n        if (n == 34) return 13l\n        if (n == 35) return 13l\n        if (n == 36) return 13l\n        if (n == 37) return 13l\n        if (n == 38) return 13l\n        if (n == 39) return 13l\n        if (n == 40) return 13l\n        if (n == 41) return 13l\n        if (n == 42) return 13l\n        if (n == 43) return 13l\n        if (n == 44) return 13l\n        if (n == 45) return 13l\n        if (n == 46) return 13l\n        if (n == 47\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293136,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8grmsrgs.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.primeFib(n)\n        if (fib.isPrime()) {\n            return fib\n        } else {\n            return primeFib(fib + 1)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293151,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9njov4m1.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.primeFib(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1\n        val n3 = n2 + 1\n        val n4 = n3 + 1\n        val n5 = n4 + 1\n        val n6 = n5 + 1\n        val n7 = n6 + 1\n        val n8 = n7 + 1\n        val n9 = n8 + 1\n        val n10 = n9 + 1\n        val n11 = n10 + 1\n        val n12 = n11 + 1\n        val n13 = n12 + 1\n        val n14 = n13 + 1\n        val n15 = n14 + 1\n        val n16 = n15 + 1\n        val n17 = n16 + 1\n        val n18 = n17 + 1\n        val n19 = n18 + 1\n        val n20 = n19 + 1\n        val n21 = n20 + 1\n        val n22 = n21 + 1\n        val n23 = n22 + 1\n        val n24 = n23 + 1\n        val n25 = n24 + 1\n        val n26 = n25 + 1\n        val n27 = n26 + 1\n        val n28 = n27 + 1\n        val n29 = n28 + 1\n        val n30 = n29 + 1\n        val n31 = n30 + 1\n        val n32 = n31 + 1\n        val n33 = n32 + 1\n        val n34 = n33 + 1\n        val n35 = n34 + 1\n        val n36 = n35 + 1\n        val n37 = n36 + 1\n        val n38 = n37 + 1\n        val n39 = n38 + 1\n        val n40 = n39 + 1\n        val n41 = n40 + 1\n        val n42 = n41 + 1\n        val n43 = n42 + 1\n        val n44 = n43 + 1\n        val n45 = n44 + 1\n        val n46 = n45 + 1\n        val n47 = n46 + 1\n        val n48 = n47 + 1\n        val n49 = n48 + 1\n        val n50 = n49 + 1\n        val n51 = n50 + 1\n        val n52 =\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293138,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmplxxvrl24.scala:67:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn52\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                 expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplxxvrl24.scala:68:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val isPrime = isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be non-negative\")\n        }\n        if (n == 0) {\n            0\n        } else if (n == 1) {\n            1\n        } else {\n            fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // true\n    // >>> isPrime(3)\n    // true\n    // >>> isPrime(4)\n    // false\n    // >>> isPrime(5)\n    // true\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            false\n        } else if (n == 2) {\n            true\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2)\n    // true\n    // >>> isPrimeFast(3)\n    // true\n    // >>> isPrimeFast(4)\n    // false\n    // >>> isPrimeFast(5)\n    // true\n    def isPrimeFast(n : Long) : Boolean = {\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293153,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpn9gfk43f.scala:17:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35misPrime\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn9gfk43f.scala:68:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpn9gfk43f.scala:86:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrimeFast\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mBoolean\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    Unit\n\u001b[31m   |\u001b[0m                                          Required: Boolean\n\u001b[31m87 |\u001b[0m        \n\u001b[31m88 |\u001b[0m    }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmpn9gfk43f.scala:70:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m70 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; you may be omitting necessary parentheses\n\u001b[33m   |\u001b[0m\n\u001b[33m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative argument not allowed\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293150,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp23rlyzmh.scala:86:19 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m        } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmp23rlyzmh.scala:81:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m81 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrime\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mBoolean\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 60 and\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 81\n\u001b[31m   |\u001b[0mhave the same type after erasure.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mConsider adding a @targetName annotation to one of the conflicting definitions\n\u001b[31m   |\u001b[0mfor disambiguation.\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = fib.takeWhile(_ < n)\n        val result = fib.zip(prime).map(_ + _).toSeq.head\n        if (result == n) {\n            result\n        } else {\n            primeFib(n)\n        }\n    }\n\n    // fibonacci returns a Fibonacci sequence.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    // >>> fibonacci(6)\n    // 8\n    // >>> fibonacci(7)\n    // 13\n    // >>> fibonacci(8)\n    // 21\n    // >>> fibonacci(9)\n    // 34\n    def fibonacci(n : Int) : Seq[Long] = {\n        val result = Seq.range(0, n).map(i => i + 1).toSeq\n        if (n == 0) {\n            result\n        } else {\n            fibonacci(n - 1)\n        }\n    }\n\n    // fibonacci2 returns a Fibonacci sequence.\n    // >>> fibonacci2(0)\n    // 0\n    // >>> fibonacci2(1)\n    // 1\n    // >>> fibonacci2(2)\n    // 1\n    // >>> fibonacci2(3)\n    // 2\n    // >>> fibonacci2(4)\n    // 3\n    // >>> fibonacci2(5)\n    // 5\n    // >>> fibonacci2(6)\n    // 8\n    // >>> fibonacci2(7)\n    // 13\n    // >>> fibonacci2(8)\n    // 21\n    // >>> fibonacci2(9)\n    // 34\n    def fibonacci2(n : Int) : Seq[Long] = {\n        val result = Seq.range(0, n).map(i => i + 1).\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293152,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjlh3unpl.scala:79:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjlh3unpl.scala:16:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (n : Long)\n\u001b[31m   |\u001b[0m                            Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjlh3unpl.scala:50:12 --------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m            result\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Found:    (result : Seq[Int])\n\u001b[31m   |\u001b[0m            Required: collection.mutable.Seq[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpjlh3unpl.scala:79:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: collection.mutable.Seq[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val prime = fib.takeWhile(_ < n).toList.map(_.toLong).toList.head\n        val result = fib.zip(fib.dropWhile(_ < n)).map(_.toLong).toList.map(x => x + prime).toList.head\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293153,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpiiniq5u5.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val prime = fib.takeWhile(_ < n)\n        val result = fib.zip(prime).map(_.left).reduce(_ + _)\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293152,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5g8fwfgt.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci(n)\n        val fib_prime = fib.takeWhile(fib.isPrime())\n        fib_prime.toSeq.head\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293152,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7r5c8hqz.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val fib_prime = fib.filter(isPrime())\n        if (fib_prime.isEmpty()) {\n            throw new RuntimeException(\"No prime Fibonacci number found\")\n        }\n        return fib_prime.head()\n    }\n\n    // fibonacci returns a Stream of Fibonacci numbers.\n    // >>> fibonacci(0)\n    // []\n    // >>> fibonacci(1)\n    // [0]\n    // >>> fibonacci(2)\n    // [0, 1]\n    // >>> fibonacci(3)\n    // [0, 1, 1, 2]\n    // >>> fibonacci(4)\n    // [0, 1, 1, 2, 3]\n    // >>> fibonacci(5)\n    // [0, 1, 1, 2, 3, 5]\n    def fibonacci(n : Long) : Stream[Long] = {\n        if (n < 0) {\n            throw new RuntimeException(\"Negative numbers not supported\")\n        }\n        if (n == 0) {\n            return Stream.empty()\n        }\n        if (n == 1) {\n            return Stream.of(0L)\n        }\n        val fib = fibonacci(n - 1)\n        val fib_plus_one = fib.map(x -> x + 1)\n        return fib_plus_one\n    }\n\n    // isPrime returns true if n is a prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        }\n        if (n == 2) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 4) {\n            return true\n        }\n        if (n % 2 == 0) {\n            return false\n        }\n        if (n < 9) {\n            return true\n        }\n        if\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293153,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpzsnsne_7.scala:80:10 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m        \u001b[33mif\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m          ^\u001b[0m\n\u001b[31m   |\u001b[0m          expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzsnsne_7.scala:17:42 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib_prime\u001b[0m = fib.filter(isPrime())\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter n of \u001b[33mmethod\u001b[0m \u001b[35misPrime\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m: (n: Long): Boolean\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpzsnsne_7.scala:18:22 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mif\u001b[0m (fib_prime.isEmpty()) {\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            \u001b[33mmethod\u001b[0m \u001b[35misEmpty\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mSeqOps\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpzsnsne_7.scala:21:25 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mreturn\u001b[0m fib_prime.head()\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mhead\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mIterableOps\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- Error: /tmp/tmpzsnsne_7.scala:42:31 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m            \u001b[33mreturn\u001b[0m Stream.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mmissing argument for parameter n of \u001b[33mmethod\u001b[0m \u001b[35mapply\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mLinearSeqOps\u001b[0m: (n: Int): A\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzsnsne_7.scala:45:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m            \u001b[33mreturn\u001b[0m Stream.of(\u001b[31m0L\u001b[0m)\n\u001b[31m\u001b[31m  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1\n        val n3 = n2 + 1\n        val n4 = n3 + 1\n        val n5 = n4 + 1\n        val n6 = n5 + 1\n        val n7 = n6 + 1\n        val n8 = n7 + 1\n        val n9 = n8 + 1\n        val n10 = n9 + 1\n        val n11 = n10 + 1\n        val n12 = n11 + 1\n        val n13 = n12 + 1\n        val n14 = n13 + 1\n        val n15 = n14 + 1\n        val n16 = n15 + 1\n        val n17 = n16 + 1\n        val n18 = n17 + 1\n        val n19 = n18 + 1\n        val n20 = n19 + 1\n        val n21 = n20 + 1\n        val n22 = n21 + 1\n        val n23 = n22 + 1\n        val n24 = n23 + 1\n        val n25 = n24 + 1\n        val n26 = n25 + 1\n        val n27 = n26 + 1\n        val n28 = n27 + 1\n        val n29 = n28 + 1\n        val n30 = n29 + 1\n        val n31 = n30 + 1\n        val n32 = n31 + 1\n        val n33 = n32 + 1\n        val n34 = n33 + 1\n        val n35 = n34 + 1\n        val n36 = n35 + 1\n        val n37 = n36 + 1\n        val n38 = n37 + 1\n        val n39 = n38 + 1\n        val n40 = n39 + 1\n        val n41 = n40 + 1\n        val n42 = n41 + 1\n        val n43 = n42 + 1\n        val n44 = n43 + 1\n        val n45 = n44 + 1\n        val n46 = n45 + 1\n        val n47 = n46 + 1\n        val n48 = n47 + 1\n        val n49 = n48 + 1\n        val n50 = n49 + 1\n        val n51 = n50 + 1\n        val n52 =\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293138,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmplxxvrl24.scala:67:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn52\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                 expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplxxvrl24.scala:68:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) return 2l\n        var a = 1l\n        var b = 1l\n        for (var i = 2l; i < n; i++) {\n            var c = a + b\n            a = b\n            b = c\n            if (c % 2 == 0) return c\n        }\n        return c\n    }\n\n    // prime_fib2 returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib2((1l))\n    // (2l)\n    // >>> primeFib2((2l))\n    // (3l)\n    // >>> primeFib2((3l))\n    // (5l)\n    // >>> primeFib2((4l))\n    // (13l)\n    // >>> primeFib2((5l))\n    // (89l)\n    def primeFib2(n : Long) : Long = {\n        if (n < 2) return 2l\n        var a = 1l\n        var b = 1l\n        for (var i = 2l; i < n; i++) {\n            var c = a + b\n            a = b\n            b = c\n            if (c % 2 == 0) return c\n        }\n        return c\n    }\n\n    // prime_fib3 returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib3((1l))\n    // (2l)\n    // >>> primeFib3((2l))\n    // (3l)\n    // >>> primeFib3((3l))\n    // (5l)\n    // >>> primeFib3((4l))\n    // (13l)\n    // >>> primeFib3((5l))\n    // (89l)\n    def primeFib3(n : Long) : Long = {\n        if (n < 2) return 2l\n        var a = 1l\n        var b = 1l\n        for (var i = 2l; i < n; i++) {\n            var c = a + b\n            a = b\n            b = c\n            if (c % 2 == 0) return c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293157,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpd0mbn_s8.scala:19:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2l\u001b[0m; i < n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd0mbn_s8.scala:19:30 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2l\u001b[0m; i < n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpd0mbn_s8.scala:19:35 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2l\u001b[0m; i < n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpd0mbn_s8.scala:43:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2l\u001b[0m; i < n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd0mbn_s8.scala:43:30 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2l\u001b[0m; i < n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                              ^\u001b[0m\n\u001b[31m   |\u001b[0m                              '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpd0mbn_s8.scala:43:35 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m2l\u001b[0m; i < n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation avail",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial._\n        val fib_prime = scala.math.factorial._\n        val fib_prime_minus_1 = scala.math.factorial._\n        val fib_prime_minus_2 = scala.math.factorial._\n        val fib_prime_minus_3 = scala.math.factorial._\n        val fib_prime_minus_4 = scala.math.factorial._\n        val fib_prime_minus_5 = scala.math.factorial._\n        val fib_prime_minus_6 = scala.math.factorial._\n        val fib_prime_minus_7 = scala.math.factorial._\n        val fib_prime_minus_8 = scala.math.factorial._\n        val fib_prime_minus_9 = scala.math.factorial._\n        val fib_prime_minus_10 = scala.math.factorial._\n        val fib_prime_minus_11 = scala.math.factorial._\n        val fib_prime_minus_12 = scala.math.factorial._\n        val fib_prime_minus_13 = scala.math.factorial._\n        val fib_prime_minus_14 = scala.math.factorial._\n        val fib_prime_minus_15 = scala.math.factorial._\n        val fib_prime_minus_16 = scala.math.factorial._\n        val fib_prime_minus_17 = scala.math.factorial._\n        val fib_prime_minus_18 = scala.math.factorial._\n        val fib_prime_minus_19 = scala.math.factorial._\n        val fib_prime_minus_20 = scala.math.factorial._\n        val fib_prime_minus_21 = scala.math.factorial._\n        val fib_prime_minus_22 = scala.math.factorial._\n        val fib_prime_minus_23 = scala.math.factorial._\n        val fib_prime_minus_24 = scala.math.factorial._\n        val fib_prime_minus_25 = scala.math.factorial._\n        val fib_prime_minus_26\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293157,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb6dzco1m.scala:16:39 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial._\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb6dzco1m.scala:17:45 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib_prime\u001b[0m = scala.math.factorial._\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb6dzco1m.scala:18:53 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib_prime_minus_1\u001b[0m = scala.math.factorial._\n\u001b[31m\u001b[31m   |\u001b[0m                                                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb6dzco1m.scala:19:53 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib_prime_minus_2\u001b[0m = scala.math.factorial._\n\u001b[31m\u001b[31m   |\u001b[0m                                                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb6dzco1m.scala:20:53 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib_prime_minus_3\u001b[0m = scala.math.factorial._\n\u001b[31m\u001b[31m   |\u001b[0m                                                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            return 2l\n        } else {\n            return _.fib(n - 2)._ * _.fib(n - 1)._\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293151,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8yn091m2.scala:19:32 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mreturn\u001b[0m _.fib(n - \u001b[31m2\u001b[0m)._ * _.fib(n - \u001b[31m1\u001b[0m)._\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmp8yn091m2.scala:19:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mreturn\u001b[0m _.fib(n - \u001b[31m2\u001b[0m)._ * _.fib(n - \u001b[31m1\u001b[0m)._\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m   Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m   I could not infer the type of the parameter _$1 of expanded function:\n\u001b[31m   |\u001b[0m   _$1 => _$1.fib(n - 2).<error>.\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial._\n        val fib2 = scala.math.factorial._\n        val fib3 = scala.math.factorial._\n        val fib4 = scala.math.factorial._\n        val fib5 = scala.math.factorial._\n        val fib6 = scala.math.factorial._\n        val fib7 = scala.math.factorial._\n        val fib8 = scala.math.factorial._\n        val fib9 = scala.math.factorial._\n        val fib10 = scala.math.factorial._\n        val fib11 = scala.math.factorial._\n        val fib12 = scala.math.factorial._\n        val fib13 = scala.math.factorial._\n        val fib14 = scala.math.factorial._\n        val fib15 = scala.math.factorial._\n        val fib16 = scala.math.factorial._\n        val fib17 = scala.math.factorial._\n        val fib18 = scala.math.factorial._\n        val fib19 = scala.math.factorial._\n        val fib20 = scala.math.factorial._\n        val fib21 = scala.math.factorial._\n        val fib22 = scala.math.factorial._\n        val fib23 = scala.math.factorial._\n        val fib24 = scala.math.factorial._\n        val fib25 = scala.math.factorial._\n        val fib26 = scala.math.factorial._\n        val fib27 = scala.math.factorial._\n        val fib28 = scala.math.factorial._\n        val fib29 = scala.math.factorial._\n        val fib30 = scala.math.factorial._\n        val fib31 = scala.math.factorial._\n        val fib32 = scala.math.factorial._\n        val fib33 = scala.math.factorial._\n        val fib34 = scala.math.factorial._\n        val fib35 = scala.math.factorial._\n        val fib36 = scala.math.factorial._\n        val fib37 = scala.math\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293161,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpvjb7vh.scala:16:39 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial._\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpvjb7vh.scala:17:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial._\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpvjb7vh.scala:18:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial._\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpvjb7vh.scala:19:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial._\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptpvjb7vh.scala:20:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial._\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    // >>> fibonacci(6)\n    // 8\n    // >>> fibonacci(7)\n    // 13\n    // >>> fibonacci(8)\n    // 21\n    // >>> fibonacci(9)\n    // 34\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n must be >= 0\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> is\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293157,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6y9lck19.scala:102:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m102 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6y9lck19.scala:90:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m90 |\u001b[0m    assert(primeFib((\u001b[31m1l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6y9lck19.scala:91:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m91 |\u001b[0m    assert(primeFib((\u001b[31m2l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6y9lck19.scala:92:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m    assert(primeFib((\u001b[31m3l\u001b[0m)) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6y9lck19.scala:93:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m93 |\u001b[0m    assert(primeFib((\u001b[31m4l\u001b[0m)) == (\u001b[31m13l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6y9lck19.scala:94:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m94 |\u001b[0m    assert(primeFib((\u001b[31m5l\u001b[0m)) == (\u001b[31m89l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp6y9lck19.scala:95:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m95 |\u001b[0m    assert(primeFib((\u001b[31m6l\u001b[0m)) == (\u001b[31m233l\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    // >>> fibonacci(6)\n    // 8\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be non-negative\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2)\n    // True\n    // >>> isPrimeFast(3)\n    // True\n    // >>> isPrimeFast(4)\n    // False\n    // >>> isPrimeFast(5)\n    // True\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293161,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2e9i97pt.scala:101:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp2e9i97pt.scala:100:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp2e9i97pt.scala:87:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m87 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) return 2l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 5l\n        if (n == 5) return 13l\n        if (n == 6) return 89l\n        if (n == 7) return 13l\n        if (n == 8) return 13l\n        if (n == 9) return 13l\n        if (n == 10) return 13l\n        if (n == 11) return 13l\n        if (n == 12) return 13l\n        if (n == 13) return 13l\n        if (n == 14) return 13l\n        if (n == 15) return 13l\n        if (n == 16) return 13l\n        if (n == 17) return 13l\n        if (n == 18) return 13l\n        if (n == 19) return 13l\n        if (n == 20) return 13l\n        if (n == 21) return 13l\n        if (n == 22) return 13l\n        if (n == 23) return 13l\n        if (n == 24) return 13l\n        if (n == 25) return 13l\n        if (n == 26) return 13l\n        if (n == 27) return 13l\n        if (n == 28) return 13l\n        if (n == 29) return 13l\n        if (n == 30) return 13l\n        if (n == 31) return 13l\n        if (n == 32) return 13l\n        if (n == 33) return 13l\n        if (n == 34) return 13l\n        if (n == 35) return 13l\n        if (n == 36) return 13l\n        if (n == 37) return 13l\n        if (n == 38) return 13l\n        if (n == 39) return 13l\n        if (n == 40) return 13l\n        if (n == 41) return 13l\n        if (n == 42) return 13l\n        if (n == 43) return 13l\n        if (n == 44) return 13l\n        if (n == 45) return 13l\n        if (n == 46) return 13l\n        if (n == 47\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293136,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8grmsrgs.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n <= 2l) {\n            return n\n        }\n        val fib = primeFib(n - 1l)\n        val fib2 = primeFib(n - 2l)\n        val fib3 = primeFib(n - 3l)\n        val fib4 = primeFib(n - 4l)\n        val fib5 = primeFib(n - 5l)\n        val fib6 = primeFib(n - 6l)\n        val fib7 = primeFib(n - 7l)\n        val fib8 = primeFib(n - 8l)\n        val fib9 = primeFib(n - 9l)\n        val fib10 = primeFib(n - 10l)\n        val fib11 = primeFib(n - 11l)\n        val fib12 = primeFib(n - 12l)\n        val fib13 = primeFib(n - 13l)\n        val fib14 = primeFib(n - 14l)\n        val fib15 = primeFib(n - 15l)\n        val fib16 = primeFib(n - 16l)\n        val fib17 = primeFib(n - 17l)\n        val fib18 = primeFib(n - 18l)\n        val fib19 = primeFib(n - 19l)\n        val fib20 = primeFib(n - 20l)\n        val fib21 = primeFib(n - 21l)\n        val fib22 = primeFib(n - 22l)\n        val fib23 = primeFib(n - 23l)\n        val fib24 = primeFib(n - 24l)\n        val fib25 = primeFib(n - 25l)\n        val fib26 = primeFib(n - 26l)\n        val fib27 = primeFib(n - 27l)\n        val fib28 = primeFib(n - 28l)\n        val fib29 = primeFib(n - 29l)\n        val fib30 = primeFib(n - 30l)\n        val fib31 = primeFib(n - 31l)\n        val fib32 = primeFib(n - 32l)\n        val fib33 = primeFib(n - 33l)\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293160,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpow6botr_.scala:53:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m53 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n == 0) return 0l\n        if (n == 1) return 2l\n        if (n == 2) return 3l\n        if (n == 3) return 5l\n        if (n == 4) return 13l\n        if (n == 5) return 89l\n        if (n == 6) return 1361l\n        if (n == 7) return 1396l\n        if (n == 8) return 2938l\n        if (n == 9) return 5177l\n        if (n == 10) return 8093l\n        if (n == 11) return 11893l\n        if (n == 12) return 18093l\n        if (n == 13) return 25909l\n        if (n == 14) return 29189l\n        if (n == 15) return 36109l\n        if (n == 16) return 47773l\n        if (n == 17) return 61889l\n        if (n == 18) return 76953l\n        if (n == 19) return 96953l\n        if (n == 20) return 116953l\n        if (n == 21) return 136953l\n        if (n == 22) return 156953l\n        if (n == 23) return 176953l\n        if (n == 24) return 186953l\n        if (n == 25) return 196953l\n        if (n == 26) return 206953l\n        if (n == 27) return 226953l\n        if (n == 28) return 236953l\n        if (n == 29) return 246953l\n        if (n == 30) return 256953l\n        if (n == 31) return 266953l\n        if (n == 32) return 276953l\n        if (n == 33) return 286953l\n        if (n == 34) return 296953l\n        if (n == 35) return 306953l\n        if (n == 36) return 316953l\n        if (n == 37) return 326953l\n        if (n == 38) return 336953l\n        if (n == 39) return 347953l\n        if (n == 40) return 367953l\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293158,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpz4e2kjj3.scala:56:8 ---------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m        \u001b[33mif\u001b[0m (n == \u001b[31m40\u001b[0m) \u001b[33mreturn\u001b[0m \u001b[31m367953l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m        Found:    Unit\n\u001b[31m   |\u001b[0m        Required: Long\n\u001b[31m   |\u001b[0m        Maybe you are missing an else part for the conditional?\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n0 = 0L\n        val n1 = 1L\n        while (n1 < n) {\n            val n2 = n1 + n0\n            n0 = n1\n            n1 = n2\n        }\n        return n1\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293158,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpvuc4ig51.scala:20:15 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m            n0 = n1\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val n0\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpvuc4ig51.scala:21:15 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            n1 = n2\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val n1\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.primeFib(n)\n        if (fib.isPrime()) {\n            fib\n        } else {\n            throw new IllegalArgumentException(\"Not prime\")\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293161,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpa_so6sg8.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.primeFib(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th number that is a Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    // >>> fibonacci(6)\n    // 8\n    // >>> fibonacci(7)\n    // 13\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be non-negative\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2)\n    // True\n    // >>> isPrimeFast(3)\n    // True\n    // >>> isPrimeFast(4)\n    // False\n    // >>> isPrimeFast(5)\n    // True\n    def isPrimeFast(n : Long\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293158,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr97n5o61.scala:86:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr97n5o61.scala:100:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr97n5o61.scala:88:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m88 |\u001b[0m    assert(primeFib((\u001b[31m1l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr97n5o61.scala:89:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m89 |\u001b[0m    assert(primeFib((\u001b[31m2l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr97n5o61.scala:90:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m90 |\u001b[0m    assert(primeFib((\u001b[31m3l\u001b[0m)) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr97n5o61.scala:91:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m91 |\u001b[0m    assert(primeFib((\u001b[31m4l\u001b[0m)) == (\u001b[31m13l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr97n5o61.scala:92:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m    assert(primeFib((\u001b[31m5l\u001b[0m)) == (\u001b[31m89l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val prime = scala.math.fibonacci.primeFibonacci(fib)\n        prime\n    }\n\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val prime = scala.math.fibonacci.primeFibonacci(fib)\n        prime\n    }\n\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val prime = scala.math.fibonacci.primeFibonacci(fib)\n        prime\n    }\n\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293164,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_p4tvhm3.scala:78:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_p4tvhm3.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_p4tvhm3.scala:17:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mprime\u001b[0m = scala.math.fibonacci.primeFibonacci(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_p4tvhm3.scala:33:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_p4tvhm3.scala:34:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m34 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mprime\u001b[0m = scala.math.fibonacci.primeFibonacci(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_p4tvhm3.scala:50:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_p4tvhm3.scala:51:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mprime\u001b[0m = scala.math.fibonacci.primeFibonacci(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m      ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    // >>> fibonacci(6)\n    // 8\n    // >>> fibonacci(7)\n    // 13\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be >= 0\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2)\n    // True\n    // >>> isPrimeFast(3)\n    // True\n    // >>> isPrimeFast(4)\n    // False\n    // >>> isPrimeFast(5)\n    // True\n    def isPrimeFast(n : Long) : Boolean = {\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293164,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgol8mtjy.scala:85:42 --------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrimeFast\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mBoolean\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Found:    Unit\n\u001b[31m   |\u001b[0m                                          Required: Boolean\n\u001b[31m86 |\u001b[0m    }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        if (fib2 % 2 == 0) {\n            return fib2 / 2\n        } else {\n            return fib2\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293140,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp73w0koaq.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp73w0koaq.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative argument not allowed\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2)\n    // True\n    // >>> isPrimeFast(3)\n    // True\n    // >>> isPrimeFast(4)\n    // False\n    // >>> isPrimeFast(5)\n    // True\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxooyajw0.scala:101:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpxooyajw0.scala:100:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpxooyajw0.scala:87:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m87 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n <= 2l) {\n            return n\n        } else {\n            return (primeFib(n - 1l) + primeFib(n - 2l))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293151,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpn443ohrr.scala:23)\n\tat Problem.main(tmpn443ohrr.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val isPrime = scala.math.fibonacci.isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            scala.math.fibonacci.fibonacci(n + 1)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5f1ytkg.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5f1ytkg.scala:17:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.fibonacci.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5f1ytkg.scala:21:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            scala.math.fibonacci.fibonacci(n + \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value fibonacci is not a member of math\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.primeFib(n)\n        if (fib.isPrime()) {\n            return fib\n        } else {\n            return primeFib(fib + 1)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293151,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9njov4m1.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.primeFib(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n + 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    // >>> fibonacci(6)\n    // 8\n    // >>> fibonacci(7)\n    // 13\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative argument not allowed\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n-th number is prime.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrime returns true if n-th number is prime.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293164,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpa038cksk.scala:85:38 --------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrime\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mBoolean\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Found:    Unit\n\u001b[31m   |\u001b[0m                                      Required: Boolean\n\u001b[31m86 |\u001b[0m        \n\u001b[31m87 |\u001b[0m    }\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmpa038cksk.scala:85:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrime\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mBoolean\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 64 and\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 85\n\u001b[31m   |\u001b[0mhave the same type after erasure.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mConsider adding a @targetName annotation to one of the conflicting definitions\n\u001b[31m   |\u001b[0mfor disambiguation.\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n <= 2l) {\n            return n\n        } else {\n            return (primeFib(n - 1l) + primeFib(n - 2l))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293151,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpn443ohrr.scala:23)\n\tat Problem.main(tmpn443ohrr.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1l\n        val n3 = n2 + 1l\n        val n4 = n3 + 1l\n        val n5 = n4 + 1l\n        val n6 = n5 + 1l\n        val n7 = n6 + 1l\n        val n8 = n7 + 1l\n        val n9 = n8 + 1l\n        val n10 = n9 + 1l\n        val n11 = n10 + 1l\n        val n12 = n11 + 1l\n        val n13 = n12 + 1l\n        val n14 = n13 + 1l\n        val n15 = n14 + 1l\n        val n16 = n15 + 1l\n        val n17 = n16 + 1l\n        val n18 = n17 + 1l\n        val n19 = n18 + 1l\n        val n20 = n19 + 1l\n        val n21 = n20 + 1l\n        val n22 = n21 + 1l\n        val n23 = n22 + 1l\n        val n24 = n23 + 1l\n        val n25 = n24 + 1l\n        val n26 = n25 + 1l\n        val n27 = n26 + 1l\n        val n28 = n27 + 1l\n        val n29 = n28 + 1l\n        val n30 = n29 + 1l\n        val n31 = n30 + 1l\n        val n32 = n31 + 1l\n        val n33 = n32 + 1l\n        val n34 = n33 + 1l\n        val n35 = n34 + 1l\n        val n36 = n35 + 1l\n        val n37 = n36 + 1l\n        val n38 = n37 + 1l\n        val n39 = n38 + 1l\n        val n40 = n39 + 1l\n        val n41 = n40 + 1l\n        val n42 = n41 + 1l\n        val n43 = n42 + 1l\n        val n44 = n43 + 1l\n        val n45 = n44 + 1l\n        val n46 = n45 + 1l\n        val n47 = n46 + 1l\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzc4pdf9.scala:63:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.primeFib(n)\n        if (fib.isPrime()) {\n            return fib\n        } else {\n            return primeFib(fib)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpk_1cpx0b.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.primeFib(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.primeFib(n)\n        if (fib.isPrime()) {\n            fib\n        } else {\n            throw new RuntimeException(\"Not prime\")\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpxiha8iy1.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.primeFib(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val isPrime = scala.math.fibonacci.isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            scala.math.fibonacci.fibonacci(n + 1)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5f1ytkg.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5f1ytkg.scala:17:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.fibonacci.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5f1ytkg.scala:21:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            scala.math.fibonacci.fibonacci(n + \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value fibonacci is not a member of math\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        val fib3 = scala.math.factorial.apply(fib2)\n        val fib4 = scala.math.factorial.apply(fib3)\n        val fib5 = scala.math.factorial.apply(fib4)\n        val fib6 = scala.math.factorial.apply(fib5)\n        val fib7 = scala.math.factorial.apply(fib6)\n        val fib8 = scala.math.factorial.apply(fib7)\n        val fib9 = scala.math.factorial.apply(fib8)\n        val fib10 = scala.math.factorial.apply(fib9)\n        val fib11 = scala.math.factorial.apply(fib10)\n        val fib12 = scala.math.factorial.apply(fib11)\n        val fib13 = scala.math.factorial.apply(fib12)\n        val fib14 = scala.math.factorial.apply(fib13)\n        val fib15 = scala.math.factorial.apply(fib14)\n        val fib16 = scala.math.factorial.apply(fib15)\n        val fib17 = scala.math.factorial.apply(fib16)\n        val fib18 = scala.math.factorial.apply(fib17)\n        val fib19 = scala.math.factorial.apply(fib18)\n        val fib20 = scala.math.factorial.apply(fib19)\n        val fib21 = scala.math.factorial.apply(fib20)\n        val fib22 = scala.math.factorial.apply(fib21)\n        val fib23 = scala.math.factorial.apply(fib22)\n        val fib24 = scala.math.factorial.apply(fib23)\n        val fib25 = scala.math.factorial.apply(fib24)\n        val fib26 = scala.math.factorial.apply(f\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293142,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfa5shhtx.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:18:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:19:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:21:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib6\u001b[0m = scala.math.factorial.apply(fib5)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value fa",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial._.apply(n)\n        val fib2 = scala.math.factorial._.apply(fib)\n        val fib3 = scala.math.factorial._.apply(fib2)\n        val fib4 = scala.math.factorial._.apply(fib3)\n        val fib5 = scala.math.factorial._.apply(fib4)\n        val fib6 = scala.math.factorial._.apply(fib5)\n        val fib7 = scala.math.factorial._.apply(fib6)\n        val fib8 = scala.math.factorial._.apply(fib7)\n        val fib9 = scala.math.factorial._.apply(fib8)\n        val fib10 = scala.math.factorial._.apply(fib9)\n        val fib11 = scala.math.factorial._.apply(fib10)\n        val fib12 = scala.math.factorial._.apply(fib11)\n        val fib13 = scala.math.factorial._.apply(fib12)\n        val fib14 = scala.math.factorial._.apply(fib13)\n        val fib15 = scala.math.factorial._.apply(fib14)\n        val fib16 = scala.math.factorial._.apply(fib15)\n        val fib17 = scala.math.factorial._.apply(fib16)\n        val fib18 = scala.math.factorial._.apply(fib17)\n        val fib19 = scala.math.factorial._.apply(fib18)\n        val fib20 = scala.math.factorial._.apply(fib19)\n        val fib21 = scala.math.factorial._.apply(fib20)\n        val fib22 = scala.math.factorial._.apply(fib21)\n        val fib23 = scala.math.factorial._.apply(fib22)\n        val fib24 = scala.math.factorial._.apply(fib23)\n        val fib25 = scala.math.factorial\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgjvr7tx.scala:16:39 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial._.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgjvr7tx.scala:17:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial._.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgjvr7tx.scala:18:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial._.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgjvr7tx.scala:19:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial._.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgjvr7tx.scala:20:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial._.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m long",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        val fib3 = scala.math.factorial.apply(fib2)\n        val fib4 = scala.math.factorial.apply(fib3)\n        val fib5 = scala.math.factorial.apply(fib4)\n        val fib6 = scala.math.factorial.apply(fib5)\n        val fib7 = scala.math.factorial.apply(fib6)\n        val fib8 = scala.math.factorial.apply(fib7)\n        val fib9 = scala.math.factorial.apply(fib8)\n        val fib10 = scala.math.factorial.apply(fib9)\n        val fib11 = scala.math.factorial.apply(fib10)\n        val fib12 = scala.math.factorial.apply(fib11)\n        val fib13 = scala.math.factorial.apply(fib12)\n        val fib14 = scala.math.factorial.apply(fib13)\n        val fib15 = scala.math.factorial.apply(fib14)\n        val fib16 = scala.math.factorial.apply(fib15)\n        val fib17 = scala.math.factorial.apply(fib16)\n        val fib18 = scala.math.factorial.apply(fib17)\n        val fib19 = scala.math.factorial.apply(fib18)\n        val fib20 = scala.math.factorial.apply(fib19)\n        val fib21 = scala.math.factorial.apply(fib20)\n        val fib22 = scala.math.factorial.apply(fib21)\n        val fib23 = scala.math.factorial.apply(fib22)\n        val fib24 = scala.math.factorial.apply(fib23)\n        val fib25 = scala.math.factorial.apply(fib24)\n        val fib26 = scala.math.factorial.apply(f\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293142,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfa5shhtx.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:18:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:19:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:21:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib6\u001b[0m = scala.math.factorial.apply(fib5)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value fa",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val result = 0l\n        val fib = 0l\n        val fib2 = 1l\n        while (fib2 < n) {\n            fib = fib2\n            fib2 = fib + fib2\n            if (fib2 % 2 == 0) {\n                fib2 = fib2 / 2\n            } else {\n                fib2 = fib2 * 3 + 1\n            }\n            result = fib2\n        }\n        return result\n    }\n\n    // prime_fib2 returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib2((1l))\n    // (2l)\n    // >>> primeFib2((2l))\n    // (3l)\n    // >>> primeFib2((3l))\n    // (5l)\n    // >>> primeFib2((4l))\n    // (13l)\n    // >>> primeFib2((5l))\n    // (89l)\n    def primeFib2(n : Long) : Long = {\n        val result = 0l\n        val fib = 0l\n        val fib2 = 1l\n        while (fib2 < n) {\n            fib = fib2\n            fib2 = fib + fib2\n            if (fib2 % 2 == 0) {\n                fib2 = fib2 / 2\n            } else {\n                fib2 = fib2 * 3 + 1\n            }\n            result = fib2\n        }\n        return result\n    }\n\n    // prime_fib3 returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib3((1l))\n    // (2l)\n    // >>> primeFib3((2l))\n    // (3l)\n    // >>> primeFib3((3l))\n    // (5l)\n    // >>> primeFib3((4l))\n    // (13l)\n    // >>> primeFib3((5l))\n    // (89l)\n    def primeFib3(n : Long) : Long = {\n        val result = 0l\n        val fib = 0l\n        val fib2 = 1\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293164,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpv5xqy6z5.scala:20:16 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m            fib = fib2\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpv5xqy6z5.scala:21:17 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            fib2 = fib + fib2\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val fib2\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpv5xqy6z5.scala:23:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m                fib2 = fib2 / \u001b[31m2\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val fib2\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpv5xqy6z5.scala:25:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                fib2 = fib2 * \u001b[31m3\u001b[0m + \u001b[31m1\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                Reassignment to val fib2\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpv5xqy6z5.scala:27:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m            result = fib2\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val result\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpv5xqy6z5.scala:48:16 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m            fib = fib2\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val fib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpv",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val fib_prime = scala.math.fibonacci.fibonacci(n - 1)\n        if (fib % 2 == 0) {\n            return fib_prime\n        } else {\n            return fib\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293164,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn819yyvu.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpn819yyvu.scala:17:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib_prime\u001b[0m = scala.math.fibonacci.fibonacci(n - \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        value fibonacci is not a member of math\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n == 0) return 0l\n        if (n == 1) return 1l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 5l\n        if (n == 5) return 13l\n        if (n == 6) return 89l\n        if (n == 7) return 13l\n        if (n == 8) return 13l\n        if (n == 9) return 13l\n        if (n == 10) return 13l\n        if (n == 11) return 13l\n        if (n == 12) return 13l\n        if (n == 13) return 13l\n        if (n == 14) return 13l\n        if (n == 15) return 13l\n        if (n == 16) return 13l\n        if (n == 17) return 13l\n        if (n == 18) return 13l\n        if (n == 19) return 13l\n        if (n == 20) return 13l\n        if (n == 21) return 13l\n        if (n == 22) return 13l\n        if (n == 23) return 13l\n        if (n == 24) return 13l\n        if (n == 25) return 13l\n        if (n == 26) return 13l\n        if (n == 27) return 13l\n        if (n == 28) return 13l\n        if (n == 29) return 13l\n        if (n == 30) return 13l\n        if (n == 31) return 13l\n        if (n == 32) return 13l\n        if (n == 33) return 13l\n        if (n == 34) return 13l\n        if (n == 35) return 13l\n        if (n == 36) return 13l\n        if (n == 37) return 13l\n        if (n == 38) return 13l\n        if (n == 39) return 13l\n        if (n == 40) return 13l\n        if (n == 41) return 13l\n        if (n == 42) return 13l\n        if (n == 43) return 13l\n        if (n == 44) return 13l\n        if (n == 45) return 13l\n        if (n == 46\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293161,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1vwnr31d.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime)\n            return fib\n        else\n            return primeFib(n - 1)\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0)\n            throw new IllegalArgumentException(\"n should be >= 0\")\n        if (n == 0)\n            return 0\n        if (n == 1)\n            return 1\n        return fibonacci(n - 1) + fibonacci(n - 2)\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2)\n            return false\n        if (n == 2)\n            return true\n        if (n % 2 == 0)\n            return false\n        if (n < 4)\n            return true\n        if (n % 2 == 0)\n            return false\n        if (n < 9)\n            return true\n        if (n % 3 == 0)\n            return false\n        if (n < 27)\n            return true\n        if (n % 3 == 0)\n            return false\n        if (n < 31)\n            return true\n        if (n % 5 == 0)\n            return false\n        if (n < 61)\n            return true\n        if (n % 5 == 0)\n            return false\n        if (n < 91)\n            return true\n        if (n % 7 == 0)\n            return false\n        if (n < 127\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293161,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmph7vsa8vb.scala:88:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m88 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val fib_prime = scala.math.fibonacci.fibonacciPrime(n)\n        fib_prime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293165,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmofiq6yk.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpmofiq6yk.scala:17:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib_prime\u001b[0m = scala.math.fibonacci.fibonacciPrime(n)\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        value fibonacci is not a member of math\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n == 0) return 0\n        if (n == 1) return 1\n        if (n == 2) return 2\n        if (n == 3) return 3\n        if (n == 4) return 5\n        if (n == 5) return 13\n        if (n == 6) return 89\n        if (n == 7) return 13\n        if (n == 8) return 5\n        if (n == 9) return 89\n        if (n == 10) return 13\n        if (n == 11) return 5\n        if (n == 12) return 89\n        if (n == 13) return 13\n        if (n == 14) return 5\n        if (n == 15) return 89\n        if (n == 16) return 13\n        if (n == 17) return 5\n        if (n == 18) return 89\n        if (n == 19) return 13\n        if (n == 20) return 5\n        if (n == 21) return 89\n        if (n == 22) return 13\n        if (n == 23) return 5\n        if (n == 24) return 89\n        if (n == 25) return 13\n        if (n == 26) return 5\n        if (n == 27) return 89\n        if (n == 28) return 13\n        if (n == 29) return 5\n        if (n == 30) return 89\n        if (n == 31) return 13\n        if (n == 32) return 5\n        if (n == 33) return 89\n        if (n == 34) return 13\n        if (n == 35) return 5\n        if (n == 36) return 89\n        if (n == 37) return 13\n        if (n == 38) return 5\n        if (n == 39) return 89\n        if (n == 40) return 13\n        if (n == 41) return 5\n        if (n == 42) return 89\n        if (n == 43) return 13\n        if (n == 44) return 5\n        if (n == 45) return 89\n        if (n == 46) return 13\n        if (n == 47) return 5\n        if (n == 48) return 89\n        if (n == 49) return 13\n        if (n == 50) return 5\n        if\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293165,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpnvzkd7g2.scala:67:10 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m        \u001b[33mif\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m          ^\u001b[0m\n\u001b[31m   |\u001b[0m          expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val isPrime = isPrime(fib)\n        if (isPrime) {\n            return fib\n        } else {\n            return primeFib(fib - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be non-negative\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime.\n    // >>> isPrimeFast(2)\n    // True\n    // >>> isPrimeFast(3)\n    // True\n    // >>> isPrimeFast(4)\n    // False\n    // >>> isPrimeFast(5)\n    // True\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293170,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuq459vp9.scala:101:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpuq459vp9.scala:17:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35misPrime\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpuq459vp9.scala:100:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpuq459vp9.scala:87:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m87 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1\n        val n3 = n2 + 1\n        val n4 = n3 + 1\n        val n5 = n4 + 1\n        val n6 = n5 + 1\n        val n7 = n6 + 1\n        val n8 = n7 + 1\n        val n9 = n8 + 1\n        val n10 = n9 + 1\n        val n11 = n10 + 1\n        val n12 = n11 + 1\n        val n13 = n12 + 1\n        val n14 = n13 + 1\n        val n15 = n14 + 1\n        val n16 = n15 + 1\n        val n17 = n16 + 1\n        val n18 = n17 + 1\n        val n19 = n18 + 1\n        val n20 = n19 + 1\n        val n21 = n20 + 1\n        val n22 = n21 + 1\n        val n23 = n22 + 1\n        val n24 = n23 + 1\n        val n25 = n24 + 1\n        val n26 = n25 + 1\n        val n27 = n26 + 1\n        val n28 = n27 + 1\n        val n29 = n28 + 1\n        val n30 = n29 + 1\n        val n31 = n30 + 1\n        val n32 = n31 + 1\n        val n33 = n32 + 1\n        val n34 = n33 + 1\n        val n35 = n34 + 1\n        val n36 = n35 + 1\n        val n37 = n36 + 1\n        val n38 = n37 + 1\n        val n39 = n38 + 1\n        val n40 = n39 + 1\n        val n41 = n40 + 1\n        val n42 = n41 + 1\n        val n43 = n42 + 1\n        val n44 = n43 + 1\n        val n45 = n44 + 1\n        val n46 = n45 + 1\n        val n47 = n46 + 1\n        val n48 = n47 + 1\n        val n49 = n48 + 1\n        val n50 = n49 + 1\n        val n51 = n50 + 1\n        val n52 =\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293138,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmplxxvrl24.scala:67:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn52\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                 expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplxxvrl24.scala:68:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    // >>> fibonacci(6)\n    // 8\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be non-negative\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpcntn4gkw.scala:86:19 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m        } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmpcntn4gkw.scala:83:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrime\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mBoolean\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 62 and\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 83\n\u001b[31m   |\u001b[0mhave the same type after erasure.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mConsider adding a @targetName annotation to one of the conflicting definitions\n\u001b[31m   |\u001b[0mfor disambiguation.\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val prime = scala.math.fibonacci.primeFibonacci(fib)\n        prime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293140,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1olcmbu4.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1olcmbu4.scala:17:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mprime\u001b[0m = scala.math.fibonacci.primeFibonacci(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value fibonacci is not a member of math\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val fib2 = fibonacci(fib)\n        if (fib2 % 2 == 0) {\n            return fib2\n        } else {\n            return fib\n        }\n    }\n\n    // fibonacci returns n-th number that is a Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // fibonacci_recursive returns n-th number that is a Fibonacci number.\n    // >>> fibonacci_recursive(0)\n    // 0\n    // >>> fibonacci_recursive(1)\n    // 1\n    // >>> fibonacci_recursive(2)\n    // 1\n    // >>> fibonacci_recursive(3)\n    // 2\n    // >>> fibonacci_recursive(4)\n    // 3\n    // >>> fibonacci_recursive(5)\n    // 5\n    def fibonacci_recursive(n : Long) : Long = {\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci_recursive(n - 1) + fibonacci_recursive(n - 2)\n        }\n    }\n\n    // fibonacci_iterative returns n-th number that is a Fibonacci number.\n    // >>> fibonacci_iterative(0)\n    // 0\n    // >>> fibonacci_iterative(1)\n    // 1\n    // >>> fibonacci_iterative(2)\n    //\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9hlsau5b.scala:92:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9hlsau5b.scala:80:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m    assert(primeFib((\u001b[31m1l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9hlsau5b.scala:81:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m81 |\u001b[0m    assert(primeFib((\u001b[31m2l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9hlsau5b.scala:82:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m    assert(primeFib((\u001b[31m3l\u001b[0m)) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9hlsau5b.scala:83:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    assert(primeFib((\u001b[31m4l\u001b[0m)) == (\u001b[31m13l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9hlsau5b.scala:84:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m    assert(primeFib((\u001b[31m5l\u001b[0m)) == (\u001b[31m89l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9hlsau5b.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(primeFib((\u001b[31m6l\u001b[0m)) == (\u001b[31m233l\u001b[0m));",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = fib.takeWhile(x => x < 2)\n        val result = fib.filter(x => x > 2).takeWhile(x => x < fib.length - 1).head\n        result\n    }\n\n    // fibonacci returns a Fibonacci sequence.\n    // >>> fibonacci(0)\n    // []\n    // >>> fibonacci(1)\n    // [1]\n    // >>> fibonacci(2)\n    // [1, 1]\n    // >>> fibonacci(3)\n    // [1, 1, 2]\n    // >>> fibonacci(4)\n    // [1, 1, 2, 3]\n    // >>> fibonacci(5)\n    // [1, 1, 2, 3, 5]\n    def fibonacci(n : Long) : Seq[Long] = {\n        val result = Seq.range(0, n)\n        result\n    }\n\n    // fibonacci2 returns a Fibonacci sequence.\n    // >>> fibonacci2(0)\n    // []\n    // >>> fibonacci2(1)\n    // [1]\n    // >>> fibonacci2(2)\n    // [1, 1]\n    // >>> fibonacci2(3)\n    // [1, 1, 2]\n    // >>> fibonacci2(4)\n    // [1, 1, 2, 3]\n    // >>> fibonacci2(5)\n    // [1, 1, 2, 3, 5]\n    def fibonacci2(n : Long) : Seq[Long] = {\n        val result = Seq.range(0, n)\n        result.map(x => x + 1)\n    }\n\n    // fibonacci3 returns a Fibonacci sequence.\n    // >>> fibonacci3(0)\n    // []\n    // >>> fibonacci3(1)\n    // [1]\n    // >>> fibonacci3(2)\n    // [1, 1]\n    // >>> fibonacci3(3)\n    // [1, 1, 2]\n    // >>> fibonacci3(4)\n    // [1\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptyqn6vqg.scala:83:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- Error: /tmp/tmptyqn6vqg.scala:36:36 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = Seq.range(\u001b[31m0\u001b[0m, n)\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                                No implicit Ordering defined for AnyVal.\n\u001b[31m\u001b[31m-- Error: /tmp/tmptyqn6vqg.scala:54:36 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m54 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = Seq.range(\u001b[31m0\u001b[0m, n)\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                                No implicit Ordering defined for AnyVal.\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyqn6vqg.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(primeFib((\u001b[31m1l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyqn6vqg.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(primeFib((\u001b[31m2l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyqn6vqg.scala:73:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m    assert(primeFib((\u001b[31m3l\u001b[0m)) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptyqn6vqg.scala:74:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m74 |\u001b[0m    assert(primeFib((\u001b[31m4l\u001b[0m)) == (\u001b[31m13l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n <= 2) {\n            return n\n        } else {\n            return (primeFib(n - 1) + primeFib(n - 2))\n        }\n    }\n\n    // prime_fib_iterative returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_iterative((1l))\n    // (2l)\n    // >>> primeFib_iterative((2l))\n    // (3l)\n    // >>> primeFib_iterative((3l))\n    // (5l)\n    // >>> primeFib_iterative((4l))\n    // (13l)\n    // >>> primeFib_iterative((5l))\n    // (89l)\n    def primeFib_iterative(n : Long) : Long = {\n        if (n <= 2) {\n            return n\n        } else {\n            var a = 1\n            var b = 1\n            var c = 2\n            for (var i = 3; i <= n; i++) {\n                var temp = a\n                a = b\n                b = c\n                c = temp + b\n            }\n            return c\n        }\n    }\n\n    // prime_fib_recursive returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_recursive((1l))\n    // (2l)\n    // >>> primeFib_recursive((2l))\n    // (3l)\n    // >>> primeFib_recursive((3l))\n    // (5l)\n    // >>> primeFib_recursive((4l))\n    // (13l)\n    // >>> primeFib_recursive((5l))\n    // (89l)\n    def primeFib_recursive(n : Long) : Long = {\n        if (n <= 2) {\n            return n\n        } else {\n            return primeFib_recursive(n - 1) + primeFib_recursive(n - 2)\n        }\n    }\n\n    // prime_fib_scala returns n-th number that is a Fibonacci number and it's also prime.\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293171,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp3n3zwk9u.scala:41:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3n3zwk9u.scala:41:34 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp3n3zwk9u.scala:41:39 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3n3zwk9u.scala:85:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3n3zwk9u.scala:41:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitCo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1l\n        val n3 = n2 + 1l\n        val n4 = n3 + 1l\n        val n5 = n4 + 1l\n        val n6 = n5 + 1l\n        val n7 = n6 + 1l\n        val n8 = n7 + 1l\n        val n9 = n8 + 1l\n        val n10 = n9 + 1l\n        val n11 = n10 + 1l\n        val n12 = n11 + 1l\n        val n13 = n12 + 1l\n        val n14 = n13 + 1l\n        val n15 = n14 + 1l\n        val n16 = n15 + 1l\n        val n17 = n16 + 1l\n        val n18 = n17 + 1l\n        val n19 = n18 + 1l\n        val n20 = n19 + 1l\n        val n21 = n20 + 1l\n        val n22 = n21 + 1l\n        val n23 = n22 + 1l\n        val n24 = n23 + 1l\n        val n25 = n24 + 1l\n        val n26 = n25 + 1l\n        val n27 = n26 + 1l\n        val n28 = n27 + 1l\n        val n29 = n28 + 1l\n        val n30 = n29 + 1l\n        val n31 = n30 + 1l\n        val n32 = n31 + 1l\n        val n33 = n32 + 1l\n        val n34 = n33 + 1l\n        val n35 = n34 + 1l\n        val n36 = n35 + 1l\n        val n37 = n36 + 1l\n        val n38 = n37 + 1l\n        val n39 = n38 + 1l\n        val n40 = n39 + 1l\n        val n41 = n40 + 1l\n        val n42 = n41 + 1l\n        val n43 = n42 + 1l\n        val n44 = n43 + 1l\n        val n45 = n44 + 1l\n        val n46 = n45 + 1l\n        val n47 = n46 + 1l\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzc4pdf9.scala:63:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val isPrime = scala.math.fibonacci.isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            throw new IllegalArgumentException(\"Not prime\")\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293173,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpk1n0sba5.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpk1n0sba5.scala:17:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.fibonacci.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value fibonacci is not a member of math\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        if (n == 2) {\n            return 2l\n        }\n        var result : Long = 2l\n        var i : Long = 3l\n        while (i < n) {\n            result = result.product(3l)\n            i = i.add(1l)\n        }\n        return result\n    }\n\n    // prime_fib_recursive returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_recursive((1l))\n    // (2l)\n    // >>> primeFib_recursive((2l))\n    // (3l)\n    // >>> primeFib_recursive((3l))\n    // (5l)\n    // >>> primeFib_recursive((4l))\n    // (13l)\n    // >>> primeFib_recursive((5l))\n    // (89l)\n    def primeFib_recursive(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        if (n == 2) {\n            return 2l\n        }\n        if (n == 3) {\n            return 3l\n        }\n        var result : Long = 2l\n        var i : Long = 3l\n        while (i < n) {\n            result = result.product(3l)\n            i = i.add(1l)\n        }\n        return result\n    }\n\n    // prime_fib_iterative returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_iterative((1l))\n    // (2l)\n    // >>> primeFib_iterative((2l))\n    // (3l)\n    // >>> primeFib_iterative((3l))\n    // (5l)\n    // >>> primeFib_iterative((4l))\n    // (13l)\n    // >>> primeFib_iterative((5l))\n    // (89l)\n    def primeFib_iterative(\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293175,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi73eriew.scala:73:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi73eriew.scala:87:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m87 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi73eriew.scala:25:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m            result = result.product(\u001b[31m3l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value product is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi73eriew.scala:26:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m26 |\u001b[0m            i = i.add(\u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value add is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi73eriew.scala:55:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            result = result.product(\u001b[31m3l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     value product is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpi73eriew.scala:56:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m            i = i.add(\u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value add is not a member of Long\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi73eriew.scala:75:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m    assert(primeFib((\u001b[31m1l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi73eriew.scala:76:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m    assert(primeFib((\u001b[31m2l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not fo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n should be greater than 1\")\n        }\n        val fib = fibonacci(n)\n        val f = fib.takeRight(n - 1)\n        val p = f.filter(p -> p.isPrime())\n        return p.head()\n    }\n\n    // fibonacci returns a Seq[Long] of Fibonacci numbers.\n    // >>> fibonacci(0)\n    // Seq[0]\n    // >>> fibonacci(1)\n    // Seq[1]\n    // >>> fibonacci(2)\n    // Seq[1, 1]\n    // >>> fibonacci(3)\n    // Seq[1, 1, 2]\n    // >>> fibonacci(4)\n    // Seq[1, 1, 2, 3]\n    // >>> fibonacci(5)\n    // Seq[1, 1, 2, 3, 5]\n    // >>> fibonacci(6)\n    // Seq[1, 1, 2, 3, 5, 8]\n    // >>> fibonacci(7)\n    // Seq[1, 1, 2, 3, 5, 8, 13]\n    def fibonacci(n : Int) : Seq[Long] = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be greater than 0\")\n        }\n        val fib = Seq.range(0, n)\n        val f = fib.map(fibonacci)\n        return f\n    }\n\n    // fibonacci2 returns a Seq[Long] of Fibonacci numbers.\n    // >>> fibonacci2(0)\n    // Seq[0]\n    // >>> fibonacci2(1)\n    // Seq[1]\n    // >>> fibonacci2(2)\n    // Seq[1, 1]\n    // >>> fibonacci2(3)\n    // Seq[1, 1, 2]\n    // >>> fibonacci2(4)\n    // Seq[1, 1, 2, 3]\n    // >>> fibonacci2(5)\n    // Seq[1, 1\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293174,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi6_3odze.scala:78:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6_3odze.scala:19:28 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                            Found:    (n : Long)\n\u001b[31m   |\u001b[0m                            Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6_3odze.scala:20:30 --------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mf\u001b[0m = fib.takeRight(n - \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              Found:    Long\n\u001b[31m   |\u001b[0m                              Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpi6_3odze.scala:21:25 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mp\u001b[0m = f.filter(p -> p.isPrime())\n\u001b[31m\u001b[31m   |\u001b[0m                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                         Recursive \u001b[33mvalue\u001b[0m \u001b[35mp\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpi6_3odze.scala:22:17 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m        \u001b[33mreturn\u001b[0m p.head()\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mhead\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mIterableOps\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6_3odze.scala:48:15 --------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m        \u001b[33mreturn\u001b[0m f\n\u001b[31m\u001b[31m   |\u001b[0m               ^\u001b[0m\n\u001b[31m   |\u001b[0mFound:    \u001b[1m\u001b[31m(\u001b[0m\u001b[1m\u001b[",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n <= 2l) {\n            return n\n        }\n        var a = 1l\n        var b = 1l\n        var c = 2l\n        while (c < n) {\n            var d = c + a\n            a = b\n            b = c\n            c = d\n        }\n        return b\n    }\n\n    // prime_fib2 returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib2((1l))\n    // (2l)\n    // >>> primeFib2((2l))\n    // (3l)\n    // >>> primeFib2((3l))\n    // (5l)\n    // >>> primeFib2((4l))\n    // (13l)\n    // >>> primeFib2((5l))\n    // (89l)\n    def primeFib2(n : Long) : Long = {\n        if (n <= 2l) {\n            return n\n        }\n        var a = 1l\n        var b = 1l\n        var c = 2l\n        while (c < n) {\n            var d = c + a\n            a = b\n            b = c\n            c = d\n        }\n        return b\n    }\n\n    // prime_fib3 returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib3((1l))\n    // (2l)\n    // >>> primeFib3((2l))\n    // (3l)\n    // >>> primeFib3((3l))\n    // (5l)\n    // >>> primeFib3((4l))\n    // (13l)\n    // >>> primeFib3((5l))\n    // (89l)\n    def primeFib3(n : Long) : Long = {\n        if (n <= 2l) {\n            return n\n        }\n        var a = 1l\n        var b = 1l\n        var c = 2l\n        while (c < n) {\n            var d = c + a\n            a = b\n            b = c\n            c = d\n        }\n        return b\n    \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293173,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpywsqi60s.scala:86)\n\tat Problem.main(tmpywsqi60s.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.primeFib(n)\n        if (fib.isZero()) {\n            return fib\n        } else {\n            return fib.div(scala.math.fibonacci.primeFib(fib.div(2)))\n        }\n    }\n\n    // prime_fib_recursive returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_recursive((1l))\n    // (2l)\n    // >>> primeFib_recursive((2l))\n    // (3l)\n    // >>> primeFib_recursive((3l))\n    // (5l)\n    // >>> primeFib_recursive((4l))\n    // (13l)\n    // >>> primeFib_recursive((5l))\n    // (89l)\n    def primeFib_recursive(n : Long) : Long = {\n        if (n.isZero()) {\n            return n\n        } else {\n            return primeFib_recursive(n.div(2)).add(primeFib_recursive(n.div(3)))\n        }\n    }\n\n    // prime_fib_iterative returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_iterative((1l))\n    // (2l)\n    // >>> primeFib_iterative((2l))\n    // (3l)\n    // >>> primeFib_iterative((3l))\n    // (5l)\n    // >>> primeFib_iterative((4l))\n    // (13l)\n    // >>> primeFib_iterative((5l))\n    // (89l)\n    def primeFib_iterative(n : Long) : Long = {\n        val fib = scala.math.fibonacci.primeFib(n)\n        if (fib.isZero()) {\n            return fib\n        } else {\n            val fib2 = scala.math.fibonacci.primeFib(fib.div(2))\n            val fib3 = scala.math.f\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293175,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp7v8z8ct8.scala:76:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m76 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7v8z8ct8.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.primeFib(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7v8z8ct8.scala:36:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m        \u001b[33mif\u001b[0m (n.isZero()) {\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value isZero is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7v8z8ct8.scala:39:40 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m            \u001b[33mreturn\u001b[0m primeFib_recursive(n.div(\u001b[31m2\u001b[0m)).add(primeFib_recursive(n.div(\u001b[31m3\u001b[0m)))\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      value div is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7v8z8ct8.scala:39:73 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m            \u001b[33mreturn\u001b[0m primeFib_recursive(n.div(\u001b[31m2\u001b[0m)).add(primeFib_recursive(n.div(\u001b[31m3\u001b[0m)))\n\u001b[31m\u001b[31m   |\u001b[0m                                                                       ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                       value div is not a member of Long\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7v8z8ct8.scala:55:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.primeFib(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp7v8z8ct8.scala:59:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.fibonacci.primeFib(fib.div(\u001b[31m2\u001b[0m))\n\u001b[31m\u001b[31m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial._.apply(n)\n        val fib2 = fib.div(scala.math.factorial._.apply(fib.sub(1)))\n        val fib3 = fib2.div(scala.math.factorial._.apply(fib2.sub(1)))\n        val fib4 = fib3.div(scala.math.factorial._.apply(fib3.sub(1)))\n        val fib5 = fib4.div(scala.math.factorial._.apply(fib4.sub(1)))\n        val fib6 = fib5.div(scala.math.factorial._.apply(fib5.sub(1)))\n        val fib7 = fib6.div(scala.math.factorial._.apply(fib6.sub(1)))\n        val fib8 = fib7.div(scala.math.factorial._.apply(fib7.sub(1)))\n        val fib9 = fib8.div(scala.math.factorial._.apply(fib8.sub(1)))\n        val fib10 = fib9.div(scala.math.factorial._.apply(fib9.sub(1)))\n        val fib11 = fib10.div(scala.math.factorial._.apply(fib10.sub(1)))\n        val fib12 = fib11.div(scala.math.factorial._.apply(fib11.sub(1)))\n        val fib13 = fib12.div(scala.math.factorial._.apply(fib12.sub(1)))\n        val fib14 = fib13.div(scala.math.factorial._.apply(fib13.sub(1)))\n        val fib15 = fib14.div(scala.math.factorial._.apply(fib14.sub(1)))\n        val fib16 = fib15.div(scala.math.factorial._.apply(fib15.sub(1)))\n        val fib17 = fib16.div(scala.math.factorial._.apply(fib16.sub(1)))\n        val fib18 = fib17.div(scala.math.fact\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293175,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi6stl4nq.scala:16:39 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial._.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi6stl4nq.scala:17:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = fib.div(scala.math.factorial._.apply(fib.sub(\u001b[31m1\u001b[0m)))\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi6stl4nq.scala:18:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = fib2.div(scala.math.factorial._.apply(fib2.sub(\u001b[31m1\u001b[0m)))\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi6stl4nq.scala:19:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = fib3.div(scala.math.factorial._.apply(fib3.sub(\u001b[31m1\u001b[0m)))\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi6stl4nq.scala:20:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = fib4.div(scala.math.factorial._.apply(fib4.sub(\u001b[31m1\u001b[0m)))\n\u001b[31m\u001b[31m   |\u001b[0m                                   ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n <= 2l) {\n            return n\n        } else {\n            return (primeFib(n - 1l) + primeFib(n - 2l))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293151,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpn443ohrr.scala:23)\n\tat Problem.main(tmpn443ohrr.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val prime = fib.takeWhile(fib.isPrime())\n        prime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293174,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmprsaooil3.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1\n        val n3 = n2 + 1\n        val n4 = n3 + 1\n        val n5 = n4 + 1\n        val n6 = n5 + 1\n        val n7 = n6 + 1\n        val n8 = n7 + 1\n        val n9 = n8 + 1\n        val n10 = n9 + 1\n        val n11 = n10 + 1\n        val n12 = n11 + 1\n        val n13 = n12 + 1\n        val n14 = n13 + 1\n        val n15 = n14 + 1\n        val n16 = n15 + 1\n        val n17 = n16 + 1\n        val n18 = n17 + 1\n        val n19 = n18 + 1\n        val n20 = n19 + 1\n        val n21 = n20 + 1\n        val n22 = n21 + 1\n        val n23 = n22 + 1\n        val n24 = n23 + 1\n        val n25 = n24 + 1\n        val n26 = n25 + 1\n        val n27 = n26 + 1\n        val n28 = n27 + 1\n        val n29 = n28 + 1\n        val n30 = n29 + 1\n        val n31 = n30 + 1\n        val n32 = n31 + 1\n        val n33 = n32 + 1\n        val n34 = n33 + 1\n        val n35 = n34 + 1\n        val n36 = n35 + 1\n        val n37 = n36 + 1\n        val n38 = n37 + 1\n        val n39 = n38 + 1\n        val n40 = n39 + 1\n        val n41 = n40 + 1\n        val n42 = n41 + 1\n        val n43 = n42 + 1\n        val n44 = n43 + 1\n        val n45 = n44 + 1\n        val n46 = n45 + 1\n        val n47 = n46 + 1\n        val n48 = n47 + 1\n        val n49 = n48 + 1\n        val n50 = n49 + 1\n        val n51 = n50 + 1\n        val n52 =\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293138,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmplxxvrl24.scala:67:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn52\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                 expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplxxvrl24.scala:68:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(fib)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(1l)\n    // (1l)\n    // >>> fibonacci(2l)\n    // (1l)\n    // >>> fibonacci(3l)\n    // (2l)\n    // >>> fibonacci(4l)\n    // (3l)\n    // >>> fibonacci(5l)\n    // (5l)\n    def fibonacci(n : Long) : Long = {\n        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 1l\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2l)\n    // True\n    // >>> isPrime(3l)\n    // True\n    // >>> isPrime(4l)\n    // False\n    // >>> isPrime(5l)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2) {\n            return true\n        } else if (n == 3) {\n            return true\n        } else if (n == 5) {\n            return true\n        } else if (n == 7) {\n            return true\n        } else if (n == 11) {\n            return true\n        } else if (n == 13) {\n            return true\n        } else if (n == 17) {\n            return true\n        } else if (n == 19) {\n            return true\n        } else if (n == 23) {\n            return true\n        } else if (n == 29) {\n            return true\n        } else if (n == 31) {\n            return true\n        } else if (n == 37) {\n            return true\n        } else if (n == 41) {\n            return true\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpq646bhjt.scala:98:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m98 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpq646bhjt.scala:97:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m97 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpq646bhjt.scala:84:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m84 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val isPrime = scala.math.isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            scala.math.fibonacci.fibonacci(n + 1)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu9585790.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu9585790.scala:17:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value isPrime is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpu9585790.scala:21:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            scala.math.fibonacci.fibonacci(n + \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value fibonacci is not a member of math\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1l\n        val n3 = n2 + 1l\n        val n4 = n3 + 1l\n        val n5 = n4 + 1l\n        val n6 = n5 + 1l\n        val n7 = n6 + 1l\n        val n8 = n7 + 1l\n        val n9 = n8 + 1l\n        val n10 = n9 + 1l\n        val n11 = n10 + 1l\n        val n12 = n11 + 1l\n        val n13 = n12 + 1l\n        val n14 = n13 + 1l\n        val n15 = n14 + 1l\n        val n16 = n15 + 1l\n        val n17 = n16 + 1l\n        val n18 = n17 + 1l\n        val n19 = n18 + 1l\n        val n20 = n19 + 1l\n        val n21 = n20 + 1l\n        val n22 = n21 + 1l\n        val n23 = n22 + 1l\n        val n24 = n23 + 1l\n        val n25 = n24 + 1l\n        val n26 = n25 + 1l\n        val n27 = n26 + 1l\n        val n28 = n27 + 1l\n        val n29 = n28 + 1l\n        val n30 = n29 + 1l\n        val n31 = n30 + 1l\n        val n32 = n31 + 1l\n        val n33 = n32 + 1l\n        val n34 = n33 + 1l\n        val n35 = n34 + 1l\n        val n36 = n35 + 1l\n        val n37 = n36 + 1l\n        val n38 = n37 + 1l\n        val n39 = n38 + 1l\n        val n40 = n39 + 1l\n        val n41 = n40 + 1l\n        val n42 = n41 + 1l\n        val n43 = n42 + 1l\n        val n44 = n43 + 1l\n        val n45 = n44 + 1l\n        val n46 = n45 + 1l\n        val n47 = n46 + 1l\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzc4pdf9.scala:63:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val fib2 = fib.toLong\n        if (fib2 % 2 == 0) {\n            return fib2\n        } else {\n            return fib2 + 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293174,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptogeqe6d.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = fib.div(scala.math.factorial.apply(2))\n        val fib3 = fib2.div(scala.math.factorial.apply(3))\n        val fib4 = fib3.div(scala.math.factorial.apply(4))\n        val fib5 = fib4.div(scala.math.factorial.apply(5))\n        val fib6 = fib5.div(scala.math.factorial.apply(6))\n        val fib7 = fib6.div(scala.math.factorial.apply(7))\n        val fib8 = fib7.div(scala.math.factorial.apply(8))\n        val fib9 = fib8.div(scala.math.factorial.apply(9))\n        val fib10 = fib9.div(scala.math.factorial.apply(10))\n        val fib11 = fib10.div(scala.math.factorial.apply(11))\n        val fib12 = fib11.div(scala.math.factorial.apply(12))\n        val fib13 = fib12.div(scala.math.factorial.apply(13))\n        val fib14 = fib13.div(scala.math.factorial.apply(14))\n        val fib15 = fib14.div(scala.math.factorial.apply(15))\n        val fib16 = fib15.div(scala.math.factorial.apply(16))\n        val fib17 = fib16.div(scala.math.factorial.apply(17))\n        val fib18 = fib17.div(scala.math.factorial.apply(18))\n        val fib19 = fib18.div(scala.math.factorial.apply(19))\n        val fib20 = fib19.div(scala.math.factorial.apply(20))\n        val fib21 = fib20.div(scala.math.factorial.apply(21))\n        val fib22 = fib21.div(scala.math.factorial.apply(22))\n        val fib23 = fib22.div(scala.\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp6c14j943.scala:39:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp6c14j943.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp6c14j943.scala:39:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime)\n            fib\n        else\n            primeFib(fib - 1)\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(1)\n    // (1l)\n    // >>> fibonacci(2)\n    // (1l)\n    // >>> fibonacci(3)\n    // (2l)\n    // >>> fibonacci(4)\n    // (3l)\n    // >>> fibonacci(5)\n    // (5l)\n    def fibonacci(n : Long) : Long = {\n        if (n < 2)\n            n\n        else\n            fibonacci(n - 1) + fibonacci(n - 2)\n    }\n\n    // isPrime returns true if n-th number is prime.\n    // >>> isPrime(1)\n    // False\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // False\n    // >>> isPrime(4)\n    // True\n    // >>> isPrime(5)\n    // False\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2)\n            False\n        else if (n == 2)\n            True\n        else if (n % 2 == 0)\n            False\n        else {\n            val m = (long) Math.sqrt(n)\n            for (i <- 3 to m) {\n                if (n % i == 0)\n                    False\n            }\n            True\n        }\n    }\n\n    // isPrime returns true if n-th number is prime.\n    // >>> isPrime(1)\n    // False\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // False\n    // >>> isPrime(4)\n    // True\n    // >>> isPrime(5)\n    // False\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2)\n            False\n        else if (n == 2)\n            True\n        else if (n % 2 ==\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293174,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp8a30wsz3.scala:61:31 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mm\u001b[0m = (long) Math.sqrt(n)\n\u001b[31m\u001b[31m   |\u001b[0m                               ^\u001b[0m\n\u001b[31m   |\u001b[0m                               expression expected but \u001b[31m'.'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp8a30wsz3.scala:86:25 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m        \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (n % \u001b[31m2\u001b[0m ==\n\u001b[31m\u001b[31m   |\u001b[0m                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                         expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8a30wsz3.scala:55:12 ------------------------\u001b[0m\u001b[0m\n\u001b[31m55 |\u001b[0m            False\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Not found: False\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8a30wsz3.scala:57:12 ------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m            True\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Not found: True\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8a30wsz3.scala:59:12 ------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m            False\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Not found: False\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp8a30wsz3.scala:61:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m61 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mm\u001b[0m = (long) Math.sqrt(n)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m--",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val result = 0l\n        val fib = fibonacci(n)\n        for (i <- 0 until fib.length - 1) {\n            if (fib(i).isPrime()) {\n                result = fib(i) + result\n            }\n        }\n        result\n    }\n\n    // fibonacci returns n-th number that is a Fibonacci number.\n    // >>> fibonacci(1l)\n    // (1l)\n    // >>> fibonacci(2l)\n    // (1l)\n    // >>> fibonacci(3l)\n    // (2l)\n    // >>> fibonacci(4l)\n    // (3l)\n    // >>> fibonacci(5l)\n    // (5l)\n    def fibonacci(n : Long) : Long = {\n        val result = 0l\n        for (i <- 0 until n - 1) {\n            result = result + fibonacci(i)\n        }\n        result\n    }\n\n    // fibonacci_prime returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> fibonacci_prime(1l)\n    // (2l)\n    // >>> fibonacci_prime(2l)\n    // (3l)\n    // >>> fibonacci_prime(3l)\n    // (5l)\n    // >>> fibonacci_prime(4l)\n    // (13l)\n    // >>> fibonacci_prime(5l)\n    // (89l)\n    def fibonacci_prime(n : Long) : Long = {\n        val result = 0l\n        val fib = fibonacci(n)\n        for (i <- 0 until fib.length - 1) {\n            if (fib(i).isPrime()) {\n                result = fib(i) + result\n            }\n        }\n        result\n    }\n\n    // fibonacci_prime_recursive returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> fibonacci_prime_recursive(1l)\n    // (2l)\n    // >>> fibonacci_prime_recursive(2l)\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpnrr7kggz.scala:86:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnrr7kggz.scala:18:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until fib.length - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value length is not a member of Long\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnrr7kggz.scala:19:16 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mif\u001b[0m (fib(i).isPrime()) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                \u001b[33mvalue\u001b[0m \u001b[35mfib\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmpnrr7kggz.scala:20:25 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                result = fib(i) + result\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         \u001b[33mvalue\u001b[0m \u001b[35mfib\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpnrr7kggz.scala:39:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until n - \u001b[31m1\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    Long\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpnrr7kggz.scala:40:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m            result = result + fibonacci(i)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val result\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E0",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val isPrime = isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 2) {\n            0\n        } else {\n            fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n-th number is prime.\n    // >>> isPrime(2)\n    // true\n    // >>> isPrime(3)\n    // true\n    // >>> isPrime(4)\n    // false\n    // >>> isPrime(5)\n    // true\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            true\n        } else if (n == 2) {\n            true\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            for (i <- 3 to Math.sqrt(n)) {\n                if (n % i == 0) {\n                    false\n                }\n            }\n            true\n        }\n    }\n\n    // isPrime returns true if n-th number is prime.\n    // >>> isPrime(2)\n    // true\n    // >>> isPrime(3)\n    // true\n    // >>> isPrime(4)\n    // false\n    // >>> isPrime(5)\n    // true\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            true\n        } else if (n == 2) {\n            true\n        } else if (n % 2 == 0) {\n            false\n        } else\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293175,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp4xa7khjr.scala:88:14 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m88 |\u001b[0m        } \u001b[33melse\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m              ^\u001b[0m\n\u001b[31m   |\u001b[0m              expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp4xa7khjr.scala:17:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35misPrime\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp4xa7khjr.scala:63:36 --------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m            \u001b[33mfor\u001b[0m (i <- \u001b[31m3\u001b[0m to Math.sqrt(n)) {\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           Found:    Double\n\u001b[31m   |\u001b[0m                           Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmp4xa7khjr.scala:81:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m81 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrime\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mBoolean\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 55 and\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 81\n\u001b[31m   |\u001b[0mhave the same type after erasure.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mConsider adding a @targetName annotation to one of the conflicting definitions\n\u001b[31m   |\u001b[0mfor disambiguation.\n\u001b[33m\u001b[33m-- [E129] Potential Issue Warning: /tmp/tmp4xa7khjr.scala:65:20 ----------------\u001b[0m\u001b[0m\n\u001b[33m65 |\u001b[0m                    \u001b[31mfalse\u001b[0m\n\u001b[33m\u001b[33m   |\u001b[0m                    ^^^^^\u001b[0m\n\u001b[33m   |\u001b[0mA pure expression does nothing in statement position; yo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n <= 2) {\n            return n\n        } else {\n            return (primeFib(n - 1) + primeFib(n - 2))\n        }\n    }\n\n    // prime_fib_iterative returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_iterative((1l))\n    // (2l)\n    // >>> primeFib_iterative((2l))\n    // (3l)\n    // >>> primeFib_iterative((3l))\n    // (5l)\n    // >>> primeFib_iterative((4l))\n    // (13l)\n    // >>> primeFib_iterative((5l))\n    // (89l)\n    def primeFib_iterative(n : Long) : Long = {\n        if (n <= 2) {\n            return n\n        } else {\n            var a = 1\n            var b = 1\n            for (var i = 3; i <= n; i++) {\n                var c = a + b\n                a = b\n                b = c\n            }\n            return b\n        }\n    }\n\n    // prime_fib_recursive returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_recursive((1l))\n    // (2l)\n    // >>> primeFib_recursive((2l))\n    // (3l)\n    // >>> primeFib_recursive((3l))\n    // (5l)\n    // >>> primeFib_recursive((4l))\n    // (13l)\n    // >>> primeFib_recursive((5l))\n    // (89l)\n    def primeFib_recursive(n : Long) : Long = {\n        if (n <= 2) {\n            return n\n        } else {\n            return primeFib_recursive(n - 1) + primeFib_recursive(n - 2)\n        }\n    }\n\n    // prime_fib_scala returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_scala((\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpkz4pe496.scala:40:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                 ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkz4pe496.scala:40:34 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpkz4pe496.scala:40:39 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkz4pe496.scala:84:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkz4pe496.scala:40:26 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m            \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m3\u001b[0m; i <= n; i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitCo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        if (fib2 % 2 == 0) {\n            return fib\n        } else {\n            return fib + fib2\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293177,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8mc8j8uy.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp8mc8j8uy.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = fib.takeWhile(x => x < 0)\n        val result = prime.map(x => x + 1).reduce(0, (x, y) => x * y)\n        result\n    }\n\n    // fibonacci returns a Fibonacci sequence.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Seq[Long] = {\n        val result = mutable.ListBuffer[Long]()\n        for (i <- 0 until n) {\n            result.append(result.last() + result.last())\n        }\n        result.toList\n    }\n\n    // fibonacci2 returns a Fibonacci sequence.\n    // >>> fibonacci2(0)\n    // 0\n    // >>> fibonacci2(1)\n    // 1\n    // >>> fibonacci2(2)\n    // 1\n    // >>> fibonacci2(3)\n    // 2\n    // >>> fibonacci2(4)\n    // 3\n    // >>> fibonacci2(5)\n    // 5\n    def fibonacci2(n : Long) : Seq[Long] = {\n        val result = mutable.ListBuffer[Long]()\n        for (i <- 0 until n) {\n            result.append(result.last() + result.last())\n        }\n        result.toList\n    }\n\n    // fibonacci3 returns a Fibonacci sequence.\n    // >>> fibonacci3(0)\n    // 0\n    // >>> fibonacci3(1)\n    // 1\n    // >>> fibonacci3(2)\n    // 1\n    // >>> fibonacci3(3)\n    // 2\n    // >>> fibonacci3(4)\n    // 3\n    // >>> fibonacci3(5)\n    // 5\n    \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpofrzzwg1.scala:92:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpofrzzwg1.scala:18:54 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = prime.map(\u001b[36mx\u001b[0m => x + \u001b[31m1\u001b[0m).reduce(\u001b[31m0\u001b[0m, (\u001b[36mx\u001b[0m, \u001b[36my\u001b[0m) => x * y)\n\u001b[31m\u001b[31m   |\u001b[0m                                                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m                          I could not infer the type of the parameter x.\n\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpofrzzwg1.scala:18:57 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = prime.map(\u001b[36mx\u001b[0m => x + \u001b[31m1\u001b[0m).reduce(\u001b[31m0\u001b[0m, (\u001b[36mx\u001b[0m, \u001b[36my\u001b[0m) => x * y)\n\u001b[31m\u001b[31m   |\u001b[0m                                                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m                          I could not infer the type of the parameter y.\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpofrzzwg1.scala:36:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = mutable.ListBuffer[\u001b[35mLong\u001b[0m]()\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: mutable\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpofrzzwg1.scala:37:26 --------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m        \u001b[33mfor\u001b[0m (i <- \u001b[31m0\u001b[0m until n) {\n\u001b[31m\u001b[31m   |\u001b[0m                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                          Found:    (n : Long)\n\u001b[31m   |\u001b[0m                          Required: Int\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpofrzzwg1.scala:57:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m5",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val isPrime = scala.math.isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            primeFib(n - 1)\n        }\n    }\n\n    // prime_fib_iterative returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_iterative((1l))\n    // (2l)\n    // >>> primeFib_iterative((2l))\n    // (3l)\n    // >>> primeFib_iterative((3l))\n    // (5l)\n    // >>> primeFib_iterative((4l))\n    // (13l)\n    // >>> primeFib_iterative((5l))\n    // (89l)\n    def primeFib_iterative(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val isPrime = scala.math.isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            val fib_prev = scala.math.fibonacci.fibonacci(n - 1)\n            fib = fib_prev + fib\n            isPrime = scala.math.isPrime(fib)\n            if (isPrime) {\n                fib\n            } else {\n                primeFib_iterative(n - 1)\n            }\n        }\n    }\n\n    // prime_fib_recursive returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_recursive((1l))\n    // (2l)\n    // >>> primeFib_recursive((2l))\n    // (3l)\n    // >>> primeFib_recursive((3l))\n    // (5l)\n    // >>> primeFib_recursive((4l))\n    // (13l)\n    // >>> primeFib_recursive((5l))\n    // (89l)\n    def primeFib_recursive(\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293179,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp75qnlmhr.scala:65:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m65 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp75qnlmhr.scala:79:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m79 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp75qnlmhr.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp75qnlmhr.scala:17:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value isPrime is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp75qnlmhr.scala:37:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp75qnlmhr.scala:38:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m38 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value isPrime is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp75qnlmhr.scala:42:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mfib_prev\u001b[0m = scala.math.fibonacci.fibonacci(n - \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                           ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                           value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmp75qnlmhr.scala:43:16 -",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n == 0) return 0\n        if (n == 1) return 1\n        if (n == 2) return 2\n        if (n < 0) return -1\n        if (n < 3) return -1\n        if (n % 2 == 0) return -1\n        if (n % 3 == 0) return -1\n        if (n % 5 == 0) return -1\n        if (n % 7 == 0) return -1\n        if (n % 11 == 0) return -1\n        if (n % 13 == 0) return -1\n        if (n % 17 == 0) return -1\n        if (n % 19 == 0) return -1\n        if (n % 23 == 0) return -1\n        if (n % 29 == 0) return -1\n        if (n % 31 == 0) return -1\n        if (n % 37 == 0) return -1\n        if (n % 41 == 0) return -1\n        if (n % 43 == 0) return -1\n        if (n % 47 == 0) return -1\n        if (n % 53 == 0) return -1\n        if (n % 59 == 0) return -1\n        if (n % 61 == 0) return -1\n        if (n % 67 == 0) return -1\n        if (n % 71 == 0) return -1\n        if (n % 73 == 0) return -1\n        if (n % 79 == 0) return -1\n        if (n % 83 == 0) return -1\n        if (n % 89 == 0) return -1\n        if (n % 97 == 0) return -1\n        if (n % 101 == 0) return -1\n        if (n % 103 == 0) return -1\n        if (n % 107 == 0) return -1\n        if (n % 109 == 0) return -1\n        if (n % 113 == 0) return -1\n        if (n % 127 == 0) return -1\n        if (n % 131 == 0) return -1\n        if (n % 137 == 0) return -1\n        if (n % 139 == 0) return -1\n        if (n % 149 == 0) return -1\n        if (n %\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293176,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpn0a54tc1.scala:56:15 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m        \u001b[33mif\u001b[0m (n %\n\u001b[31m\u001b[31m   |\u001b[0m               ^\u001b[0m\n\u001b[31m   |\u001b[0m               expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        var i = 1l\n        var j = 1l\n        while (i < n) {\n            i = i + j\n            j = j + i\n            if (j % 2 == 0) {\n                j = j / 2\n            } else {\n                j = (j * 3) + 1\n            }\n        }\n        return j\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293178,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpbz2cbwvd.scala:30)\n\tat Problem.main(tmpbz2cbwvd.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n <= 2l) {\n            return n\n        } else {\n            return (primeFib(n - 1l) + primeFib(n - 2l))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293151,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpn443ohrr.scala:23)\n\tat Problem.main(tmpn443ohrr.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1\n        val n3 = n2 + 1\n        val n4 = n3 + 1\n        val n5 = n4 + 1\n        val n6 = n5 + 1\n        val n7 = n6 + 1\n        val n8 = n7 + 1\n        val n9 = n8 + 1\n        val n10 = n9 + 1\n        val n11 = n10 + 1\n        val n12 = n11 + 1\n        val n13 = n12 + 1\n        val n14 = n13 + 1\n        val n15 = n14 + 1\n        val n16 = n15 + 1\n        val n17 = n16 + 1\n        val n18 = n17 + 1\n        val n19 = n18 + 1\n        val n20 = n19 + 1\n        val n21 = n20 + 1\n        val n22 = n21 + 1\n        val n23 = n22 + 1\n        val n24 = n23 + 1\n        val n25 = n24 + 1\n        val n26 = n25 + 1\n        val n27 = n26 + 1\n        val n28 = n27 + 1\n        val n29 = n28 + 1\n        val n30 = n29 + 1\n        val n31 = n30 + 1\n        val n32 = n31 + 1\n        val n33 = n32 + 1\n        val n34 = n33 + 1\n        val n35 = n34 + 1\n        val n36 = n35 + 1\n        val n37 = n36 + 1\n        val n38 = n37 + 1\n        val n39 = n38 + 1\n        val n40 = n39 + 1\n        val n41 = n40 + 1\n        val n42 = n41 + 1\n        val n43 = n42 + 1\n        val n44 = n43 + 1\n        val n45 = n44 + 1\n        val n46 = n45 + 1\n        val n47 = n46 + 1\n        val n48 = n47 + 1\n        val n49 = n48 + 1\n        val n50 = n49 + 1\n        val n51 = n50 + 1\n        val n52 =\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293138,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmplxxvrl24.scala:67:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn52\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                 expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplxxvrl24.scala:68:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val isPrime = isPrime(fib)\n        if (isPrime) {\n            return fib\n        } else {\n            return primeFib(n + 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be non-negative\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2)\n    // True\n    // >>> isPrimeFast(3)\n    // True\n    // >>> isPrimeFast(4)\n    // False\n    // >>> isPrimeFast(5)\n    // True\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293183,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8xby6jmy.scala:101:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp8xby6jmy.scala:17:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35misPrime\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp8xby6jmy.scala:100:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp8xby6jmy.scala:87:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m87 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n == 0) return 0l\n        if (n == 1) return 2l\n        if (n == 2) return 3l\n        if (n == 3) return 5l\n        if (n == 4) return 13l\n        if (n == 5) return 89l\n        if (n == 6) return 1361l\n        if (n == 7) return 1396l\n        if (n == 8) return 1401l\n        if (n == 9) return 1405l\n        if (n == 10) return 1413l\n        if (n == 11) return 1419l\n        if (n == 12) return 1423l\n        if (n == 13) return 1429l\n        if (n == 14) return 1433l\n        if (n == 15) return 1439l\n        if (n == 16) return 1447l\n        if (n == 17) return 1451l\n        if (n == 18) return 1455l\n        if (n == 19) return 1457l\n        if (n == 20) return 1459l\n        if (n == 21) return 1461l\n        if (n == 22) return 1463l\n        if (n == 23) return 1467l\n        if (n == 24) return 1471l\n        if (n == 25) return 1473l\n        if (n == 26) return 1479l\n        if (n == 27) return 1481l\n        if (n == 28) return 1483l\n        if (n == 29) return 1487l\n        if (n == 30) return 1489l\n        if (n == 31) return 1491l\n        if (n == 32) return 1493l\n        if (n == 33) return 1497l\n        if (n == 34) return 1499l\n        if (n == 35) return 1501l\n        if (n == 36) return 1503l\n        if (n == 37) return 1505l\n        if (n == 38) return 1507l\n        if (n == 39) return 1509l\n        if (n == 40) return 1511l\n        if (n == 41) return 1513l\n        if (n == 42) return 1517l\n        if\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293180,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpq9wmbbd_.scala:59:10 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m59 |\u001b[0m        \u001b[33mif\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m          ^\u001b[0m\n\u001b[31m   |\u001b[0m          expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.primeFib(n)\n        if (fib.isPrime())\n            fib\n        else\n            throw new RuntimeException(\"Not prime\")\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293183,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpy3meu63d.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.primeFib(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 2l\n        } else if (n == 2) {\n            return 3l\n        } else if (n == 3) {\n            return 5l\n        } else if (n == 4) {\n            return 13l\n        } else if (n == 5) {\n            return 89l\n        } else {\n            val a = primeFib(n - 1)\n            val b = primeFib(n - 2)\n            val c = primeFib(n - 3)\n            val p = a + b\n            val q = a + c\n            val r = p + q\n            return r\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293185,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp7mzzk7dq.scala:44)\n\tat Problem.main(tmp7mzzk7dq.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val fib2 = fib.toLong\n        if (fib2 % 2 == 0) {\n            return fib2\n        } else {\n            return fib2 + 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293174,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptogeqe6d.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val isPrime = scala.math.fibonacci.isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            scala.math.fibonacci.fibonacci(n + 1)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5f1ytkg.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5f1ytkg.scala:17:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.fibonacci.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5f1ytkg.scala:21:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            scala.math.fibonacci.fibonacci(n + \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value fibonacci is not a member of math\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1l\n        val n3 = n2 + 1l\n        val n4 = n3 + 1l\n        val n5 = n4 + 1l\n        val n6 = n5 + 1l\n        val n7 = n6 + 1l\n        val n8 = n7 + 1l\n        val n9 = n8 + 1l\n        val n10 = n9 + 1l\n        val n11 = n10 + 1l\n        val n12 = n11 + 1l\n        val n13 = n12 + 1l\n        val n14 = n13 + 1l\n        val n15 = n14 + 1l\n        val n16 = n15 + 1l\n        val n17 = n16 + 1l\n        val n18 = n17 + 1l\n        val n19 = n18 + 1l\n        val n20 = n19 + 1l\n        val n21 = n20 + 1l\n        val n22 = n21 + 1l\n        val n23 = n22 + 1l\n        val n24 = n23 + 1l\n        val n25 = n24 + 1l\n        val n26 = n25 + 1l\n        val n27 = n26 + 1l\n        val n28 = n27 + 1l\n        val n29 = n28 + 1l\n        val n30 = n29 + 1l\n        val n31 = n30 + 1l\n        val n32 = n31 + 1l\n        val n33 = n32 + 1l\n        val n34 = n33 + 1l\n        val n35 = n34 + 1l\n        val n36 = n35 + 1l\n        val n37 = n36 + 1l\n        val n38 = n37 + 1l\n        val n39 = n38 + 1l\n        val n40 = n39 + 1l\n        val n41 = n40 + 1l\n        val n42 = n41 + 1l\n        val n43 = n42 + 1l\n        val n44 = n43 + 1l\n        val n45 = n44 + 1l\n        val n46 = n45 + 1l\n        val n47 = n46 + 1l\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzc4pdf9.scala:63:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val isPrime = isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative argument\")\n        }\n        if (n == 0) {\n            0\n        } else if (n == 1) {\n            1\n        } else {\n            fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n-th number is prime.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrime returns true if n-th number is prime.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293181,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpkqdz4xec.scala:86:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m86 |\u001b[0m        } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                 expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpkqdz4xec.scala:17:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35misPrime\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmpkqdz4xec.scala:81:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m81 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrime\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mBoolean\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 60 and\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 81\n\u001b[31m   |\u001b[0mhave the same type after erasure.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mConsider adding a @targetName annotation to one of the conflicting definitions\n\u001b[31m   |\u001b[0mfor disambiguation.\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val result = new AtomicLong(0l)\n        val f = new AtomicLong(1l)\n        val f2 = new AtomicLong(1l)\n        val f3 = new AtomicLong(1l)\n        val f5 = new AtomicLong(1l)\n        val f13 = new AtomicLong(1l)\n        val f89 = new AtomicLong(1l)\n        val f892 = new AtomicLong(1l)\n        val f8923 = new AtomicLong(1l)\n        val f892345 = new AtomicLong(1l)\n        val f89234567 = new AtomicLong(1l)\n        val f8923456789 = new AtomicLong(1l)\n        val f89234567892 = new AtomicLong(1l)\n        val f892345678923 = new AtomicLong(1l)\n        val f8923456789234 = new AtomicLong(1l)\n        val f89234567892345 = new AtomicLong(1l)\n        val f892345678923456 = new AtomicLong(1l)\n        val f8923456789234567 = new AtomicLong(1l)\n        val f89234567892345678 = new AtomicLong(1l)\n        val f892345678923456789 = new AtomicLong(1l)\n        val f8923456789234567892 = new AtomicLong(1l)\n        val f89234567892345678923 = new AtomicLong(1l)\n        val f892345678923456789234 = new AtomicLong(1l)\n        val f8923456789234567892345 = new AtomicLong(1l)\n        val f89234567892345678923456 = new AtomicLong(1l)\n        val f892345678923456789234567 = new AtomicLong(1l)\n        val f8923456789234567892345678 = new AtomicLong(1l)\n        val f89234567892345678923456789 = new AtomicLong(1l)\n        val f892345678923\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293184,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr230oxhv.scala:45:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr230oxhv.scala:16:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mAtomicLong\u001b[0m(\u001b[31m0l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: type AtomicLong\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr230oxhv.scala:17:20 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mf\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mAtomicLong\u001b[0m(\u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    Not found: type AtomicLong\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr230oxhv.scala:18:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mf2\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mAtomicLong\u001b[0m(\u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: type AtomicLong\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr230oxhv.scala:19:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mf3\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mAtomicLong\u001b[0m(\u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                     Not found: type AtomicLong\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr230oxhv.scala:20:21 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mf5\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mAtomicLong\u001b[0m(\u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                     ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n == 0) return 0\n        if (n == 1) return 1\n        if (n == 2) return 2\n        if (n == 3) return 3\n        if (n == 4) return 5\n        if (n == 5) return 13\n        if (n == 6) return 89\n        if (n == 7) return 13\n        if (n == 8) return 13\n        if (n == 9) return 13\n        if (n == 10) return 13\n        if (n == 11) return 13\n        if (n == 12) return 13\n        if (n == 13) return 13\n        if (n == 14) return 13\n        if (n == 15) return 13\n        if (n == 16) return 13\n        if (n == 17) return 13\n        if (n == 18) return 13\n        if (n == 19) return 13\n        if (n == 20) return 13\n        if (n == 21) return 13\n        if (n == 22) return 13\n        if (n == 23) return 13\n        if (n == 24) return 13\n        if (n == 25) return 13\n        if (n == 26) return 13\n        if (n == 27) return 13\n        if (n == 28) return 13\n        if (n == 29) return 13\n        if (n == 30) return 13\n        if (n == 31) return 13\n        if (n == 32) return 13\n        if (n == 33) return 13\n        if (n == 34) return 13\n        if (n == 35) return 13\n        if (n == 36) return 13\n        if (n == 37) return 13\n        if (n == 38) return 13\n        if (n == 39) return 13\n        if (n == 40) return 13\n        if (n == 41) return 13\n        if (n == 42) return 13\n        if (n == 43) return 13\n        if (n == 44) return 13\n        if (n == 45) return 13\n        if (n == 46) return 13\n        if (n == 47) return 13\n        if (n == 48) return 13\n        if (n == 49) return 13\n        if (n == 50) return 13\n        if\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293182,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpoz5su71a.scala:67:10 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m        \u001b[33mif\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m          ^\u001b[0m\n\u001b[31m   |\u001b[0m          expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1l\n        val n3 = n2 + 1l\n        val n4 = n3 + 1l\n        val n5 = n4 + 1l\n        val n6 = n5 + 1l\n        val n7 = n6 + 1l\n        val n8 = n7 + 1l\n        val n9 = n8 + 1l\n        val n10 = n9 + 1l\n        val n11 = n10 + 1l\n        val n12 = n11 + 1l\n        val n13 = n12 + 1l\n        val n14 = n13 + 1l\n        val n15 = n14 + 1l\n        val n16 = n15 + 1l\n        val n17 = n16 + 1l\n        val n18 = n17 + 1l\n        val n19 = n18 + 1l\n        val n20 = n19 + 1l\n        val n21 = n20 + 1l\n        val n22 = n21 + 1l\n        val n23 = n22 + 1l\n        val n24 = n23 + 1l\n        val n25 = n24 + 1l\n        val n26 = n25 + 1l\n        val n27 = n26 + 1l\n        val n28 = n27 + 1l\n        val n29 = n28 + 1l\n        val n30 = n29 + 1l\n        val n31 = n30 + 1l\n        val n32 = n31 + 1l\n        val n33 = n32 + 1l\n        val n34 = n33 + 1l\n        val n35 = n34 + 1l\n        val n36 = n35 + 1l\n        val n37 = n36 + 1l\n        val n38 = n37 + 1l\n        val n39 = n38 + 1l\n        val n40 = n39 + 1l\n        val n41 = n40 + 1l\n        val n42 = n41 + 1l\n        val n43 = n42 + 1l\n        val n44 = n43 + 1l\n        val n45 = n44 + 1l\n        val n46 = n45 + 1l\n        val n47 = n46 + 1l\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzc4pdf9.scala:63:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val result = fib(n)\n        val prime = isPrime(result)\n        if (prime) result\n        else primeFib(n - 1)\n    }\n\n    // fib returns n-th Fibonacci number.\n    // >>> fib(0)\n    // 0\n    // >>> fib(1)\n    // 1\n    // >>> fib(2)\n    // 1\n    // >>> fib(3)\n    // 2\n    // >>> fib(4)\n    // 3\n    // >>> fib(5)\n    // 5\n    def fib(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative argument\")\n        }\n        if (n == 0) return 0\n        if (n == 1) return 1\n        val result = fib(n - 1) + fib(n - 2)\n        val prime = isPrime(result)\n        if (prime) result\n        else throw new IllegalArgumentException(\"Not prime\")\n    }\n\n    // isPrime returns true if n-th number is prime.\n    // >>> isPrime(0)\n    // False\n    // >>> isPrime(1)\n    // False\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // False\n    // >>> isPrime(4)\n    // True\n    // >>> isPrime(5)\n    // False\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) return false\n        if (n == 2) return true\n        if (n % 2 == 0) return false\n        val result = fib(n - 1) + fib(n - 2)\n        return result % n == 0\n    }\n\n    // isPrime returns true if n-th number is prime.\n    // >>> isPrime(0)\n    // False\n    // >>> isPrime(1)\n    // False\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // False\n    // >>> isPrime(4)\n    // True\n    // >>> isPrime(5)\n    // False\n    def isPrime(n : Long) : Boolean = {\n        if (\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293182,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpjstjgt61.scala:82:12 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m        \u001b[33mif\u001b[0m (\n\u001b[31m\u001b[31m   |\u001b[0m            ^\u001b[0m\n\u001b[31m   |\u001b[0m            expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmpjstjgt61.scala:81:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m81 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrime\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mBoolean\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 60 and\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 81\n\u001b[31m   |\u001b[0mhave the same type after erasure.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mConsider adding a @targetName annotation to one of the conflicting definitions\n\u001b[31m   |\u001b[0mfor disambiguation.\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        val fib3 = scala.math.factorial.apply(fib2)\n        val fib4 = scala.math.factorial.apply(fib3)\n        val fib5 = scala.math.factorial.apply(fib4)\n        val fib6 = scala.math.factorial.apply(fib5)\n        val fib7 = scala.math.factorial.apply(fib6)\n        val fib8 = scala.math.factorial.apply(fib7)\n        val fib9 = scala.math.factorial.apply(fib8)\n        val fib10 = scala.math.factorial.apply(fib9)\n        val fib11 = scala.math.factorial.apply(fib10)\n        val fib12 = scala.math.factorial.apply(fib11)\n        val fib13 = scala.math.factorial.apply(fib12)\n        val fib14 = scala.math.factorial.apply(fib13)\n        val fib15 = scala.math.factorial.apply(fib14)\n        val fib16 = scala.math.factorial.apply(fib15)\n        val fib17 = scala.math.factorial.apply(fib16)\n        val fib18 = scala.math.factorial.apply(fib17)\n        val fib19 = scala.math.factorial.apply(fib18)\n        val fib20 = scala.math.factorial.apply(fib19)\n        val fib21 = scala.math.factorial.apply(fib20)\n        val fib22 = scala.math.factorial.apply(fib21)\n        val fib23 = scala.math.factorial.apply(fib22)\n        val fib24 = scala.math.factorial.apply(fib23)\n        val fib25 = scala.math.factorial.apply(fib24)\n        val fib26 = scala.math.factorial.apply(f\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293142,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfa5shhtx.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:18:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:19:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:21:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib6\u001b[0m = scala.math.factorial.apply(fib5)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value fa",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            return 2l\n        } else {\n            var i = 2l\n            var j = 3l\n            while (j < n) {\n                i = j\n                j = i + j\n            }\n            return j\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293185,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp4a3d68xn.scala:31)\n\tat Problem.main(tmp4a3d68xn.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.primeFib(n)\n        if (fib.isPrime())\n            fib\n        else\n            throw new RuntimeException(\"Not prime\")\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293183,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpy3meu63d.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.primeFib(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val result = new AtomicLong(0l)\n        val fib = new AtomicLong(1l)\n        val fib2 = new AtomicLong(1l)\n        val fib3 = new AtomicLong(1l)\n        val fib4 = new AtomicLong(1l)\n        val fib5 = new AtomicLong(1l)\n        val fib6 = new AtomicLong(1l)\n        val fib7 = new AtomicLong(1l)\n        val fib8 = new AtomicLong(1l)\n        val fib9 = new AtomicLong(1l)\n        val fib10 = new AtomicLong(1l)\n        val fib11 = new AtomicLong(1l)\n        val fib12 = new AtomicLong(1l)\n        val fib13 = new AtomicLong(1l)\n        val fib14 = new AtomicLong(1l)\n        val fib15 = new AtomicLong(1l)\n        val fib16 = new AtomicLong(1l)\n        val fib17 = new AtomicLong(1l)\n        val fib18 = new AtomicLong(1l)\n        val fib19 = new AtomicLong(1l)\n        val fib20 = new AtomicLong(1l)\n        val fib21 = new AtomicLong(1l)\n        val fib22 = new AtomicLong(1l)\n        val fib23 = new AtomicLong(1l)\n        val fib24 = new AtomicLong(1l)\n        val fib25 = new AtomicLong(1l)\n        val fib26 = new AtomicLong(1l)\n        val fib27 = new AtomicLong(1l)\n        val fib28 = new AtomicLong(1l)\n        val fib29 = new AtomicLong(1l)\n        val fib30 = new AtomicLong(1l)\n        val fib31 = new AtomicLong(1l)\n        val fib32 = new AtomicLong(1l)\n        val fib33 = new AtomicLong(1l)\n        val fib34 = new AtomicLong(1l)\n        val fib35 = new AtomicLong(1l)\n        val fib36 = new AtomicLong(1l)\n        val fib37 = new AtomicLong(1l)\n        val fib38 = new AtomicLong(1l)\n        val fib39 = new Atomic\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293186,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl4qxzr7a.scala:16:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mAtomicLong\u001b[0m(\u001b[31m0l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: type AtomicLong\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl4qxzr7a.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mAtomicLong\u001b[0m(\u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: type AtomicLong\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl4qxzr7a.scala:18:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mAtomicLong\u001b[0m(\u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                       Not found: type AtomicLong\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl4qxzr7a.scala:19:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mAtomicLong\u001b[0m(\u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                       Not found: type AtomicLong\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpl4qxzr7a.scala:20:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mAtomicLong\u001b[0m(\u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                       ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                       Not found: type AtomicLong\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val result = n\n        if (n < 2) {\n            result = 2l\n        } else {\n            val f1 = primeFib(n - 1)\n            val f2 = primeFib(n - 2)\n            val f3 = primeFib(n - 3)\n            val f5 = primeFib(n - 5)\n            val f13 = primeFib(n - 13)\n            val f89 = primeFib(n - 89)\n            val f891 = primeFib(n - 89 + 1)\n            val f8913 = primeFib(n - 89 + 13)\n            val f8913_1 = primeFib(n - 89 + 13 + 1)\n            val f8913_13 = primeFib(n - 89 + 13 + 13)\n            val f8913_89 = primeFib(n - 89 + 13 + 89)\n            val f8913_891 = primeFib(n - 89 + 13 + 89 + 1)\n            val f8913_8913 = primeFib(n - 89 + 13 + 89 + 13)\n            val f8913_8913_1 = primeFib(n - 89 + 13 + 89 + 13 + 1)\n            val f8913_8913_13 = primeFib(n - 89 + 13 + 89 + 13 + 13)\n            val f8913_8913_89 = primeFib(n - 89 + 13 + 89 + 13 + 89)\n            val f8913_8913_891 = primeFib(n - 89 + 13 + 89 + 13 + 89 + 1)\n            val f8913_8913_8913 = primeFib(n - 89 + 13 + 89 + 13 + 89 + 13)\n            val f8913_8913_8913_1 = primeFib(n - 89 + 13 + 89 + 13 + 89 + 13 + 1)\n            val f8913_8913_8913_13 = primeFib(n - 89 + 13 + 89 + 13 + 89 + 13 + 13)\n            val f8913_8913_8913_89 = primeFib(n - 89 + 13 + 89 + 13 + 89 + 13 + 89)\n            val f8913_\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293186,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsi6i30xk.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpsi6i30xk.scala:57:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E052] Type Error: /tmp/tmpsi6i30xk.scala:18:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m            result = \u001b[31m2l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Reassignment to val result\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpsi6i30xk.scala:56:1 ---------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m ^\u001b[0m\n\u001b[31m   |\u001b[0m Found:    Unit\n\u001b[31m   |\u001b[0m Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpsi6i30xk.scala:43:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m43 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        val fib3 = scala.math.factorial.apply(fib2)\n        val fib4 = scala.math.factorial.apply(fib3)\n        val fib5 = scala.math.factorial.apply(fib4)\n        val fib6 = scala.math.factorial.apply(fib5)\n        val fib7 = scala.math.factorial.apply(fib6)\n        val fib8 = scala.math.factorial.apply(fib7)\n        val fib9 = scala.math.factorial.apply(fib8)\n        val fib10 = scala.math.factorial.apply(fib9)\n        val fib11 = scala.math.factorial.apply(fib10)\n        val fib12 = scala.math.factorial.apply(fib11)\n        val fib13 = scala.math.factorial.apply(fib12)\n        val fib14 = scala.math.factorial.apply(fib13)\n        val fib15 = scala.math.factorial.apply(fib14)\n        val fib16 = scala.math.factorial.apply(fib15)\n        val fib17 = scala.math.factorial.apply(fib16)\n        val fib18 = scala.math.factorial.apply(fib17)\n        val fib19 = scala.math.factorial.apply(fib18)\n        val fib20 = scala.math.factorial.apply(fib19)\n        val fib21 = scala.math.factorial.apply(fib20)\n        val fib22 = scala.math.factorial.apply(fib21)\n        val fib23 = scala.math.factorial.apply(fib22)\n        val fib24 = scala.math.factorial.apply(fib23)\n        val fib25 = scala.math.factorial.apply(fib24)\n        val fib26 = scala.math.factorial.apply(f\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293142,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfa5shhtx.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:18:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:19:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:21:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib6\u001b[0m = scala.math.factorial.apply(fib5)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value fa",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val isPrime = isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    // >>> fibonacci(6)\n    // 8\n    // >>> fibonacci(7)\n    // 13\n    def fibonacci(n : Long) : Long = {\n        if (n < 2) {\n            0\n        } else {\n            fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n-th number is prime.\n    // >>> isPrime(2)\n    // true\n    // >>> isPrime(3)\n    // true\n    // >>> isPrime(4)\n    // false\n    // >>> isPrime(5)\n    // true\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            true\n        } else if (n == 2) {\n            true\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            isPrime(n - 1) && scala.math.factorial(n).isPrime(n)\n        }\n    }\n\n    // isPrime returns true if n-th number is prime.\n    // >>> isPrime(2)\n    // true\n    // >>> isPrime(3)\n    // true\n    // >>> isPrime(4)\n    // false\n    // >>> isPrime(5)\n    // true\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            true\n        } else if (n == 2) {\n            true\n        } else if (\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpww7_oibj.scala:85:19 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m        } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpww7_oibj.scala:17:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35misPrime\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpww7_oibj.scala:67:41 ------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m            isPrime(n - \u001b[31m1\u001b[0m) && scala.math.factorial(n).isPrime(n)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                              value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmpww7_oibj.scala:80:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrime\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mBoolean\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 59 and\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 80\n\u001b[31m   |\u001b[0mhave the same type after erasure.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mConsider adding a @targetName annotation to one of the conflicting definitions\n\u001b[31m   |\u001b[0mfor disambiguation.\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n <= 2) return n\n        val a = primeFib(n - 1)\n        val b = primeFib(n - 2)\n        val c = a + b\n        if (c % 2 == 0) return c\n        else return c + 1\n    }\n\n    // prime_fib2 returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib2((1l))\n    // (2l)\n    // >>> primeFib2((2l))\n    // (3l)\n    // >>> primeFib2((3l))\n    // (5l)\n    // >>> primeFib2((4l))\n    // (13l)\n    // >>> primeFib2((5l))\n    // (89l)\n    def primeFib2(n : Long) : Long = {\n        if (n <= 2) return n\n        val a = primeFib2(n - 1)\n        val b = primeFib2(n - 2)\n        val c = a + b\n        if (c % 2 == 0) return c\n        else return c + 1\n    }\n\n    // prime_fib3 returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib3((1l))\n    // (2l)\n    // >>> primeFib3((2l))\n    // (3l)\n    // >>> primeFib3((3l))\n    // (5l)\n    // >>> primeFib3((4l))\n    // (13l)\n    // >>> primeFib3((5l))\n    // (89l)\n    def primeFib3(n : Long) : Long = {\n        if (n <= 2) return n\n        val a = primeFib3(n - 1)\n        val b = primeFib3(n - 2)\n        val c = a + b\n        if (c % 2 == 0) return c\n        else return c + 1\n    }\n\n    // prime_fib4 returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib4((1l\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293182,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp2fwj8_36.scala:80:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2fwj8_36.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(primeFib((\u001b[31m1l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2fwj8_36.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(primeFib((\u001b[31m2l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2fwj8_36.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(primeFib((\u001b[31m3l\u001b[0m)) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2fwj8_36.scala:71:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m    assert(primeFib((\u001b[31m4l\u001b[0m)) == (\u001b[31m13l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2fwj8_36.scala:72:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m72 |\u001b[0m    assert(primeFib((\u001b[31m5l\u001b[0m)) == (\u001b[31m89l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2fwj8_36.scala:73:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m73 |\u001b[0m    assert(primeFib((\u001b[31m6l\u001b[0m)) == (\u001b[31m233l\u001b[0m));",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci(n)\n        val isPrime = scala.math.isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            primeFib(n - 1)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293187,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjtlv52zy.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjtlv52zy.scala:17:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value isPrime is not a member of math\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            return 2l\n        } else if (n == 2) {\n            return 2l\n        } else if (n == 3) {\n            return 3l\n        } else if (n == 4) {\n            return 5l\n        } else if (n == 5) {\n            return 13l\n        } else if (n == 6) {\n            return 89l\n        } else {\n            var a = primeFib(n - 1)\n            var b = primeFib(n - 2)\n            return a + b\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpabuvc5no.scala:36)\n\tat Problem.main(tmpabuvc5no.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) return 2l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 5l\n        if (n == 5) return 13l\n        if (n == 6) return 89l\n        if (n == 7) return 13l\n        if (n == 8) return 13l\n        if (n == 9) return 13l\n        if (n == 10) return 13l\n        if (n == 11) return 13l\n        if (n == 12) return 13l\n        if (n == 13) return 13l\n        if (n == 14) return 13l\n        if (n == 15) return 13l\n        if (n == 16) return 13l\n        if (n == 17) return 13l\n        if (n == 18) return 13l\n        if (n == 19) return 13l\n        if (n == 20) return 13l\n        if (n == 21) return 13l\n        if (n == 22) return 13l\n        if (n == 23) return 13l\n        if (n == 24) return 13l\n        if (n == 25) return 13l\n        if (n == 26) return 13l\n        if (n == 27) return 13l\n        if (n == 28) return 13l\n        if (n == 29) return 13l\n        if (n == 30) return 13l\n        if (n == 31) return 13l\n        if (n == 32) return 13l\n        if (n == 33) return 13l\n        if (n == 34) return 13l\n        if (n == 35) return 13l\n        if (n == 36) return 13l\n        if (n == 37) return 13l\n        if (n == 38) return 13l\n        if (n == 39) return 13l\n        if (n == 40) return 13l\n        if (n == 41) return 13l\n        if (n == 42) return 13l\n        if (n == 43) return 13l\n        if (n == 44) return 13l\n        if (n == 45) return 13l\n        if (n == 46) return 13l\n        if (n == 47\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293136,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8grmsrgs.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        var result = 0l\n        var i = 2l\n        while (i < n) {\n            if (isPrime(i)) {\n                result = i\n                i = i + 1l\n            } else {\n                i = i + 2l\n            }\n        }\n        return result\n    }\n\n    // isPrime returns true if n is prime.\n    // >>> isPrime(2l)\n    // True\n    // >>> isPrime(3l)\n    // True\n    // >>> isPrime(4l)\n    // False\n    // >>> isPrime(5l)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            var i = 3l\n            while (i <= Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n                i = i + 2l\n            }\n            return true\n        }\n    }\n\n    // isPrime2 returns true if n is prime.\n    // >>> isPrime2(2l)\n    // True\n    // >>> isPrime2(3l)\n    // True\n    // >>> isPrime2(4l)\n    // False\n    // >>> isPrime2(5l)\n    // True\n    def isPrime2(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            var i = 3l\n            while (i <= Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n                i = i + 2l\n            }\n            return true\n        }\n    }\n\n    // isPrime3 returns true if n is prime.\n    // >>> isPrime3(2l)\n    // True\n    // >>> isPrime3(3l)\n    \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293184,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpuvx28bux.scala:104:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m104 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuvx28bux.scala:92:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m    assert(primeFib((\u001b[31m1l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuvx28bux.scala:93:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m93 |\u001b[0m    assert(primeFib((\u001b[31m2l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuvx28bux.scala:94:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m94 |\u001b[0m    assert(primeFib((\u001b[31m3l\u001b[0m)) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuvx28bux.scala:95:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m95 |\u001b[0m    assert(primeFib((\u001b[31m4l\u001b[0m)) == (\u001b[31m13l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuvx28bux.scala:96:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m96 |\u001b[0m    assert(primeFib((\u001b[31m5l\u001b[0m)) == (\u001b[31m89l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuvx28bux.scala:97:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m97 |\u001b[0m    assert(primeFib((\u001b[31m6l\u001b[0m)) == (\u001b[31m233l\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) return 2l\n        if (n == 2) return 2l\n        if (n == 3) return 3l\n        if (n == 4) return 5l\n        if (n == 5) return 13l\n        if (n == 6) return 89l\n        if (n == 7) return 13l\n        if (n == 8) return 13l\n        if (n == 9) return 13l\n        if (n == 10) return 13l\n        if (n == 11) return 13l\n        if (n == 12) return 13l\n        if (n == 13) return 13l\n        if (n == 14) return 13l\n        if (n == 15) return 13l\n        if (n == 16) return 13l\n        if (n == 17) return 13l\n        if (n == 18) return 13l\n        if (n == 19) return 13l\n        if (n == 20) return 13l\n        if (n == 21) return 13l\n        if (n == 22) return 13l\n        if (n == 23) return 13l\n        if (n == 24) return 13l\n        if (n == 25) return 13l\n        if (n == 26) return 13l\n        if (n == 27) return 13l\n        if (n == 28) return 13l\n        if (n == 29) return 13l\n        if (n == 30) return 13l\n        if (n == 31) return 13l\n        if (n == 32) return 13l\n        if (n == 33) return 13l\n        if (n == 34) return 13l\n        if (n == 35) return 13l\n        if (n == 36) return 13l\n        if (n == 37) return 13l\n        if (n == 38) return 13l\n        if (n == 39) return 13l\n        if (n == 40) return 13l\n        if (n == 41) return 13l\n        if (n == 42) return 13l\n        if (n == 43) return 13l\n        if (n == 44) return 13l\n        if (n == 45) return 13l\n        if (n == 46) return 13l\n        if (n == 47\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293136,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp8grmsrgs.scala:63:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val prime = fib.takeWhile(i => scala.math.isPrime(i))\n        val result = prime.reduce(0l, (a, b) => a + b)\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293186,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpzed_k3jg.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val isPrime = scala.math.fibonacci.isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            primeFib(n - 1)\n        }\n    }\n\n    // prime_fib_recursive returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_recursive((1l))\n    // (2l)\n    // >>> primeFib_recursive((2l))\n    // (3l)\n    // >>> primeFib_recursive((3l))\n    // (5l)\n    // >>> primeFib_recursive((4l))\n    // (13l)\n    // >>> primeFib_recursive((5l))\n    // (89l)\n    def primeFib_recursive(n : Long) : Long = {\n        if (n < 2) {\n            n\n        } else {\n            val fib = scala.math.fibonacci.fibonacci(n)\n            val isPrime = scala.math.fibonacci.isPrime(fib)\n            if (isPrime) {\n                fib\n            } else {\n                primeFib_recursive(n - 1)\n            }\n        }\n    }\n\n    // prime_fib_iterative returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_iterative((1l))\n    // (2l)\n    // >>> primeFib_iterative((2l))\n    // (3l)\n    // >>> primeFib_iterative((3l))\n    // (5l)\n    // >>> primeFib_iterative((4l))\n    // (13l)\n    // >>> primeFib_iterative((5l))\n    // (89l)\n    def primeFib_iterative(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val isPrime = scala.math.f\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293188,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp82rhjfss.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp82rhjfss.scala:17:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.fibonacci.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp82rhjfss.scala:40:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp82rhjfss.scala:41:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.fibonacci.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                          ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                          value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp82rhjfss.scala:62:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp82rhjfss.scala:63:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.f\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value f is not a member of math\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp82rhjfss.scala:64:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1l\n        val n3 = n2 + 1l\n        val n4 = n3 + 1l\n        val n5 = n4 + 1l\n        val n6 = n5 + 1l\n        val n7 = n6 + 1l\n        val n8 = n7 + 1l\n        val n9 = n8 + 1l\n        val n10 = n9 + 1l\n        val n11 = n10 + 1l\n        val n12 = n11 + 1l\n        val n13 = n12 + 1l\n        val n14 = n13 + 1l\n        val n15 = n14 + 1l\n        val n16 = n15 + 1l\n        val n17 = n16 + 1l\n        val n18 = n17 + 1l\n        val n19 = n18 + 1l\n        val n20 = n19 + 1l\n        val n21 = n20 + 1l\n        val n22 = n21 + 1l\n        val n23 = n22 + 1l\n        val n24 = n23 + 1l\n        val n25 = n24 + 1l\n        val n26 = n25 + 1l\n        val n27 = n26 + 1l\n        val n28 = n27 + 1l\n        val n29 = n28 + 1l\n        val n30 = n29 + 1l\n        val n31 = n30 + 1l\n        val n32 = n31 + 1l\n        val n33 = n32 + 1l\n        val n34 = n33 + 1l\n        val n35 = n34 + 1l\n        val n36 = n35 + 1l\n        val n37 = n36 + 1l\n        val n38 = n37 + 1l\n        val n39 = n38 + 1l\n        val n40 = n39 + 1l\n        val n41 = n40 + 1l\n        val n42 = n41 + 1l\n        val n43 = n42 + 1l\n        val n44 = n43 + 1l\n        val n45 = n44 + 1l\n        val n46 = n45 + 1l\n        val n47 = n46 + 1l\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzc4pdf9.scala:63:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        val fib3 = scala.math.factorial.apply(fib2)\n        val fib4 = scala.math.factorial.apply(fib3)\n        val fib5 = scala.math.factorial.apply(fib4)\n        val fib6 = scala.math.factorial.apply(fib5)\n        val fib7 = scala.math.factorial.apply(fib6)\n        val fib8 = scala.math.factorial.apply(fib7)\n        val fib9 = scala.math.factorial.apply(fib8)\n        val fib10 = scala.math.factorial.apply(fib9)\n        val fib11 = scala.math.factorial.apply(fib10)\n        val fib12 = scala.math.factorial.apply(fib11)\n        val fib13 = scala.math.factorial.apply(fib12)\n        val fib14 = scala.math.factorial.apply(fib13)\n        val fib15 = scala.math.factorial.apply(fib14)\n        val fib16 = scala.math.factorial.apply(fib15)\n        val fib17 = scala.math.factorial.apply(fib16)\n        val fib18 = scala.math.factorial.apply(fib17)\n        val fib19 = scala.math.factorial.apply(fib18)\n        val fib20 = scala.math.factorial.apply(fib19)\n        val fib21 = scala.math.factorial.apply(fib20)\n        val fib22 = scala.math.factorial.apply(fib21)\n        val fib23 = scala.math.factorial.apply(fib22)\n        val fib24 = scala.math.factorial.apply(fib23)\n        val fib25 = scala.math.factorial.apply(fib24)\n        val fib26 = scala.math.factorial.apply(f\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293142,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfa5shhtx.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:18:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:19:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:21:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib6\u001b[0m = scala.math.factorial.apply(fib5)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value fa",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        var i = 0l\n        var j = 1l\n        while (i < n) {\n            var k = j + i\n            j = i\n            i = k\n        }\n        return j\n    }\n\n    // prime_fib2 returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib2((1l))\n    // (2l)\n    // >>> primeFib2((2l))\n    // (3l)\n    // >>> primeFib2((3l))\n    // (5l)\n    // >>> primeFib2((4l))\n    // (13l)\n    // >>> primeFib2((5l))\n    // (89l)\n    def primeFib2(n : Long) : Long = {\n        var i = 0l\n        var j = 1l\n        while (i < n) {\n            var k = j + i\n            j = i\n            i = k\n        }\n        return j\n    }\n\n    // prime_fib3 returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib3((1l))\n    // (2l)\n    // >>> primeFib3((2l))\n    // (3l)\n    // >>> primeFib3((3l))\n    // (5l)\n    // >>> primeFib3((4l))\n    // (13l)\n    // >>> primeFib3((5l))\n    // (89l)\n    def primeFib3(n : Long) : Long = {\n        var i = 0l\n        var j = 1l\n        while (i < n) {\n            var k = j + i\n            j = i\n            i = k\n        }\n        return j\n    }\n\n    // prime_fib4 returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib4((1l))\n    // (2l)\n    // >>> primeFib4((2l))\n    // (3l)\n    // >>> primeFib4((3l))\n    // (5l)\n    //\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293185,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptiv0ktx_.scala:92:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptiv0ktx_.scala:80:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m    assert(primeFib((\u001b[31m1l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptiv0ktx_.scala:81:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m81 |\u001b[0m    assert(primeFib((\u001b[31m2l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptiv0ktx_.scala:82:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m    assert(primeFib((\u001b[31m3l\u001b[0m)) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptiv0ktx_.scala:83:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m83 |\u001b[0m    assert(primeFib((\u001b[31m4l\u001b[0m)) == (\u001b[31m13l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptiv0ktx_.scala:84:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m    assert(primeFib((\u001b[31m5l\u001b[0m)) == (\u001b[31m89l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptiv0ktx_.scala:85:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    assert(primeFib((\u001b[31m6l\u001b[0m)) == (\u001b[31m233l\u001b[0m));",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    // >>> fibonacci(6)\n    // 8\n    // >>> fibonacci(7)\n    // 13\n    // >>> fibonacci(8)\n    // 21\n    // >>> fibonacci(9)\n    // 34\n    def fibonacci(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293187,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb28ewy4k.scala:88:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m88 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpb28ewy4k.scala:87:19 --------------------\u001b[0m\u001b[0m\n\u001b[31m87 |\u001b[0m        } \u001b[33melse\u001b[0m \u001b[33mif\u001b[0m (n\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Found:    (n : Long)\n\u001b[31m   |\u001b[0m                   Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmpb28ewy4k.scala:84:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m84 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrime\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mBoolean\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 63 and\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 84\n\u001b[31m   |\u001b[0mhave the same type after erasure.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mConsider adding a @targetName annotation to one of the conflicting definitions\n\u001b[31m   |\u001b[0mfor disambiguation.\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = fib.takeWhile(_ < n)\n        val result = fib.zip(prime).map(_ + _).sum\n        if (result < n) {\n            throw new RuntimeException(\"Fibonacci number is not prime.\")\n        }\n        result\n    }\n\n    // fibonacci returns a Fibonacci sequence.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Iterator[Long] = {\n        if (n < 0) {\n            throw new RuntimeException(\"Negative argument not supported.\")\n        }\n        if (n == 0) {\n            return Iterator.empty()\n        }\n        if (n == 1) {\n            return Iterator.single(1l)\n        }\n        val fib = fibonacci(n - 1)\n        val fib1 = fib.map(f -> f + 1l)\n        val fib2 = fib.map(f -> f + 1l)\n        return fib1.zip(fib2).map(_ + _).iterator\n    }\n\n    // fibonacci2 returns a Fibonacci sequence.\n    // >>> fibonacci2(0)\n    // 0\n    // >>> fibonacci2(1)\n    // 1\n    // >>> fibonacci2(2)\n    // 1\n    // >>> fibonacci2(3)\n    // 2\n    // >>> fibonacci2(4)\n    // 3\n    // >>> fibonacci2(5)\n    // 5\n    def fibonacci2(n : Long) : Iterator[Long] = {\n        if (n < 0) {\n            throw new RuntimeException(\"Negative argument not supported.\")\n        }\n        if (n == 0) {\n            return Iterator.empty()\n        }\n        if (n == 1) {\n            return Iterator.single(\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293189,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmp9_4a65pp.scala:75:35 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m            \u001b[33mreturn\u001b[0m Iterator.single(\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp9_4a65pp.scala:91:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m91 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp9_4a65pp.scala:43:19 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m            \u001b[33mreturn\u001b[0m Iterator.empty()\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                \u001b[33mmethod\u001b[0m \u001b[35mempty\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mIterator\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9_4a65pp.scala:49:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib1\u001b[0m = fib.map(f -> f + \u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Not found: f\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp9_4a65pp.scala:50:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = fib.map(f -> f + \u001b[31m1l\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                           ^\u001b[0m\n\u001b[31m   |\u001b[0m                           Not found: f\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp9_4a65pp.scala:51:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m        \u001b[33mreturn\u001b[0m fib1.zip(fib2).map(_ + _).iterator\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                  value + is not a member of Nothi",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        val fib3 = scala.math.factorial.apply(fib2)\n        val fib4 = scala.math.factorial.apply(fib3)\n        val fib5 = scala.math.factorial.apply(fib4)\n        val fib6 = scala.math.factorial.apply(fib5)\n        val fib7 = scala.math.factorial.apply(fib6)\n        val fib8 = scala.math.factorial.apply(fib7)\n        val fib9 = scala.math.factorial.apply(fib8)\n        val fib10 = scala.math.factorial.apply(fib9)\n        val fib11 = scala.math.factorial.apply(fib10)\n        val fib12 = scala.math.factorial.apply(fib11)\n        val fib13 = scala.math.factorial.apply(fib12)\n        val fib14 = scala.math.factorial.apply(fib13)\n        val fib15 = scala.math.factorial.apply(fib14)\n        val fib16 = scala.math.factorial.apply(fib15)\n        val fib17 = scala.math.factorial.apply(fib16)\n        val fib18 = scala.math.factorial.apply(fib17)\n        val fib19 = scala.math.factorial.apply(fib18)\n        val fib20 = scala.math.factorial.apply(fib19)\n        val fib21 = scala.math.factorial.apply(fib20)\n        val fib22 = scala.math.factorial.apply(fib21)\n        val fib23 = scala.math.factorial.apply(fib22)\n        val fib24 = scala.math.factorial.apply(fib23)\n        val fib25 = scala.math.factorial.apply(fib24)\n        val fib26 = scala.math.factorial.apply(f\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293142,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfa5shhtx.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:18:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:19:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:21:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib6\u001b[0m = scala.math.factorial.apply(fib5)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value fa",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        var i = 0l\n        var j = 1l\n        while (i < n) {\n            if (j % 2 == 0) {\n                j = j / 2\n            } else {\n                i = i + j\n                j = j + 1\n            }\n        }\n        return j\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293188,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpxy76rnym.scala:30)\n\tat Problem.main(tmpxy76rnym.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n <= 2l) {\n            return n\n        } else {\n            var f1 = primeFib(n - 1l)\n            var f2 = primeFib(n - 2l)\n            return (f1 + f2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293190,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp4lyfr3fg.scala:25)\n\tat Problem.main(tmp4lyfr3fg.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1l\n        val n3 = n2 + 1l\n        val n4 = n3 + 1l\n        val n5 = n4 + 1l\n        val n6 = n5 + 1l\n        val n7 = n6 + 1l\n        val n8 = n7 + 1l\n        val n9 = n8 + 1l\n        val n10 = n9 + 1l\n        val n11 = n10 + 1l\n        val n12 = n11 + 1l\n        val n13 = n12 + 1l\n        val n14 = n13 + 1l\n        val n15 = n14 + 1l\n        val n16 = n15 + 1l\n        val n17 = n16 + 1l\n        val n18 = n17 + 1l\n        val n19 = n18 + 1l\n        val n20 = n19 + 1l\n        val n21 = n20 + 1l\n        val n22 = n21 + 1l\n        val n23 = n22 + 1l\n        val n24 = n23 + 1l\n        val n25 = n24 + 1l\n        val n26 = n25 + 1l\n        val n27 = n26 + 1l\n        val n28 = n27 + 1l\n        val n29 = n28 + 1l\n        val n30 = n29 + 1l\n        val n31 = n30 + 1l\n        val n32 = n31 + 1l\n        val n33 = n32 + 1l\n        val n34 = n33 + 1l\n        val n35 = n34 + 1l\n        val n36 = n35 + 1l\n        val n37 = n36 + 1l\n        val n38 = n37 + 1l\n        val n39 = n38 + 1l\n        val n40 = n39 + 1l\n        val n41 = n40 + 1l\n        val n42 = n41 + 1l\n        val n43 = n42 + 1l\n        val n44 = n43 + 1l\n        val n45 = n44 + 1l\n        val n46 = n45 + 1l\n        val n47 = n46 + 1l\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzc4pdf9.scala:63:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val fib2 = fib.toLong\n        if (fib2 % 2 == 0) {\n            return fib2\n        } else {\n            return fib2 + 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293174,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmptogeqe6d.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        val fib = scala.math.fibonacci.fibonacci(n - 1)\n        if (fib.isZero()) {\n            throw new IllegalArgumentException(\"n is too big\")\n        }\n        val fib2 = scala.math.fibonacci.fibonacci(n - 2)\n        if (fib2.isZero()) {\n            throw new IllegalArgumentException(\"n is too big\")\n        }\n        val n2 = fib2.div(fib)\n        if (n2.isZero()) {\n            throw new IllegalArgumentException(\"n is too big\")\n        }\n        val n3 = n2.div(fib)\n        if (n3.isZero()) {\n            throw new IllegalArgumentException(\"n is too big\")\n        }\n        val n4 = n3.div(fib)\n        if (n4.isZero()) {\n            throw new IllegalArgumentException(\"n is too big\")\n        }\n        val n5 = n4.div(fib)\n        if (n5.isZero()) {\n            throw new IllegalArgumentException(\"n is too big\")\n        }\n        val n6 = n5.div(fib)\n        if (n6.isZero()) {\n            throw new IllegalArgumentException(\"n is too big\")\n        }\n        val n7 = n6.div(fib)\n        if (n7.isZero()) {\n            throw new IllegalArgumentException(\"n is too big\")\n        }\n        val n8 = n7.div(fib)\n        if (n8.isZero()) {\n            throw new IllegalArgumentException(\"n is too big\")\n        }\n        val n9 = n8.div(fib)\n        if (n9.isZero()) {\n            throw new IllegalArgumentException(\"n is too big\")\n        }\n        val n10 = n9.div(fib)\n        if (n10.isZero()) {\n            throw new IllegalArgumentException(\"n is too big\")\n        }\n        val n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293192,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_21xd_ta.scala:64:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_21xd_ta.scala:16:14 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mif\u001b[0m (n < \u001b[31m2\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue < is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import math.BigDecimal.RoundingMode.ValueOrdering.mkOrderingOps\n\u001b[31m   |\u001b[0m  import math.BigDecimal.javaBigDecimal2bigDecimal\n\u001b[31m   |\u001b[0m  import math.BigInt.javaBigInteger2bigInt\n\u001b[31m   |\u001b[0m  import math.Numeric.BigDecimalAsIfIntegral.mkOrderingOps\n\u001b[31m   |\u001b[0m  import math.Numeric.BigDecimalIsFractional.mkOrderingOps\n\u001b[31m   |\u001b[0m  import math.Numeric.BigIntIsIntegral.mkOrderingOps\n\u001b[31m   |\u001b[0m  import math.Ordering.BigDecimal.mkOrderingOps\n\u001b[31m   |\u001b[0m  import math.Ordering.BigInt.mkOrderingOps\n\u001b[31m   |\u001b[0m  import math.Ordering.String.mkOrderingOps\n\u001b[31m   |\u001b[0m  import math.Ordering.Symbol.mkOrderingOps\n\u001b[31m   |\u001b[0m\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_21xd_ta.scala:19:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n - \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_21xd_ta.scala:23:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.fibonacci.fibonacci(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp_21xd_ta.scala:64:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m64 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial._.apply(n)\n        val fib2 = scala.math.factorial._.apply(fib)\n        val fib3 = scala.math.factorial._.apply(fib2)\n        val fib4 = scala.math.factorial._.apply(fib3)\n        val fib5 = scala.math.factorial._.apply(fib4)\n        val fib6 = scala.math.factorial._.apply(fib5)\n        val fib7 = scala.math.factorial._.apply(fib6)\n        val fib8 = scala.math.factorial._.apply(fib7)\n        val fib9 = scala.math.factorial._.apply(fib8)\n        val fib10 = scala.math.factorial._.apply(fib9)\n        val fib11 = scala.math.factorial._.apply(fib10)\n        val fib12 = scala.math.factorial._.apply(fib11)\n        val fib13 = scala.math.factorial._.apply(fib12)\n        val fib14 = scala.math.factorial._.apply(fib13)\n        val fib15 = scala.math.factorial._.apply(fib14)\n        val fib16 = scala.math.factorial._.apply(fib15)\n        val fib17 = scala.math.factorial._.apply(fib16)\n        val fib18 = scala.math.factorial._.apply(fib17)\n        val fib19 = scala.math.factorial._.apply(fib18)\n        val fib20 = scala.math.factorial._.apply(fib19)\n        val fib21 = scala.math.factorial._.apply(fib20)\n        val fib22 = scala.math.factorial._.apply(fib21)\n        val fib23 = scala.math.factorial._.apply(fib22)\n        val fib24 = scala.math.factorial._.apply(fib23)\n        val fib25 = scala.math.factorial\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgjvr7tx.scala:16:39 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial._.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgjvr7tx.scala:17:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial._.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgjvr7tx.scala:18:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial._.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgjvr7tx.scala:19:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial._.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgjvr7tx.scala:20:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial._.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m long",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        if (n == 2) {\n            return 2l\n        }\n        if (n == 3) {\n            return 3l\n        }\n        if (n == 4) {\n            return 5l\n        }\n        if (n == 5) {\n            return 13l\n        }\n        if (n == 6) {\n            return 89l\n        }\n        var a = 1l\n        var b = 1l\n        var c = 2l\n        var d = 3l\n        var e = 5l\n        var f = 13l\n        var g = 89l\n        var h = 1l\n        var i = 1l\n        var j = 2l\n        var k = 3l\n        var l = 5l\n        var m = 13l\n        var n = 89l\n        var o = 1l\n        var p = 2l\n        var q = 3l\n        var r = 5l\n        var s = 13l\n        var t = 89l\n        var u = 1l\n        var v = 2l\n        var w = 3l\n        var x = 5l\n        var y = 13l\n        var z = 89l\n        var A = 1l\n        var B = 2l\n        var C = 3l\n        var D = 5l\n        var E = 13l\n        var F = 89l\n        var G = 1l\n        var H = 2l\n        var I = 3l\n        var J = 5l\n        var K = 13l\n        var L = 89l\n        var M = 1l\n        var N = 2l\n        var O = 3l\n        var P = 5l\n        var Q = 13l\n        var R = 89l\n        var S = 1l\n        var T = 2l\n        var U = 3l\n        var V = 5l\n        var W = 13l\n        var X = 89l\n        var Y = 1l\n        var Z = 2l\n        var AA = 3l\n        var AB = 5l\n        var AC = 13l\n        var AD = 89l\n        var AE = 1l\n        var AF\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293190,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpszrqvctw.scala:92:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpszrqvctw.scala:92:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(fib)\n        val fib3 = scala.math.factorial.apply(fib2)\n        val fib4 = scala.math.factorial.apply(fib3)\n        val fib5 = scala.math.factorial.apply(fib4)\n        val fib6 = scala.math.factorial.apply(fib5)\n        val fib7 = scala.math.factorial.apply(fib6)\n        val fib8 = scala.math.factorial.apply(fib7)\n        val fib9 = scala.math.factorial.apply(fib8)\n        val fib10 = scala.math.factorial.apply(fib9)\n        val fib11 = scala.math.factorial.apply(fib10)\n        val fib12 = scala.math.factorial.apply(fib11)\n        val fib13 = scala.math.factorial.apply(fib12)\n        val fib14 = scala.math.factorial.apply(fib13)\n        val fib15 = scala.math.factorial.apply(fib14)\n        val fib16 = scala.math.factorial.apply(fib15)\n        val fib17 = scala.math.factorial.apply(fib16)\n        val fib18 = scala.math.factorial.apply(fib17)\n        val fib19 = scala.math.factorial.apply(fib18)\n        val fib20 = scala.math.factorial.apply(fib19)\n        val fib21 = scala.math.factorial.apply(fib20)\n        val fib22 = scala.math.factorial.apply(fib21)\n        val fib23 = scala.math.factorial.apply(fib22)\n        val fib24 = scala.math.factorial.apply(fib23)\n        val fib25 = scala.math.factorial.apply(fib24)\n        val fib26 = scala.math.factorial.apply(f\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293142,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfa5shhtx.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:17:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:18:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:19:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpfa5shhtx.scala:21:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib6\u001b[0m = scala.math.factorial.apply(fib5)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value fa",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            return 2l\n        } else if (n == 2) {\n            return 2l\n        } else if (n == 3) {\n            return 3l\n        } else if (n == 4) {\n            return 5l\n        } else if (n == 5) {\n            return 13l\n        } else if (n == 6) {\n            return 89l\n        } else {\n            val a = primeFib(n - 1)\n            val b = primeFib(n - 2)\n            val c = primeFib(n - 3)\n            val p = a + b\n            val q = a + c\n            val r = b + c\n            val s = p + q\n            val t = p + r\n            val u = q + r\n            val v = s + t\n            val w = s + u\n            val x = t + u\n            val y = v + w\n            val z = v + x\n            val m = w + x\n            val n = y + z\n            val o = y + m\n            val p = z + m\n            val q = o + p\n            val r = p + q\n            val s = q + r\n            val t = r + s\n            val u = s + t\n            val v = t + u\n            val w = u + v\n            val x = v + w\n            val y = w + x\n            val z = x + y\n            val m = y + z\n            val n = z + m\n            val o = m + n\n            val p = n + o\n            val q = o + p\n            val r = p + q\n            val s = q + r\n            val t = r + s\n            val u = s + t\n            val v = t + u\n            val w = u + v\n            val x = v + w\n            val y = w + x\n            val z = x + y\n            val m = y + z\n            val n = z + m\n            val o = m + n\n            val p = n + o\n            val q = o + p\n            val r = p + q\n            val s = q + r\n            val t = r +\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293193,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmpld99zqq_.scala:78:23 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m78 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mt\u001b[0m = r +\n\u001b[31m\u001b[31m   |\u001b[0m                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                       expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpld99zqq_.scala:94:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m94 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpld99zqq_.scala:46:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mp\u001b[0m = z + m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mp is already defined as \u001b[33mvalue\u001b[0m \u001b[35mp\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpld99zqq_.scala:47:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mq\u001b[0m = o + p\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mq is already defined as \u001b[33mvalue\u001b[0m \u001b[35mq\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpld99zqq_.scala:48:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36mr\u001b[0m = p + q\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mr is already defined as \u001b[33mvalue\u001b[0m \u001b[35mr\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in the same group of toplevel definitions\n\u001b[31m\u001b[31m-- [E161] Naming Error: /tmp/tmpld99zqq_.scala:49:16 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            \u001b[33mval\u001b[0m \u001b[36ms\u001b[0m = q + r\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0ms is already defined as \u001b[33mvalue\u001b[0m \u001b[35ms\u001b[0m\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mNote that overloaded methods must all be defined in t",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 2l\n        } else {\n            var f1 = primeFib(n - 1)\n            var f2 = primeFib(n - 2)\n            return f1 + f2\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293194,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpi5wcvwf7.scala:28)\n\tat Problem.main(tmpi5wcvwf7.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = fib.takeWhile(fib.isPrime())\n        return prime.last()\n    }\n\n    // fibonacci returns a Fibonacci sequence.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Seq[Long] = {\n        val fib = fibonacci(n - 1)\n        val fib2 = fibonacci(n - 2)\n        return fib.append(fib2)\n    }\n\n    // fibonacci2 returns a Fibonacci sequence.\n    // >>> fibonacci2(0)\n    // 0\n    // >>> fibonacci2(1)\n    // 1\n    // >>> fibonacci2(2)\n    // 1\n    // >>> fibonacci2(3)\n    // 2\n    // >>> fibonacci2(4)\n    // 3\n    // >>> fibonacci2(5)\n    // 5\n    def fibonacci2(n : Long) : Seq[Long] = {\n        val fib = fibonacci2(n - 1)\n        val fib2 = fibonacci2(n - 2)\n        return fib.append(fib2)\n    }\n\n    // fibonacci3 returns a Fibonacci sequence.\n    // >>> fibonacci3(0)\n    // 0\n    // >>> fibonacci3(1)\n    // 1\n    // >>> fibonacci3(2)\n    // 1\n    // >>> fibonacci3(3)\n    // 2\n    // >>> fibonacci3(4)\n    // 3\n    // >>> fibonacci3(5)\n    // 5\n    def fibonacci3(n : Long) : Seq[Long] = {\n        val fib = fibonacci3(n - 1)\n        val fib2 = fibonacci3(n - 2\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293194,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp0fdrqvit.scala:75:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0fdrqvit.scala:17:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mprime\u001b[0m = fib.takeWhile(fib.isPrime())\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           value isPrime is not a member of collection.mutable.Seq[Long]\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmp0fdrqvit.scala:18:21 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mreturn\u001b[0m prime.last()\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m               \u001b[33mmethod\u001b[0m \u001b[35mlast\u001b[0m in \u001b[33mtrait\u001b[0m \u001b[35mIterableOps\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0fdrqvit.scala:37:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m        \u001b[33mreturn\u001b[0m fib.append(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of collection.mutable.Seq[Long] - did you mean fib.appended?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp0fdrqvit.scala:56:19 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m        \u001b[33mreturn\u001b[0m fib.append(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m               ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0mvalue append is not a member of collection.mutable.Seq[Long] - did you mean fib.appended?\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp0fdrqvit.scala:75:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m75 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: collection.mutable.Seq[Long]\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n6 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        var i = 2l\n        while (i < n) {\n            if (isPrime(i)) {\n                i = i + 1l\n            } else {\n                i = i + 2l\n            }\n        }\n        return i\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2l)\n    // True\n    // >>> isPrime(3l)\n    // True\n    // >>> isPrime(4l)\n    // False\n    // >>> isPrime(5l)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            var i = 3l\n            while (i <= Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n                i = i + 2l\n            }\n            return true\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2l)\n    // True\n    // >>> isPrimeFast(3l)\n    // True\n    // >>> isPrimeFast(4l)\n    // False\n    // >>> isPrimeFast(5l)\n    // True\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n == 2l) {\n            return true\n        } else if (n == 1l) {\n            return false\n        } else if (n % 2l == 0l) {\n            return false\n        } else {\n            var i = 3l\n            while (i <= Math.sqrt(n)) {\n                if (n % i == 0l) {\n                    return false\n                }\n                i = i + 2l\n            }\n            return true\n        }\n    }\n\n    // isPrimeSlow returns true if n is prime number.\n    // >>> isPrimeSlow(2l)\n    // True\n    // >>> isPrimeSlow(3l)\n    // True\n    // >>> isPrimeSlow\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293190,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpr5neg180.scala:103:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m103 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr5neg180.scala:91:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m91 |\u001b[0m    assert(primeFib((\u001b[31m1l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr5neg180.scala:92:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m    assert(primeFib((\u001b[31m2l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr5neg180.scala:93:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m93 |\u001b[0m    assert(primeFib((\u001b[31m3l\u001b[0m)) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr5neg180.scala:94:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m94 |\u001b[0m    assert(primeFib((\u001b[31m4l\u001b[0m)) == (\u001b[31m13l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr5neg180.scala:95:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m95 |\u001b[0m    assert(primeFib((\u001b[31m5l\u001b[0m)) == (\u001b[31m89l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr5neg180.scala:96:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m96 |\u001b[0m    assert(primeFib((\u001b[31m6l\u001b[0m)) == (\u001b[31m233l\u001b[0m",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.factorial._.apply(n)\n        val fib2 = scala.math.factorial._.apply(fib)\n        val fib3 = scala.math.factorial._.apply(fib2)\n        val fib4 = scala.math.factorial._.apply(fib3)\n        val fib5 = scala.math.factorial._.apply(fib4)\n        val fib6 = scala.math.factorial._.apply(fib5)\n        val fib7 = scala.math.factorial._.apply(fib6)\n        val fib8 = scala.math.factorial._.apply(fib7)\n        val fib9 = scala.math.factorial._.apply(fib8)\n        val fib10 = scala.math.factorial._.apply(fib9)\n        val fib11 = scala.math.factorial._.apply(fib10)\n        val fib12 = scala.math.factorial._.apply(fib11)\n        val fib13 = scala.math.factorial._.apply(fib12)\n        val fib14 = scala.math.factorial._.apply(fib13)\n        val fib15 = scala.math.factorial._.apply(fib14)\n        val fib16 = scala.math.factorial._.apply(fib15)\n        val fib17 = scala.math.factorial._.apply(fib16)\n        val fib18 = scala.math.factorial._.apply(fib17)\n        val fib19 = scala.math.factorial._.apply(fib18)\n        val fib20 = scala.math.factorial._.apply(fib19)\n        val fib21 = scala.math.factorial._.apply(fib20)\n        val fib22 = scala.math.factorial._.apply(fib21)\n        val fib23 = scala.math.factorial._.apply(fib22)\n        val fib24 = scala.math.factorial._.apply(fib23)\n        val fib25 = scala.math.factorial\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293166,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgjvr7tx.scala:16:39 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial._.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgjvr7tx.scala:17:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial._.apply(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgjvr7tx.scala:18:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial._.apply(fib2)\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgjvr7tx.scala:19:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial._.apply(fib3)\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpcgjvr7tx.scala:20:40 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial._.apply(fib4)\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   an identifier expected, but '_' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m long",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val isPrime = isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative argument not supported\")\n        }\n        if (n == 0) {\n            0\n        } else if (n == 1) {\n            1\n        } else {\n            fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // true\n    // >>> isPrime(3)\n    // true\n    // >>> isPrime(4)\n    // true\n    // >>> isPrime(5)\n    // true\n    // >>> isPrime(6)\n    // false\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            false\n        } else if (n == 2) {\n            true\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            isPrime(n - 1) && isPrimeUtil(n)\n        }\n    }\n\n    // isPrimeUtil returns true if n is prime number.\n    // >>> isPrimeUtil(2)\n    // true\n    // >>> isPrimeUtil(3)\n    // true\n    // >>> isPrimeUtil(4)\n    // true\n    // >>> isPrimeUtil(5)\n    // true\n    // >>> isPrimeUtil(6)\n    // false\n    def isPrimeUtil\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293190,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmphruzn05m.scala:85:19 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrimeUtil\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphruzn05m.scala:100:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmphruzn05m.scala:17:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35misPrime\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E050] Type Error: /tmp/tmphruzn05m.scala:70:30 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m            isPrime(n - \u001b[31m1\u001b[0m) && isPrimeUtil(n)\n\u001b[31m\u001b[31m   |\u001b[0m                              ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           \u001b[33mmethod\u001b[0m \u001b[35misPrimeUtil\u001b[0m in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m does not take parameters\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphruzn05m.scala:88:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m88 |\u001b[0m    assert(primeFib((\u001b[31m1l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphruzn05m.scala:89:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m89 |\u001b[0m    assert(primeFib((\u001b[31m2l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Fo",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th number that is a Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be non-negative\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293194,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpw0mx83gg.scala:102:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m102 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpw0mx83gg.scala:101:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmpw0mx83gg.scala:81:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m81 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrime\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mBoolean\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 60 and\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 81\n\u001b[31m   |\u001b[0mhave the same type after erasure.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mConsider adding a @targetName annotation to one of the conflicting definitions\n\u001b[31m   |\u001b[0mfor disambiguation.\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpw0mx83gg.scala:88:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m88 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val isPrime = scala.math.fibonacci.isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            scala.math.fibonacci.fibonacci(n + 1)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5f1ytkg.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5f1ytkg.scala:17:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.fibonacci.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5f1ytkg.scala:21:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            scala.math.fibonacci.fibonacci(n + \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value fibonacci is not a member of math\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val isPrime = isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 2) {\n            0\n        } else {\n            fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // true\n    // >>> isPrime(3)\n    // true\n    // >>> isPrime(4)\n    // true\n    // >>> isPrime(5)\n    // true\n    // >>> isPrime(6)\n    // false\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            true\n        } else if (n == 2) {\n            true\n        } else if (n % 2 == 0) {\n            false\n        } else {\n            isPrime(n - 1) && isPrime(n - 2)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2)\n    // true\n    // >>> isPrimeFast(3)\n    // true\n    // >>> isPrimeFast(4)\n    // true\n    // >>> isPrimeFast(5)\n    // true\n    // >>> isPrimeFast(6)\n    // false\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n < 2) {\n            true\n        } else if (n == 2) {\n            true\n        } else if (n % 2 == 0) {\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293196,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpamnh76c4.scala:101:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpamnh76c4.scala:17:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35misPrime\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpamnh76c4.scala:100:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpamnh76c4.scala:87:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m87 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 2l\n        } else if (n == 2) {\n            return 3l\n        } else if (n == 3) {\n            return 5l\n        } else if (n == 4) {\n            return 13l\n        } else if (n == 5) {\n            return 89l\n        } else {\n            val a = primeFib(n - 1)\n            val b = primeFib(n - 2)\n            val c = primeFib(n - 3)\n            val p = a + b\n            val q = a + c\n            val r = p + q\n            return r\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293185,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp7mzzk7dq.scala:44)\n\tat Problem.main(tmp7mzzk7dq.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val result = new AtomicLong(0)\n        val fib = new AtomicLong(0)\n        val prime = new AtomicLong(0)\n        val fibonacci = new AtomicLong(0)\n        val primeFib = new AtomicLong(0)\n        val fibonacciPrime = new AtomicLong(0)\n        val primeFibonacci = new AtomicLong(0)\n        val fibonacciPrimeFibonacci = new AtomicLong(0)\n        val primeFibonacciPrime = new AtomicLong(0)\n        val primeFibonacciPrimeFibonacci = new AtomicLong(0)\n        val primeFibonacciPrimeFibonacciPrime = new AtomicLong(0)\n        val primeFibonacciPrimeFibonacciPrimeFibonacci = new AtomicLong(0)\n        val primeFibonacciPrimeFibonacciPrimeFibonacciPrime = new AtomicLong(0)\n        val primeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci = new AtomicLong(0)\n        val primeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrime = new AtomicLong(0)\n        val primeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci = new AtomicLong(0)\n        val primeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci = new AtomicLong(0)\n        val primeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci = new AtomicLong(0)\n        val primeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci = new AtomicLong(0)\n        val primeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacciPrimeFibonacci = new AtomicLong(0)\n        val primeFibonacciPrimeFibonacci\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293195,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmptuiyf242.scala:37:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m37 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    '=' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptuiyf242.scala:16:25 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mresult\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mAtomicLong\u001b[0m(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                         ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                         Not found: type AtomicLong\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptuiyf242.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mAtomicLong\u001b[0m(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      Not found: type AtomicLong\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptuiyf242.scala:18:24 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mprime\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mAtomicLong\u001b[0m(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                        ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                        Not found: type AtomicLong\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptuiyf242.scala:19:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfibonacci\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mAtomicLong\u001b[0m(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                            ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                            Not found: type AtomicLong\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptuiyf242.scala:20:27 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mprimeFib\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mAtomicLong\u001b[0m(\u001b[31m0\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        val fib = new Array[Long](n - 1)\n        fib[0] = 2l\n        fib[1] = 3l\n        var i = 2\n        while (i < n) {\n            fib[i] = fib[i - 1] + fib[i - 2]\n            if (fib[i].isPrime()) {\n                i += 1\n            }\n        }\n        return fib[n - 1]\n    }\n\n    // prime_fib_iterative returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_iterative((1l))\n    // (2l)\n    // >>> primeFib_iterative((2l))\n    // (3l)\n    // >>> primeFib_iterative((3l))\n    // (5l)\n    // >>> primeFib_iterative((4l))\n    // (13l)\n    // >>> primeFib_iterative((5l))\n    // (89l)\n    def primeFib_iterative(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        val fib = new Array[Long](n - 1)\n        fib[0] = 2l\n        fib[1] = 3l\n        var i = 2\n        while (i < n) {\n            fib[i] = fib[i - 1] + fib[i - 2]\n            if (fib[i].isPrime()) {\n                i += 1\n            }\n        }\n        return fib[n - 1]\n    }\n\n    // prime_fib_recursive returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_recursive((1l))\n    // (2l)\n    // >>> primeFib_recursive((2l))\n    // (3l)\n    // >>> primeFib_recursive((3l))\n    // (5l)\n    // >>> primeFib_rec\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpu77lcpgl.scala:20:15 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        fib[\u001b[31m0\u001b[0m] = \u001b[31m2l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m               ^\u001b[0m\n\u001b[31m   |\u001b[0m               end of statement expected but '=' found\n\u001b[31m\u001b[31m-- Error: /tmp/tmpu77lcpgl.scala:21:15 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        fib[\u001b[31m1\u001b[0m] = \u001b[31m3l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m               ^\u001b[0m\n\u001b[31m   |\u001b[0m               end of statement expected but '=' found\n\u001b[31m\u001b[31m-- Error: /tmp/tmpu77lcpgl.scala:24:19 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m            fib[\u001b[35mi\u001b[0m] = fib[i - \u001b[31m1\u001b[0m] + fib[i - \u001b[31m2\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   end of statement expected but '=' found\n\u001b[31m\u001b[31m-- Error: /tmp/tmpu77lcpgl.scala:48:15 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m        fib[\u001b[31m0\u001b[0m] = \u001b[31m2l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m               ^\u001b[0m\n\u001b[31m   |\u001b[0m               end of statement expected but '=' found\n\u001b[31m\u001b[31m-- Error: /tmp/tmpu77lcpgl.scala:49:15 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m        fib[\u001b[31m1\u001b[0m] = \u001b[31m3l\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m               ^\u001b[0m\n\u001b[31m   |\u001b[0m               end of statement expected but '=' found\n\u001b[31m\u001b[31m-- Error: /tmp/tmpu77lcpgl.scala:52:19 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m52 |\u001b[0m            fib[\u001b[35mi\u001b[0m] = fib[i - \u001b[31m1\u001b[0m] + fib[i - \u001b[31m2\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                   end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpu77lcpgl.scala:82:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m82 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpu77lcpgl.scala:19:34 --------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = \u001b[33mnew\u001b[0m \u001b[35mArray\u001b[0m[\u001b[35mLong\u001b[0m](n - \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                  ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val isPrime = isPrime(fib)\n        if (isPrime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be >= 0\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // true\n    // >>> isPrime(3)\n    // true\n    // >>> isPrime(4)\n    // false\n    // >>> isPrime(5)\n    // true\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2)\n    // true\n    // >>> isPrimeFast(3)\n    // true\n    // >>> isPrimeFast(4)\n    // false\n    // >>> isPrimeFast(5)\n    // true\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293196,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpgoh47k26.scala:101:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmpgoh47k26.scala:17:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35misPrime\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgoh47k26.scala:100:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpgoh47k26.scala:87:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m87 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.primeFib(n)\n        if (fib.isPrime()) {\n            fib\n        } else {\n            throw new RuntimeException(\"Not prime\")\n        }\n    }\n\n    // prime_fib_recursive returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_recursive((1l))\n    // (2l)\n    // >>> primeFib_recursive((2l))\n    // (3l)\n    // >>> primeFib_recursive((3l))\n    // (5l)\n    // >>> primeFib_recursive((4l))\n    // (13l)\n    // >>> primeFib_recursive((5l))\n    // (89l)\n    def primeFib_recursive(n : Long) : Long = {\n        val fib = scala.math.fibonacci.primeFib_recursive(n)\n        if (fib.isPrime()) {\n            fib\n        } else {\n            throw new RuntimeException(\"Not prime\")\n        }\n    }\n\n    // prime_fib_iterative returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib_iterative((1l))\n    // (2l)\n    // >>> primeFib_iterative((2l))\n    // (3l)\n    // >>> primeFib_iterative((3l))\n    // (5l)\n    // >>> primeFib_iterative((4l))\n    // (13l)\n    // >>> primeFib_iterative((5l))\n    // (89l)\n    def primeFib_iterative(n : Long) : Long = {\n        val fib = scala.math.fibonacci.primeFib_iterative(n)\n        if (fib.isPrime()) {\n            fib\n        } else {\n            throw new RuntimeException(\"Not prime\")\n        }\n    }\n\n    // prime_fib_scala returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeF\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_70r3d3a.scala:80:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m80 |\u001b[0m}\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_70r3d3a.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.primeFib(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_70r3d3a.scala:36:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m36 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.primeFib_recursive(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_70r3d3a.scala:56:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m56 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.primeFib_iterative(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_70r3d3a.scala:68:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    assert(primeFib((\u001b[31m1l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_70r3d3a.scala:69:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m69 |\u001b[0m    assert(primeFib((\u001b[31m2l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_70r3d3a.scala:70:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m70 |\u001b[0m    assert(primeFib((\u001b[31m3l\u001b[0m)) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m         ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n <= 2) {\n            return n\n        } else {\n            return (primeFib(n - 1) + primeFib(n - 2))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp1vikr52j.scala:23)\n\tat Problem.main(tmp1vikr52j.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = fib.div(scala.math.factorial.apply(2))\n        val fib3 = fib2.div(scala.math.factorial.apply(3))\n        val fib4 = fib3.div(scala.math.factorial.apply(4))\n        val fib5 = fib4.div(scala.math.factorial.apply(5))\n        val fib6 = fib5.div(scala.math.factorial.apply(6))\n        val fib7 = fib6.div(scala.math.factorial.apply(7))\n        val fib8 = fib7.div(scala.math.factorial.apply(8))\n        val fib9 = fib8.div(scala.math.factorial.apply(9))\n        val fib10 = fib9.div(scala.math.factorial.apply(10))\n        val fib11 = fib10.div(scala.math.factorial.apply(11))\n        val fib12 = fib11.div(scala.math.factorial.apply(12))\n        val fib13 = fib12.div(scala.math.factorial.apply(13))\n        val fib14 = fib13.div(scala.math.factorial.apply(14))\n        val fib15 = fib14.div(scala.math.factorial.apply(15))\n        val fib16 = fib15.div(scala.math.factorial.apply(16))\n        val fib17 = fib16.div(scala.math.factorial.apply(17))\n        val fib18 = fib17.div(scala.math.factorial.apply(18))\n        val fib19 = fib18.div(scala.math.factorial.apply(19))\n        val fib20 = fib19.div(scala.math.factorial.apply(20))\n        val fib21 = fib20.div(scala.math.factorial.apply(21))\n        val fib22 = fib21.div(sc\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpemu0maos.scala:41:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpemu0maos.scala:19:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpemu0maos.scala:41:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(fib)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    // >>> fibonacci(6)\n    // 8\n    // >>> fibonacci(7)\n    // 13\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative argument is not supported\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n-th number is prime.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n-th number is prime.\n    // >>> isPrimeFast(2)\n    // True\n    // >>> isPrimeFast(3)\n    // True\n    // >>> isPrimeFast(4)\n    // False\n    // >>> isPrimeFast(5)\n    // True\n    def isPrimeFast(n : Long)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293194,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E019] Syntax Error: /tmp/tmpfcyuh8b8.scala:85:29 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrimeFast\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                             Missing return type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpfcyuh8b8.scala:100:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfcyuh8b8.scala:88:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m88 |\u001b[0m    assert(primeFib((\u001b[31m1l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfcyuh8b8.scala:89:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m89 |\u001b[0m    assert(primeFib((\u001b[31m2l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfcyuh8b8.scala:90:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m90 |\u001b[0m    assert(primeFib((\u001b[31m3l\u001b[0m)) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfcyuh8b8.scala:91:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m91 |\u001b[0m    assert(primeFib((\u001b[31m4l\u001b[0m)) == (\u001b[31m13l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfcyuh8b8.scala:92:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m    assert(p",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val prime = scala.math.fibonacci.isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n + 1)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpenvef2vz.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpenvef2vz.scala:17:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mprime\u001b[0m = scala.math.fibonacci.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value fibonacci is not a member of math\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val isPrime = isPrime(fib)\n        if (isPrime) {\n            return fib\n        } else {\n            return primeFib(fib - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 2) {\n            return n\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // true\n    // >>> isPrime(3)\n    // true\n    // >>> isPrime(4)\n    // false\n    // >>> isPrime(5)\n    // true\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2)\n    // true\n    // >>> isPrimeFast(3)\n    // true\n    // >>> isPrimeFast(4)\n    // false\n    // >>> isPrimeFast(5)\n    // true\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrimeFast(n - 1)\n        }\n    }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293194,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3oxlpsot.scala:101:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0meof expected, but '}' found\n\u001b[31m\u001b[31m-- [E045] Cyclic Error: /tmp/tmp3oxlpsot.scala:17:22 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                      Recursive \u001b[33mvalue\u001b[0m \u001b[35misPrime\u001b[0m needs type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3oxlpsot.scala:89:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m89 |\u001b[0m    assert(primeFib((\u001b[31m1l\u001b[0m)) == (\u001b[31m2l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3oxlpsot.scala:90:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m90 |\u001b[0m    assert(primeFib((\u001b[31m2l\u001b[0m)) == (\u001b[31m3l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3oxlpsot.scala:91:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m91 |\u001b[0m    assert(primeFib((\u001b[31m3l\u001b[0m)) == (\u001b[31m5l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3oxlpsot.scala:92:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m92 |\u001b[0m    assert(primeFib((\u001b[31m4l\u001b[0m)) == (\u001b[31m13l\u001b[0m));\n\u001b[31m\u001b[31m   |\u001b[0m           ^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m           Not found: primeFib\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3oxlpsot.scala:93:11 ------------------------\u001b[0m\u001b[0m\n\u001b[31m93 |\u001b[0m    as",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val i = fib.takeWhile(fib.mkString(\"\").contains(\"1\"))\n        val j = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val k = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val l = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val m = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val n = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val o = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val p = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val q = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val r = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val s = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val t = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val u = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val v = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val w = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val x = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val y = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val z = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val a = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val b = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val c = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val d = fib.dropWhile(fib.mkString(\"\").contains(\"1\"))\n        val e = fib.\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293198,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpto25njz8.scala:40:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpto25njz8.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpto25njz8.scala:40:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m40 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be non-negative\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2)\n    // True\n    // >>> isPrimeFast(3)\n    // True\n    // >>> isPrimeFast(4)\n    // False\n    // >>> isPrimeFast(5)\n    // True\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293140,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmphdzji59a.scala:101:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphdzji59a.scala:85:12 --------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m            \u001b[33mreturn\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            Found:    Unit\n\u001b[31m   |\u001b[0m            Required: Boolean\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmphdzji59a.scala:100:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmphdzji59a.scala:87:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m87 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.primeFib(n)\n        if (fib.isPrime()) {\n            return fib\n        } else {\n            return primeFib(fib)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpk_1cpx0b.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.primeFib(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative argument not allowed\")\n        }\n        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 1l\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime.\n    // >>> isPrimeFast(2)\n    // True\n    // >>> isPrimeFast(3)\n    // True\n    // >>> isPrimeFast(4)\n    // False\n    // >>> isPrimeFast(5)\n    // True\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293198,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp27zswvvw.scala:101:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmp27zswvvw.scala:100:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmp27zswvvw.scala:87:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m87 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1\n        val n3 = n2 + 1\n        val n4 = n3 + 1\n        val n5 = n4 + 1\n        val n6 = n5 + 1\n        val n7 = n6 + 1\n        val n8 = n7 + 1\n        val n9 = n8 + 1\n        val n10 = n9 + 1\n        val n11 = n10 + 1\n        val n12 = n11 + 1\n        val n13 = n12 + 1\n        val n14 = n13 + 1\n        val n15 = n14 + 1\n        val n16 = n15 + 1\n        val n17 = n16 + 1\n        val n18 = n17 + 1\n        val n19 = n18 + 1\n        val n20 = n19 + 1\n        val n21 = n20 + 1\n        val n22 = n21 + 1\n        val n23 = n22 + 1\n        val n24 = n23 + 1\n        val n25 = n24 + 1\n        val n26 = n25 + 1\n        val n27 = n26 + 1\n        val n28 = n27 + 1\n        val n29 = n28 + 1\n        val n30 = n29 + 1\n        val n31 = n30 + 1\n        val n32 = n31 + 1\n        val n33 = n32 + 1\n        val n34 = n33 + 1\n        val n35 = n34 + 1\n        val n36 = n35 + 1\n        val n37 = n36 + 1\n        val n38 = n37 + 1\n        val n39 = n38 + 1\n        val n40 = n39 + 1\n        val n41 = n40 + 1\n        val n42 = n41 + 1\n        val n43 = n42 + 1\n        val n44 = n43 + 1\n        val n45 = n44 + 1\n        val n46 = n45 + 1\n        val n47 = n46 + 1\n        val n48 = n47 + 1\n        val n49 = n48 + 1\n        val n50 = n49 + 1\n        val n51 = n50 + 1\n        val n52 =\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293138,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E018] Syntax Error: /tmp/tmplxxvrl24.scala:67:17 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m67 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mn52\u001b[0m =\n\u001b[31m\u001b[31m   |\u001b[0m                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                 expression expected but \u001b[31m'}'\u001b[0m found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmplxxvrl24.scala:68:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m68 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(fib)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be non-negative\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n is prime number.\n    // >>> isPrimeFast(2)\n    // True\n    // >>> isPrimeFast(3)\n    // True\n    // >>> isPrimeFast(4)\n    // False\n    // >>> isPrimeFast(5)\n    // True\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293198,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpi6i_r86v.scala:101:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpi6i_r86v.scala:100:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m100 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpi6i_r86v.scala:87:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m87 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val prime = scala.math.fibonacci.isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n + 1)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpenvef2vz.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpenvef2vz.scala:17:31 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mprime\u001b[0m = scala.math.fibonacci.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                    value fibonacci is not a member of math\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val isPrime = scala.math.fibonacci.isPrime(fib)\n        if (isPrime) {\n            fib\n        } else {\n            scala.math.fibonacci.fibonacci(n + 1)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293163,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5f1ytkg.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5f1ytkg.scala:17:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36misPrime\u001b[0m = scala.math.fibonacci.isPrime(fib)\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                      value fibonacci is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpd5f1ytkg.scala:21:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m            scala.math.fibonacci.fibonacci(n + \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m            ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value fibonacci is not a member of math\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        var i = 0l\n        var j = 1l\n        while (i < n) {\n            var k = j + i\n            if (k % 2 == 0) {\n                i = i + 1l\n            } else {\n                j = k\n                i = i + 1l\n            }\n        }\n        return j\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293198,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpw55gq0h8.scala:30)\n\tat Problem.main(tmpw55gq0h8.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val fib_prime = fib.filter(_.isPrime())\n        fib_prime.head\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293198,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmps9jpzfs9.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th number that is a Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"n should be >= 0\")\n        }\n        if (n == 0) {\n            return 0\n        } else if (n == 1) {\n            return 1\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrime returns true if n is prime number.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293199,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpc3_6ed46.scala:102:0 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m102 |\u001b[0m\n\u001b[31m\u001b[31m    |\u001b[0m^\u001b[0m\n\u001b[31m    |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpc3_6ed46.scala:101:1 --------------------\u001b[0m\u001b[0m\n\u001b[31m101 |\u001b[0m}\n\u001b[31m\u001b[31m    |\u001b[0m ^\u001b[0m\n\u001b[31m    |\u001b[0m Found:    Unit\n\u001b[31m    |\u001b[0m Required: Boolean\n\u001b[31m    |\u001b[0m\n\u001b[31m    |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E120] Naming Error: /tmp/tmpc3_6ed46.scala:81:8 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m81 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36misPrime\u001b[0m(\u001b[36mn\u001b[0m : \u001b[35mLong\u001b[0m) : \u001b[35mBoolean\u001b[0m = {\n\u001b[31m\u001b[31m   |\u001b[0m        ^\u001b[0m\n\u001b[31m   |\u001b[0mDouble definition:\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 60 and\n\u001b[31m   |\u001b[0mdef isPrime(n: Long): Boolean in \u001b[33mobject\u001b[0m \u001b[35mProblem\u001b[0m at line 81\n\u001b[31m   |\u001b[0mhave the same type after erasure.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mConsider adding a @targetName annotation to one of the conflicting definitions\n\u001b[31m   |\u001b[0mfor disambiguation.\n\u001b[33m\u001b[33m-- Warning: /tmp/tmpc3_6ed46.scala:88:4 ----------------------------------------\u001b[0m\u001b[0m\n\u001b[33m88 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[33m\u001b[33m   |\u001b[0m    ^\u001b[0m\n\u001b[33m   |\u001b[0m    Line is indented too far to the left, or a `}` is missing\n1 warning found\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            throw new IllegalArgumentException(\"n < 2\")\n        }\n        val fib = scala.math.factorial.apply(n)\n        val fib2 = scala.math.factorial.apply(n - 1)\n        val fib3 = scala.math.factorial.apply(n - 2)\n        val fib4 = scala.math.factorial.apply(n - 3)\n        val fib5 = scala.math.factorial.apply(n - 4)\n        val fib6 = scala.math.factorial.apply(n - 5)\n        val fib7 = scala.math.factorial.apply(n - 6)\n        val fib8 = scala.math.factorial.apply(n - 7)\n        val fib9 = scala.math.factorial.apply(n - 8)\n        val fib10 = scala.math.factorial.apply(n - 9)\n        val fib11 = scala.math.factorial.apply(n - 10)\n        val fib12 = scala.math.factorial.apply(n - 11)\n        val fib13 = scala.math.factorial.apply(n - 12)\n        val fib14 = scala.math.factorial.apply(n - 13)\n        val fib15 = scala.math.factorial.apply(n - 14)\n        val fib16 = scala.math.factorial.apply(n - 15)\n        val fib17 = scala.math.factorial.apply(n - 16)\n        val fib18 = scala.math.factorial.apply(n - 17)\n        val fib19 = scala.math.factorial.apply(n - 18)\n        val fib20 = scala.math.factorial.apply(n - 19)\n        val fib21 = scala.math.factorial.apply(n - 20)\n        val fib22 = scala.math.factorial.apply(n - 21)\n        val fib23 = scala.math.factorial.apply(n - 22)\n        val fib24 = scala.math.factorial.apply(n - 23)\n        val fib25 = scala.math.\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293199,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpy5_2zmty.scala:44:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    an identifier expected, but '}' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpy5_2zmty.scala:19:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.factorial.apply(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpy5_2zmty.scala:20:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib2\u001b[0m = scala.math.factorial.apply(n - \u001b[31m1\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpy5_2zmty.scala:21:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib3\u001b[0m = scala.math.factorial.apply(n - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpy5_2zmty.scala:22:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib4\u001b[0m = scala.math.factorial.apply(n - \u001b[31m3\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpy5_2zmty.scala:23:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib5\u001b[0m = scala.math.factorial.apply(n - \u001b[31m4\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                   value factorial is not a member of math\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpy5_2zmty.scala:24:30 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib6\u001b[0m = scala.math.factorial.apply(n - \u001b[31m5\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                   ^^^^",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) {\n            return 2l\n        } else {\n            var i = 2l\n            var j = 3l\n            while (j < n) {\n                i = j\n                j = i + j\n            }\n            return j\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293185,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp4a3d68xn.scala:31)\n\tat Problem.main(tmp4a3d68xn.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        if (n < 2) return 2l\n        else if (n == 2) return 2l\n        else if (n == 3) return 3l\n        else if (n == 4) return 5l\n        else if (n == 5) return 13l\n        else if (n == 6) return 89l\n        else return _.fib(n).filter(_.isPrime).head()\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293197,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E081] Type Error: /tmp/tmpmupzyzjs.scala:22:20 -----------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m        \u001b[33melse\u001b[0m \u001b[33mreturn\u001b[0m _.fib(n).filter(_.isPrime).head()\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m   Missing parameter type\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m   I could not infer the type of the parameter _$1 of expanded function:\n\u001b[31m   |\u001b[0m   _$1 => _$1.fib(n).filter(_$2 => _$2.isPrime).head().\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val n1 = n\n        val n2 = n1 + 1l\n        val n3 = n2 + 1l\n        val n4 = n3 + 1l\n        val n5 = n4 + 1l\n        val n6 = n5 + 1l\n        val n7 = n6 + 1l\n        val n8 = n7 + 1l\n        val n9 = n8 + 1l\n        val n10 = n9 + 1l\n        val n11 = n10 + 1l\n        val n12 = n11 + 1l\n        val n13 = n12 + 1l\n        val n14 = n13 + 1l\n        val n15 = n14 + 1l\n        val n16 = n15 + 1l\n        val n17 = n16 + 1l\n        val n18 = n17 + 1l\n        val n19 = n18 + 1l\n        val n20 = n19 + 1l\n        val n21 = n20 + 1l\n        val n22 = n21 + 1l\n        val n23 = n22 + 1l\n        val n24 = n23 + 1l\n        val n25 = n24 + 1l\n        val n26 = n25 + 1l\n        val n27 = n26 + 1l\n        val n28 = n27 + 1l\n        val n29 = n28 + 1l\n        val n30 = n29 + 1l\n        val n31 = n30 + 1l\n        val n32 = n31 + 1l\n        val n33 = n32 + 1l\n        val n34 = n33 + 1l\n        val n35 = n34 + 1l\n        val n36 = n35 + 1l\n        val n37 = n36 + 1l\n        val n38 = n37 + 1l\n        val n39 = n38 + 1l\n        val n40 = n39 + 1l\n        val n41 = n40 + 1l\n        val n42 = n41 + 1l\n        val n43 = n42 + 1l\n        val n44 = n43 + 1l\n        val n45 = n44 + 1l\n        val n46 = n45 + 1l\n        val n47 = n46 + 1l\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293139,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E007] Type Mismatch Error: /tmp/tmpgzc4pdf9.scala:63:5 ---------------------\u001b[0m\u001b[0m\n\u001b[31m63 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m     ^\u001b[0m\n\u001b[31m   |\u001b[0m     Found:    Unit\n\u001b[31m   |\u001b[0m     Required: Long\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = scala.math.fibonacci.fibonacci(n)\n        val fib_prime = fib.filter(_.isPrime())\n        fib_prime.take(1).foreach(_.toLong)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293199,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbp7m9d1n.scala:16:29 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        \u001b[33mval\u001b[0m \u001b[36mfib\u001b[0m = scala.math.fibonacci.fibonacci(n)\n\u001b[31m\u001b[31m   |\u001b[0m                  ^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                  value fibonacci is not a member of math\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and it's also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long) : Long = {\n        val fib = fibonacci(n)\n        val prime = isPrime(fib)\n        if (prime) {\n            return fib\n        } else {\n            return primeFib(n - 1)\n        }\n    }\n\n    // fibonacci returns n-th Fibonacci number.\n    // >>> fibonacci(0)\n    // 0\n    // >>> fibonacci(1)\n    // 1\n    // >>> fibonacci(2)\n    // 1\n    // >>> fibonacci(3)\n    // 2\n    // >>> fibonacci(4)\n    // 3\n    // >>> fibonacci(5)\n    // 5\n    def fibonacci(n : Long) : Long = {\n        if (n < 0) {\n            throw new IllegalArgumentException(\"Negative argument not allowed\")\n        }\n        if (n == 0) {\n            return 0l\n        } else if (n == 1) {\n            return 1l\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2)\n        }\n    }\n\n    // isPrime returns true if n-th number is prime.\n    // >>> isPrime(2)\n    // True\n    // >>> isPrime(3)\n    // True\n    // >>> isPrime(4)\n    // False\n    // >>> isPrime(5)\n    // True\n    def isPrime(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2) {\n            return true\n        } else if (n % 2 == 0) {\n            return false\n        } else {\n            return isPrime(n - 1)\n        }\n    }\n\n    // isPrimeFast returns true if n-th number is prime.\n    // >>> isPrimeFast(2)\n    // True\n    // >>> isPrimeFast(3)\n    // True\n    // >>> isPrimeFast(4)\n    // False\n    // >>> isPrimeFast(5)\n    // True\n    def isPrimeFast(n : Long) : Boolean = {\n        if (n < 2) {\n            return false\n        } else if (n == 2\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n",
      "timestamp": 1664293199,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpvcegbvgv.scala:85:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m85 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
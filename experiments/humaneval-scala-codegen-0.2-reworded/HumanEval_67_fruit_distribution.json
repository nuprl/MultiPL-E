{
  "name": "HumanEval_67_fruit_distribution",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // In this task, you will be given a string that represents a number of apples and oranges \n    // that are distributed in a basket of fruit this basket contains \n    // apples, oranges, and mango fruits. Given the string that represents the total number of \n    // the oranges and apples and an integer that represent the total number of the fruits \n    // in the basket return the number of the mango fruits in the basket.\n    // for examble:\n    // >>> fruitDistribution((\"5 apples and 6 oranges\"), (19l))\n    // (8l)\n    // >>> fruitDistribution((\"0 apples and 1 oranges\"), (3l))\n    // (2l)\n    // >>> fruitDistribution((\"2 apples and 3 oranges\"), (100l))\n    // (95l)\n    // >>> fruitDistribution((\"100 apples and 1 oranges\"), (120l))\n    // (19l)\n    def fruitDistribution(s : String, n : Long) : Long = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(fruitDistribution((\"5 apples and 6 oranges\"), (19l)) == (8l));\n    assert(fruitDistribution((\"5 apples and 6 oranges\"), (21l)) == (10l));\n    assert(fruitDistribution((\"0 apples and 1 oranges\"), (3l)) == (2l));\n    assert(fruitDistribution((\"1 apples and 0 oranges\"), (3l)) == (2l));\n    assert(fruitDistribution((\"2 apples and 3 oranges\"), (100l)) == (95l));\n    assert(fruitDistribution((\"2 apples and 3 oranges\"), (5l)) == (0l));\n    assert(fruitDistribution((\"1 apples and 100 oranges\"), (120l)) == (19l));\n    }\n\n}\n",
  "completions": [
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        var s1 = s.split(\" \")\n        var s2 = s1.length\n        var s3 = s1[0]\n        var s4 = s1[1]\n        var s5 = s1[2]\n        var s6 = s1[3]\n        var s7 = s1[4]\n        var s8 = s1[5]\n        var s9 = s1[6]\n        var s10 = s1[7]\n        var s11 = s1[8]\n        var s12 = s1[9]\n        var s13 = s1[10]\n        var s14 = s1[11]\n        var s15 = s1[12]\n        var s16 = s1[13]\n        var s17 = s1[14]\n        var s18 = s1[15]\n        var s19 = s1[16]\n        var s20 = s1[17]\n        var s21 = s1[18]\n        var s22 = s1[19]\n        var s23 = s1[20]\n        var s24 = s1[21]\n        var s25 = s1[22]\n        var s26 = s1[23]\n        var s27 = s1[24]\n        var s28 = s1[25]\n        var s29 = s1[26]\n        var s30 = s1[27]\n        var s31 = s1[28]\n        var s32 = s1[29]\n        var s33 = s1[30]\n        var s34 = s1[31]\n        var s35 = s1[32]\n        var s36 = s1[33]\n        var s37 = s1[34]\n        var s38 = s1[35]\n        var s39 = s1[36]\n        var s40 = s1[37]\n        var s41 = s1[38]\n        var s42 = s1[39]\n        var s43 = s1[40]\n        var s44 = s1[41]\n        var s45 = s1[42]\n        var s46 = s1[43]\n        var s47 = s",
    "        // your code goes here\n        val s1 = s.split(\" \")\n        val n1 = n.longValue()\n        val s2 = s1.length\n        val n2 = n1 / s2\n        val n3 = n1 % s2\n        val n4 = n2 * 2\n        val n5 = n3 * 2\n        val n6 = n4 + n5\n        val n7 = n6 / 2\n        val n8 = n6 % 2\n        val n9 = n7 + n8\n        val n10 = n9 / 2\n        val n11 = n9 % 2\n        val n12 = n10 + n11\n        val n13 = n12 / 2\n        val n14 = n12 % 2\n        val n15 = n13 + n14\n        val n16 = n15 / 2\n        val n17 = n15 % 2\n        val n18 = n16 + n17\n        val n19 = n18 / 2\n        val n20 = n18 % 2\n        val n21 = n19 + n20\n        val n22 = n21 / 2\n        val n23 = n21 % 2\n        val n24 = n22 + n23\n        val n25 = n24 / 2\n        val n26 = n24 % 2\n        val n27 = n25 + n26\n        val n28 = n27 / 2\n        val n29 = n27 % 2\n        val n30 = n28 + n29\n        val n31 = n30 / 2\n        val n32 = n30 % 2\n        val n33 = n31 + n32\n        val n34 = n33 / 2\n        val n35 = n33 % 2\n        val n36 = n34 + n35\n        val n37 = n36 / 2\n        val n38 = n36 % 2\n        val n39 = n37 + n38\n        val n40 = n39 / 2\n        val n41 = n39 % 2\n        val n42 = n40 + n41\n        val n43 = n42 / 2\n        val n44 = n42 % 2\n        val n45 = n43 + n44\n        val n46 = n45 / 2\n        val n47 = n",
    "        val apples = s.split(\" \").map(_.toInt).sum()\n        val oranges = s.split(\" \").map(_.toInt).sum()\n        val mango = s.split(\" \").map(_.toInt).sum()\n        val total = apples + oranges + mango\n        val result = mango * n / total\n        return result",
    "        val apples = s.split(\" \").map(_.toInt).filter(_.isPositive).sum()\n        val oranges = s.split(\" \").map(_.toInt).filter(_.isNegative).sum()\n        val mango = apples - oranges\n        return mango",
    "        // your code here\n        val s_ = s.split(\" \")\n        val n_ = n.longValue()\n        val apples = s_.length() - 1\n        val oranges = s_.length() - 2\n        val mango = s_.length() - 3\n        val apples_ = s_.get(0).toLong\n        val oranges_ = s_.get(1).toLong\n        val mango_ = s_.get(2).toLong\n        val total = apples_ + oranges_ + mango_\n        val apples_n = apples_ / n_\n        val oranges_n = oranges_ / n_\n        val mango_n = mango_ / n_\n        val apples_n_ = apples_n * n_\n        val oranges_n_ = oranges_n * n_\n        val mango_n_ = mango_n * n_\n        val total_ = total / n_\n        val apples_n_mango = apples_n_ - mango_n_\n        val oranges_n_mango = oranges_n_ - mango_n_\n        val apples_n_mango_ = apples_n_mango * n_\n        val oranges_n_mango_ = oranges_n_mango * n_\n        val total_mango = total_ - apples_n_mango_ - oranges_n_mango_\n        val total_mango_ = total_mango * n_\n        val total_mango_ = total_mango_ - apples_n_mango_ - oranges_n_mango_\n        val total_mango_ = total_mango_ * n_\n        val total_mango_ = total_mango_ - apples_n_mango_ - oranges_n_mango_\n        val total_mango_ = total_mango_ * n_\n        val total_mango_ = total_mango_ - apples_n_mango_ - oranges_n_mango_\n        val total_mango_ = total_mango_ * n_\n        val total_mango_ = total_mango_ - apples_n_mango_ - oranges_n_mango_\n        val total_mango_ = total_mango_ * n_",
    "        val s2 = s.replaceAll(\" \", \"\")\n        val s3 = s2.replaceAll(\"[^0-9]\", \"\")\n        val s4 = s3.replaceAll(\"[^0-9]\", \"\")\n        val s5 = s4.replaceAll(\"[^0-9]\", \"\")\n        val s6 = s5.replaceAll(\"[^0-9]\", \"\")\n        val s7 = s6.replaceAll(\"[^0-9]\", \"\")\n        val s8 = s7.replaceAll(\"[^0-9]\", \"\")\n        val s9 = s8.replaceAll(\"[^0-9]\", \"\")\n        val s10 = s9.replaceAll(\"[^0-9]\", \"\")\n        val s11 = s10.replaceAll(\"[^0-9]\", \"\")\n        val s12 = s11.replaceAll(\"[^0-9]\", \"\")\n        val s13 = s12.replaceAll(\"[^0-9]\", \"\")\n        val s14 = s13.replaceAll(\"[^0-9]\", \"\")\n        val s15 = s14.replaceAll(\"[^0-9]\", \"\")\n        val s16 = s15.replaceAll(\"[^0-9]\", \"\")\n        val s17 = s16.replaceAll(\"[^0-9]\", \"\")\n        val s18 = s17.replaceAll(\"[^0-9]\", \"\")\n        val s19 = s18.replaceAll(\"[^0-9]\", \"\")\n        val s20 = s19.replaceAll(\"[^0-9]\", \"\")\n        val s21 = s20.replaceAll(\"[^0-9]\", \"\")\n        val s22 = s21.replaceAll(\"[^0-9]\", \"\")\n        val s23 = s22.replaceAll(\"[^0-9]\", \"\")\n        val s24 = s23.replaceAll(\"[^0-9]\", \"\")\n        val s25 = s24.replaceAll(\"[^0-9]\", \"\")\n        val s26 = s25.replaceAll(\"[^0-",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / n2\n        val n5 = n3 % n2\n        val n6 = n4 + n5\n        val n7 = n6 / n2\n        val n8 = n6 % n2\n        val n9 = n7 + n8\n        val n10 = n9 / n2\n        val n11 = n9 % n2\n        val n12 = n10 + n11\n        val n13 = n12 / n2\n        val n14 = n12 % n2\n        val n15 = n13 + n14\n        val n16 = n15 / n2\n        val n17 = n15 % n2\n        val n18 = n16 + n17\n        val n19 = n18 / n2\n        val n20 = n18 % n2\n        val n21 = n19 + n20\n        val n22 = n21 / n2\n        val n23 = n21 % n2\n        val n24 = n22 + n23\n        val n25 = n24 / n2\n        val n26 = n24 % n2\n        val n27 = n25 + n26\n        val n28 = n27 / n2\n        val n29 = n27 % n2\n        val n30 = n28 + n29\n        val n31 = n30 / n2\n        val n32 = n30 % n2\n        val n33 = n31 + n32\n        val n34 = n33 / n2\n        val n35 = n33 % n2\n        val n36 = n34 + n35\n        val n37 = n36 / n2\n        val n38 = n36 % n2\n        val n39 = n37 + n38\n        val n40 = n39 / n2\n        val n41 = n39 % n2\n        val n42 = n40 + n41\n        val n43 = n42 / n2\n        val n44 = n42 % n2\n        val n45 = n",
    "        val numApples = s.split(\" \").length - 1\n        val numOranges = s.split(\" \")[numApples].split(\" \").length - 1\n        val numMangoes = (numApples * numOranges) - (numApples * numOranges) / 2\n        val numFruits = numApples + numOranges + numMangoes\n        val numMangoesInBasket = numMangoes / n\n        return numMangoesInBasket",
    "        // your code here\n        val numApples = s.split(\" \").length - 1\n        val numOranges = s.split(\" \")[numApples].split(\" \").length - 1\n        val numMangoes = (n - numApples - numOranges) / 2\n        return numMangoes",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / 2\n        val n5 = n3 % 2\n        val n6 = n4 + n5\n        return n6",
    "        val s1 = s.split(\" \")\n        val s2 = s1.length\n        val s3 = s1[0]\n        val s4 = s1[1]\n        val s5 = s1[2]\n        val s6 = s1[3]\n        val s7 = s1[4]\n        val s8 = s1[5]\n        val s9 = s1[6]\n        val s10 = s1[7]\n        val s11 = s1[8]\n        val s12 = s1[9]\n        val s13 = s1[10]\n        val s14 = s1[11]\n        val s15 = s1[12]\n        val s16 = s1[13]\n        val s17 = s1[14]\n        val s18 = s1[15]\n        val s19 = s1[16]\n        val s20 = s1[17]\n        val s21 = s1[18]\n        val s22 = s1[19]\n        val s23 = s1[20]\n        val s24 = s1[21]\n        val s25 = s1[22]\n        val s26 = s1[23]\n        val s27 = s1[24]\n        val s28 = s1[25]\n        val s29 = s1[26]\n        val s30 = s1[27]\n        val s31 = s1[28]\n        val s32 = s1[29]\n        val s33 = s1[30]\n        val s34 = s1[31]\n        val s35 = s1[32]\n        val s36 = s1[33]\n        val s37 = s1[34]\n        val s38 = s1[35]\n        val s39 = s1[36]\n        val s40 = s1[37]\n        val s41 = s1[38]\n        val s42 = s1[39]\n        val s43 = s1[40]\n        val s44 = s1[41]\n        val s45 = s1[42]\n        val s46 = s1[43]\n        val s47 = s",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        // your code here\n        def toInt(s) : Long = {\n            var x = s.toInt\n            if (x < 0) {\n                throw new IllegalArgumentException(\"Negative number\")\n            }\n            return x\n        }\n        def toLong(s) : Long = {\n            var x = s.toLong\n            if (x < 0) {\n                throw new IllegalArgumentException(\"Negative number\")\n            }\n            return x\n        }\n        def toDouble(s) : Double = {\n            var x = s.toDouble\n            if (x < 0) {\n                throw new IllegalArgumentException(\"Negative number\")\n            }\n            return x\n        }\n        def toFloat(s) : Float = {\n            var x = s.toFloat\n            if (x < 0) {\n                throw new IllegalArgumentException(\"Negative number\")\n            }\n            return x\n        }\n        def toChar(s) : Char = {\n            var x = s.toChar\n            if (x < 0) {\n                throw new IllegalArgumentException(\"Negative number\")\n            }\n            return x\n        }\n        def toByte(s) : Byte = {\n            var x = s.toByte\n            if (x < 0) {\n                throw new IllegalArgumentException(\"Negative number\")\n            }\n            return x\n        }\n        def toShort(s) : Short = {\n            var x = s.toShort\n            if (x < 0) {\n                throw new IllegalArgumentException(\"Negative number\")\n            }\n            return x\n        }\n        def toBoolean(s) : Boolean = {\n            var x = s.toBoolean\n            if (x < 0) {\n                throw new IllegalArgumentException(\"Negative number\")\n            }\n            return x\n        }\n        def toString(s) : String = {\n            var x = s.toString\n            if (x < 0) {\n                throw new IllegalArgumentException(\"Negative number\")\n            }\n            return x\n        }\n        def toCharArray(s) : scala.collection.mutable.Array[Char] = {\n            var x",
    "        val apples = s.split(\" \").map(_.toInt).filter(_.isPositive).sum()\n        val oranges = s.split(\" \").map(_.toInt).filter(_.isNegative).sum()\n        val mango = (apples + oranges) / n\n        return mango",
    "        val s2 = s.replaceAll(\" \", \"\")\n        val s3 = s2.replaceAll(\"[^0-9]\", \"\")\n        val s4 = s3.replaceAll(\"[^0-9]\", \"\")\n        val s5 = s4.replaceAll(\"[^0-9]\", \"\")\n        val s6 = s5.replaceAll(\"[^0-9]\", \"\")\n        val s7 = s6.replaceAll(\"[^0-9]\", \"\")\n        val s8 = s7.replaceAll(\"[^0-9]\", \"\")\n        val s9 = s8.replaceAll(\"[^0-9]\", \"\")\n        val s10 = s9.replaceAll(\"[^0-9]\", \"\")\n        val s11 = s10.replaceAll(\"[^0-9]\", \"\")\n        val s12 = s11.replaceAll(\"[^0-9]\", \"\")\n        val s13 = s12.replaceAll(\"[^0-9]\", \"\")\n        val s14 = s13.replaceAll(\"[^0-9]\", \"\")\n        val s15 = s14.replaceAll(\"[^0-9]\", \"\")\n        val s16 = s15.replaceAll(\"[^0-9]\", \"\")\n        val s17 = s16.replaceAll(\"[^0-9]\", \"\")\n        val s18 = s17.replaceAll(\"[^0-9]\", \"\")\n        val s19 = s18.replaceAll(\"[^0-9]\", \"\")\n        val s20 = s19.replaceAll(\"[^0-9]\", \"\")\n        val s21 = s20.replaceAll(\"[^0-9]\", \"\")\n        val s22 = s21.replaceAll(\"[^0-9]\", \"\")\n        val s23 = s22.replaceAll(\"[^0-9]\", \"\")\n        val s24 = s23.replaceAll(\"[^0-9]\", \"\")\n        val s25 = s24.replaceAll(\"[^0-9]\", \"\")\n        val s26 = s25.replaceAll(\"[^0-",
    "        val apples = s.split(\" \").map(_.toInt).sum\n        val oranges = s.split(\" \").map(_.toInt).sum\n        val mango = s.split(\" \").map(_.toInt).sum\n        val total = apples + oranges + mango\n        val result = mango / total\n        return result",
    "        val apples = s.split(\" \").map(_.toInt).sum()\n        val oranges = s.split(\" \").map(_.toInt).sum()\n        val mango = (apples + oranges) / n\n        return mango",
    "        val s_ = s.toLowerCase.split(\" \")\n        val n_ = n.longValue\n        val apples = s_.length - 1\n        val oranges = s_.length - 2\n        val mango = s_.length - 3\n        val apples_ = s_.length - 4\n        val oranges_ = s_.length - 5\n        val mango_ = s_.length - 6\n        val apples_oranges = apples + oranges\n        val apples_oranges_mango = apples_oranges + mango\n        val apples_oranges_mango_apples = apples_oranges_mango + apples\n        val apples_oranges_mango_apples_oranges = apples_oranges_mango_apples + oranges\n        val apples_oranges_mango_apples_oranges_mango = apples_oranges_mango_apples_oranges + mango\n        val apples_oranges_mango_apples_oranges_mango_apples = apples_oranges_mango_apples_oranges_mango + apples_oranges_mango\n        val apples_oranges_mango_apples_oranges_mango_apples_oranges_mango = apples_oranges_mango_apples_oranges_mango_apples_oranges + mango_\n        val apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango = apples_oranges_mango_apples_oranges_mango_apples_oranges_mango + apples_oranges_mango_apples_oranges_mango\n        val apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango = apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango + apples_oranges_mango_apples_oranges_mango_apples_oranges_mango\n        val apples_oranges_mango_apples_oranges_mango_app",
    "        var totalApples = 0l\n        var totalOranges = 0l\n        var totalMangoes = 0l\n        var totalFruits = 0l\n        var total = 0l\n        var s1 = s.split(\" \")\n        for (i <- 0 until s1.length) {\n            var s2 = s1[i].split(\" and \")\n            totalApples = totalApples + Long(s2[0])\n            totalOranges = totalOranges + Long(s2[1])\n            totalFruits = totalFruits + Long(s2[0]) + Long(s2[1])\n        }\n        total = totalFruits - totalApples - totalOranges\n        if (total < n) {\n            return 0l\n        } else {\n            return totalMangoes\n        }",
    "        val apples = s.split(\" \").map(_.toInt).sum()\n        val oranges = s.split(\" \").map(_.toInt).sum()\n        val mango = s.split(\" \").map(_.toInt).filter(_.equals(\"mango\")).sum()\n        val total = apples + oranges + mango\n        return total - apples - oranges",
    "        // your code goes here\n        val s2 = s.replaceAll(\" \", \"\")\n        val s3 = s2.replaceAll(\"[^0-9]\", \"\")\n        val s4 = s3.replaceAll(\"[^a-zA-Z]\", \"\")\n        val s5 = s4.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s6 = s5.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s7 = s6.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s8 = s7.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s9 = s8.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s10 = s9.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s11 = s10.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s12 = s11.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s13 = s12.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s14 = s13.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s15 = s14.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s16 = s15.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s17 = s16.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s18 = s17.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s19 = s18.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s20 = s19.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s21 = s20.replaceAll(\"[^a",
    "        val apples = s.split(\" \").map(_.toInt).sum\n        val oranges = s.split(\" \").map(_.toInt).sum\n        val mango = s.split(\" \").map(_.toInt).filter(_.equals(\"mango\")).sum\n        val total = apples + oranges + mango\n        if (total == n) {\n            return mango\n        } else {\n            return 0l\n        }",
    "        val s2 = s.replaceAll(\" \", \"\")\n        val n2 = n.toString()\n        val s3 = s2.replaceAll(\"[0-9]+\", \"\")\n        val n3 = n2.replaceAll(\"[0-9]+\", \"\")\n        val s4 = s3.replaceAll(\"[a-zA-Z]+\", \"\")\n        val n4 = n3.replaceAll(\"[a-zA-Z]+\", \"\")\n        val s5 = s4.replaceAll(\"[a-zA-Z]+\", \"\")\n        val n5 = n4.replaceAll(\"[a-zA-Z]+\", \"\")\n        val s6 = s5.replaceAll(\"[a-zA-Z]+\", \"\")\n        val n6 = n5.replaceAll(\"[a-zA-Z]+\", \"\")\n        val s7 = s6.replaceAll(\"[a-zA-Z]+\", \"\")\n        val n7 = n6.replaceAll(\"[a-zA-Z]+\", \"\")\n        val s8 = s7.replaceAll(\"[a-zA-Z]+\", \"\")\n        val n8 = n7.replaceAll(\"[a-zA-Z]+\", \"\")\n        val s9 = s8.replaceAll(\"[a-zA-Z]+\", \"\")\n        val n9 = n8.replaceAll(\"[a-zA-Z]+\", \"\")\n        val s10 = s9.replaceAll(\"[a-zA-Z]+\", \"\")\n        val n10 = n9.replaceAll(\"[a-zA-Z]+\", \"\")\n        val s11 = s10.replaceAll(\"[a-zA-Z]+\", \"\")\n        val n11 = n10.replaceAll(\"[a-zA-Z]+\", \"\")\n        val s12 = s11.replaceAll(\"[a-zA-Z]+\", \"\")\n        val n12 = n11.replaceAll(\"[a-zA-Z]+\", \"\")\n        val s13 = s12.replaceAll(\"[a-zA-Z]+\", \"\")\n        val n13 = n12.replaceAll",
    "        val s_ = s.toLowerCase()\n        val n_ = n.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"",
    "        // your code here\n        val numApples = s.split(\" \").length - 1\n        val numOranges = s.split(\" \")[0]\n        val numMangoes = numApples * numOranges / n\n        return numMangoes",
    "        val apples = s.split(\" \").map(_.toInt).sum()\n        val oranges = s.split(\" \").map(_.toInt).sum()\n        val mango = (apples + oranges) / n\n        return mango",
    "        var s1 = s.split(\" \")\n        var n1 = Long.parseLong(s1[0])\n        var n2 = Long.parseLong(s1[1])\n        var n3 = n1 - n2\n        var n4 = n3 / n2\n        return n4",
    "        var s1 = s.split(\" \")\n        var s2 = s1.length\n        var s3 = s2 - 1\n        var s4 = s3 / 2\n        var s5 = s4 - 1\n        var s6 = s5 / 2\n        var s7 = s6 - 1\n        var s8 = s7 / 2\n        var s9 = s8 - 1\n        var s10 = s9 / 2\n        var s11 = s10 - 1\n        var s12 = s11 / 2\n        var s13 = s12 - 1\n        var s14 = s13 / 2\n        var s15 = s14 - 1\n        var s16 = s15 / 2\n        var s17 = s16 - 1\n        var s18 = s17 / 2\n        var s19 = s18 - 1\n        var s20 = s19 / 2\n        var s21 = s20 - 1\n        var s22 = s21 / 2\n        var s23 = s22 - 1\n        var s24 = s23 / 2\n        var s25 = s24 - 1\n        var s26 = s25 / 2\n        var s27 = s26 - 1\n        var s28 = s27 / 2\n        var s29 = s28 - 1\n        var s30 = s29 / 2\n        var s31 = s30 - 1\n        var s32 = s31 / 2\n        var s33 = s32 - 1\n        var s34 = s33 / 2\n        var s35 = s34 - 1\n        var s36 = s35 / 2\n        var s37 = s36 - 1\n        var s38 = s37 / 2\n        var s39 = s38 - 1\n        var s40 = s39 / 2\n        var s41 = s40 - 1\n        var s42 = s41 / 2\n        var s43 = s42 - 1\n        var s44 = s43 / 2\n        var s45 = s44 - 1\n        var s46 = s45 / 2\n        var s47 = s46 - 1\n        var s48 = s47 / 2\n        var s49 = s48 - 1\n        var s50 = s49 / 2\n        var s51 = s50 - 1\n",
    "        // your code here\n        def getFruit(s : String) : Long = {\n            def getFruit(s : String) : Long = {\n                if (s.equals(\"0\")) return 0l\n                else if (s.equals(\"1\")) return 1l\n                else return (s.split(\" \").length - 1)\n            }\n            return s.split(\" \").length - 1\n        }\n        def getApples(s : String) : Long = {\n            def getApples(s : String) : Long = {\n                if (s.equals(\"0\")) return 0l\n                else if (s.equals(\"1\")) return 1l\n                else return (s.split(\" \").length - 1)\n            }\n            return s.split(\" \").length - 1\n        }\n        def getOranges(s : String) : Long = {\n            def getOranges(s : String) : Long = {\n                if (s.equals(\"0\")) return 0l\n                else if (s.equals(\"1\")) return 1l\n                else return (s.split(\" \").length - 1)\n            }\n            return s.split(\" \").length - 1\n        }\n        def getMangoes(s : String) : Long = {\n            def getMangoes(s : String) : Long = {\n                if (s.equals(\"0\")) return 0l\n                else if (s.equals(\"1\")) return 1l\n                else return (s.split(\" \").length - 1)\n            }\n            return s.split(\" \").length - 1\n        }\n        def getFruit(s : String) : Long = {\n            if (s.equals(\"0\")) return 0l\n            else if (s.equals(\"1\")) return 1l\n            else return (s.split(\" \").length - 1)\n        }\n        def getApples(s : String) : Long = {\n            if (s.equals(\"0\")) return 0l\n            else if (s.equals(\"1\")) return 1l\n            else return (s.split(\" \").length - 1)\n        }\n        def getOranges(s : String) : Long",
    "        val apples = s.split(\" \").map(_.toInt).sum()\n        val oranges = s.split(\" \").map(_.toInt).sum()\n        val mango = s.split(\" \").map(_.toInt).filter(_.equals(\"mango\")).sum()\n        val total = apples + oranges + mango\n        if (total == n) {\n            return mango\n        } else {\n            return 0l\n        }",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        val apples = s.split(\" \").length - 1\n        val oranges = s.split(\" \")[0].length() - 1\n        val mango = s.split(\" \")[0].length() - 2\n        val applesAndOranges = apples + oranges\n        val applesAndMango = apples + mango\n        val orangesAndMango = oranges + mango\n        val applesAndOrangesAndMango = applesAndOranges + applesAndMango\n        val applesAndOrangesAndMangoAndMango = applesAndOrangesAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAnd",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        var s1 = s.split(\" \")\n        var s2 = s1.map(x => x.toLowerCase())\n        var s3 = s2.map(x => x.charAt(0))\n        var s4 = s3.map(x => x - 48)\n        var s5 = s4.map(x => x * 2)\n        var s6 = s5.map(x => x + 1)\n        var s7 = s6.map(x => x - 1)\n        var s8 = s7.map(x => x * 2)\n        var s9 = s8.map(x => x + 1)\n        var s10 = s9.map(x => x - 1)\n        var s11 = s10.map(x => x * 2)\n        var s12 = s11.map(x => x + 1)\n        var s13 = s12.map(x => x - 1)\n        var s14 = s13.map(x => x * 2)\n        var s15 = s14.map(x => x + 1)\n        var s16 = s15.map(x => x - 1)\n        var s17 = s16.map(x => x * 2)\n        var s18 = s17.map(x => x + 1)\n        var s19 = s18.map(x => x - 1)\n        var s20 = s19.map(x => x * 2)\n        var s21 = s20.map(x => x + 1)\n        var s22 = s21.map(x => x - 1)\n        var s23 = s22.map(x => x * 2)\n        var s24 = s23.map(x => x + 1)\n        var s25 = s24.map(x => x - 1)\n        var s26 = s25.map(x => x * 2)\n        var s27 = s26.map(x => x + 1)\n        var s28 = s27.map(x => x - 1)\n        var s29 = s28.map(x => x * 2)\n        var s30 = s29.map(x => x + 1)\n        var",
    "        val apples = s.split(\" \").map(_.toInt).sum()\n        val oranges = s.split(\" \").map(_.toInt).sum()\n        val mango = s.split(\" \").filter(_.equals(\"mango\")).count()\n        val result = mango * (apples + oranges)\n        if (result > n) {\n            return n\n        } else {\n            return result\n        }",
    "        // your code here\n        def toInt(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        def toInts(s) : Long = {\n            return s.toLong\n        }\n        ",
    "        // your code here\n        def getFruitCount(s : String, n : Long) : Long = {\n            def getFruitCount(s : String, n : Long) : Long = {\n                def getFruitCount(s : String, n : Long) : Long = {\n                    def getFruitCount(s : String, n : Long) : Long = {\n                        def getFruitCount(s : String, n : Long) : Long = {\n                            def getFruitCount(s : String, n : Long) : Long = {\n                                def getFruitCount(s : String, n : Long) : Long = {\n                                    def getFruitCount(s : String, n : Long) : Long = {\n                                        def getFruitCount(s : String, n : Long) : Long = {\n                                            def getFruitCount(s : String, n : Long) : Long = {\n                                                def getFruitCount(s : String, n : Long) : Long = {\n                                                    def getFruitCount(s : String, n : Long) : Long = {\n                                                        def getFruitCount(s : String, n : Long) : Long = {\n                                                            def getFruitCount(s : String, n : Long) : Long = {\n                                                                def getFruitCount(s : String, n : Long) : Long = {\n                                                                    def getFruitCount(s : String, n : Long) : Long = {\n                                                                        def getFruitCount(s : String, n : Long) : Long = {\n                                                                            def getFruitCount(s : String, n : Long) : Long = {\n                                                                                def getFruitCount(s : String, n : Long) : Long = {\n                                                                                    def getFruitCount(s : String, n : Long) : Long = {\n                                                                                        def getFruitCount(s : String, n : Long) : Long = {\n                                                                                            def getFruitCount(s : String, n : Long) : Long = {\n                                                                                                def getFruit",
    "        val apples = s.split(\" \").length\n        val oranges = s.split(\" \").length\n        val mango = s.split(\" \").length\n        val total = apples + oranges + mango\n        if (total > n) {\n            return 0l\n        } else if (total == n) {\n            return mango\n        } else {\n            return mango - (n - total)\n        }",
    "        val s_ = s.split(\" \")\n        val n_ = n.longValue()\n        val apples = s_.length() - 1\n        val oranges = s_.length() - 2\n        val mango = s_.length() - 3\n        val apples_ = s_.get(0).toLong\n        val oranges_ = s_.get(1).toLong\n        val mango_ = s_.get(2).toLong\n        val apples_n = apples_ * n_\n        val oranges_n = oranges_ * n_\n        val mango_n = mango_ * n_\n        val apples_n_ = apples_n / apples\n        val oranges_n_ = oranges_n / oranges\n        val mango_n_ = mango_n / mango\n        val result = apples_n_ * mango_n_\n        return result",
    "        val s_ = s.split(\" \")\n        val n_ = n.longValue()\n        val apples = s_.length - 1\n        val oranges = s_.length - 2\n        val mango = 0l\n        for (i <- 0 until apples) {\n            mango += s_[i].toLong\n        }\n        for (i <- 0 until oranges) {\n            mango += s_[i + apples].toLong\n        }\n        return mango / n_",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / n2\n        val n5 = n3 % n2\n        val n6 = n5 / n2\n        val n7 = n5 % n2\n        val n8 = n7 / n2\n        val n9 = n7 % n2\n        val n10 = n9 / n2\n        val n11 = n9 % n2\n        val n12 = n11 / n2\n        val n13 = n11 % n2\n        val n14 = n13 / n2\n        val n15 = n13 % n2\n        val n16 = n15 / n2\n        val n17 = n15 % n2\n        val n18 = n17 / n2\n        val n19 = n17 % n2\n        val n20 = n19 / n2\n        val n21 = n19 % n2\n        val n22 = n21 / n2\n        val n23 = n21 % n2\n        val n24 = n23 / n2\n        val n25 = n23 % n2\n        val n26 = n25 / n2\n        val n27 = n25 % n2\n        val n28 = n27 / n2\n        val n29 = n27 % n2\n        val n30 = n29 / n2\n        val n31 = n29 % n2\n        val n32 = n31 / n2\n        val n33 = n31 % n2\n        val n34 = n33 / n2\n        val n35 = n33 % n2\n        val n36 = n35 / n2\n        val n37 = n35 % n2\n        val n38 = n37 / n2\n        val n39 = n37 % n2\n        val n40 = n39 / n2\n        val n41 = n39 % n2\n        val n42 = n41 / n2\n        val n43 = n41 % n2\n        val n44 = n43 / n2\n        val n45 = n",
    "        // your code here\n        val s2 = s.replaceAll(\" \", \"\")\n        val s3 = s2.replaceAll(\"[^0-9]\", \"\")\n        val s4 = s3.replaceAll(\"[^0-9]\", \"\")\n        val s5 = s4.replaceAll(\"[^0-9]\", \"\")\n        val s6 = s5.replaceAll(\"[^0-9]\", \"\")\n        val s7 = s6.replaceAll(\"[^0-9]\", \"\")\n        val s8 = s7.replaceAll(\"[^0-9]\", \"\")\n        val s9 = s8.replaceAll(\"[^0-9]\", \"\")\n        val s10 = s9.replaceAll(\"[^0-9]\", \"\")\n        val s11 = s10.replaceAll(\"[^0-9]\", \"\")\n        val s12 = s11.replaceAll(\"[^0-9]\", \"\")\n        val s13 = s12.replaceAll(\"[^0-9]\", \"\")\n        val s14 = s13.replaceAll(\"[^0-9]\", \"\")\n        val s15 = s14.replaceAll(\"[^0-9]\", \"\")\n        val s16 = s15.replaceAll(\"[^0-9]\", \"\")\n        val s17 = s16.replaceAll(\"[^0-9]\", \"\")\n        val s18 = s17.replaceAll(\"[^0-9]\", \"\")\n        val s19 = s18.replaceAll(\"[^0-9]\", \"\")\n        val s20 = s19.replaceAll(\"[^0-9]\", \"\")\n        val s21 = s20.replaceAll(\"[^0-9]\", \"\")\n        val s22 = s21.replaceAll(\"[^0-9]\", \"\")\n        val s23 = s22.replaceAll(\"[^0-9]\", \"\")\n        val s24 = s23.replaceAll(\"[^0-9]\", \"\")\n        val s25 = s24.replaceAll(\"[^0-9]\", \"\")\n        val s26 = s25.replace",
    "        var s1 = s.split(\" \")\n        var s2 = s1.map(x => x.replaceAll(\"[^0-9]\", \"\"))\n        var s3 = s2.map(x => x.toLong)\n        var s4 = s3.map(x => x + n)\n        var s5 = s4.filter(x => x > 0)\n        var s6 = s5.map(x => x - 1)\n        var s7 = s6.filter(x => x > 0)\n        var s8 = s7.map(x => x + 1)\n        var s9 = s8.filter(x => x > 0)\n        var s10 = s9.map(x => x - 1)\n        var s11 = s10.filter(x => x > 0)\n        var s12 = s11.map(x => x + 1)\n        var s13 = s12.filter(x => x > 0)\n        var s14 = s13.map(x => x - 1)\n        var s15 = s14.filter(x => x > 0)\n        var s16 = s15.map(x => x + 1)\n        var s17 = s16.filter(x => x > 0)\n        var s18 = s17.map(x => x - 1)\n        var s19 = s18.filter(x => x > 0)\n        var s20 = s19.map(x => x + 1)\n        var s21 = s20.filter(x => x > 0)\n        var s22 = s21.map(x => x - 1)\n        var s23 = s22.filter(x => x > 0)\n        var s24 = s23.map(x => x + 1)\n        var s25 = s24.filter(x => x > 0)\n        var s26 = s25.map(x => x - 1)\n        var s27 = s26.filter(x => x > 0)\n        var s28 = s27.map(x => x + 1)\n        var s29 = s28.filter(x => x > 0)\n        var s30 = s29.map(x => x",
    "        val apples = s.split(\" \").map(_.toInt).sum()\n        val oranges = s.split(\" \").map(_.toInt).sum()\n        val mango = s.split(\" \").map(_.toInt).sum()\n        val total = apples + oranges + mango\n        val mangoFruits = mango / total * n\n        return mangoFruits",
    "        // your code here\n        var numApples = 0l\n        var numOranges = 0l\n        var numMangoes = 0l\n        var numFruits = 0l\n        var numApplesOranges = 0l\n        var numApplesMangoes = 0l\n        var numOrangesMangoes = 0l\n        var numApplesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var numApplesOrangesMangoes = 0l\n        var",
    "        val s2 = s.replaceAll(\" \", \"\")\n        val s3 = s2.replaceAll(\"[^0-9]\", \"\")\n        val s4 = s3.replaceAll(\"[^0-9]\", \"\")\n        val s5 = s4.replaceAll(\"[^0-9]\", \"\")\n        val s6 = s5.replaceAll(\"[^0-9]\", \"\")\n        val s7 = s6.replaceAll(\"[^0-9]\", \"\")\n        val s8 = s7.replaceAll(\"[^0-9]\", \"\")\n        val s9 = s8.replaceAll(\"[^0-9]\", \"\")\n        val s10 = s9.replaceAll(\"[^0-9]\", \"\")\n        val s11 = s10.replaceAll(\"[^0-9]\", \"\")\n        val s12 = s11.replaceAll(\"[^0-9]\", \"\")\n        val s13 = s12.replaceAll(\"[^0-9]\", \"\")\n        val s14 = s13.replaceAll(\"[^0-9]\", \"\")\n        val s15 = s14.replaceAll(\"[^0-9]\", \"\")\n        val s16 = s15.replaceAll(\"[^0-9]\", \"\")\n        val s17 = s16.replaceAll(\"[^0-9]\", \"\")\n        val s18 = s17.replaceAll(\"[^0-9]\", \"\")\n        val s19 = s18.replaceAll(\"[^0-9]\", \"\")\n        val s20 = s19.replaceAll(\"[^0-9]\", \"\")\n        val s21 = s20.replaceAll(\"[^0-9]\", \"\")\n        val s22 = s21.replaceAll(\"[^0-9]\", \"\")\n        val s23 = s22.replaceAll(\"[^0-9]\", \"\")\n        val s24 = s23.replaceAll(\"[^0-9]\", \"\")\n        val s25 = s24.replaceAll(\"[^0-9]\", \"\")\n        val s26 = s25.replaceAll(\"[^0-",
    "        val s1 = s.split(\" \")\n        val s2 = s1.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s3 = s2.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s4 = s3.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s5 = s4.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s6 = s5.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s7 = s6.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s8 = s7.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s9 = s8.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s10 = s9.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s11 = s10.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s12 = s11.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s13 = s12.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s14 = s13.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s15 = s14.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s16 = s15.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s17 = s16.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s18 = s17.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s19 = s18.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s20 = s19.map(x -> x.",
    "        // your code here\n        def countMangoes(s: String, n: Long) : Long = {\n            var count = 0l\n            for (i <- 0 until s.length) {\n                if (s[i] == \"m\") {\n                    count += 1l\n                }\n            }\n            return count\n        }\n        var apples = 0l\n        var oranges = 0l\n        for (i <- 0 until s.length) {\n            if (s[i] == \"a\") {\n                apples += 1l\n            } else if (s[i] == \"o\") {\n                oranges += 1l\n            }\n        }\n        return countMangoes(s, n) - (apples + oranges)",
    "        // your code goes here\n        val s1 = s.split(\" \")\n        val n1 = n.longValue()\n        val s2 = s1.length\n        val n2 = s2 - 1\n        val n3 = n1 / s2\n        val n4 = n1 % s2\n        val n5 = n3 * n4\n        val n6 = n5 + n3\n        val n7 = n6 + n3\n        val n8 = n7 + n3\n        val n9 = n8 + n3\n        val n10 = n9 + n3\n        val n11 = n10 + n3\n        val n12 = n11 + n3\n        val n13 = n12 + n3\n        val n14 = n13 + n3\n        val n15 = n14 + n3\n        val n16 = n15 + n3\n        val n17 = n16 + n3\n        val n18 = n17 + n3\n        val n19 = n18 + n3\n        val n20 = n19 + n3\n        val n21 = n20 + n3\n        val n22 = n21 + n3\n        val n23 = n22 + n3\n        val n24 = n23 + n3\n        val n25 = n24 + n3\n        val n26 = n25 + n3\n        val n27 = n26 + n3\n        val n28 = n27 + n3\n        val n29 = n28 + n3\n        val n30 = n29 + n3\n        val n31 = n30 + n3\n        val n32 = n31 + n3\n        val n33 = n32 + n3\n        val n34 = n33 + n3\n        val n35 = n34 + n3\n        val n36 = n35 + n3\n        val n37 = n36 + n3\n        val n38 = n37 + n3\n        val n39 = n38 + n3\n        val n40 = n39 + n3\n        val n41 = n40 + n3\n        val n42 = n41 + n3\n        val n43 = n42 + n3\n        val n44 = n43 + n3\n",
    "        // your code here\n        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        val s2 = s.replaceAll(\"[^0-9]\", \"\")\n        val n2 = n.toLong\n        val m = s2.toLong\n        val n3 = n2 - m\n        val m2 = m - s2.toLong\n        val n4 = n3 - m2\n        val n5 = n4 - s2.toLong\n        val n6 = n5 - m2\n        val n7 = n6 - s2.toLong\n        val n8 = n7 - m2\n        val n9 = n8 - s2.toLong\n        val n10 = n9 - m2\n        val n11 = n10 - s2.toLong\n        val n12 = n11 - m2\n        val n13 = n12 - s2.toLong\n        val n14 = n13 - m2\n        val n15 = n14 - s2.toLong\n        val n16 = n15 - m2\n        val n17 = n16 - s2.toLong\n        val n18 = n17 - m2\n        val n19 = n18 - s2.toLong\n        val n20 = n19 - m2\n        val n21 = n20 - s2.toLong\n        val n22 = n21 - m2\n        val n23 = n22 - s2.toLong\n        val n24 = n23 - m2\n        val n25 = n24 - s2.toLong\n        val n26 = n25 - m2\n        val n27 = n26 - s2.toLong\n        val n28 = n27 - m2\n        val n29 = n28 - s2.toLong\n        val n30 = n29 - m2\n        val n31 = n30 - s2.toLong\n        val n32 = n31 - m2\n        val n33 = n32 - s2.toLong\n        val n34 = n33 - m2\n        val n35 = n34 - s2.toLong\n        val n36 = n35 - m2\n        val n37 = n36 - s2.toLong\n        val n38 = n37 - m2\n        val n39 = n38 - s2.toLong",
    "        val s_ = s.toLowerCase()\n        val n_ = n.toLong\n        val s_len = s_.length\n        val n_len = n_.toLong\n        val s_arr = s_.split(\" \")\n        val n_arr = n_.toString.split(\" \")\n        val s_arr_len = s_arr.length\n        val n_arr_len = n_arr.length\n        val s_arr_len_ = s_arr_len.toLong\n        val n_arr_len_ = n_arr_len.toLong\n        val s_arr_ = s_arr.toLong\n        val n_arr_ = n_arr.toLong\n        val s_arr_len_ = s_arr_len.toLong\n        val n_arr_len_ = n_arr_len.toLong\n        val s_arr_len_ = s_arr_len.toLong\n        val n_arr_len_ = n_arr_len.toLong\n        val s_arr_len_ = s_arr_len.toLong\n        val n_arr_len_ = n_arr_len.toLong\n        val s_arr_len_ = s_arr_len.toLong\n        val n_arr_len_ = n_arr_len.toLong\n        val s_arr_len_ = s_arr_len.toLong\n        val n_arr_len_ = n_arr_len.toLong\n        val s_arr_len_ = s_arr_len.toLong\n        val n_arr_len_ = n_arr_len.toLong\n        val s_arr_len_ = s_arr_len.toLong\n        val n_arr_len_ = n_arr_len.toLong\n        val s_arr_len_ = s_arr_len.toLong\n        val n_arr_len_ = n_arr_len.toLong\n        val s_arr_len_ = s_arr_len.toLong\n        val n_arr_len_ = n_arr_len.toLong\n        val s_arr_len_ = s_arr_len.toLong\n        val n_arr_",
    "        // your code here\n        def getFruit(s : String) : Long = {\n            def getCount(s : String) : Long = {\n                def getCount(s : String) : Long = {\n                    def getCount(s : String) : Long = {\n                        def getCount(s : String) : Long = {\n                            def getCount(s : String) : Long = {\n                                def getCount(s : String) : Long = {\n                                    def getCount(s : String) : Long = {\n                                        def getCount(s : String) : Long = {\n                                            def getCount(s : String) : Long = {\n                                                def getCount(s : String) : Long = {\n                                                    def getCount(s : String) : Long = {\n                                                        def getCount(s : String) : Long = {\n                                                            def getCount(s : String) : Long = {\n                                                                def getCount(s : String) : Long = {\n                                                                    def getCount(s : String) : Long = {\n                                                                        def getCount(s : String) : Long = {\n                                                                            def getCount(s : String) : Long = {\n                                                                                def getCount(s : String) : Long = {\n                                                                                    def getCount(s : String) : Long = {\n                                                                                        def getCount(s : String) : Long = {\n                                                                                            def getCount(s : String) : Long = {\n                                                                                                def getCount(s : String) : Long = {\n                                                                                                    def getCount(s : String) : Long = {\n                                                                                                        def getCount(s : String) : Long = {\n                                                                                                            def getCount(s : String) : Long = {\n                                                                                                                def getCount(s : String) : Long = {\n                                                                                                                    def getCount(s : String) : Long = {\n                                                                                                                          def getCount(s : String) : Long = {",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        // your code here\n        val s_arr = s.split(\" \")\n        val n_arr = n.toString().split(\" \")\n        val apples = Long.parseLong(s_arr[0])\n        val oranges = Long.parseLong(s_arr[1])\n        val mango = Long.parseLong(n_arr[0])\n        val apples_mango = apples * mango\n        val oranges_mango = oranges * mango\n        val apples_oranges = apples + oranges\n        val apples_oranges_mango = apples_oranges + mango\n        val apples_oranges_mango_apples = apples_oranges_mango - apples\n        val apples_oranges_mango_oranges = apples_oranges_mango - oranges\n        val apples_oranges_mango_mango = apples_oranges_mango - mango\n        val apples_oranges_mango_apples_oranges = apples_oranges_mango_apples + apples_oranges_mango_oranges\n        val apples_oranges_mango_apples_oranges_mango = apples_oranges_mango_apples + apples_oranges_mango_oranges + mango\n        return apples_oranges_mango_apples_oranges_mango",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n / n1\n        val n4 = n / n2\n        val n5 = n / n3\n        val n6 = n / n4\n        val n7 = n / n5\n        val n8 = n / n6\n        val n9 = n / n7\n        val n10 = n / n8\n        val n11 = n / n9\n        val n12 = n / n10\n        val n13 = n / n11\n        val n14 = n / n12\n        val n15 = n / n13\n        val n16 = n / n14\n        val n17 = n / n15\n        val n18 = n / n16\n        val n19 = n / n17\n        val n20 = n / n18\n        val n21 = n / n19\n        val n22 = n / n20\n        val n23 = n / n21\n        val n24 = n / n22\n        val n25 = n / n23\n        val n26 = n / n24\n        val n27 = n / n25\n        val n28 = n / n26\n        val n29 = n / n27\n        val n30 = n / n28\n        val n31 = n / n29\n        val n32 = n / n30\n        val n33 = n / n31\n        val n34 = n / n32\n        val n35 = n / n33\n        val n36 = n / n34\n        val n37 = n / n35\n        val n38 = n / n36\n        val n39 = n / n37\n        val n40 = n / n38\n        val n41 = n / n39\n        val n42 = n / n40\n        val n43 = n / n41\n        val n44 = n / n42\n        val n45 = n / n43\n        val n46 = n / n44\n        val n47 = n / n45\n        val n48 = n / n46\n        val n49 = n / n",
    "        // your code here\n        val s_ = s.split(\" \")\n        val n_ = n.longValue()\n        val a = s_.length()\n        val o = s_.length()\n        val m = s_.length()\n        val a_ = a.longValue()\n        val o_ = o.longValue()\n        val m_ = m.longValue()\n        val a_n = a_ * n_\n        val o_n = o_ * n_\n        val m_n = m_ * n_\n        val a_o = a_ * o_\n        val a_m = a_ * m_\n        val o_m = o_ * m_\n        val m_o = m_ * o_\n        val a_o_m = a_ * o_ * m_\n        val a_o_o = a_ * o_ * o_\n        val a_m_o = a_ * m_ * o_\n        val a_m_m = a_ * m_ * m_\n        val a_o_m_m = a_ * o_ * m_ * m_\n        val a_o_o_m = a_ * o_ * o_ * m_\n        val a_m_o_m = a_ * m_ * o_ * m_\n        val a_m_m_o = a_ * m_ * m_ * o_\n        val a_o_m_o = a_ * o_ * m_ * o_\n        val a_m_o_o = a_ * m_ * o_ * o_\n        val a_o_m_o = a_ * o_ * m_ * o_\n        val a_m_o_o = a_ * m_ * o_ * o_\n        val a_o_m_o = a_ * o_ * m_ * o_\n        val a_m_o_o = a_ * m_ * o_ * o_\n        val a_o_m_o = a_ * o_ * m_ * o_\n        val a_m_o_o = a_ * m_ * o_ * o_\n        val a_o_m",
    "        val s_ = s.toLowerCase.split(\" \")\n        val apples = Long.parseLong(s_[0])\n        val oranges = Long.parseLong(s_[1])\n        val mango = Long.parseLong(s_[2])\n        val apples_ = (apples + oranges) / 2\n        val oranges_ = apples_ + mango\n        return mango",
    "        // your code here\n        return _.toLong(s.replaceAll(\"[^0-9]\", \"\")).div(n)",
    "        val s_ = s.toLowerCase()\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_",
    "        def countMangoes(s : String, n : Long) : Long = {\n            var count = 0l\n            for (i <- 0 until s.length) {\n                if (s[i] == \"m\") {\n                    count += 1l\n                }\n            }\n            return count\n        }\n        var count = 0l\n        for (i <- 0 until s.length) {\n            if (s[i] == \"o\") {\n                count += 1l\n            }\n        }\n        return count + countMangoes(s, n)",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / 2\n        val n5 = n3 % 2\n        val n6 = n4 + n5\n        return n6",
    "        var apples = 0l\n        var oranges = 0l\n        var mango = 0l\n        var _ = s.split(\" \").map(x => x.toLong).foreach(x => {\n            if (x == \"apple\") {\n                apples += 1\n            } else if (x == \"orange\") {\n                oranges += 1\n            } else if (x == \"mango\") {\n                mango += 1\n            }\n        })\n        return mango * n / (apples + oranges)",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        var totalApples = 0l\n        var totalOranges = 0l\n        var totalMangoes = 0l\n        var totalFruits = 0l\n        var total = 0l\n        var split = s.split(\" \")\n        for (i <- 0 until split.length) {\n            var fruit = split[i]\n            if (fruit == \"apple\") {\n                totalApples = totalApples + 1l\n            } else if (fruit == \"orange\") {\n                totalOranges = totalOranges + 1l\n            } else if (fruit == \"mango\") {\n                totalMangoes = totalMangoes + 1l\n            } else {\n                totalFruits = totalFruits + 1l\n            }\n        }\n        total = totalApples + totalOranges + totalMangoes\n        return totalFruits - total",
    "        val apples = s.split(\" \").map(_.toInt).sum()\n        val oranges = s.split(\" \").map(_.toInt).sum()\n        val mango = s.split(\" \").map(_.toInt).sum()\n        val total = apples + oranges + mango\n        val result = mango / total * n\n        return result",
    "        var s1 = s.split(\" \")\n        var s2 = s1.length\n        var s3 = s1[0]\n        var s4 = s1[1]\n        var s5 = s1[2]\n        var s6 = s1[3]\n        var s7 = s1[4]\n        var s8 = s1[5]\n        var s9 = s1[6]\n        var s10 = s1[7]\n        var s11 = s1[8]\n        var s12 = s1[9]\n        var s13 = s1[10]\n        var s14 = s1[11]\n        var s15 = s1[12]\n        var s16 = s1[13]\n        var s17 = s1[14]\n        var s18 = s1[15]\n        var s19 = s1[16]\n        var s20 = s1[17]\n        var s21 = s1[18]\n        var s22 = s1[19]\n        var s23 = s1[20]\n        var s24 = s1[21]\n        var s25 = s1[22]\n        var s26 = s1[23]\n        var s27 = s1[24]\n        var s28 = s1[25]\n        var s29 = s1[26]\n        var s30 = s1[27]\n        var s31 = s1[28]\n        var s32 = s1[29]\n        var s33 = s1[30]\n        var s34 = s1[31]\n        var s35 = s1[32]\n        var s36 = s1[33]\n        var s37 = s1[34]\n        var s38 = s1[35]\n        var s39 = s1[36]\n        var s40 = s1[37]\n        var s41 = s1[38]\n        var s42 = s1[39]\n        var s43 = s1[40]\n        var s44 = s1[41]\n        var s45 = s1[42]\n        var s46 = s1[43]\n        var s47 = s",
    "        // your code here\n        val s_arr = s.split(\" \")\n        val n_arr = n.toString().split(\" \")\n        val apples = Long.parseLong(s_arr[0])\n        val oranges = Long.parseLong(s_arr[1])\n        val mango = Long.parseLong(n_arr[0])\n        val apples_mango = apples * mango\n        val oranges_mango = oranges * mango\n        val apples_oranges = apples + oranges\n        val apples_oranges_mango = apples_oranges + mango\n        val apples_oranges_mango_apples = apples_oranges_mango - apples\n        val apples_oranges_mango_oranges = apples_oranges_mango - oranges\n        val apples_oranges_mango_oranges_mango = apples_oranges_mango_oranges - mango\n        val apples_oranges_mango_oranges_mango_apples = apples_oranges_mango_oranges_mango - apples\n        val apples_oranges_mango_oranges_mango_apples_oranges = apples_oranges_mango_oranges_mango_apples - oranges\n        val apples_oranges_mango_oranges_mango_apples_oranges_mango = apples_oranges_mango_oranges_mango_apples_oranges - mango\n        val apples_oranges_mango_oranges_mango_apples_oranges_mango_apples = apples_oranges_mango_oranges_mango_apples_oranges_mango - apples\n        val apples_oranges_mango_oranges_mango_apples_oranges_mango_apples_oranges = apples_oranges_mango_oranges_mango_apples_oranges_mango_apples - oranges\n        val apples_oranges_mango_oranges_mango_apples_oranges_mango_apples_oranges_mango = apples_oranges_mango_oranges_mango_apples_oranges_mango_apples_oranges - mango\n        val apples_",
    "        var apples = 0l\n        var oranges = 0l\n        var mango = 0l\n        var total = 0l\n        var s_ = s.split(\" \")\n        for (i <- 0 until s_.length) {\n            if (s_[i] == \"apple\") {\n                apples = apples + 1l\n            } else if (s_[i] == \"orange\") {\n                oranges = oranges + 1l\n            } else if (s_[i] == \"mango\") {\n                mango = mango + 1l\n            }\n        }\n        total = apples + oranges + mango\n        return total - n",
    "        val apples = s.split(\" \").map(Long::parseLong).filter(_.isPositive).sum()\n        val oranges = s.split(\" \").map(Long::parseLong).filter(_.isPositive).sum()\n        val mango = s.split(\" \").map(Long::parseLong).filter(_.isPositive).sum()\n        val total = apples + oranges + mango\n        if (total < n) return 0l\n        else return mango / total",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        val s_ = s.toLowerCase()\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_",
    "        val apples = s.split(\" \").map(_.toInt).sum()\n        val oranges = s.split(\" \").map(_.toInt).sum()\n        val mango = (apples * oranges) / n\n        return mango",
    "        // your code here\n        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / 2\n        val n5 = n3 % 2\n        val n6 = n4 + n5\n        val n7 = n6 / 2\n        val n8 = n6 % 2\n        val n9 = n7 + n8\n        val n10 = n9 / 2\n        val n11 = n9 % 2\n        val n12 = n10 + n11\n        val n13 = n12 / 2\n        val n14 = n12 % 2\n        val n15 = n13 + n14\n        val n16 = n15 / 2\n        val n17 = n15 % 2\n        val n18 = n16 + n17\n        val n19 = n18 / 2\n        val n20 = n18 % 2\n        val n21 = n19 + n20\n        val n22 = n21 / 2\n        val n23 = n21 % 2\n        val n24 = n22 + n23\n        val n25 = n24 / 2\n        val n26 = n24 % 2\n        val n27 = n25 + n26\n        val n28 = n27 / 2\n        val n29 = n27 % 2\n        val n30 = n28 + n29\n        val n31 = n30 / 2\n        val n32 = n30 % 2\n        val n33 = n31 + n32\n        val n34 = n33 / 2\n        val n35 = n33 % 2\n        val n36 = n34 + n35\n        val n37 = n36 / 2\n        val n38 = n36 % 2\n        val n39 = n37 + n38\n        val n40 = n39 / 2\n        val n41 = n39 % 2\n        val n42 = n40 + n41\n        val n43 = n42 / 2\n        val n44 = n42 % 2\n        val n45 = n43 + n44\n        val n46 = n45 / 2\n        val n47 = n45",
    "        // your code here\n        val s1 = s.split(\" \")\n        val s2 = s1.length\n        val s3 = s2 - 1\n        val s4 = s3 / 2\n        val s5 = s4 - 1\n        val s6 = s5 / 2\n        val s7 = s6 - 1\n        val s8 = s7 / 2\n        val s9 = s8 - 1\n        val s10 = s9 / 2\n        val s11 = s10 - 1\n        val s12 = s11 / 2\n        val s13 = s12 - 1\n        val s14 = s13 / 2\n        val s15 = s14 - 1\n        val s16 = s15 / 2\n        val s17 = s16 - 1\n        val s18 = s17 / 2\n        val s19 = s18 - 1\n        val s20 = s19 / 2\n        val s21 = s20 - 1\n        val s22 = s21 / 2\n        val s23 = s22 - 1\n        val s24 = s23 / 2\n        val s25 = s24 - 1\n        val s26 = s25 / 2\n        val s27 = s26 - 1\n        val s28 = s27 / 2\n        val s29 = s28 - 1\n        val s30 = s29 / 2\n        val s31 = s30 - 1\n        val s32 = s31 / 2\n        val s33 = s32 - 1\n        val s34 = s33 / 2\n        val s35 = s34 - 1\n        val s36 = s35 / 2\n        val s37 = s36 - 1\n        val s38 = s37 / 2\n        val s39 = s38 - 1\n        val s40 = s39 / 2\n        val s41 = s40 - 1\n        val s42 = s41 / 2\n        val s43 = s42 - 1\n        val s44 = s43 / 2\n        val s45 = s44 - 1\n        val s46 = s45 / 2\n        val s47 = s46 - 1\n        val s48 = s47 / 2\n        val s49 = s48 - 1\n        val s50 = s49 / 2\n        val s51",
    "        var s_ = s.split(\" \")\n        var n_ = n.longValue()\n        var apples = 0l\n        var oranges = 0l\n        var mango = 0l\n        for (var i = 0; i < s_.length; i++) {\n            if (s_[i].equals(\"apple\")) {\n                apples = apples + 1l\n            } else if (s_[i].equals(\"orange\")) {\n                oranges = oranges + 1l\n            } else if (s_[i].equals(\"mango\")) {\n                mango = mango + 1l\n            }\n        }\n        return mango * (n_ / (apples + oranges))",
    "        val apples = s.split(\" \").length - 1\n        val oranges = s.split(\" \")[0].length() - 1\n        val mango = s.split(\" \")[0].length() - 1\n        val applesAndOranges = apples + oranges\n        val applesAndMango = apples + mango\n        val orangesAndMango = oranges + mango\n        val applesAndOrangesAndMango = applesAndOranges + applesAndMango\n        val applesAndOrangesAndMangoAndMango = applesAndOrangesAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMangoAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango",
    "        val s_ = s.toLowerCase()\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^a-z]\", \"\")\n        val s_ = s_.replaceAll(\"[^0-9]",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        var apples = 0l\n        var oranges = 0l\n        var mango = 0l\n        var total = 0l\n        var i = 0l\n        while (i < s.length) {\n            if (s[i] == 'a') {\n                apples += 1l\n            } else if (s[i] == 'o') {\n                oranges += 1l\n            } else if (s[i] == 'm') {\n                mango += 1l\n            }\n            i += 1\n        }\n        total = apples + oranges + mango\n        return total - n",
    "        val s_ = s.toLowerCase()\n        val n_ = n.toLong\n        val s_len = s_.length\n        val n_len = n_.toInt\n        val s_arr = s_.split(\" \")\n        val n_arr = n_.toArray\n        val s_arr_len = s_arr.length\n        val n_arr_len = n_arr.length\n        val s_arr_len_minus_1 = s_arr_len - 1\n        val n_arr_len_minus_1 = n_arr_len - 1\n        val s_arr_len_minus_2 = s_arr_len - 2\n        val n_arr_len_minus_2 = n_arr_len - 2\n        val s_arr_len_minus_3 = s_arr_len - 3\n        val n_arr_len_minus_3 = n_arr_len - 3\n        val s_arr_len_minus_4 = s_arr_len - 4\n        val n_arr_len_minus_4 = n_arr_len - 4\n        val s_arr_len_minus_5 = s_arr_len - 5\n        val n_arr_len_minus_5 = n_arr_len - 5\n        val s_arr_len_minus_6 = s_arr_len - 6\n        val n_arr_len_minus_6 = n_arr_len - 6\n        val s_arr_len_minus_7 = s_arr_len - 7\n        val n_arr_len_minus_7 = n_arr_len - 7\n        val s_arr_len_minus_8 = s_arr_len - 8\n        val n_arr_len_minus_8 = n_arr_len - 8\n        val s_arr_len_minus_9 = s_arr_len - 9\n        val n_arr_len_minus_9 = n_arr_len - 9\n        val s_arr_len_minus_10 = s_arr_len - 10\n        val n_arr_len_minus_10 = n_arr_len - 10\n        val s_arr_len_minus_11 = s_arr_len",
    "        def toInt(s : String) : Int = {\n            def toInt(s : String) : Int = {\n                def toInt(s : String) : Int = {\n                    def toInt(s : String) : Int = {\n                        def toInt(s : String) : Int = {\n                            def toInt(s : String) : Int = {\n                                def toInt(s : String) : Int = {\n                                    def toInt(s : String) : Int = {\n                                        def toInt(s : String) : Int = {\n                                            def toInt(s : String) : Int = {\n                                                def toInt(s : String) : Int = {\n                                                    def toInt(s : String) : Int = {\n                                                        def toInt(s : String) : Int = {\n                                                            def toInt(s : String) : Int = {\n                                                                def toInt(s : String) : Int = {\n                                                                    def toInt(s : String) : Int = {\n                                                                        def toInt(s : String) : Int = {\n                                                                            def toInt(s : String) : Int = {\n                                                                                def toInt(s : String) : Int = {\n                                                                                    def toInt(s : String) : Int = {\n                                                                                        def toInt(s : String) : Int = {\n                                                                                            def toInt(s : String) : Int = {\n                                                                                                def toInt(s : String) : Int = {\n                                                                                                    def toInt(s : String) : Int = {\n                                                                                                        def toInt(s : String) : Int = {\n                                                                                                            def toInt(s : String) : Int = {\n                                                                                                                def toInt(s : String) : Int = {\n                                                                                                                    def toInt(s : String) : Int = {\n                                                                                                                          def toInt(s : String) : Int = {\n                                                                                                                            def to",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        val apples = s.split(\" \").length - 1\n        val oranges = s.split(\" \")[0].length() - 1\n        val mango = (apples * oranges) / n\n        return mango",
    "        def getCount(s : String) : Long = {\n            def count(s : String) : Long = {\n                def count(s : String) : Long = {\n                    def count(s : String) : Long = {\n                        def count(s : String) : Long = {\n                            def count(s : String) : Long = {\n                                def count(s : String) : Long = {\n                                    def count(s : String) : Long = {\n                                        def count(s : String) : Long = {\n                                            def count(s : String) : Long = {\n                                                def count(s : String) : Long = {\n                                                    def count(s : String) : Long = {\n                                                        def count(s : String) : Long = {\n                                                            def count(s : String) : Long = {\n                                                                def count(s : String) : Long = {\n                                                                    def count(s : String) : Long = {\n                                                                        def count(s : String) : Long = {\n                                                                            def count(s : String) : Long = {\n                                                                                def count(s : String) : Long = {\n                                                                                    def count(s : String) : Long = {\n                                                                                        def count(s : String) : Long = {\n                                                                                            def count(s : String) : Long = {\n                                                                                                def count(s : String) : Long = {\n                                                                                                    def count(s : String) : Long = {\n                                                                                                        def count(s : String) : Long = {\n                                                                                                            def count(s : String) : Long = {\n                                                                                                                def count(s : String) : Long = {\n                                                                                                                    def count(s : String) : Long = {\n                                                                                                                        def count(s : String) : Long = {\n                                                                                                                            def count(s : String) : Long = {\n                                                                                                                                def count(s : String) : Long = {\n                                                              ",
    "        var numApples = 0l\n        var numOranges = 0l\n        var numMangoes = 0l\n        var numFruits = 0l\n        var numFruit = 0l\n        var numFruitStr = \"\"\n        var numFruitStr2 = \"\"\n        var numFruitStr3 = \"\"\n        var numFruitStr4 = \"\"\n        var numFruitStr5 = \"\"\n        var numFruitStr6 = \"\"\n        var numFruitStr7 = \"\"\n        var numFruitStr8 = \"\"\n        var numFruitStr9 = \"\"\n        var numFruitStr10 = \"\"\n        var numFruitStr11 = \"\"\n        var numFruitStr12 = \"\"\n        var numFruitStr13 = \"\"\n        var numFruitStr14 = \"\"\n        var numFruitStr15 = \"\"\n        var numFruitStr16 = \"\"\n        var numFruitStr17 = \"\"\n        var numFruitStr18 = \"\"\n        var numFruitStr19 = \"\"\n        var numFruitStr20 = \"\"\n        var numFruitStr21 = \"\"\n        var numFruitStr22 = \"\"\n        var numFruitStr23 = \"\"\n        var numFruitStr24 = \"\"\n        var numFruitStr25 = \"\"\n        var numFruitStr26 = \"\"\n        var numFruitStr27 = \"\"\n        var numFruitStr28 = \"\"\n        var numFruitStr29 = \"\"\n        var numFruitStr30 = \"\"\n        var numFruitStr31 = \"\"\n        var numFruitStr32 = \"\"\n        var numFruitStr33 = \"\"\n        var numFruitStr34 = \"\"\n        var numFruitStr35 = \"\"\n        var numFruitStr36 = \"\"\n        var numFruitStr37 = \"\"\n        var numFruitStr38 = \"\"\n        var numFruitStr39 = \"\"\n        var numFruitStr40 = \"\"\n        var numFruitStr41 = \"\"\n        var numFruitStr42 = \"\"\n        var numFruitStr43 = \"\"\n        var numFruitStr44 = \"\"\n        var numFruitStr45 = \"\"\n        var numFruitStr46 = \"\"\n        var numFruitStr47",
    "        val apples = s.split(\" \").map(_.toInt).sum()\n        val oranges = s.split(\" \").map(_.toInt).sum()\n        val mango = (apples + oranges) / n\n        return mango",
    "        // your code here\n        val s_array = s.split(\" \")\n        val n_array = n.toString().split(\" \")\n        val apples = Long.parseLong(s_array[0])\n        val oranges = Long.parseLong(s_array[1])\n        val mango = Long.parseLong(n_array[0])\n        val apples_oranges = Long.parseLong(n_array[1])\n        val apples_mango = Long.parseLong(n_array[2])\n        val apples_oranges_mango = Long.parseLong(n_array[3])\n        val apples_oranges_mango_apples = Long.parseLong(n_array[4])\n        val apples_oranges_mango_apples_oranges = Long.parseLong(n_array[5])\n        val apples_oranges_mango_apples_oranges_mango = Long.parseLong(n_array[6])\n        val apples_oranges_mango_apples_oranges_mango_apples = Long.parseLong(n_array[7])\n        val apples_oranges_mango_apples_oranges_mango_apples_oranges = Long.parseLong(n_array[8])\n        val apples_oranges_mango_apples_oranges_mango_apples_oranges_mango = Long.parseLong(n_array[9])\n        val apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples = Long.parseLong(n_array[10])\n        val apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges = Long.parseLong(n_array[11])\n        val apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango = Long.parseLong(n_array[12])\n        val apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango",
    "        // your code here\n        val s1 = s.split(\" \")\n        val s2 = s1.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s3 = s2.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s4 = s3.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s5 = s4.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s6 = s5.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s7 = s6.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s8 = s7.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s9 = s8.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s10 = s9.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s11 = s10.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s12 = s11.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s13 = s12.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s14 = s13.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s15 = s14.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s16 = s15.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s17 = s16.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s18 = s17.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s19 = s18.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s20 = s19.",
    "        var s1 = s.split(\" \")\n        var s2 = s1.length\n        var s3 = s2 - 1\n        var s4 = s3 / 2\n        var s5 = s4 - 1\n        var s6 = s5 / 2\n        var s7 = s6 - 1\n        var s8 = s7 / 2\n        var s9 = s8 - 1\n        var s10 = s9 / 2\n        var s11 = s10 - 1\n        var s12 = s11 / 2\n        var s13 = s12 - 1\n        var s14 = s13 / 2\n        var s15 = s14 - 1\n        var s16 = s15 / 2\n        var s17 = s16 - 1\n        var s18 = s17 / 2\n        var s19 = s18 - 1\n        var s20 = s19 / 2\n        var s21 = s20 - 1\n        var s22 = s21 / 2\n        var s23 = s22 - 1\n        var s24 = s23 / 2\n        var s25 = s24 - 1\n        var s26 = s25 / 2\n        var s27 = s26 - 1\n        var s28 = s27 / 2\n        var s29 = s28 - 1\n        var s30 = s29 / 2\n        var s31 = s30 - 1\n        var s32 = s31 / 2\n        var s33 = s32 - 1\n        var s34 = s33 / 2\n        var s35 = s34 - 1\n        var s36 = s35 / 2\n        var s37 = s36 - 1\n        var s38 = s37 / 2\n        var s39 = s38 - 1\n        var s40 = s39 / 2\n        var s41 = s40 - 1\n        var s42 = s41 / 2\n        var s43 = s42 - 1\n        var s44 = s43 / 2\n        var s45 = s44 - 1\n        var s46 = s45 / 2\n        var s47 = s46 - 1\n        var s48 = s47 / 2\n        var s49 = s48 - 1\n        var s50 = s49 / 2\n        var s51 = s50 - 1\n",
    "        val s_ = s.split(\" \")\n        val n_ = n.longValue()\n        val apples = s_.length - 1\n        val oranges = s_.length - 2\n        val apples_ = s_[0]\n        val oranges_ = s_[1]\n        val apples_num = Long.parseLong(apples_)\n        val oranges_num = Long.parseLong(oranges_)\n        val apples_num_ = apples_num.longValue()\n        val oranges_num_ = oranges_num.longValue()\n        val apples_num_ = apples_num_ - 1\n        val oranges_num_ = oranges_num_ - 1\n        val apples_num_ = apples_num_ * apples_num_\n        val oranges_num_ = oranges_num_ * oranges_num_\n        val apples_num_ = apples_num_ - oranges_num_\n        val oranges_num_ = oranges_num_ - apples_num_\n        val apples_num_ = apples_num_ * apples_num_\n        val oranges_num_ = oranges_num_ * oranges_num_\n        val apples_num_ = apples_num_ - oranges_num_\n        val oranges_num_ = oranges_num_ - apples_num_\n        val apples_num_ = apples_num_ * apples_num_\n        val oranges_num_ = oranges_num_ * oranges_num_\n        val apples_num_ = apples_num_ - oranges_num_\n        val oranges_num_ = oranges_num_ - apples_num_\n        val apples_num_ = apples_num_ * apples_num_\n        val oranges_num_ = oranges_num_ * oranges_num_\n        val apples_num_ = apples_num_ - oranges_num_\n        val oranges_num_ = oranges_num_ - apples_num_\n        val apples_num_ = apples_num_ * apples_num_\n        val oranges_num_ = oranges_num_ * oranges_num_\n        val apples_num_ = apples_num_ - oranges_num_\n        val oranges_num_ = oranges_num_ - apples_num_\n        val apples_num_ = apples_num_ * apples_num_\n",
    "        val apples = s.split(\" \").map(_.toInt).sum\n        val oranges = s.split(\" \").map(_.toInt).sum\n        val mango = s.split(\" \").map(_.toInt).sum\n        val total = apples + oranges + mango\n        val result = mango / total * n\n        return result",
    "        val s1 = s.split(\" \")\n        val s2 = s1.length\n        val s3 = s1.map(_.toInt).toSeq\n        val s4 = s3.filter(_.between(0, s2)).sum\n        val s5 = s3.filter(_.between(s2, s2 + 1)).sum\n        val s6 = s3.filter(_.between(s2 + 1, s2 + 2)).sum\n        val s7 = s3.filter(_.between(s2 + 2, s2 + 3)).sum\n        val s8 = s3.filter(_.between(s2 + 3, s2 + 4)).sum\n        val s9 = s3.filter(_.between(s2 + 4, s2 + 5)).sum\n        val s10 = s3.filter(_.between(s2 + 5, s2 + 6)).sum\n        val s11 = s3.filter(_.between(s2 + 6, s2 + 7)).sum\n        val s12 = s3.filter(_.between(s2 + 7, s2 + 8)).sum\n        val s13 = s3.filter(_.between(s2 + 8, s2 + 9)).sum\n        val s14 = s3.filter(_.between(s2 + 9, s2 + 10)).sum\n        val s15 = s3.filter(_.between(s2 + 10, s2 + 11)).sum\n        val s16 = s3.filter(_.between(s2 + 11, s2 + 12)).sum\n        val s17 = s3.filter(_.between(s2 + 12, s2 + 13)).sum\n        val s18 = s3.filter(_.between(s2 + 13, s2 + 14)).sum\n        val s19 = s3.filter(_.between(s2 + 14, s2 + 15)).sum\n        val s20 = s3.filter(_.between(s2 + 15, s2 + 16)).sum\n        val s21 = s3.filter(_.between(s2 + 16, s2 + 17)).sum\n        val s22 = s3.filter(_.between(s2 + 17, s2 + 18)).sum\n        val s23",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / 2\n        val n5 = n3 % 2\n        val n6 = n4 + n5\n        return n6",
    "        // your code here\n        def countMangoes(s: String, n: Long) : Long = {\n            var count = 0l\n            for(i <- 0 until s.length) {\n                if(s[i] == \"m\") {\n                    count += 1l\n                }\n            }\n            return count\n        }\n        return n - countMangoes(s, n)",
    "        val apples = s.split(\" \").length\n        val oranges = s.split(\" \").length\n        val mango = s.split(\" \").length\n        val total = apples + oranges + mango\n        val applesAndOranges = apples + oranges\n        val applesAndMango = apples + mango\n        val orangesAndMango = oranges + mango\n        val applesAndOrangesAndMango = applesAndOranges + mango\n        val applesAndOrangesAndMangoAndApples = applesAndOrangesAndMango + apples\n        val applesAndOrangesAndMangoAndApplesAndOranges = applesAndOrangesAndMango + applesAndOranges\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMango = applesAndOrangesAndMango + applesAndOrangesAndMango\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApples = applesAndOrangesAndMango + applesAndOrangesAndMangoAndApples\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOranges = applesAndOrangesAndMango + applesAndOrangesAndMangoAndApplesAndOranges\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMango = applesAndOrangesAndMango + applesAndOrangesAndMangoAndApplesAndOrangesAndMango\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApples = applesAndOrangesAndMango + applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApples\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOranges = applesAndOrangesAndMango + applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOranges\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMango = applesAndOrangesAndMango + applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApples",
    "        // your code here\n        def m(s, n) : Long = {\n            if(s.equals(\"0\")) return 0l\n            if(s.equals(\"1\")) return 1l\n            if(s.equals(\"2\")) return 2l\n            if(s.equals(\"3\")) return 3l\n            if(s.equals(\"4\")) return 4l\n            if(s.equals(\"5\")) return 5l\n            if(s.equals(\"6\")) return 6l\n            if(s.equals(\"7\")) return 7l\n            if(s.equals(\"8\")) return 8l\n            if(s.equals(\"9\")) return 9l\n            if(s.equals(\"10\")) return 10l\n            if(s.equals(\"11\")) return 11l\n            if(s.equals(\"12\")) return 12l\n            if(s.equals(\"13\")) return 13l\n            if(s.equals(\"14\")) return 14l\n            if(s.equals(\"15\")) return 15l\n            if(s.equals(\"16\")) return 16l\n            if(s.equals(\"17\")) return 17l\n            if(s.equals(\"18\")) return 18l\n            if(s.equals(\"19\")) return 19l\n            if(s.equals(\"20\")) return 20l\n            if(s.equals(\"21\")) return 21l\n            if(s.equals(\"22\")) return 22l\n            if(s.equals(\"23\")) return 23l\n            if(s.equals(\"24\")) return 24l\n            if(s.equals(\"25\")) return 25l\n            if(s.equals(\"26\")) return 26l\n            if(s.equals(\"27\")) return 27l\n            if(s.equals(\"28\")) return 28l\n            if(s.equals(\"29\")) return 29l\n            if(s.equals(\"30\")) return 30l\n            if(s.equals(\"31\")) return 31l\n            if(s.equals(\"32\")) return 32l\n            if(s.equals(\"33\")) return 33l\n            if(s.equals(\"34\")) return 34l\n            if(",
    "        def getFruitCount(s : String) : Long = {\n            def getFruitCount(s : String) : Long = {\n                def getFruitCount(s : String) : Long = {\n                    def getFruitCount(s : String) : Long = {\n                        def getFruitCount(s : String) : Long = {\n                            def getFruitCount(s : String) : Long = {\n                                def getFruitCount(s : String) : Long = {\n                                    def getFruitCount(s : String) : Long = {\n                                        def getFruitCount(s : String) : Long = {\n                                            def getFruitCount(s : String) : Long = {\n                                                def getFruitCount(s : String) : Long = {\n                                                    def getFruitCount(s : String) : Long = {\n                                                        def getFruitCount(s : String) : Long = {\n                                                            def getFruitCount(s : String) : Long = {\n                                                                def getFruitCount(s : String) : Long = {\n                                                                    def getFruitCount(s : String) : Long = {\n                                                                        def getFruitCount(s : String) : Long = {\n                                                                            def getFruitCount(s : String) : Long = {\n                                                                                def getFruitCount(s : String) : Long = {\n                                                                                    def getFruitCount(s : String) : Long = {\n                                                                                        def getFruitCount(s : String) : Long = {\n                                                                                            def getFruitCount(s : String) : Long = {\n                                                                                                def getFruitCount(s : String) : Long = {\n                                                                                                    def getFruitCount(s : String) : Long = {\n                                                                                                        def getFruitCount(s : String) : Long = {\n                                                                                                            def getFruitCount(s : String) : Long = {\n                                                                                                                def getFruitCount(s :",
    "        // your code here\n        val s2 = s.replaceAll(\" \", \"\")\n        val s3 = s2.replaceAll(\"[a-zA-Z]\", \"\")\n        val s4 = s3.replaceAll(\"[0-9]\", \"\")\n        val s5 = s4.replaceAll(\"[^0-9]\", \"\")\n        val s6 = s5.replaceAll(\"[^a-zA-Z]\", \"\")\n        val s7 = s6.replaceAll(\"[^0-9a-zA-Z]\", \"\")\n        val s8 = s7.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s9 = s8.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s10 = s9.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s11 = s10.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s12 = s11.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s13 = s12.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s14 = s13.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s15 = s14.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s16 = s15.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s17 = s16.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s18 = s17.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s19 = s18.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s20 = s19.replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        val s21 = s20.replaceAll(\"[^a-zA-Z0-9]\", \"\")",
    "        var s1 = s.split(\" \")\n        var s2 = s1.length\n        var s3 = s2 - 1\n        var s4 = s3 / 2\n        var s5 = s4 - 1\n        var s6 = s5 / 2\n        var s7 = s6 - 1\n        var s8 = s7 / 2\n        var s9 = s8 - 1\n        var s10 = s9 / 2\n        var s11 = s10 - 1\n        var s12 = s11 / 2\n        var s13 = s12 - 1\n        var s14 = s13 / 2\n        var s15 = s14 - 1\n        var s16 = s15 / 2\n        var s17 = s16 - 1\n        var s18 = s17 / 2\n        var s19 = s18 - 1\n        var s20 = s19 / 2\n        var s21 = s20 - 1\n        var s22 = s21 / 2\n        var s23 = s22 - 1\n        var s24 = s23 / 2\n        var s25 = s24 - 1\n        var s26 = s25 / 2\n        var s27 = s26 - 1\n        var s28 = s27 / 2\n        var s29 = s28 - 1\n        var s30 = s29 / 2\n        var s31 = s30 - 1\n        var s32 = s31 / 2\n        var s33 = s32 - 1\n        var s34 = s33 / 2\n        var s35 = s34 - 1\n        var s36 = s35 / 2\n        var s37 = s36 - 1\n        var s38 = s37 / 2\n        var s39 = s38 - 1\n        var s40 = s39 / 2\n        var s41 = s40 - 1\n        var s42 = s41 / 2\n        var s43 = s42 - 1\n        var s44 = s43 / 2\n        var s45 = s44 - 1\n        var s46 = s45 / 2\n        var s47 = s46 - 1\n        var s48 = s47 / 2\n        var s49 = s48 - 1\n        var s50 = s49 / 2\n        var s51 = s50 - 1\n",
    "        var totalFruit = 0l\n        var totalApples = 0l\n        var totalOranges = 0l\n        var totalMangoes = 0l\n        var totalFruitCount = 0l\n        var totalFruitCountApples = 0l\n        var totalFruitCountOranges = 0l\n        var totalFruitCountMangoes = 0l\n        var totalFruitCountApplesOranges = 0l\n        var totalFruitCountApplesMangoes = 0l\n        var totalFruitCountOrangesMangoes = 0l\n        var totalFruitCountApplesOrangesMangoes = 0l\n        var totalFruitCountApplesOrangesMangoesApples = 0l\n        var totalFruitCountApplesOrangesMangoesApplesOranges = 0l\n        var totalFruitCountApplesOrangesMangoesApplesOrangesApples = 0l\n        var totalFruitCountApplesOrangesMangoesApplesOrangesApplesOranges = 0l\n        var totalFruitCountApplesOrangesMangoesApplesOrangesApplesOrangesApples = 0l\n        var totalFruitCountApplesOrangesMangoesApplesOrangesApplesOrangesApplesOranges = 0l\n        var totalFruitCountApplesOrangesMangoesApplesOrangesApplesOrangesApplesOrangesApples = 0l\n        var totalFruitCountApplesOrangesMangoesApplesOrangesApplesOrangesApplesOrangesApplesOranges = 0l\n        var totalFruitCountApplesOrangesMangoesApplesOrangesApplesOrangesApplesOrangesApplesOrangesApples = 0l\n        var totalFruitCountApplesOrangesMangoesApplesOrangesApplesOrangesApplesOrangesApplesOrangesApplesOranges = 0l\n        var totalFruitCountApplesOrangesMangoesApplesOrangesApplesOrangesApplesOrangesApplesOrangesApplesOrangesApples = 0l\n        var totalFruitCountApplesOrangesMangoesApplesOrangesApplesOrangesApplesOrangesApplesOrangesApplesOrangesApplesOranges = 0l\n        var totalFruitCountApp",
    "        var s1 = s.split(\" \")\n        var s2 = s1.length\n        var s3 = s1[0]\n        var s4 = s1[1]\n        var s5 = s1[2]\n        var s6 = s1[3]\n        var s7 = s1[4]\n        var s8 = s1[5]\n        var s9 = s1[6]\n        var s10 = s1[7]\n        var s11 = s1[8]\n        var s12 = s1[9]\n        var s13 = s1[10]\n        var s14 = s1[11]\n        var s15 = s1[12]\n        var s16 = s1[13]\n        var s17 = s1[14]\n        var s18 = s1[15]\n        var s19 = s1[16]\n        var s20 = s1[17]\n        var s21 = s1[18]\n        var s22 = s1[19]\n        var s23 = s1[20]\n        var s24 = s1[21]\n        var s25 = s1[22]\n        var s26 = s1[23]\n        var s27 = s1[24]\n        var s28 = s1[25]\n        var s29 = s1[26]\n        var s30 = s1[27]\n        var s31 = s1[28]\n        var s32 = s1[29]\n        var s33 = s1[30]\n        var s34 = s1[31]\n        var s35 = s1[32]\n        var s36 = s1[33]\n        var s37 = s1[34]\n        var s38 = s1[35]\n        var s39 = s1[36]\n        var s40 = s1[37]\n        var s41 = s1[38]\n        var s42 = s1[39]\n        var s43 = s1[40]\n        var s44 = s1[41]\n        var s45 = s1[42]\n        var s46 = s1[43]\n        var s47 = s",
    "        val s1 = s.split(\" \")\n        val s2 = s1.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s3 = s2.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s4 = s3.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s5 = s4.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s6 = s5.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s7 = s6.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s8 = s7.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s9 = s8.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s10 = s9.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s11 = s10.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s12 = s11.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s13 = s12.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s14 = s13.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s15 = s14.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s16 = s15.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s17 = s16.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s18 = s17.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s19 = s18.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s20 = s19.map(x -> x.",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n / n1\n        val n4 = n / n2\n        val n5 = n / n3\n        val n6 = n / n4\n        val n7 = n / n5\n        val n8 = n / n6\n        val n9 = n / n7\n        val n10 = n / n8\n        val n11 = n / n9\n        val n12 = n / n10\n        val n13 = n / n11\n        val n14 = n / n12\n        val n15 = n / n13\n        val n16 = n / n14\n        val n17 = n / n15\n        val n18 = n / n16\n        val n19 = n / n17\n        val n20 = n / n18\n        val n21 = n / n19\n        val n22 = n / n20\n        val n23 = n / n21\n        val n24 = n / n22\n        val n25 = n / n23\n        val n26 = n / n24\n        val n27 = n / n25\n        val n28 = n / n26\n        val n29 = n / n27\n        val n30 = n / n28\n        val n31 = n / n29\n        val n32 = n / n30\n        val n33 = n / n31\n        val n34 = n / n32\n        val n35 = n / n33\n        val n36 = n / n34\n        val n37 = n / n35\n        val n38 = n / n36\n        val n39 = n / n37\n        val n40 = n / n38\n        val n41 = n / n39\n        val n42 = n / n40\n        val n43 = n / n41\n        val n44 = n / n42\n        val n45 = n / n43\n        val n46 = n / n44\n        val n47 = n / n45\n        val n48 = n / n46\n        val n49 = n / n",
    "        val apples = s.split(\" \").map(_.toInt).sum()\n        val oranges = s.split(\" \").map(_.toInt).sum()\n        val mango = s.split(\" \").map(_.toInt).filter(_.equals(\"mango\")).sum()\n        val result = mango / (apples + oranges)\n        if (result > 1) {\n            return (apples * result)\n        } else {\n            return (apples + oranges)\n        }",
    "        val apples = s.split(\" \").map(_.toInt).filter(_.isPositive).sum()\n        val oranges = s.split(\" \").map(_.toInt).filter(_.isNegative).sum()\n        val mango = (apples + oranges) / n\n        return mango",
    "        var s2 = s.replaceAll(\" \", \"\")\n        var s3 = s2.replaceAll(\"[^0-9]\", \"\")\n        var s4 = s3.replaceAll(\"[^0-9]\", \"\")\n        var s5 = s4.replaceAll(\"[^0-9]\", \"\")\n        var s6 = s5.replaceAll(\"[^0-9]\", \"\")\n        var s7 = s6.replaceAll(\"[^0-9]\", \"\")\n        var s8 = s7.replaceAll(\"[^0-9]\", \"\")\n        var s9 = s8.replaceAll(\"[^0-9]\", \"\")\n        var s10 = s9.replaceAll(\"[^0-9]\", \"\")\n        var s11 = s10.replaceAll(\"[^0-9]\", \"\")\n        var s12 = s11.replaceAll(\"[^0-9]\", \"\")\n        var s13 = s12.replaceAll(\"[^0-9]\", \"\")\n        var s14 = s13.replaceAll(\"[^0-9]\", \"\")\n        var s15 = s14.replaceAll(\"[^0-9]\", \"\")\n        var s16 = s15.replaceAll(\"[^0-9]\", \"\")\n        var s17 = s16.replaceAll(\"[^0-9]\", \"\")\n        var s18 = s17.replaceAll(\"[^0-9]\", \"\")\n        var s19 = s18.replaceAll(\"[^0-9]\", \"\")\n        var s20 = s19.replaceAll(\"[^0-9]\", \"\")\n        var s21 = s20.replaceAll(\"[^0-9]\", \"\")\n        var s22 = s21.replaceAll(\"[^0-9]\", \"\")\n        var s23 = s22.replaceAll(\"[^0-9]\", \"\")\n        var s24 = s23.replaceAll(\"[^0-9]\", \"\")\n        var s25 = s24.replaceAll(\"[^0-9]\", \"\")\n        var s26 = s25.replaceAll(\"[^0-",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / n2\n        return n4",
    "        val apples = s.split(\" \").map(_.toInt).filter(_.isPositive).sum\n        val oranges = s.split(\" \").map(_.toInt).filter(_.isPositive).sum\n        val mango = s.split(\" \").map(_.toInt).filter(_.isPositive).sum\n        val total = apples + oranges + mango\n        if (total == n) {\n            return mango\n        } else if (total < n) {\n            return 0l\n        } else {\n            return mango - (n - total)\n        }",
    "        // your code here\n        val s_ = s.split(\" \")\n        val n_ = n.longValue()\n        val apples = s_.length() - 1\n        val oranges = s_.length() - 2\n        val apples_ = s_.get(0).toLong\n        val oranges_ = s_.get(1).toLong\n        val mango = (apples_ * apples + oranges_ * oranges) / n_\n        return mango",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / 2\n        val n5 = n3 % 2\n        val n6 = n4 + n5\n        return n6",
    "        // your code here\n        val numApples = s.split(\" \").length - 1\n        val numOranges = s.split(\" \")[numApples].split(\" and \").length - 1\n        val numMangoes = numApples - numOranges\n        val numApplesInt = numApples.toInt\n        val numOrangesInt = numOranges.toInt\n        val numMangoesInt = numMangoes.toInt\n        val numApplesIntAndNumOrangesInt = numApplesInt + numOrangesInt\n        val numMangoesIntAndNumApplesIntAndNumOrangesInt = numMangoesInt + numApplesInt + numOrangesInt\n        val numMangoesIntAndNumApplesIntAndNumOrangesIntAndNumApplesInt = numMangoesInt + numApplesInt + numOrangesInt + numApplesInt\n        val numMangoesIntAndNumApplesIntAndNumOrangesIntAndNumApplesIntAndNumOrangesInt = numMangoesInt + numApplesInt + numOrangesInt + numApplesInt + numOrangesInt\n        val numMangoesIntAndNumApplesIntAndNumOrangesIntAndNumApplesIntAndNumOrangesIntAndNumApplesInt = numMangoesInt + numApplesInt + numOrangesInt + numApplesInt + numOrangesInt + numApplesInt\n        val numMangoesIntAndNumApplesIntAndNumOrangesIntAndNumApplesIntAndNumOrangesIntAndNumApplesIntAndNumOrangesInt = numMangoesInt + numApplesInt + numOrangesInt + numApplesInt + numOrangesInt + numApplesInt + numOrangesInt\n        val numMangoesIntAndNumApplesIntAndNumOrangesIntAndNumApplesIntAndNumOrangesIntAndNumApplesIntAndNumOrangesIntAndNumApplesInt = numMangoesInt + numApplesInt + numOrangesInt + numApplesInt + numOrangesInt + numApplesInt + numOrangesInt + numApplesInt\n        val numMangoesIntAndNumApplesIntAndNumOrangesIntAndNumApplesIntAndNumOrangesIntAndNumApp",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        def parse(s) : Long = {\n            def parseInt(s) : Long = {\n                def parseDouble(s) : Long = {\n                    def parseFloat(s) : Long = {\n                        def parseLong(s) : Long = {\n                            def parseChar(s) : Long = {\n                                def parseByte(s) : Long = {\n                                    def parseShort(s) : Long = {\n                                        def parseByte(s) : Long = {\n                                            def parseInt(s) : Long = {\n                                                def parseLong(s) : Long = {\n                                                    def parseFloat(s) : Long = {\n                                                        def parseDouble(s) : Long = {\n                                                            def parseChar(s) : Long = {\n                                                                def parseByte(s) : Long = {\n                                                                    def parseShort(s) : Long = {\n                                                                        def parseFloat(s) : Long = {\n                                                                            def parseDouble(s) : Long = {\n                                                                                def parseInt(s) : Long = {\n                                                                                    def parseLong(s) : Long = {\n                                                                                        def parseFloat(s) : Long = {\n                                                                                            def parseDouble(s) : Long = {\n                                                                                                def parseChar(s) : Long = {\n                                                                                                    def parseByte(s) : Long = {\n                                                                                                        def parseShort(s) : Long = {\n                                                                                                            def parseInt(s) : Long = {\n                                                                                                                def parseLong(s) : Long = {\n                                                                                                                   def parseFloat(s) : Long = {\n                                                                                                                        def parseDouble(s) : Long = {\n                                                                                                                            def parseChar(s) : Long = {\n                                                                                                                                def parseByte(s) : Long = {\n                                                                                                                                     def parseShort(s) : Long = {\n                                                                                                                                        def parseInt(s) : Long = {\n",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        // your code here\n        def getFruitCount(s : String, n : Long) : Long = {\n            def getFruitCount(s : String, n : Long) : Long = {\n                def getFruitCount(s : String, n : Long) : Long = {\n                    def getFruitCount(s : String, n : Long) : Long = {\n                        def getFruitCount(s : String, n : Long) : Long = {\n                            def getFruitCount(s : String, n : Long) : Long = {\n                                def getFruitCount(s : String, n : Long) : Long = {\n                                    def getFruitCount(s : String, n : Long) : Long = {\n                                        def getFruitCount(s : String, n : Long) : Long = {\n                                            def getFruitCount(s : String, n : Long) : Long = {\n                                                def getFruitCount(s : String, n : Long) : Long = {\n                                                    def getFruitCount(s : String, n : Long) : Long = {\n                                                        def getFruitCount(s : String, n : Long) : Long = {\n                                                            def getFruitCount(s : String, n : Long) : Long = {\n                                                                def getFruitCount(s : String, n : Long) : Long = {\n                                                                    def getFruitCount(s : String, n : Long) : Long = {\n                                                                        def getFruitCount(s : String, n : Long) : Long = {\n                                                                            def getFruitCount(s : String, n : Long) : Long = {\n                                                                                def getFruitCount(s : String, n : Long) : Long = {\n                                                                                    def getFruitCount(s : String, n : Long) : Long = {\n                                                                                        def getFruitCount(s : String, n : Long) : Long = {\n                                                                                            def getFruitCount(s : String, n : Long) : Long = {\n                                                                                                def getFruit",
    "        // your code goes here\n        val s_ = s.split(\" \")\n        val n_ = n.longValue()\n        val apples = s_.length - 1\n        val oranges = s_.length - 2\n        val mango = s_.length - 3\n        val apples_ = s_.length - 1\n        val oranges_ = s_.length - 2\n        val mango_ = s_.length - 3\n        val apples_n = apples_ * n_\n        val oranges_n = oranges_ * n_\n        val mango_n = mango_ * n_\n        val apples_n_ = apples_n / apples\n        val oranges_n_ = oranges_n / oranges\n        val mango_n_ = mango_n / mango\n        val result = apples_n_ + oranges_n_ + mango_n_\n        return result",
    "        val s_ = s.toLowerCase\n        val n_ = n.toLong\n        val s_n = s_.split(\" \")\n        val n_s = n_.toString\n        val n_s_ = n_s.split(\"l\")\n        val n_s_n = n_s_[0]\n        val n_s_n_ = n_s_n.toLong\n        val n_s_n_s = n_s_n_.toString\n        val n_s_n_s_ = n_s_n_s.split(\" \")\n        val n_s_n_s_n = n_s_n_s_[0]\n        val n_s_n_s_n_ = n_s_n_s_n.toLong\n        val n_s_n_s_n_s = n_s_n_s_n_\n        val n_s_n_s_n_s_ = n_s_n_s_n_s.toLong\n        val n_s_n_s_n_s_s = n_s_n_s_n_s_\n        val n_s_n_s_n_s_s_ = n_s_n_s_n_s_s.toLong\n        val n_s_n_s_n_s_s_s = n_s_n_s_n_s_s_\n        val n_s_n_s_n_s_s_s_ = n_s_n_s_n_s_s_s.toLong\n        val n_s_n_s_n_s_s_s_s = n_s_n_s_n_s_s_s_\n        val n_s_n_s_n_s_s_s_s_ = n_s_n_s_n_s_s_s_s.toLong\n        val n_s_n_s_n_s_s_s_s_s = n_s_n_s_n_s_s_s_s_\n        val n_s_n_s_n_s_s",
    "        val apples = s.split(\" \").length - 1\n        val oranges = s.split(\" \").length - 2\n        val mango = s.split(\" \").length - 3\n        val apples_oranges = apples * oranges\n        val apples_mango = apples * mango\n        val oranges_mango = oranges * mango\n        val apples_oranges_mango = apples_oranges * mango\n        val apples_oranges_mango_apples = apples_oranges_mango * apples\n        val apples_oranges_mango_oranges = apples_oranges_mango * oranges\n        val apples_oranges_mango_mango = apples_oranges_mango * mango\n        val apples_oranges_mango_apples_oranges = apples_oranges_mango_apples * oranges\n        val apples_oranges_mango_apples_mango = apples_oranges_mango_apples * mango\n        val apples_oranges_mango_oranges_mango = apples_oranges_mango_oranges * mango\n        val apples_oranges_mango_apples_oranges_mango = apples_oranges_mango_apples_oranges * mango\n        val result = apples_oranges_mango_apples_oranges_mango * apples_oranges_mango_apples_oranges_mango\n        return result",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / 2\n        val n5 = n3 % 2\n        val n6 = n4 + n5\n        return n6",
    "        def countApples(s : String) : Long = {\n            def countOranges(s : String) : Long = {\n                def countMangoes(s : String) : Long = {\n                    def countApplesOranges(s : String) : Long = {\n                        def countMangoesOranges(s : String) : Long = {\n                            def countApplesOrangesMangoes(s : String) : Long = {\n                                def countApplesOrangesMangoesMangoes(s : String) : Long = {\n                                    def countApplesOrangesMangoesMangoesMangoes(s : String) : Long = {\n                                        def countApplesOrangesMangoesMangoesMangoesMangoes(s : String) : Long = {\n                                            def countApplesOrangesMangoesMangoesMangoesMangoesMangoes(s : String) : Long = {\n                                                def countApplesOrangesMangoesMangoesMangoesMangoesMangoesMangoes(s : String) : Long = {\n                                                    def countApplesOrangesMangoesMangoesMangoesMangoesMangoesMangoesMangoes(s : String) : Long = {\n                                                        def countApplesOrangesMangoesMangoesMangoesMangoesMangoesMangoesMangoesMangoes(s : String) : Long = {\n                                                            def countApplesOrangesMangoesMangoesMangoesMangoesMangoesMangoesMangoesMangoesMangoes(s : String) : Long = {\n                                                                def countApplesOrangesMangoesMangoesMangoesMangoesMangoesMangoesMangoesMangoesMangoesMangoes(s : String) : Long = {\n                                                                    def countApplesOrangesMangoesMangoesMangoesMangoesMangoesMangoesMangoesMangoesMangoesMangoesMangoes(s : String) : Long = {\n                                                                        def countApplesOranges",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / 2\n        val n5 = n3 % 2\n        val n6 = n4 + n5\n        val n7 = n6 / 2\n        val n8 = n6 % 2\n        val n9 = n7 + n8\n        val n10 = n9 / 2\n        val n11 = n9 % 2\n        val n12 = n10 + n11\n        val n13 = n12 / 2\n        val n14 = n12 % 2\n        val n15 = n13 + n14\n        val n16 = n15 / 2\n        val n17 = n15 % 2\n        val n18 = n16 + n17\n        val n19 = n18 / 2\n        val n20 = n18 % 2\n        val n21 = n19 + n20\n        val n22 = n21 / 2\n        val n23 = n21 % 2\n        val n24 = n22 + n23\n        val n25 = n24 / 2\n        val n26 = n24 % 2\n        val n27 = n25 + n26\n        val n28 = n27 / 2\n        val n29 = n27 % 2\n        val n30 = n28 + n29\n        val n31 = n30 / 2\n        val n32 = n30 % 2\n        val n33 = n31 + n32\n        val n34 = n33 / 2\n        val n35 = n33 % 2\n        val n36 = n34 + n35\n        val n37 = n36 / 2\n        val n38 = n36 % 2\n        val n39 = n37 + n38\n        val n40 = n39 / 2\n        val n41 = n39 % 2\n        val n42 = n40 + n41\n        val n43 = n42 / 2\n        val n44 = n42 % 2\n        val n45 = n43 + n44\n        val n46 = n45 / 2\n        val n47 = n45 % 2\n        val n",
    "        // your code here\n        val s_ = s.split(\" \")\n        val n_ = n.longValue()\n        val apples = s_.length() - 1\n        val oranges = s_.length() - 2\n        val apples_ = s_.get(0).toLong\n        val oranges_ = s_.get(1).toLong\n        val mango = (apples_ * apples) + (oranges_ * oranges)\n        val mango_ = mango / n_\n        mango_",
    "        // your code here\n        var totalApples = 0l\n        var totalOranges = 0l\n        var totalMangoes = 0l\n        var totalFruits = 0l\n        var total = 0l\n        var s_ = s.split(\" \")\n        for(i <- 0 until s_.length) {\n            if(s_[i] == \"apple\") {\n                totalApples += 1l\n            } else if(s_[i] == \"orange\") {\n                totalOranges += 1l\n            } else if(s_[i] == \"mango\") {\n                totalMangoes += 1l\n            } else {\n                totalFruits += 1l\n            }\n        }\n        total = totalApples + totalOranges + totalMangoes\n        if(totalFruits == 0) {\n            return totalMangoes\n        } else if(totalFruits == 1) {\n            return totalMangoes + totalFruits\n        } else {\n            return totalMangoes + totalFruits - 1\n        }",
    "        val apples = s.split(\" \").map(_.toInt).sum()\n        val oranges = s.split(\" \").map(_.toInt).sum()\n        val mango = s.split(\" \").map(_.toInt).filter(_.equals(\"mango\")).sum()\n        val total = apples + oranges + mango\n        return total - apples - oranges",
    "        val s_ = s.split(\" \")\n        val n_ = n.longValue()\n        val apples = s_.length - 1\n        val oranges = s_.length - 2\n        val apples_ = s_[0].split(\"apple\")\n        val oranges_ = s_[1].split(\"orange\")\n        val apples_ = apples_[0].split(\"and\")\n        val oranges_ = oranges_[0].split(\"and\")\n        val apples_ = apples_[0].split(\"apple\")\n        val oranges_ = oranges_[0].split(\"orange\")\n        val apples_ = apples_[0].split(\"apple\")\n        val oranges_ = oranges_[0].split(\"orange\")\n        val apples_ = apples_[0].split(\"apple\")\n        val oranges_ = oranges_[0].split(\"orange\")\n        val apples_ = apples_[0].split(\"apple\")\n        val oranges_ = oranges_[0].split(\"orange\")\n        val apples_ = apples_[0].split(\"apple\")\n        val oranges_ = oranges_[0].split(\"orange\")\n        val apples_ = apples_[0].split(\"apple\")\n        val oranges_ = oranges_[0].split(\"orange\")\n        val apples_ = apples_[0].split(\"apple\")\n        val oranges_ = oranges_[0].split(\"orange\")\n        val apples_ = apples_[0].split(\"apple\")\n        val oranges_ = oranges_[0].split(\"orange\")\n        val apples_ = apples_[0].split(\"apple\")\n        val oranges_ = oranges_[0].split(\"orange\")\n        val apples_ = apples_[0].split(\"apple\")\n        val oranges_ = oranges_[0].split(\"orange\")\n        val apples_ = apples_[0].split(\"apple\")\n        val oranges_ = oranges_[0].split(\"orange\")\n        val apples_ = apples_[0].split(\"apple\")\n        val oranges_ = oranges_[0].split(\"orange\")\n        val apples_ = apples_[0].split(\"apple\")\n        val oranges_ = oranges_[0].split(\"orange\")\n        val apples_ = apples_[0].split(\"apple\")\n        val oranges_",
    "        val s1 = s.split(\" \")\n        val s2 = s1.length\n        val s3 = s2 - 1\n        val s4 = s3 / 2\n        val s5 = s4 - 1\n        val s6 = s5 - 1\n        val s7 = s6 - 1\n        val s8 = s7 - 1\n        val s9 = s8 - 1\n        val s10 = s9 - 1\n        val s11 = s10 - 1\n        val s12 = s11 - 1\n        val s13 = s12 - 1\n        val s14 = s13 - 1\n        val s15 = s14 - 1\n        val s16 = s15 - 1\n        val s17 = s16 - 1\n        val s18 = s17 - 1\n        val s19 = s18 - 1\n        val s20 = s19 - 1\n        val s21 = s20 - 1\n        val s22 = s21 - 1\n        val s23 = s22 - 1\n        val s24 = s23 - 1\n        val s25 = s24 - 1\n        val s26 = s25 - 1\n        val s27 = s26 - 1\n        val s28 = s27 - 1\n        val s29 = s28 - 1\n        val s30 = s29 - 1\n        val s31 = s30 - 1\n        val s32 = s31 - 1\n        val s33 = s32 - 1\n        val s34 = s33 - 1\n        val s35 = s34 - 1\n        val s36 = s35 - 1\n        val s37 = s36 - 1\n        val s38 = s37 - 1\n        val s39 = s38 - 1\n        val s40 = s39 - 1\n        val s41 = s40 - 1\n        val s42 = s41 - 1\n        val s43 = s42 - 1\n        val s44 = s43 - 1\n        val s45 = s44 - 1\n        val s46 = s45 - 1\n        val s47 = s46 - 1\n        val s48 = s47 - 1\n        val s49 = s48 - 1\n        val s50 = s49 - 1\n        val s51 = s50 - 1\n",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        val s_ = s.toLowerCase()\n        val n_ = n.longValue()\n        val s_n = s_.split(\" \")\n        val n_s = n_.toString()\n        val n_s_ = n_s.split(\"l\")\n        val n_s_n = n_s_[0]\n        val n_s_n_ = n_s_n.replace(\" \", \"\")\n        val n_s_n_n = n_s_n_.replace(\"l\", \"\")\n        val n_s_n_n_ = n_s_n_n.replace(\" \", \"\")\n        val n_s_n_n_n = n_s_n_n_\n        val n_s_n_n_n_ = n_s_n_n_n.replace(\" \", \"\")\n        val n_s_n_n_n_n = n_s_n_n_n_n.replace(\" \", \"\")\n        val n_s_n_n_n_n_ = n_s_n_n_n_n_n.replace(\" \", \"\")\n        val n_s_n_n_n_n_n_ = n_s_n_n_n_n_n_n.replace(\" \", \"\")\n        val n_s_n_n_n_n_n_n_ = n_s_n_n_n_n_n_n_n.replace(\" \", \"\")\n        val n_s_n_n_n_n_n_n_n_ = n_s_n_n_n_n_n_n_n_n.replace(\" \", \"\")\n        val n_s_n_n_n_n_n_n_n_n_ = n_s_n_n_n_n_n_n_n_n_n.replace(\" \", \"\")\n        val n_s_n_n_n_n_n_n_n_n_n_ = n_s_n_n_n_n_n_n_n_n_n_n.replace(\" \", \"\")\n        val n_s_n_n_",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 + n2\n        val n4 = n3 / 2\n        val n5 = n3 % 2\n        val n6 = n4 - n5\n        val n7 = n6 / 2\n        val n8 = n6 % 2\n        val n9 = n7 - n8\n        val n10 = n9 / 2\n        val n11 = n9 % 2\n        val n12 = n10 - n11\n        val n13 = n12 / 2\n        val n14 = n12 % 2\n        val n15 = n13 - n14\n        val n16 = n15 / 2\n        val n17 = n15 % 2\n        val n18 = n16 - n17\n        val n19 = n18 / 2\n        val n20 = n18 % 2\n        val n21 = n19 - n20\n        val n22 = n21 / 2\n        val n23 = n21 % 2\n        val n24 = n22 - n23\n        val n25 = n24 / 2\n        val n26 = n24 % 2\n        val n27 = n25 - n26\n        val n28 = n27 / 2\n        val n29 = n27 % 2\n        val n30 = n28 - n29\n        val n31 = n30 / 2\n        val n32 = n30 % 2\n        val n33 = n31 - n32\n        val n34 = n33 / 2\n        val n35 = n33 % 2\n        val n36 = n34 - n35\n        val n37 = n36 / 2\n        val n38 = n36 % 2\n        val n39 = n37 - n38\n        val n40 = n39 / 2\n        val n41 = n39 % 2\n        val n42 = n40 - n41\n        val n43 = n42 / 2\n        val n44 = n42 % 2\n        val n45 = n43 - n44\n        val n46 = n45 / 2\n        val n47 = n45 % 2\n        val n",
    "        val apples = s.split(\" \").length\n        val oranges = s.split(\" \").length\n        val mango = s.split(\" \").length\n        val total = apples + oranges + mango\n        val applesAndOranges = apples + oranges\n        val applesAndMango = apples + mango\n        val orangesAndMango = oranges + mango\n        val applesAndOrangesAndMango = applesAndOranges + mango\n        val applesAndOrangesAndMangoAndApples = applesAndOrangesAndMango + apples\n        val applesAndOrangesAndMangoAndApplesAndOranges = applesAndOrangesAndMangoAndApples + oranges\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMango = applesAndOrangesAndMangoAndApplesAndOranges + mango\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApples = applesAndOrangesAndMangoAndApplesAndOrangesAndMango + apples\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOranges = applesAndOrangesAndMangoAndApplesAndOrangesAndMango + apples\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMango = applesAndOrangesAndMangoAndApplesAndOrangesAndMango + apples\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApples = applesAndOrangesAndMangoAndApplesAndOrangesAndMango + apples\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOranges = applesAndOrangesAndMangoAndApplesAndOrangesAndMango + apples\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMango = applesAndOrangesAndMangoAndApplesAndOrangesAndMango + apples\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApp",
    "        val s_ = s.toLowerCase()\n        val n_ = n.toLong\n        val n_s = n_.toString\n        val n_s_ = n_s.toLowerCase()\n        val n_s_s = n_s_.toString\n        val n_s_s_ = n_s_s.toLowerCase()\n        val n_s_s_s = n_s_s_.toString\n        val n_s_s_s_ = n_s_s_s.toLowerCase()\n        val n_s_s_s_s = n_s_s_s_.toString\n        val n_s_s_s_s_ = n_s_s_s_s.toLowerCase()\n        val n_s_s_s_s_s = n_s_s_s_s_s.toLowerCase()\n        val n_s_s_s_s_s_ = n_s_s_s_s_s_s.toLowerCase()\n        val n_s_s_s_s_s_s = n_s_s_s_s_s_s_s.toLowerCase()\n        val n_s_s_s_s_s_s_ = n_s_s_s_s_s_s_s_s.toLowerCase()\n        val n_s_s_s_s_s_s_s = n_s_s_s_s_s_s_s_s.toLowerCase()\n        val n_s_s_s_s_s_s_s_ = n_s_s_s_s_s_s_s_s_s.toLowerCase()\n        val n_s_s_s_s_s_s_s_s = n_s_s_s_s_s_s_s_s_s.toLowerCase()\n        val n_s_s_s_s_s_s_s_s_ = n_s_s_s_s_s_s_s_s_s_s.toLowerCase()\n        val n_s_s_s_s",
    "        // your code here\n        return _.sum(\n            _.filter(\n                _.zip(\n                    _.range(1, _.toInt(s)),\n                    _.range(1, _.toInt(s))\n                ),\n                (x, y) -> x.s + y.s == n\n            )\n        )",
    "        val apples = s.split(\" \").map(_.toLong).sum()\n        val oranges = s.split(\" \").map(_.toLong).sum()\n        val mango = s.split(\" \").map(_.toLong).filter(_ > 0).sum()\n        val total = apples + oranges + mango\n        if (total == n) {\n            return mango\n        } else {\n            return 0l\n        }",
    "        val s_ = s.toLowerCase()\n        val n_ = n.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n",
    "        // your code here\n        var a = scala.collection.mutable.ListBuffer[String]()\n        var b = scala.collection.mutable.ListBuffer[String]()\n        var c = scala.collection.mutable.ListBuffer[String]()\n        var d = scala.collection.mutable.ListBuffer[String]()\n        var e = scala.collection.mutable.ListBuffer[String]()\n        var f = scala.collection.mutable.ListBuffer[String]()\n        var g = scala.collection.mutable.ListBuffer[String]()\n        var h = scala.collection.mutable.ListBuffer[String]()\n        var i = scala.collection.mutable.ListBuffer[String]()\n        var j = scala.collection.mutable.ListBuffer[String]()\n        var k = scala.collection.mutable.ListBuffer[String]()\n        var l = scala.collection.mutable.ListBuffer[String]()\n        var m = scala.collection.mutable.ListBuffer[String]()\n        var n = scala.collection.mutable.ListBuffer[String]()\n        var o = scala.collection.mutable.ListBuffer[String]()\n        var p = scala.collection.mutable.ListBuffer[String]()\n        var q = scala.collection.mutable.ListBuffer[String]()\n        var r = scala.collection.mutable.ListBuffer[String]()\n        var s = scala.collection.mutable.ListBuffer[String]()\n        var t = scala.collection.mutable.ListBuffer[String]()\n        var u = scala.collection.mutable.ListBuffer[String]()\n        var v = scala.collection.mutable.ListBuffer[String]()\n        var w = scala.collection.mutable.ListBuffer[String]()\n        var x = scala.collection.mutable.ListBuffer[String]()\n        var y = scala.collection.mutable.ListBuffer[String]()\n        var z = scala.collection.mutable.ListBuffer[String]()\n        var aa = scala.collection.mutable",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        val apples = s.split(\" \").map(Integer.parseInt).toList\n        val oranges = s.split(\" \").map(Integer.parseInt).toList\n        val mango = apples.filter(x => x % 2 == 0).map(x => x / 2).sum\n        val total = mango + oranges.sum\n        return total - n",
    "        val apples = s.split(\" \").length - 1\n        val oranges = s.split(\" \")[0].length() - 1\n        val mango = s.split(\" \")[0].length() - 2\n        val applesAndOranges = apples + oranges\n        val applesAndMango = apples + mango\n        val orangesAndMango = oranges + mango\n        val applesAndOrangesAndMango = applesAndOranges + applesAndMango + mango\n        val applesAndOrangesAndMangoAndApples = applesAndOrangesAndMango + apples\n        val applesAndOrangesAndMangoAndApplesAndOranges = applesAndOrangesAndMango + applesAndOranges\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMango = applesAndOrangesAndMango + applesAndOrangesAndMango\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApples = applesAndOrangesAndMango + applesAndOrangesAndMangoAndApples\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOranges = applesAndOrangesAndMango + applesAndOrangesAndMangoAndApplesAndOranges\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMango = applesAndOrangesAndMango + applesAndOrangesAndMangoAndApplesAndOrangesAndMango\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApples = applesAndOrangesAndMango + applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApples\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOranges = applesAndOrangesAndMango + applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOranges\n        val applesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMangoAndApplesAndOrangesAndMango = applesAndOrangesAndMango + applesAndOrangesAndMangoAndApplesAndOr",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / 2\n        val n5 = n3 % 2\n        val n6 = n4 + n5\n        val n7 = n6 / 2\n        val n8 = n6 % 2\n        val n9 = n7 + n8\n        val n10 = n9 / 2\n        val n11 = n9 % 2\n        val n12 = n10 + n11\n        val n13 = n12 / 2\n        val n14 = n12 % 2\n        val n15 = n13 + n14\n        val n16 = n15 / 2\n        val n17 = n15 % 2\n        val n18 = n16 + n17\n        val n19 = n18 / 2\n        val n20 = n18 % 2\n        val n21 = n19 + n20\n        val n22 = n21 / 2\n        val n23 = n21 % 2\n        val n24 = n22 + n23\n        val n25 = n24 / 2\n        val n26 = n24 % 2\n        val n27 = n25 + n26\n        val n28 = n27 / 2\n        val n29 = n27 % 2\n        val n30 = n28 + n29\n        val n31 = n30 / 2\n        val n32 = n30 % 2\n        val n33 = n31 + n32\n        val n34 = n33 / 2\n        val n35 = n33 % 2\n        val n36 = n34 + n35\n        val n37 = n36 / 2\n        val n38 = n36 % 2\n        val n39 = n37 + n38\n        val n40 = n39 / 2\n        val n41 = n39 % 2\n        val n42 = n40 + n41\n        val n43 = n42 / 2\n        val n44 = n42 % 2\n        val n45 = n43 + n44\n        val n46 = n45 / 2\n        val n47 = n45 % 2\n        val n",
    "        def countMangoes(s : String, n : Long) : Long = {\n            def countApples(s : String, n : Long) : Long = {\n                def countOranges(s : String, n : Long) : Long = {\n                    def countMangoes(s : String, n : Long) : Long = {\n                        def countApples(s : String, n : Long) : Long = {\n                            def countOranges(s : String, n : Long) : Long = {\n                                def countMangoes(s : String, n : Long) : Long = {\n                                    def countApples(s : String, n : Long) : Long = {\n                                        def countOranges(s : String, n : Long) : Long = {\n                                            def countMangoes(s : String, n : Long) : Long = {\n                                                def countApples(s : String, n : Long) : Long = {\n                                                    def countOranges(s : String, n : Long) : Long = {\n                                                        def countMangoes(s : String, n : Long) : Long = {\n                                                            def countApples(s : String, n : Long) : Long = {\n                                                                def countOranges(s : String, n : Long) : Long = {\n                                                                    def countMangoes(s : String, n : Long) : Long = {\n                                                                        def countApples(s : String, n : Long) : Long = {\n                                                                            def countOranges(s : String, n : Long) : Long = {\n                                                                                def countMangoes(s : String, n : Long) : Long = {\n                                                                                    def countApples(s : String, n : Long) : Long = {\n                                                                                        def countOranges(s : String, n : Long) : Long = {\n                                                                                            def countMangoes(s : String, n : Long) : Long = {\n                                                                                                def countApples(s : String, n : Long) : Long = {\n                                                                                                    ",
    "        val apples = s.split(\" \").map(_.toInt).sum()\n        val oranges = s.split(\" \").map(_.toInt).sum()\n        val mango = s.split(\" \").map(_.toInt).filter(_.equals(\"mango\")).sum()\n        val total = apples + oranges + mango\n        return total - apples - oranges",
    "        // your code here\n        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / 2\n        val n5 = n3 % 2\n        val n6 = n4 + n5\n        val n7 = n6 / 2\n        val n8 = n6 % 2\n        val n9 = n7 + n8\n        val n10 = n9 / 2\n        val n11 = n9 % 2\n        val n12 = n10 + n11\n        val n13 = n12 / 2\n        val n14 = n12 % 2\n        val n15 = n13 + n14\n        val n16 = n15 / 2\n        val n17 = n15 % 2\n        val n18 = n16 + n17\n        val n19 = n18 / 2\n        val n20 = n18 % 2\n        val n21 = n19 + n20\n        val n22 = n21 / 2\n        val n23 = n21 % 2\n        val n24 = n22 + n23\n        val n25 = n24 / 2\n        val n26 = n24 % 2\n        val n27 = n25 + n26\n        val n28 = n27 / 2\n        val n29 = n27 % 2\n        val n30 = n28 + n29\n        val n31 = n30 / 2\n        val n32 = n30 % 2\n        val n33 = n31 + n32\n        val n34 = n33 / 2\n        val n35 = n33 % 2\n        val n36 = n34 + n35\n        val n37 = n36 / 2\n        val n38 = n36 % 2\n        val n39 = n37 + n38\n        val n40 = n39 / 2\n        val n41 = n39 % 2\n        val n42 = n40 + n41\n        val n43 = n42 / 2\n        val n44 = n42 % 2\n        val n45 = n43 + n44\n        val n46 = n45 / 2\n        val n47 = n45",
    "        val s1 = s.split(\" \")\n        val s2 = s1.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s3 = s2.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s4 = s3.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s5 = s4.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s6 = s5.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s7 = s6.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s8 = s7.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s9 = s8.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s10 = s9.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s11 = s10.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s12 = s11.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s13 = s12.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s14 = s13.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s15 = s14.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s16 = s15.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s17 = s16.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s18 = s17.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s19 = s18.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s20 = s19.map(x -> x.",
    "        val apples = s.split(\" \").map(_.toInt).sum()\n        val oranges = s.split(\" \").map(_.toInt).sum()\n        val mango = s.split(\" \").map(_.toInt).filter(_.equals(\"mango\")).sum()\n        val total = apples + oranges + mango\n        return total - apples - oranges",
    "        val s_ = s.split(\" \")\n        val n_ = n.longValue()\n        val apples = s_.length - 1\n        val oranges = s_.length - 2\n        val apples_ = s_[0]\n        val oranges_ = s_[1]\n        val apples_n = Long.parseLong(apples_)\n        val oranges_n = Long.parseLong(oranges_)\n        val apples_n_ = apples_n.longValue()\n        val oranges_n_ = oranges_n.longValue()\n        val apples_n_oranges_n_ = apples_n_ + oranges_n_\n        val apples_n_oranges_n_mango_n_ = apples_n_oranges_n_ / n_\n        val mango_n_ = mango_n_(apples_n_oranges_n_mango_n_)\n        val mango_n_mango_n_ = mango_n_ * n_\n        val mango_n_mango_n_apples_n_ = mango_n_mango_n_ - apples_n_\n        val mango_n_mango_n_apples_n_oranges_n_ = mango_n_mango_n_apples_n_ + oranges_n_\n        val mango_n_mango_n_apples_n_oranges_n_mango_n_ = mango_n_mango_n_apples_n_oranges_n_ / n_\n        val mango_n_mango_n_apples_n_oranges_n_mango_n_ = mango_n_mango_n_apples_n_oranges_n_mango_n_ * n_\n        val mango_n_mango_n_apples_n_oranges_n_mango_n_apples_n_ = mango_n_mango_n_apples_n_oranges_n_mango_n_apples_n_ - apples_n_\n        val mango_n_mango_n_apples_n_oranges_n_mango_n_apples_n_oranges_n_ = mango",
    "        // your code here\n        def getFruit(s : String) : Long = {\n            def getFruit(s : String) : Long = {\n                def getFruit(s : String) : Long = {\n                    def getFruit(s : String) : Long = {\n                        def getFruit(s : String) : Long = {\n                            def getFruit(s : String) : Long = {\n                                def getFruit(s : String) : Long = {\n                                    def getFruit(s : String) : Long = {\n                                        def getFruit(s : String) : Long = {\n                                            def getFruit(s : String) : Long = {\n                                                def getFruit(s : String) : Long = {\n                                                    def getFruit(s : String) : Long = {\n                                                        def getFruit(s : String) : Long = {\n                                                            def getFruit(s : String) : Long = {\n                                                                def getFruit(s : String) : Long = {\n                                                                    def getFruit(s : String) : Long = {\n                                                                        def getFruit(s : String) : Long = {\n                                                                            def getFruit(s : String) : Long = {\n                                                                                def getFruit(s : String) : Long = {\n                                                                                    def getFruit(s : String) : Long = {\n                                                                                        def getFruit(s : String) : Long = {\n                                                                                            def getFruit(s : String) : Long = {\n                                                                                                def getFruit(s : String) : Long = {\n                                                                                                    def getFruit(s : String) : Long = {\n                                                                                                        def getFruit(s : String) : Long = {\n                                                                                                            def getFruit(s : String) : Long = {\n                                                                                                                def getFruit(s : String) : Long = {\n                                                                                                                    def getFruit(s :",
    "        // your code here\n        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / n2\n        val n5 = n3 % n2\n        val n6 = n4 + n5\n        val n7 = n6 / n2\n        val n8 = n6 % n2\n        val n9 = n7 + n8\n        val n10 = n9 / n2\n        val n11 = n9 % n2\n        val n12 = n10 + n11\n        val n13 = n12 / n2\n        val n14 = n12 % n2\n        val n15 = n13 + n14\n        val n16 = n15 / n2\n        val n17 = n15 % n2\n        val n18 = n16 + n17\n        val n19 = n18 / n2\n        val n20 = n18 % n2\n        val n21 = n19 + n20\n        val n22 = n21 / n2\n        val n23 = n21 % n2\n        val n24 = n22 + n23\n        val n25 = n24 / n2\n        val n26 = n24 % n2\n        val n27 = n25 + n26\n        val n28 = n27 / n2\n        val n29 = n27 % n2\n        val n30 = n28 + n29\n        val n31 = n30 / n2\n        val n32 = n30 % n2\n        val n33 = n31 + n32\n        val n34 = n33 / n2\n        val n35 = n33 % n2\n        val n36 = n34 + n35\n        val n37 = n36 / n2\n        val n38 = n36 % n2\n        val n39 = n37 + n38\n        val n40 = n39 / n2\n        val n41 = n39 % n2\n        val n42 = n40 + n41\n        val n43 = n42 / n2\n        val n44 = n42 % n2\n",
    "        val s2 = s.replaceAll(\" \", \"\")\n        val s3 = s2.replaceAll(\"[^0-9]\", \"\")\n        val s4 = s3.replaceAll(\"[^0-9]\", \"\")\n        val s5 = s4.replaceAll(\"[^0-9]\", \"\")\n        val s6 = s5.replaceAll(\"[^0-9]\", \"\")\n        val s7 = s6.replaceAll(\"[^0-9]\", \"\")\n        val s8 = s7.replaceAll(\"[^0-9]\", \"\")\n        val s9 = s8.replaceAll(\"[^0-9]\", \"\")\n        val s10 = s9.replaceAll(\"[^0-9]\", \"\")\n        val s11 = s10.replaceAll(\"[^0-9]\", \"\")\n        val s12 = s11.replaceAll(\"[^0-9]\", \"\")\n        val s13 = s12.replaceAll(\"[^0-9]\", \"\")\n        val s14 = s13.replaceAll(\"[^0-9]\", \"\")\n        val s15 = s14.replaceAll(\"[^0-9]\", \"\")\n        val s16 = s15.replaceAll(\"[^0-9]\", \"\")\n        val s17 = s16.replaceAll(\"[^0-9]\", \"\")\n        val s18 = s17.replaceAll(\"[^0-9]\", \"\")\n        val s19 = s18.replaceAll(\"[^0-9]\", \"\")\n        val s20 = s19.replaceAll(\"[^0-9]\", \"\")\n        val s21 = s20.replaceAll(\"[^0-9]\", \"\")\n        val s22 = s21.replaceAll(\"[^0-9]\", \"\")\n        val s23 = s22.replaceAll(\"[^0-9]\", \"\")\n        val s24 = s23.replaceAll(\"[^0-9]\", \"\")\n        val s25 = s24.replaceAll(\"[^0-9]\", \"\")\n        val s26 = s25.replaceAll(\"[^0-",
    "        val s_ = s.toLowerCase.replaceAll(\"[^a-z0-9 ]\", \"\").replaceAll(\"[ ]\", \"\")\n        val n_ = n.toLong\n        val s_n = s_ + n_\n        val s_n_ = s_n.replaceAll(\"[^a-z0-9 ]\", \"\").replaceAll(\"[ ]\", \"\")\n        val s_n_n = s_n_ + n_\n        val s_n_n_ = s_n_n.replaceAll(\"[^a-z0-9 ]\", \"\").replaceAll(\"[ ]\", \"\")\n        val s_n_n_n = s_n_n_ + n_\n        val s_n_n_n_ = s_n_n_n.replaceAll(\"[^a-z0-9 ]\", \"\").replaceAll(\"[ ]\", \"\")\n        val s_n_n_n_n = s_n_n_n_ + n_\n        val s_n_n_n_n_ = s_n_n_n_n.replaceAll(\"[^a-z0-9 ]\", \"\").replaceAll(\"[ ]\", \"\")\n        val s_n_n_n_n_n = s_n_n_n_n_ + n_\n        val s_n_n_n_n_n_ = s_n_n_n_n_n.replaceAll(\"[^a-z0-9 ]\", \"\").replaceAll(\"[ ]\", \"\")\n        val s_n_n_n_n_n_n = s_n_n_n_n_n_ + n_\n        val s_n_n_n_n_n_n_ = s_n_n_n_n_n_n.replaceAll(\"[^a-z0-9 ]\", \"\").replaceAll(\"[ ]\", \"\")\n        val s_n_n_n_n_n_n_n = s_n_n_n_n_n_n_ + n_\n        val s_n_n_n_n_n_n_n_ = s_n_n_n_n_",
    "        var s1 = s.split(\" \")\n        var s2 = s1.length\n        var s3 = s1[0]\n        var s4 = s1[1]\n        var s5 = s1[2]\n        var s6 = s1[3]\n        var s7 = s1[4]\n        var s8 = s1[5]\n        var s9 = s1[6]\n        var s10 = s1[7]\n        var s11 = s1[8]\n        var s12 = s1[9]\n        var s13 = s1[10]\n        var s14 = s1[11]\n        var s15 = s1[12]\n        var s16 = s1[13]\n        var s17 = s1[14]\n        var s18 = s1[15]\n        var s19 = s1[16]\n        var s20 = s1[17]\n        var s21 = s1[18]\n        var s22 = s1[19]\n        var s23 = s1[20]\n        var s24 = s1[21]\n        var s25 = s1[22]\n        var s26 = s1[23]\n        var s27 = s1[24]\n        var s28 = s1[25]\n        var s29 = s1[26]\n        var s30 = s1[27]\n        var s31 = s1[28]\n        var s32 = s1[29]\n        var s33 = s1[30]\n        var s34 = s1[31]\n        var s35 = s1[32]\n        var s36 = s1[33]\n        var s37 = s1[34]\n        var s38 = s1[35]\n        var s39 = s1[36]\n        var s40 = s1[37]\n        var s41 = s1[38]\n        var s42 = s1[39]\n        var s43 = s1[40]\n        var s44 = s1[41]\n        var s45 = s1[42]\n        var s46 = s1[43]\n        var s47 = s",
    "        // your code goes here\n        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / 2\n        val n5 = n3 % 2\n        val n6 = n4 + n5\n        val n7 = n6 / 2\n        val n8 = n6 % 2\n        val n9 = n7 + n8\n        val n10 = n9 / 2\n        val n11 = n9 % 2\n        val n12 = n10 + n11\n        val n13 = n12 / 2\n        val n14 = n12 % 2\n        val n15 = n13 + n14\n        val n16 = n15 / 2\n        val n17 = n15 % 2\n        val n18 = n16 + n17\n        val n19 = n18 / 2\n        val n20 = n18 % 2\n        val n21 = n19 + n20\n        val n22 = n21 / 2\n        val n23 = n21 % 2\n        val n24 = n22 + n23\n        val n25 = n24 / 2\n        val n26 = n24 % 2\n        val n27 = n25 + n26\n        val n28 = n27 / 2\n        val n29 = n27 % 2\n        val n30 = n28 + n29\n        val n31 = n30 / 2\n        val n32 = n30 % 2\n        val n33 = n31 + n32\n        val n34 = n33 / 2\n        val n35 = n33 % 2\n        val n36 = n34 + n35\n        val n37 = n36 / 2\n        val n38 = n36 % 2\n        val n39 = n37 + n38\n        val n40 = n39 / 2\n        val n41 = n39 % 2\n        val n42 = n40 + n41\n        val n43 = n42 / 2\n        val n44 = n42 % 2\n        val n45 = n43 + n44\n        val n46 = n45 / 2\n        val n47 = n",
    "        // your code here\n        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / 2\n        val n5 = n3 % 2\n        val n6 = n4 + n5\n        val n7 = n6 / 2\n        val n8 = n6 % 2\n        val n9 = n7 + n8\n        val n10 = n9 / 2\n        val n11 = n9 % 2\n        val n12 = n10 + n11\n        val n13 = n12 / 2\n        val n14 = n12 % 2\n        val n15 = n13 + n14\n        val n16 = n15 / 2\n        val n17 = n15 % 2\n        val n18 = n16 + n17\n        val n19 = n18 / 2\n        val n20 = n18 % 2\n        val n21 = n19 + n20\n        val n22 = n21 / 2\n        val n23 = n21 % 2\n        val n24 = n22 + n23\n        val n25 = n24 / 2\n        val n26 = n24 % 2\n        val n27 = n25 + n26\n        val n28 = n27 / 2\n        val n29 = n27 % 2\n        val n30 = n28 + n29\n        val n31 = n30 / 2\n        val n32 = n30 % 2\n        val n33 = n31 + n32\n        val n34 = n33 / 2\n        val n35 = n33 % 2\n        val n36 = n34 + n35\n        val n37 = n36 / 2\n        val n38 = n36 % 2\n        val n39 = n37 + n38\n        val n40 = n39 / 2\n        val n41 = n39 % 2\n        val n42 = n40 + n41\n        val n43 = n42 / 2\n        val n44 = n42 % 2\n        val n45 = n43 + n44\n        val n46 = n45 / 2\n        val n47 = n45",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / n2\n        val n5 = n3 % n2\n        val n6 = n5 / n1\n        val n7 = n5 % n1\n        val n8 = n7 / n2\n        val n9 = n7 % n2\n        val n10 = n9 / n1\n        val n11 = n9 % n1\n        val n12 = n11 / n2\n        val n13 = n11 % n2\n        val n14 = n13 / n1\n        val n15 = n13 % n1\n        val n16 = n15 / n2\n        val n17 = n15 % n2\n        val n18 = n17 / n1\n        val n19 = n17 % n1\n        val n20 = n19 / n2\n        val n21 = n19 % n2\n        val n22 = n21 / n1\n        val n23 = n21 % n1\n        val n24 = n23 / n2\n        val n25 = n23 % n2\n        val n26 = n25 / n1\n        val n27 = n25 % n1\n        val n28 = n27 / n2\n        val n29 = n27 % n2\n        val n30 = n29 / n1\n        val n31 = n29 % n1\n        val n32 = n31 / n2\n        val n33 = n31 % n2\n        val n34 = n33 / n1\n        val n35 = n33 % n1\n        val n36 = n35 / n2\n        val n37 = n35 % n2\n        val n38 = n37 / n1\n        val n39 = n37 % n1\n        val n40 = n39 / n2\n        val n41 = n39 % n2\n        val n42 = n41 / n1\n        val n43 = n41 % n1\n        val n44 = n43 / n2\n        val n45 = n",
    "        // your code here\n        return _.max(scala.collection.JavaConversions.seqAsJavaList(scala.collection.JavaConversions.asScalaBuffer(s.split(\" \")).toList()).map(x => _.toInt(x)).toSeq().zipWithIndex().map(x => x._2()).filter(x => x == n).map(x => x._1()).toSeq())",
    "        val apples = s.split(\" \").map(_.toInt).filter(_.isPositive).sum()\n        val oranges = s.split(\" \").map(_.toInt).filter(_.isNegative).sum()\n        val mango = (apples + oranges) / n\n        return mango",
    "        val s_ = s.split(\" \")\n        val n_ = n.longValue()\n        val apples = s_.length - 1\n        val oranges = s_.length - 2\n        val apples_ = s_.length - 1\n        val oranges_ = s_.length - 2\n        val apples_n = s_.length - 1\n        val oranges_n = s_.length - 2\n        val apples_n_ = s_.length - 1\n        val oranges_n_ = s_.length - 2\n        val apples_n_n = s_.length - 1\n        val oranges_n_n = s_.length - 2\n        val apples_n_n_ = s_.length - 1\n        val oranges_n_n_ = s_.length - 2\n        val apples_n_n_n = s_.length - 1\n        val oranges_n_n_n = s_.length - 2\n        val apples_n_n_n_ = s_.length - 1\n        val oranges_n_n_n_ = s_.length - 2\n        val apples_n_n_n_n = s_.length - 1\n        val oranges_n_n_n_n = s_.length - 2\n        val apples_n_n_n_n_ = s_.length - 1\n        val oranges_n_n_n_n_ = s_.length - 2\n        val apples_n_n_n_n_n = s_.length - 1\n        val oranges_n_n_n_n_n = s_.length - 2\n        val apples_n_n_n_n_n_ = s_.length - 1\n        val oranges_n_n_n_n_n_ = s_.length - 2\n        val apples_n_n_n_n_n_n = s_.length - 1\n        val oranges_n_n_n_n_n_n = s_.length - 2\n        val apples_n_n_n_n_n_n_ = s_.length - 1\n        val oranges_n_n_n_n_n_n_ = s_.length - 2\n        val apples_n_n_n_n_n_n_n = s_.length - 1\n        val oranges",
    "        var s1 = s.split(\" \")\n        var s2 = s1.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s3 = s2.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s4 = s3.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s5 = s4.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s6 = s5.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s7 = s6.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s8 = s7.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s9 = s8.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s10 = s9.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s11 = s10.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s12 = s11.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s13 = s12.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s14 = s13.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s15 = s14.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s16 = s15.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s17 = s16.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s18 = s17.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s19 = s18.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        var s20 = s19.map(x -> x.",
    "        // your code here\n        val s1 = s.split(\" \")\n        val s2 = s1.map(x => x.toLowerCase())\n        val s3 = s2.map(x => x.replaceAll(\"[^a-zA-Z0-9]\", \"\"))\n        val s4 = s3.map(x => x.replaceAll(\"[^0-9]\", \"\"))\n        val s5 = s4.map(x => x.replaceAll(\"[^a-zA-Z]\", \"\"))\n        val s6 = s5.map(x => x.replaceAll(\"[^0-9]\", \"\"))\n        val s7 = s6.map(x => x.replaceAll(\"[^a-zA-Z]\", \"\"))\n        val s8 = s7.map(x => x.replaceAll(\"[^0-9]\", \"\"))\n        val s9 = s8.map(x => x.replaceAll(\"[^a-zA-Z]\", \"\"))\n        val s10 = s9.map(x => x.replaceAll(\"[^0-9]\", \"\"))\n        val s11 = s10.map(x => x.replaceAll(\"[^a-zA-Z]\", \"\"))\n        val s12 = s11.map(x => x.replaceAll(\"[^0-9]\", \"\"))\n        val s13 = s12.map(x => x.replaceAll(\"[^a-zA-Z]\", \"\"))\n        val s14 = s13.map(x => x.replaceAll(\"[^0-9]\", \"\"))\n        val s15 = s14.map(x => x.replaceAll(\"[^a-zA-Z]\", \"\"))\n        val s16 = s15.map(x => x.replaceAll(\"[^0-9]\", \"\"))\n        val s17 = s16.map(x => x.replaceAll(\"[^a-zA-Z]\", \"\"))\n        val s18 = s17.map(x => x.replaceAll(\"[^0-9]\", \"\"))\n        val s19 = s18.map(x => x.replaceAll",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        // your code here\n        val numApples = s.split(\" \").length - 1\n        val numOranges = s.split(\" \")[1].split(\" \").length - 1\n        val numMangoes = numApples * numOranges\n        val numFruits = numApples + numOranges\n        val numMangoesInBasket = numMangoes / n\n        val numFruitsInBasket = numFruits / n\n        val numMangoesInBasketRemainder = numMangoesInBasket % n\n        val numFruitsInBasketRemainder = numFruitsInBasket % n\n        val numMangoesInBasketRemainder2 = numMangoesInBasketRemainder / n\n        val numFruitsInBasketRemainder2 = numFruitsInBasketRemainder / n\n        val numMangoesInBasketRemainder3 = numMangoesInBasketRemainder2 % n\n        val numFruitsInBasketRemainder3 = numFruitsInBasketRemainder2 % n\n        val numMangoesInBasketRemainder4 = numMangoesInBasketRemainder3 % n\n        val numFruitsInBasketRemainder4 = numFruitsInBasketRemainder3 % n\n        val numMangoesInBasketRemainder5 = numMangoesInBasketRemainder4 % n\n        val numFruitsInBasketRemainder5 = numFruitsInBasketRemainder4 % n\n        val numMangoesInBasketRemainder6 = numMangoesInBasketRemainder5 % n\n        val numFruitsInBasketRemainder6 = numFruitsInBasketRemainder5 % n\n        val numMangoesInBasketRemainder7 = numMangoesInBasketRemainder6 % n\n        val numFruitsInBasketRemainder7 = numFruitsInBasketRemainder6 % n\n        val numMangoesInBasketRemainder8 = numMangoesInBasketRemainder7 % n\n        val numFruitsInBasketRemainder8 =",
    "        // your code here\n        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30",
    "        // your code here\n        def getFruit(s : String) : Long = {\n            def getCount(s : String) : Long = {\n                return s.count(\"apple\") + s.count(\"orange\") + s.count(\"mango\")\n            }\n            return s.count(\"apple\") * n / getCount(s)\n        }\n        return s.count(\"mango\") * n / getFruit(s)",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        val apples = s.split(\" \").length\n        val oranges = s.split(\" \").length\n        val mango = s.split(\" \").length\n        val applesAndOranges = apples + oranges\n        val applesAndMango = apples + mango\n        val orangesAndMango = oranges + mango\n        val applesAndOrangesAndMango = applesAndOranges + applesAndMango\n        val applesAndOrangesAndMangoAndMango = applesAndOrangesAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMangoAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango + mango\n        val applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango = applesAndOrangesAndMangoAndMangoAndMangoAndMangoAndMangoAndMangoAndMango + mango\n        val applesAndOrangesAndMango",
    "        // your code here\n        val s_arr = s.split(\" \")\n        val n_arr = n.toString().split(\" \")\n        val n_arr_len = n_arr.length\n        val s_arr_len = s_arr.length\n        val s_arr_len_minus_n_arr_len = s_arr_len - n_arr_len\n        val s_arr_minus_n_arr = s_arr[0:s_arr_len_minus_n_arr_len]\n        val n_arr_minus_s_arr = n_arr[s_arr_len_minus_n_arr_len:]\n        val s_arr_minus_n_arr_minus_s_arr = s_arr_minus_n_arr[0:s_arr_minus_n_arr.length - 1]\n        val s_arr_minus_n_arr_minus_s_arr_minus_n_arr = s_arr_minus_n_arr_minus_s_arr[0:s_arr_minus_n_arr_minus_s_arr.length - 1]\n        val s_arr_minus_n_arr_minus_s_arr_minus_n_arr_minus_s_arr = s_arr_minus_n_arr_minus_s_arr_minus_n_arr[0:s_arr_minus_n_arr_minus_s_arr_minus_n_arr.length - 1]\n        val s_arr_minus_n_arr_minus_s_arr_minus_n_arr_minus_s_arr_minus_n_arr = s_arr_minus_n_arr_minus_s_arr_minus_n_arr_minus_s_arr_minus_n_arr[0:s_arr_minus_n_arr_minus_s_arr_minus_n_arr.length - 1]\n        val s_arr_minus_n_arr_minus_s_arr_minus_n_arr_minus_s_arr_minus_n_arr_minus_s_arr = s_arr_minus_n_arr_minus_s_arr_minus_n_arr_minus_s_arr",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        // your code here\n        def getFruit(s : String) : Long = {\n            def getNumber(s : String) : Long = {\n                def getNumber(s : String) : Long = {\n                    def getNumber(s : String) : Long = {\n                        def getNumber(s : String) : Long = {\n                            def getNumber(s : String) : Long = {\n                                def getNumber(s : String) : Long = {\n                                    def getNumber(s : String) : Long = {\n                                        def getNumber(s : String) : Long = {\n                                            def getNumber(s : String) : Long = {\n                                                def getNumber(s : String) : Long = {\n                                                    def getNumber(s : String) : Long = {\n                                                        def getNumber(s : String) : Long = {\n                                                            def getNumber(s : String) : Long = {\n                                                                def getNumber(s : String) : Long = {\n                                                                    def getNumber(s : String) : Long = {\n                                                                        def getNumber(s : String) : Long = {\n                                                                            def getNumber(s : String) : Long = {\n                                                                                def getNumber(s : String) : Long = {\n                                                                                    def getNumber(s : String) : Long = {\n                                                                                        def getNumber(s : String) : Long = {\n                                                                                            def getNumber(s : String) : Long = {\n                                                                                                def getNumber(s : String) : Long = {\n                                                                                                    def getNumber(s : String) : Long = {\n                                                                                                        def getNumber(s : String) : Long = {\n                                                                                                            def getNumber(s : String) : Long = {\n                                                                                                                def getNumber(s : String) : Long = {\n                                                                                                                    def getNumber(s : String) : Long = {\n                                                                                                                          def getNumber(s : String) : Long = {",
    "        val s_ = s.toLowerCase().split(\" \")\n        val n_ = n.longValue()\n        val apples = s_.length - 1\n        val oranges = s_.length - 2\n        val mango = s_.length - 3\n        val apples_ = s_.length - 4\n        val oranges_ = s_.length - 5\n        val mango_ = s_.length - 6\n        val apples_oranges = apples + oranges\n        val apples_oranges_mango = apples_oranges + mango\n        val apples_oranges_mango_apples_oranges = apples_oranges_mango + apples_oranges\n        val apples_oranges_mango_apples_oranges_mango = apples_oranges_mango_apples_oranges + mango_\n        val apples_oranges_mango_apples_oranges_mango_apples_oranges_mango = apples_oranges_mango_apples_oranges_mango + apples_oranges_mango_apples_oranges_mango\n        val apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango = apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango\n        val apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges_mango_apples_oranges",
    "        var s_ = s.split(\" \")\n        var apples = s_[0]\n        var oranges = s_[1]\n        var mango = s_[2]\n        var apples_ = Long.parseLong(apples)\n        var oranges_ = Long.parseLong(oranges)\n        var mango_ = Long.parseLong(mango)\n        var total = apples_ + oranges_ + mango_\n        var apples_ = apples_ / total\n        var oranges_ = oranges_ / total\n        var mango_ = mango_ / total\n        var result = mango_ * total\n        return result",
    "        val numApples = s.split(\" \").length - 1\n        val numOranges = s.split(\" \")[numApples].split(\" and \").length - 1\n        val numMangoes = n - numApples - numOranges\n        return numMangoes",
    "        val apples = s.split(\" \").map(_.toInt).sum()\n        val oranges = s.split(\" \").map(_.toInt).sum()\n        val mango = s.split(\" \").map(_.toInt).filter(_.equals(\"mango\")).sum()\n        val total = apples + oranges + mango\n        return total - apples - oranges",
    "        // your code here\n        def getFruitCount(s : String) : Long = {\n            def getFruitCount(s : String) : Long = {\n                def getFruitCount(s : String) : Long = {\n                    def getFruitCount(s : String) : Long = {\n                        def getFruitCount(s : String) : Long = {\n                            def getFruitCount(s : String) : Long = {\n                                def getFruitCount(s : String) : Long = {\n                                    def getFruitCount(s : String) : Long = {\n                                        def getFruitCount(s : String) : Long = {\n                                            def getFruitCount(s : String) : Long = {\n                                                def getFruitCount(s : String) : Long = {\n                                                    def getFruitCount(s : String) : Long = {\n                                                        def getFruitCount(s : String) : Long = {\n                                                            def getFruitCount(s : String) : Long = {\n                                                                def getFruitCount(s : String) : Long = {\n                                                                    def getFruitCount(s : String) : Long = {\n                                                                        def getFruitCount(s : String) : Long = {\n                                                                            def getFruitCount(s : String) : Long = {\n                                                                                def getFruitCount(s : String) : Long = {\n                                                                                    def getFruitCount(s : String) : Long = {\n                                                                                        def getFruitCount(s : String) : Long = {\n                                                                                            def getFruitCount(s : String) : Long = {\n                                                                                                def getFruitCount(s : String) : Long = {\n                                                                                                    def getFruitCount(s : String) : Long = {\n                                                                                                        def getFruitCount(s : String) : Long = {\n                                                                                                            def getFruitCount(s : String) : Long = {\n                                                                                                                def get",
    "        var apples = 0l\n        var oranges = 0l\n        var mango = 0l\n        var i = 0\n        while (i < s.length) {\n            if (s[i] == \"apple\") {\n                apples += 1\n            } else if (s[i] == \"orange\") {\n                oranges += 1\n            } else if (s[i] == \"mango\") {\n                mango += 1\n            }\n            i += 1\n        }\n        return mango * n / (apples + oranges)",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        // your code here\n        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / 2\n        val n5 = n3 % 2\n        val n6 = n4 + n5\n        val n7 = n6 / 2\n        val n8 = n6 % 2\n        val n9 = n7 + n8\n        val n10 = n9 / 2\n        val n11 = n9 % 2\n        val n12 = n10 + n11\n        val n13 = n12 / 2\n        val n14 = n12 % 2\n        val n15 = n13 + n14\n        val n16 = n15 / 2\n        val n17 = n15 % 2\n        val n18 = n16 + n17\n        val n19 = n18 / 2\n        val n20 = n18 % 2\n        val n21 = n19 + n20\n        val n22 = n21 / 2\n        val n23 = n21 % 2\n        val n24 = n22 + n23\n        val n25 = n24 / 2\n        val n26 = n24 % 2\n        val n27 = n25 + n26\n        val n28 = n27 / 2\n        val n29 = n27 % 2\n        val n30 = n28 + n29\n        val n31 = n30 / 2\n        val n32 = n30 % 2\n        val n33 = n31 + n32\n        val n34 = n33 / 2\n        val n35 = n33 % 2\n        val n36 = n34 + n35\n        val n37 = n36 / 2\n        val n38 = n36 % 2\n        val n39 = n37 + n38\n        val n40 = n39 / 2\n        val n41 = n39 % 2\n        val n42 = n40 + n41\n        val n43 = n42 / 2\n        val n44 = n42 % 2\n        val n45 = n43 + n44\n        val n46 = n45 / 2\n        val n47 = n45",
    "        // your code here\n        val s2 = s.replaceAll(\" \", \"\")\n        val n2 = n.longValue()\n        val s3 = s2.replaceAll(\"[0-9]+\", \"\")\n        val n3 = Long.parseLong(s3)\n        val n4 = n2 - n3\n        val n5 = n4 / 2\n        val n6 = n4 % 2\n        val n7 = n5 + n6\n        val n8 = n7 / 2\n        val n9 = n7 % 2\n        val n10 = n8 + n9\n        val n11 = n10 / 2\n        val n12 = n10 % 2\n        val n13 = n11 + n12\n        val n14 = n13 / 2\n        val n15 = n13 % 2\n        val n16 = n14 + n15\n        val n17 = n16 / 2\n        val n18 = n16 % 2\n        val n19 = n17 + n18\n        val n20 = n19 / 2\n        val n21 = n19 % 2\n        val n22 = n20 + n21\n        val n23 = n22 / 2\n        val n24 = n22 % 2\n        val n25 = n23 + n24\n        val n26 = n25 / 2\n        val n27 = n25 % 2\n        val n28 = n26 + n27\n        val n29 = n28 / 2\n        val n30 = n28 % 2\n        val n31 = n29 + n30\n        val n32 = n31 / 2\n        val n33 = n31 % 2\n        val n34 = n32 + n33\n        val n35 = n34 / 2\n        val n36 = n34 % 2\n        val n37 = n35 + n36\n        val n38 = n37 / 2\n        val n39 = n37 % 2\n        val n40 = n38 + n39\n        val n41 = n40 / 2\n        val n42 = n40 % 2\n        val n43 = n41 + n42\n        val n44 = n43 / 2\n        val n45 = n43 % 2\n        val n46 = n44 + n45\n        val",
    "        def getFruitCount(s : String) : Long = {\n            def getFruitCount(s : String) : Long = {\n                def getFruitCount(s : String) : Long = {\n                    def getFruitCount(s : String) : Long = {\n                        def getFruitCount(s : String) : Long = {\n                            def getFruitCount(s : String) : Long = {\n                                def getFruitCount(s : String) : Long = {\n                                    def getFruitCount(s : String) : Long = {\n                                        def getFruitCount(s : String) : Long = {\n                                            def getFruitCount(s : String) : Long = {\n                                                def getFruitCount(s : String) : Long = {\n                                                    def getFruitCount(s : String) : Long = {\n                                                        def getFruitCount(s : String) : Long = {\n                                                            def getFruitCount(s : String) : Long = {\n                                                                def getFruitCount(s : String) : Long = {\n                                                                    def getFruitCount(s : String) : Long = {\n                                                                        def getFruitCount(s : String) : Long = {\n                                                                            def getFruitCount(s : String) : Long = {\n                                                                                def getFruitCount(s : String) : Long = {\n                                                                                    def getFruitCount(s : String) : Long = {\n                                                                                        def getFruitCount(s : String) : Long = {\n                                                                                            def getFruitCount(s : String) : Long = {\n                                                                                                def getFruitCount(s : String) : Long = {\n                                                                                                    def getFruitCount(s : String) : Long = {\n                                                                                                        def getFruitCount(s : String) : Long = {\n                                                                                                            def getFruitCount(s : String) : Long = {\n                                                                                                                def getFruitCount(s :",
    "        // your code here\n        val numApples = s.split(\" \").length - 1\n        val numOranges = s.split(\" \")[numApples].split(\" \").length - 1\n        val numMangoes = n - numApples - numOranges\n        return numMangoes",
    "        val s_ = s.toLowerCase.replaceAll(\"[^a-z]\", \"\")\n        val n_ = n.toLong\n        val a = s_.split(\" \").toLong\n        val o = s_.split(\" \").tail.toLong\n        val m = s_.split(\" \").head.toLong\n        val m_ = m.toLong\n        val a_ = a.toLong\n        val o_ = o.toLong\n        val m_ = m.toLong\n        val a_ = a.toLong\n        val o_ = o.toLong\n        val m_ = m.toLong\n        val a_ = a.toLong\n        val o_ = o.toLong\n        val m_ = m.toLong\n        val a_ = a.toLong\n        val o_ = o.toLong\n        val m_ = m.toLong\n        val a_ = a.toLong\n        val o_ = o.toLong\n        val m_ = m.toLong\n        val a_ = a.toLong\n        val o_ = o.toLong\n        val m_ = m.toLong\n        val a_ = a.toLong\n        val o_ = o.toLong\n        val m_ = m.toLong\n        val a_ = a.toLong\n        val o_ = o.toLong\n        val m_ = m.toLong\n        val a_ = a.toLong\n        val o_ = o.toLong\n        val m_ = m.toLong\n        val a_ = a.toLong\n        val o_ = o.toLong\n        val m_ = m.toLong\n        val a_ = a.toLong\n        val o_ = o.toLong\n        val m_ = m.toLong\n        val a_ = a.toLong\n        val o_ = o.toLong\n        val m_ = m.toLong\n        val a_ = a.toLong\n        val o_ = o.toLong\n        val m_ = m.toLong\n        val a_ = a.toLong\n        val o_ = o.toLong\n        val m_ = m.toLong\n        val a_ =",
    "        val apples = s.split(\" \").map(_.toLong).sum()\n        val oranges = s.split(\" \").map(_.toLong).sum()\n        val mango = (apples + oranges) / n\n        return mango",
    "        def countMangoes(s : String, n : Long) : Long = {\n            def countMangoes(s : String, n : Long) : Long = {\n                if (s == \"\") {\n                    return 0l\n                } else {\n                    return countMangoes(s.substring(0, s.indexOf(\" \")), n) +\n                        countMangoes(s.substring(s.indexOf(\" \") + 1), n) +\n                        countMangoes(s.substring(s.indexOf(\" \") + 1, s.length()), n)\n                }\n            }\n            return countMangoes(s, n)\n        }\n        return countMangoes(s, n)",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / n2\n        val n5 = n3 % n2\n        val n6 = n4 + n5\n        val n7 = n6 / n2\n        val n8 = n6 % n2\n        val n9 = n7 + n8\n        val n10 = n9 / n2\n        val n11 = n9 % n2\n        val n12 = n10 + n11\n        val n13 = n12 / n2\n        val n14 = n12 % n2\n        val n15 = n13 + n14\n        val n16 = n15 / n2\n        val n17 = n15 % n2\n        val n18 = n16 + n17\n        val n19 = n18 / n2\n        val n20 = n18 % n2\n        val n21 = n19 + n20\n        val n22 = n21 / n2\n        val n23 = n21 % n2\n        val n24 = n22 + n23\n        val n25 = n24 / n2\n        val n26 = n24 % n2\n        val n27 = n25 + n26\n        val n28 = n27 / n2\n        val n29 = n27 % n2\n        val n30 = n28 + n29\n        val n31 = n30 / n2\n        val n32 = n30 % n2\n        val n33 = n31 + n32\n        val n34 = n33 / n2\n        val n35 = n33 % n2\n        val n36 = n34 + n35\n        val n37 = n36 / n2\n        val n38 = n36 % n2\n        val n39 = n37 + n38\n        val n40 = n39 / n2\n        val n41 = n39 % n2\n        val n42 = n40 + n41\n        val n43 = n42 / n2\n        val n44 = n42 % n2\n        val n45 = n",
    "        // your code here\n        return _.map(s.split(\" \")).map(x => x.length()).sum()",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = n1 - n2\n        val n4 = n3 / n2\n        return n4",
    "        // your code here\n        val s1 = s.split(\" \")\n        val s2 = s1.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s3 = s2.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s4 = s3.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s5 = s4.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s6 = s5.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s7 = s6.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s8 = s7.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s9 = s8.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s10 = s9.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s11 = s10.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s12 = s11.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s13 = s12.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s14 = s13.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s15 = s14.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s16 = s15.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s17 = s16.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s18 = s17.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s19 = s18.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s20 = s19.",
    "        // your code here\n        val s1 = s.split(\" \")\n        val s2 = s1.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s3 = s2.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s4 = s3.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s5 = s4.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s6 = s5.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s7 = s6.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s8 = s7.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s9 = s8.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s10 = s9.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s11 = s10.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s12 = s11.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s13 = s12.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s14 = s13.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s15 = s14.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s16 = s15.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s17 = s16.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s18 = s17.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s19 = s18.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s20 = s19.",
    "        var apples = 0l\n        var oranges = 0l\n        var mango = 0l\n        var total = 0l\n        var i = 0\n        while (i < s.length) {\n            if (s[i] == \"apple\") {\n                apples += 1\n            } else if (s[i] == \"orange\") {\n                oranges += 1\n            } else if (s[i] == \"mango\") {\n                mango += 1\n            }\n            i += 1\n        }\n        total = apples * n + oranges * n + mango * n\n        return total",
    "        val s_ = s.split(\" \")\n        val n_ = n.longValue()\n        val apples = s_.length - 1\n        val oranges = s_.length - 2\n        val apples_ = s_.get(0).toLong\n        val oranges_ = s_.get(1).toLong\n        val mango = apples_ * oranges_ / n_\n        return mango",
    "        val s_ = s.toLowerCase\n        val n_ = n.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[^0-9]\", \"\")\n        val n_ = n_.toLong\n        val s_ = s_.replaceAll(\"[",
    "        // your code here\n        val s1 = s.split(\" \")\n        val s2 = s1.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s3 = s2.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s4 = s3.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s5 = s4.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s6 = s5.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s7 = s6.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s8 = s7.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s9 = s8.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s10 = s9.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s11 = s10.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s12 = s11.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s13 = s12.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s14 = s13.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s15 = s14.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s16 = s15.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s17 = s16.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s18 = s17.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s19 = s18.map(x -> x.replaceAll(\"[^0-9]\", \"\"))\n        val s20 = s19.",
    "        val apples = s.split(\" \").length - 1\n        val oranges = s.split(\" \")[0].length() - 1\n        val mango = s.split(\" \")[0].length() - 1\n        val apples_oranges = apples + oranges\n        val apples_oranges_mango = apples_oranges + mango\n        val apples_oranges_mango_n = apples_oranges_mango / n\n        val apples_oranges_mango_n_apples = apples_oranges_mango_n * apples\n        val apples_oranges_mango_n_oranges = apples_oranges_mango_n * oranges\n        val apples_oranges_mango_n_mango = apples_oranges_mango_n * mango\n        val apples_oranges_mango_n_apples_oranges = apples_oranges_mango_n_apples + apples_oranges_mango_n_oranges\n        val apples_oranges_mango_n_apples_oranges_mango = apples_oranges_mango_n_apples_oranges + apples_oranges_mango_n_mango\n        return apples_oranges_mango_n_apples_oranges_mango",
    "        val s1 = s.split(\" \")\n        val n1 = Long.parseLong(s1[0])\n        val n2 = Long.parseLong(s1[1])\n        val n3 = Long.parseLong(s1[2])\n        val n4 = Long.parseLong(s1[3])\n        val n5 = Long.parseLong(s1[4])\n        val n6 = Long.parseLong(s1[5])\n        val n7 = Long.parseLong(s1[6])\n        val n8 = Long.parseLong(s1[7])\n        val n9 = Long.parseLong(s1[8])\n        val n10 = Long.parseLong(s1[9])\n        val n11 = Long.parseLong(s1[10])\n        val n12 = Long.parseLong(s1[11])\n        val n13 = Long.parseLong(s1[12])\n        val n14 = Long.parseLong(s1[13])\n        val n15 = Long.parseLong(s1[14])\n        val n16 = Long.parseLong(s1[15])\n        val n17 = Long.parseLong(s1[16])\n        val n18 = Long.parseLong(s1[17])\n        val n19 = Long.parseLong(s1[18])\n        val n20 = Long.parseLong(s1[19])\n        val n21 = Long.parseLong(s1[20])\n        val n22 = Long.parseLong(s1[21])\n        val n23 = Long.parseLong(s1[22])\n        val n24 = Long.parseLong(s1[23])\n        val n25 = Long.parseLong(s1[24])\n        val n26 = Long.parseLong(s1[25])\n        val n27 = Long.parseLong(s1[26])\n        val n28 = Long.parseLong(s1[27])\n        val n29 = Long.parseLong(s1[28])\n        val n30 = Long.parseLong(s1[29])\n        val n31 = Long.parseLong(s1[30])\n        val n32"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
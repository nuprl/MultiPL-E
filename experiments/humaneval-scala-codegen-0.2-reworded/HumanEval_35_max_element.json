{
  "name": "HumanEval_35_max_element",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong))) == (3l));\n    assert(maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 124l.toLong, 1l.toLong, -10l.toLong))) == (124l));\n    }\n\n}\n",
  "completions": [
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty())\n            throw new RuntimeException(\"List is empty\")\n        else if (l.size() == 1)\n            return l.head()\n        else {\n            var max = l.head()\n            for (i <- 1 until l.size()) {\n                if (l.apply(i).compareTo(max) > 0)\n                    max = l.apply(i)\n            }\n            return max\n        }",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head()\n        for (i <- l.tail()) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (l.compare(max, i) < 0) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Int](1, 2, 3)))\n    // (3)\n    // >>> maxElement((List[Int](5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)))\n    // (123)\n    def maxElement(l : List[Int]) : Int = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (l.compare(max, i) < 0) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Double](1.0, 2.0, 3.0)))\n    // (3.0)\n    // >>> maxElement((List[Double](5.0, 3.0, -5.0, 2.0, -3.0, 3.0, 9.0, 0.0, 123.0, 1.0, -10.0)))\n    // (123.0)\n    def maxElement(l : List[Double]) : Double = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (l.compare(max, i) < 0) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Float](1.0f, 2.0f, 3.0f)))\n    // (3.0)\n    // >>> maxElement((List[Float](5.0f, 3.0f, -5.0f, 2.0f, -3.0f, 3.0f, 9.0f, 0.0f, 123.0f, 1.0f, -10.0f)))\n    // (123.0)\n    def maxElement(l : List[Float]) : Float = {\n        var max = l.head\n        for (i <- l.tail) {\n            ",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty.\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement2(l : List[Long]) : Long = {\n        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement3(l : List[Long]) : Long = {\n        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max\n    }\n\n    //",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max",
    "        if (l.isEmpty())\n            throw new RuntimeException(\"List is empty\")\n        else {\n            var max = l.head\n            for (i <- l.tail) {\n                if (i > max)\n                    max = i\n            }\n            return max\n        }",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty())\n            throw new RuntimeException(\"List is empty\")\n        else if (l.size() == 1)\n            l.head\n        else {\n            var max = l.head\n            for (i <- 1 until l.size()) {\n                if (l.apply(i).toLong > max.toLong)\n                    max = l.apply(i)\n            }\n            max\n        }",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (l.compare(max, i) < 0) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (l.compare(max, i) < 0) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (l.compare(max, i) < 0) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Int](1, 2, 3)))\n    // (3)\n    // >>> maxElement((List[Int](5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)))\n    // (123)\n    def maxElement(l : List[Int]) : Int = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Double](1.0, 2.0, 3.0)))\n    // (3.0)\n    // >>> maxElement((List[Double](5.0, 3.0, -5.0, 2.0, -3.0, 3.0, 9.0, 0.0, 123.0, 1.0, -10.0)))\n    // (123.0)\n    def maxElement(l : List[Double]) : Double = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Float](1.0f, 2.0f, 3.0f)))\n    // (3.0)\n    // >>> maxElement((List[Float](5.0f, 3.0f, -5.0f, 2.0f, -3.0f, 3.0f, 9.0f, 0.0f, 123.0f, 1.0f, -10.0f)))\n    // (123.0)\n    def maxElement(l : List[Float]) : Float = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (l.compare(i, max) > 0) {\n                max = i\n            }\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.to",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement2(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement3(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head()\n        for (i <- l.tail()) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement2(l : List[Long]) : Long = {\n        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head()\n        for (i <- l.tail()) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement3(l : List[Long]) : Long = {\n        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head()\n        for (i <- l.tail()) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max\n    }",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty())\n            throw new RuntimeException(\"List is empty\")\n        else {\n            var max = l.head\n            for (i <- l.tail) {\n                if (i > max)\n                    max = i\n            }\n            return max\n        }\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement2(l : List[Long]) : Long = {\n        if (l.isEmpty())\n            throw new RuntimeException(\"List is empty\")\n        else {\n            var max = l.head\n            for (i <- l.tail) {\n                if (i > max)\n                    max = i\n            }\n            return max\n        }\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement3(l : List[Long]) : Long = {\n        if (l.isEmpty())\n            throw new RuntimeException(\"List is empty\")\n        else {\n            var max = l.head\n            for (i <- l.tail) {\n                if (i > max)\n                    max = i\n            }\n            return max\n        }\n    }\n\n    // Return maximum element",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head()\n        for (i <- l.tail()) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty.\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement2(l : List[Long]) : Long = {\n        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty.\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement3(l : List[Long]) : Long = {\n        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty.\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max\n    }\n\n    //",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty.\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty.\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.to",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        if (l.isEmpty())\n            throw new RuntimeException(\"List is empty\")\n        else {\n            var max = l.head\n            for (i <- l.tail) {\n                if (i > max)\n                    max = i\n            }\n            return max\n        }",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.to",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement2(l : List[Long]) : Long = {\n        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement3(l : List[Long]) : Long = {\n        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max\n    }\n\n    //",
    "        if (l.isEmpty())\n            throw new RuntimeException(\"List is empty\")\n        max <- l.head\n        for (i <- l.tail) {\n            if (i > max)\n                max <- i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (l.head < i) {\n                max = i\n            }\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        if (l.isEmpty())\n            throw new RuntimeException(\"List is empty\")\n        var max = l.head()\n        for (i <- l.tail()) {\n            if (i > max)\n                max = i\n        }\n        return max",
    "        if (l.isEmpty())\n            throw new RuntimeException(\"List is empty\")\n        else\n            return max(l.head, l.tail.map(x => x + 1).map(x => x.maxElement(x)).toSeq)",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty.\")\n        }\n        var max = l.head()\n        for (i <- l.tail()) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.to",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        if (l.isEmpty())\n            throw new RuntimeException(\"List is empty\")\n        else {\n            var max = l.head\n            for (i <- l.tail) {\n                if (i > max)\n                    max = i\n            }\n            return max\n        }",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Int](1, 2, 3)))\n    // (3)\n    // >>> maxElement((List[Int](5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)))\n    // (123)\n    def maxElement(l : List[Int]) : Int = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Double](1.0, 2.0, 3.0)))\n    // (3.0)\n    // >>> maxElement((List[Double](5.0, 3.0, -5.0, 2.0, -3.0, 3.0, 9.0, 0.0, 123.0, 1.0, -10.0)))\n    // (123.0)\n    def maxElement(l : List[Double]) : Double = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Float](1.0f, 2.0f, 3.0f)))\n    // (3.0)\n    // >>> maxElement((List[Float](5.0f, 3.0f, -5.0f, 2.0f, -3.0f, 3.0f, 9.0f, 0.0f, 123.0f, 1.0f, -10.0f)))\n    // (123.0)\n    def maxElement(l : List[Float]) : Float = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Int](1, 2, 3)))\n    // (3)\n    // >>> maxElement((List[Int](5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)))\n    // (123)\n    def maxElement(l : List[Int]) : Int = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Double](1.0, 2.0, 3.0)))\n    // (3.0)\n    // >>> maxElement((List[Double](5.0, 3.0, -5.0, 2.0, -3.0, 3.0, 9.0, 0.0, 123.0, 1.0, -10.0)))\n    // (123.0)\n    def maxElement(l : List[Double]) : Double = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Float](1.0f, 2.0f, 3.0f)))\n    // (3.0)\n    // >>> maxElement((List[Float](5.0f, 3.0f, -5.0f, 2.0f, -3.0f, 3.0f, 9.0f, 0.0f, 123.0f, 1.0f, -10.0f)))\n    // (123.0)\n    def maxElement(l : List[Float]) : Float = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty())\n            throw new RuntimeException(\"List is empty\")\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max)\n                max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Int](1, 2, 3)))\n    // (3)\n    // >>> maxElement((List[Int](5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10)))\n    // (123)\n    def maxElement(l : List[Int]) : Int = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Double](1.0, 2.0, 3.0)))\n    // (3.0)\n    // >>> maxElement((List[Double](5.0, 3.0, -5.0, 2.0, -3.0, 3.0, 9.0, 0.0, 123.0, 1.0, -10.0)))\n    // (123.0)\n    def maxElement(l : List[Double]) : Double = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Float](1.0f, 2.0f, 3.0f)))\n    // (3.0)\n    // >>> maxElement((List[Float](5.0f, 3.0f, -5.0f, 2.0f, -3.0f, 3.0f, 9.0f, 0.0f, 123.0f, 1.0f, -10.0f)))\n    // (123.0)\n    def maxElement(l : List[Float]) : Float = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.to",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        if (l.isEmpty())\n            throw new RuntimeException(\"List is empty\")\n        else if (l.length() == 1)\n            return l(0)\n        else {\n            var max = l(0)\n            for (i <- 1 until l.length()) {\n                if (l(i) > max)\n                    max = l(i)\n            }\n            return max\n        }",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty.\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        if (l.isEmpty()) {\n            throw new RuntimeException(\"List is empty\")\n        }\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) {\n                max = i\n            }\n        }\n        return max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (i > max) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) {\n                max = i\n            }\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.toLong, 0l.toLong, 123l.toLong, 1l.toLong, -10l.toLong)))\n    // (123l)\n    def maxElement(l : List[Long]) : Long = {\n        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max\n    }\n\n    // Return maximum element in the list.\n    // >>> maxElement((List[Long](1l.toLong, 2l.toLong, 3l.toLong)))\n    // (3l)\n    // >>> maxElement((List[Long](5l.toLong, 3l.toLong, -5l.toLong, 2l.toLong, -3l.toLong, 3l.toLong, 9l.",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        var max = l.head\n        for (i <- l.tail) {\n            if (max < i) max = i\n        }\n        max",
    "        if (l.isEmpty())\n            throw new RuntimeException(\"List is empty\")\n        var max = l.head\n        for (i <- l.tail) {\n            if (i > max)\n                max = i\n        }\n        max"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
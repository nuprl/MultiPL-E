{
  "name": "HumanEval_12_longest",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Out of list of strings, return the longest one. Return the first one in case of multiple\n    // strings of the same length. Return None in case the input list is empty.\n    // >>> longest((List[String]()))\n    // None\n    // >>> longest((List[String](\"a\", \"b\", \"c\")))\n    // \"a\"\n    // >>> longest((List[String](\"a\", \"bb\", \"ccc\")))\n    // \"ccc\"\n    def longest(strings : List[String]) : Option[String] = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(longest((List[String]())).equals(None));\n    assert(longest((List[String](\"x\", \"y\", \"z\"))).equals(\"x\"));\n    assert(longest((List[String](\"x\", \"yyy\", \"zzzz\", \"www\", \"kkkk\", \"abc\"))).equals(\"zzzz\"));\n    }\n\n}\n",
  "completions": [
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (s : String) {\n                if (s.length > maxLen) {\n                    max = s\n                    maxLen = s.length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (s <- strings.tail()) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (i <- 1 until strings.size) {\n            if (strings.apply(i).length > max.length) {\n                max = strings.apply(i)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                var string = strings.apply(i)\n                if (string.length > max.length) {\n                    max = string\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > max.length) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = strings.head.length\n        for (var s : String) {\n            if (s.length > maxLen) {\n                max = s\n                maxLen = s.length\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (s <- strings.tail()) {\n                var len = len(s)\n                if (len > maxLen) {\n                    max = s\n                    maxLen = len\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var longest = strings.head()\n            var longestLength = longest.length()\n            for (i <- 1 until strings.size) {\n                var string = strings.apply(i)\n                var stringLength = string.length()\n                if (stringLength > longestLength) {\n                    longest = string\n                    longestLength = stringLength\n                }\n            }\n            return longest\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s : Iterator[String]) {\n            if (s.length() > max.length()) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > max.length) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var longest = strings.head()\n            var longestLength = longest.length()\n            for (s : String) {\n                if (s.length() > longestLength) {\n                    longest = s\n                    longestLength = s.length()\n                }\n            }\n            return longest\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (s : Iterator(strings)) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = len(max)\n            for (s : Iterator(strings)) {\n                var len = len(s)\n                if (len > maxLen) {\n                    max = s\n                    maxLen = len\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = strings.head.length\n        for (var i = 1; i < strings.size(); i++) {\n            var string = strings.apply(i)\n            var len = string.length\n            if (len > maxLen) {\n                max = string\n                maxLen = len\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > maxLen) {\n                    max = strings.apply(i)\n                    maxLen = strings.apply(i).length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            for (i <- 1 until strings.size) {\n                var s = strings.apply(i)\n                if (s.length > max.length) {\n                    max = s\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var longest = strings.head()\n            var longestLength = longest.length()\n            for (s : Iterator(strings)) {\n                if (s.length() > longestLength) {\n                    longest = s\n                    longestLength = longest.length()\n                }\n            }\n            return longest\n        }",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (s <- strings.tail()) {\n                var len = len(s)\n                if (len > maxLen) {\n                    max = s\n                    maxLen = len\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = len(max)\n            for (s : Iterator(strings)) {\n                var len = len(s)\n                if (len > maxLen) {\n                    max = s\n                    maxLen = len\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (i <- 1 until strings.size) {\n            if (strings.apply(i).length > max.length) {\n                max = strings.apply(i)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLength = strings.head.length\n            for (s : String) {\n                if (s.length > maxLength) {\n                    max = s\n                    maxLength = s.length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s : Iterator[String]) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (i <- 1 until strings.size) {\n            if (strings.apply(i).length > max.length) {\n                max = strings.apply(i)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head()\n        for (s <- strings.tail()) {\n            if (s.length() > max.length()) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (i <- 1 until strings.size) {\n            if (strings.apply(i).length > max.length) {\n                max = strings.apply(i)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > max.length) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length() > max.length()) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        var maxLen = len(max)\n        for (s : strings.tail) {\n            if (len(s) > maxLen) {\n                max = s\n                maxLen = len(s)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (var s : String) {\n                if (s.length > maxLen) {\n                    max = s\n                    maxLen = s.length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (s <- strings.tail) {\n                if (s.length > max.length) {\n                    max = s\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > maxLen) {\n                    max = strings.apply(i)\n                    maxLen = strings.apply(i).length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = len(max)\n        for (s <- strings.tail) {\n            var len = len(s)\n            if (len > maxLen) {\n                max = s\n                maxLen = len\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (s : String) {\n                if (s.length > maxLen) {\n                    max = s\n                    maxLen = s.length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var longest = strings.head()\n            var longestLength = longest.length()\n            for (s : Iterator(strings)) {\n                if (s.length() > longestLength) {\n                    longest = s\n                    longestLength = longest.length()\n                }\n            }\n            return longest\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s : Iterator[String]) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (i <- 1 to strings.size - 1) {\n                var s = strings.apply(i)\n                var len = len(s)\n                if (len > maxLen) {\n                    max = s\n                    maxLen = len\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = strings.head.length\n        for (var s : String) {\n            if (s.length > maxLen) {\n                max = s\n                maxLen = s.length\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (s <- strings.tail()) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = len(max)\n        for (s : String) {\n            if (len(s) > maxLen) {\n                max = s\n                maxLen = len(s)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLength = strings.head.length\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > maxLength) {\n                    max = strings.apply(i)\n                    maxLength = strings.apply(i).length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = len(max)\n        for (s <- strings.tail) {\n            var len = len(s)\n            if (len > maxLen) {\n                max = s\n                maxLen = len\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = None\n        var maxLength = 0\n        for (var s : String) {\n            if (s.length() > maxLength) {\n                max = s\n                maxLength = s.length()\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = len(max)\n        for (s <- strings.tail) {\n            var len = len(s)\n            if (len > maxLen) {\n                max = s\n                maxLen = len\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLength = strings.head.length\n            for (s : String) {\n                if (s.length > maxLength) {\n                    max = s\n                    maxLength = s.length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > max.length) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (i <- 1 until strings.size) {\n                var s = strings.apply(i)\n                var len = len(s)\n                if (len > maxLen) {\n                    max = s\n                    maxLen = len\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = None\n            for (var s : String) {\n                if (s.length() > max.length()) {\n                    max = s\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length() > max.length()) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (i <- 1 until strings.size) {\n            if (strings.apply(i).length() > max.length()) {\n                max = strings.apply(i)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = None\n        var maxLength = 0\n        for (var s : String) {\n            if (s.length() > maxLength) {\n                max = s\n                maxLength = s.length()\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > max.length) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (i <- 1 until strings.size) {\n            if (strings.apply(i).length() > max.length()) {\n                max = strings.apply(i)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var longest = strings.head()\n        var longestLength = longest.length()\n        for (s : strings.tail()) {\n            if (s.length() > longestLength) {\n                longest = s\n                longestLength = longest.length()\n            }\n        }\n        return longest",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (s : String) {\n                if (s.length > maxLen) {\n                    max = s\n                    maxLen = s.length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > max.length) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = len(max)\n        for (s : Iterator[String]) {\n            if (len(s) > maxLen) {\n                max = s\n                maxLen = len(s)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = strings.head.length\n        for (var i = 1; i < strings.size(); i++) {\n            var s = strings.apply(i)\n            if (s.length > maxLen) {\n                max = s\n                maxLen = s.length\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (i <- 1 to strings.size - 1) {\n                if (strings.apply(i).length > maxLen) {\n                    max = strings.apply(i)\n                    maxLen = strings.apply(i).length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var longest = strings.head()\n            var longestLength = longest.length()\n            for (i <- 1 until strings.size) {\n                var string = strings.apply(i)\n                var length = string.length()\n                if (length > longestLength) {\n                    longest = string\n                    longestLength = length\n                }\n            }\n            return longest\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = None\n        for (var s : String) {\n            if (s.length() > max.length()) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head()\n        var maxLen = len(max)\n        for (s : String) {\n            if (len(s) > maxLen) {\n                max = s\n                maxLen = len(s)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length() > max.length()) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = len(max)\n        for (s <- strings.tail) {\n            if (len(s) > maxLen) {\n                max = s\n                maxLen = len(s)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = len(max)\n        for (s <- strings.tail) {\n            if (len(s) > maxLen) {\n                max = s\n                maxLen = len(s)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = strings.head.length\n        for (var i = 1; i < strings.size(); i++) {\n            var string = strings.apply(i)\n            var len = string.length\n            if (len > maxLen) {\n                max = string\n                maxLen = len\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = strings.head.length\n        for (s : String) {\n            if (s.length > maxLen) {\n                max = s\n                maxLen = s.length\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var longest = strings.head()\n            var longestLength = longest.length()\n            for (s <- strings.tail()) {\n                if (s.length() > longestLength) {\n                    longest = s\n                    longestLength = s.length()\n                }\n            }\n            return longest\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var longest = strings.head()\n            var longestLength = longest.length()\n            for (s : String) {\n                if (s.length() > longestLength) {\n                    longest = s\n                    longestLength = s.length()\n                }\n            }\n            return longest\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (s : Iterator(strings)) {\n                if (s.length > max.length) {\n                    max = s\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > max.length) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (i <- 1 until strings.size) {\n            if (strings.apply(i).length > max.length) {\n                max = strings.apply(i)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head()\n        for (s : Iterator[String]) {\n            if (s.length() > max.length()) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (s : strings.tail()) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = strings.head.length\n        for (var s : String) {\n            if (s.length > maxLen) {\n                max = s\n                maxLen = s.length\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (s : Iterator(strings)) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = len(max)\n            for (s <- strings.tail) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (s : String) {\n                if (s.length > maxLen) {\n                    max = s\n                    maxLen = s.length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s : Iterator[String]) {\n            if (s.length() > max.length()) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = strings.head.length\n        for (s : String) {\n            if (s.length > maxLen) {\n                max = s\n                maxLen = s.length\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = None\n        for (s in strings) {\n            if (max == None || s.length() > max.length()) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (s <- strings.tail()) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = len(max)\n            for (s : String) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (s <- strings.tail()) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (s <- strings.tail()) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > max.length) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head()\n        for (s <- strings.tail()) {\n            if (s.length() > max.length()) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var longest = strings.head()\n            var longestLength = longest.length()\n            for (s : strings.tail()) {\n                if (s.length() > longestLength) {\n                    longest = s\n                    longestLength = longest.length()\n                }\n            }\n            return longest\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var longest = strings.head()\n            var longestLength = longest.length()\n            for (var string : strings.tail()) {\n                if (string.length() > longestLength) {\n                    longest = string\n                    longestLength = longest.length()\n                }\n            }\n            return longest\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = len(max)\n        for (s : strings.tail) {\n            if (len(s) > maxLen) {\n                max = s\n                maxLen = len(s)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length() > max.length()) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                var s = strings.apply(i)\n                if (s.length > max.length) {\n                    max = s\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head()\n        var maxLen = len(max)\n        for (s <- strings.tail()) {\n            if (len(s) > maxLen) {\n                max = s\n                maxLen = len(s)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (i <- 1 until strings.size) {\n            if (strings.apply(i).length > max.length) max = strings.apply(i)\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var longest = strings.head()\n            var longestLength = longest.length()\n            var longestIndex = 0\n            for (i <- 1 until strings.size()) {\n                var current = strings.apply(i)\n                var currentLength = current.length()\n                if (currentLength > longestLength) {\n                    longest = current\n                    longestLength = currentLength\n                    longestIndex = i\n                }\n            }\n            return longest\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLength = strings.head.length\n            for (s : String) {\n                if (s.length > maxLength) {\n                    max = s\n                    maxLength = s.length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length() > max.length()) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = None\n        for (s in strings) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (s <- strings.tail()) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = None\n        for (var s : String) {\n            if (s.length() > max.length()) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = strings.head.length\n        for (s : String) {\n            if (s.length > maxLen) {\n                max = s\n                maxLen = s.length\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > max.length) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = len(max)\n            for (s <- strings.tail) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = None\n        for (s in strings) {\n            if (max == None || max.length() < s.length()) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (s <- strings.tail) {\n                if (s.length > max.length) {\n                    max = s\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (i <- 1 until strings.size) {\n                var s = strings.apply(i)\n                var len = len(s)\n                if (len > maxLen) {\n                    max = s\n                    maxLen = len\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (s <- strings.tail()) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s : Iterator[String]) {\n            if (s.length() > max.length()) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (i <- 1 to strings.size - 1) {\n                var s = strings.apply(i)\n                var len = len(s)\n                if (len > maxLen) {\n                    max = s\n                    maxLen = len\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = strings.head.length\n        for (s : String) {\n            if (s.length > maxLen) {\n                max = s\n                maxLen = s.length\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            for (i <- 1 until strings.size()) {\n                if (strings.apply(i).length() > max.length()) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = len(max)\n        for (s <- strings.tail) {\n            if (len(s) > maxLen) {\n                max = s\n                maxLen = len(s)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (i <- 1 until strings.size) {\n            if (strings.apply(i).length > max.length) {\n                max = strings.apply(i)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = len(max)\n            for (s <- strings.tail) {\n                var len = len(s)\n                if (len > maxLen) {\n                    max = s\n                    maxLen = len\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length() > max.length()) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (i <- 1 until strings.size) {\n            var string = strings.apply(i)\n            if (string.length > max.length) {\n                max = string\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = len(max)\n            for (s <- strings.tail) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (i <- 1 until strings.size) {\n            if (strings.apply(i).length() > max.length()) max = strings.apply(i)\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > max.length) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = len(max)\n        for (s <- strings.tail) {\n            if (len(s) > maxLen) {\n                max = s\n                maxLen = len(s)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s : String) {\n            if (s.length() > max.length()) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s : strings.tail) {\n            if (s.length() > max.length()) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = strings.head.length\n        for (var s : String) {\n            if (s.length > maxLen) {\n                max = s\n                maxLen = s.length\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (i <- 1 to strings.size - 1) {\n            if (strings.apply(i).length > max.length) {\n                max = strings.apply(i)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = strings.head.length\n        for (var s : String) {\n            if (s.length > maxLen) {\n                max = s\n                maxLen = s.length\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head()\n        var maxLen = len(max)\n        for (s <- strings.tail()) {\n            if (len(s) > maxLen) {\n                max = s\n                maxLen = len(s)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s : Iterator[String]) {\n            if (s.length() > max.length()) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLength = strings.head.length\n            for (var i = 1; i < strings.size(); i++) {\n                var string = strings.apply(i)\n                var length = string.length\n                if (length > maxLength) {\n                    max = string\n                    maxLength = length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s : Iterator[String]) {\n            if (s.length() > max.length()) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (s : String) {\n                if (s.length > maxLen) {\n                    max = s\n                    maxLen = s.length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (i <- 1 until strings.size) {\n            if (strings.apply(i).length() > max.length()) {\n                max = strings.apply(i)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (i <- 1 until strings.size) {\n            if (strings.apply(i).length() > max.length()) {\n                max = strings.apply(i)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (i <- 1 until strings.size) {\n            if (strings.apply(i).length > max.length) {\n                max = strings.apply(i)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var longest = strings.head\n            var longestLength = longest.length\n            for (s : Iterator(strings)) {\n                if (s.length > longestLength) {\n                    longest = s\n                    longestLength = s.length\n                }\n            }\n            return longest\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > maxLen) {\n                    max = strings.apply(i)\n                    maxLen = strings.apply(i).length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var longest = strings.head()\n            var longestLength = longest.length()\n            for (s <- strings.tail()) {\n                var sLength = s.length()\n                if (sLength > longestLength) {\n                    longest = s\n                    longestLength = sLength\n                }\n            }\n            return longest\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var longest = strings.head()\n            var longestLength = longest.length()\n            for (s : Iterator(strings)) {\n                if (s.length() > longestLength) {\n                    longest = s\n                    longestLength = longest.length()\n                }\n            }\n            return longest\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > max.length) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length() > max.length()) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (s : String) {\n                if (s.length > maxLen) {\n                    max = s\n                    maxLen = s.length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length()\n            for (var s : Iterator[String]) {\n                if (s.length() > maxLen) {\n                    max = s\n                    maxLen = s.length()\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                var s = strings.apply(i)\n                if (s.length > max.length) {\n                    max = s\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = strings.head.length\n        for (i <- 1 until strings.size) {\n            var s = strings.apply(i)\n            var len = s.length\n            if (len > maxLen) {\n                max = s\n                maxLen = len\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (s <- strings.tail()) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = None\n        var maxLen = 0\n        for (var s : String) {\n            if (s.length > maxLen) {\n                max = s\n                maxLen = s.length\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (s : String) {\n                if (s.length > maxLen) {\n                    max = s\n                    maxLen = s.length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s : Iterator[String]) {\n            if (s.length() > max.length()) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (s <- strings.tail()) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (i <- 1 until strings.size) {\n                if (strings.get(i).length > maxLen) {\n                    max = strings.get(i)\n                    maxLen = strings.get(i).length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > max.length) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (var s : String) {\n                if (s.length > maxLen) {\n                    max = s\n                    maxLen = s.length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) {\n                max = s\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        for (i <- 1 until strings.size) {\n            if (strings.apply(i).length() > max.length()) {\n                max = strings.apply(i)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        }\n        var max = strings.head\n        var maxLen = len(max)\n        for (s <- strings.tail) {\n            var len = len(s)\n            if (len > maxLen) {\n                max = s\n                maxLen = len\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (s : Iterator[String]) {\n                if (s.length > maxLen) {\n                    max = s\n                    maxLen = s.length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length > max.length) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        for (s <- strings.tail) {\n            if (s.length() > max.length()) max = s\n        }\n        return max",
    "        if (strings.isEmpty()) return None\n        var max = strings.head\n        var maxLen = len(max)\n        for (s <- strings.tail) {\n            if (len(s) > maxLen) {\n                max = s\n                maxLen = len(s)\n            }\n        }\n        return max",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > max.length) {\n                    max = strings.apply(i)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var longest = strings.head\n            for (i <- 1 until strings.size) {\n                if (strings.apply(i).length > longest.length) {\n                    longest = strings.apply(i)\n                }\n            }\n            return longest\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (s <- strings.tail()) {\n                if (len(s) > maxLen) {\n                    max = s\n                    maxLen = len(s)\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head\n            var maxLen = strings.head.length\n            for (i <- 1 until strings.size) {\n                var s = strings.apply(i)\n                if (s.length > maxLen) {\n                    max = s\n                    maxLen = s.length\n                }\n            }\n            return max\n        }",
    "        if (strings.isEmpty()) {\n            return None\n        } else {\n            var max = strings.head()\n            var maxLen = len(max)\n            for (i <- 1 until strings.size) {\n                var string = strings.apply(i)\n                var len = len(string)\n                if (len > maxLen) {\n                    max = string\n                    maxLen = len\n                }\n            }\n            return max\n        }"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
{
  "name": "HumanEval_22_filter_integers",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(filterIntegers((List[Any]())).equals((List[Long]())));\n    assert(filterIntegers((List[Any](4l, Map[Long,Long](), List[Long](), 23.2f, 9l, \"adasd\"))).equals((List[Long](4l.toLong, 9l.toLong))));\n    assert(filterIntegers((List[Any](3l, \"c\", 3l, 3l, \"a\", \"b\"))).equals((List[Long](3l.toLong, 3l.toLong, 3l.toLong))));\n    }\n\n}\n",
  "completions": [
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> convertToIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> convertToIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def convertToIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            } else if (value instanceof Float) {\n                result = result.append(value.toLong)\n            } else if (value instanceof Double) {\n                result = result.append(value.toLong)\n            } else if (value instanceof String) {\n                result = result.append(Long.parseLong(value))\n            } else if (value instanceof scala.collection.immutable.Map) {\n                result = result.append(Long.parseLong(value.toString()))\n            } else if (value instanceof scala.collection.immutable.List) {\n                result = result.append(Long.parseLong(value.toString()))\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of strings\n    // >>> convertToStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](a, 3.14, 5))\n    // >>> convertToStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](1",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), \"abc\"))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), Map[Long,Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long](1l, 2l)))\n    // (List[Long](1l.toLong, 2l.toLong))\n    def filterIntegers(values : List[Any], filter : Any) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long && filter.equals(value)) {\n                result.add(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long](",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        var result = List[Long]()\n        for (var value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for floats\n    // >>> filterFloats((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Float](3.14f.toFloat))\n    // >>> filterFloats((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Float](1.0f, 2.0f, 3.0f))\n    def filterFloats(values : List[Any]) : List[Float] = {\n        var result = List[Float]()\n        for (var value : values) {\n            if (value instanceof Float) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        var result = List[String]()\n        for (var value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for maps\n    // >>> filterMaps((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Map[Long,Long]]())\n    // >>> filterMaps((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Map[Long,Long]](Map",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def toInteg",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Int || value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Int || value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Int || value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l)))\n    // (List[Long](1l.toLong, 2l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l, 5l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l, 5l, 6l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of strings\n    // >>> toStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](a, 3.14, 5))\n    // >>> toStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](1, 2, 3))\n    def toStrings(values : List[Any]) : List[String] = {\n        val result = List[String]()\n        for (val value : values) {\n            if (value instanceof String) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of doubles\n    // >>> toDoubles((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Double](3.14, 5.0))\n    // >>> toDoubles((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    //",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (",
    "        val result = new ArrayList[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            } else if (value instanceof Float) {\n                result.add(((Float) value).toLong)\n            } else if (value instanceof Double) {\n                result.add(((Double) value).toLong)\n            } else if (value instanceof String) {\n                result.add(((String) value).toLong)\n            } else if (value instanceof scala.collection.immutable.Map) {\n                result.add(((scala.collection.immutable.Map) value).mapValues(v -> ((Long) v).toLong).toList().toList().head())\n            } else if (value instanceof scala.collection.immutable.List) {\n                result.add(((scala.collection.immutable.List) value).map(v -> ((Long) v).toLong).toList().toList().head())\n            } else if (value instanceof scala.collection.immutable.Vector) {\n                result.add(((scala.collection.immutable.Vector) value).map(v -> ((Long) v).toLong).toList().toList().head())\n            } else if (value instanceof scala",
    "        val result = mutable.List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result",
    "        val result = mutable.List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result",
    "        val result = new ArrayList[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](a, 3.14, 5))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](1, 2, 3, abc))\n    def filterStrings(values : List[Any]) : List[String] = {\n        val result = new ArrayList[String]()\n        for (value : values) {\n            if (value instanceof String) {\n                result.add(value.toString)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](true, false, true, false, true, false))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](true, false, true, false, true, false))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        val result = new ArrayList[Boolean]()\n        for (value : values) {\n            if (value instanceof Boolean) {\n                result.add(value.toBoolean)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for floats\n    // >>> filterFloats((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Float](3.14f, 5.0f))\n    // >>> filterFloats((List[Any](1l, 2l, 3l, \"abc\", Map",
    "        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            } else if (value instanceof Double) {\n                result = result.append(value.toLong)\n            } else if (value instanceof Float) {\n                result = result.append(value.toLong)\n            } else if (value instanceof String) {\n                result = result.append(Long.parseLong(value))\n            } else if (value instanceof scala.collection.immutable.Map) {\n                result = result.append(scala.collection.immutable.Map.toLong(value))\n            } else if (value instanceof scala.collection.immutable.Vector) {\n                result = result.append(scala.collection.immutable.Vector.toLong(value))\n            } else if (value instanceof scala.collection.immutable.List) {\n                result = result.append(scala.collection.immutable.List.toLong(value))\n            } else if (value instanceof scala.collection.immutable.Set) {\n                result = result.append(scala.collection.immutable.Set.toLong(value))\n            } else if (value instanceof scala.collection.immutable.Map$) {\n                result = result.append(scala.collection.immutable.Map$.toLong",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l)))\n    // (List[Long](1l.toLong, 2l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l)))\n    // (List[Long](1l.toLong, 2l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n",
    "        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = new ArrayList[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        var result = List[String]()\n        for (value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", \"true\", \"true\"))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](\"1\", \"2\", \"3\"))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        var result = List[Boolean]()\n        for (value : values) {\n            if (value instanceof Boolean) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for maps\n    // >>> filterMaps((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Map[Long,Long]](Map(5l.toLong, 5l.toLong)))\n    // >>> filterMaps((List[Any](1l, 2l, 3l, \"abc\", Map[Long,",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for floats\n    // >>> filterFloats((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Float](3.14f.toFloat))\n    // >>> filterFloats((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Float](1.0f, 2.0f, 3.0f))\n    def filterFloats(values : List[Any]) : List[Float] = {\n        val result = new ArrayList[Float]()\n        for (val value : values) {\n            if (value instanceof Float) {\n                result.add(value.toFloat)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](a, 3.14f, 5l))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](1, 2, 3))\n    def filterStrings(values : List[Any]) : List[String] = {\n        val result = new ArrayList[String]()\n        for (val value : values) {\n            if (value instanceof String) {\n                result.add(value.toString)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for maps\n    // >>> filterMaps((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Map[Long,Long]](5l.toLong))\n    // >>> filterMaps((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List",
    "        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to a list of strings\n    // >>> toStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> toStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\", \"abc
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of strings\n    // >>> toStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> toStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def toStrings(values : List[Any]) : List[String] = {\n        var result = List[String]()\n        for (value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of doubles\n    // >>> toDoubles((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Double](3.14, 5.0))\n    // >>> toDoubles((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    //",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to a list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            } else if (value instanceof Double) {\n                result.add(((Double) value).toLong)\n            } else if (value instanceof Float) {\n                result.add(((Float) value).toLong)\n            } else if (value instanceof String) {\n                result.add(((String) value).toLong)\n            } else if (value instanceof scala.collection.immutable.Map) {\n                result.add(((scala.collection.immutable.Map) value).head().toLong)\n            } else if (value instanceof scala.collection.immutable.List) {\n                result.add(((scala.collection.immutable.List) value).head().toLong)\n            } else if (value instanceof scala.collection.immutable.Vector) {\n                result.add(((scala.collection.immutable.Vector) value).head().toLong)\n            } else if (value instanceof scala.collection.immutable.Set) {\n                result.add(((scala.collection.immutable.Set) value).head().toLong)\n            } else if (value instanceof scala.",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            } else if (value instanceof Float) {\n                result = result.append(value.toInt)\n            } else if (value instanceof Double) {\n                result = result.append(value.toInt)\n            } else if (value instanceof String) {\n                result = result.append(Long.parseLong(value))\n            } else if (value instanceof Map[Any, Any]) {\n                result = result.append(Long.parseLong(value.toString()))\n            } else if (value instanceof scala.collection.immutable.List) {\n                result = result.append(Long.parseLong(value.toString()))\n            } else if (value instanceof scala.collection.immutable.Set) {\n                result = result.append(Long.parseLong(value.toString()))\n            } else if (value instanceof scala.collection.immutable.Map) {\n                result = result.append(Long.parseLong(value.toString()))\n            } else if (value instanceof scala.collection.immutable.Vector) {\n                result = result.append(Long.parseLong(value.toString()))\n            } else if (value",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        val result = new ArrayList[String]()\n        for (val value : values) {\n            if (value instanceof String) {\n                result.add(value.toString())\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", true, false))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](\"1\", true, false))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        val result = new ArrayList[Boolean]()\n        for (val value : values) {\n            if (value instanceof Boolean) {\n                result.add(value.toBoolean())\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for characters\n    // >>> filterCharacters((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Character](\"a\", \"3\", \"5\"))\n    // >>> filterCharacters((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of strings\n    // >>> toStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> toStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def toStrings(values : List[Any]) : List[String] = {\n        val result = List[String]()\n        for (val value : values) {\n            if (value instanceof String) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of doubles\n    // >>> toDoubles((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Double](3.14, 5.0))\n    // >>> toDoubles((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Double](1.0,",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for floats\n    // >>> filterFloats((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Float](3.14f.toFloat))\n    // >>> filterFloats((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Float](1.0f, 2.0f, 3.0f))\n    def filterFloats(values : List[Any]) : List[Float] = {\n        var result = List[Float]()\n        for (value : values) {\n            if (value instanceof Float) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](a))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](1, 2, 3))\n    def filterStrings(values : List[Any]) : List[String] = {\n        var result = List[String]()\n        for (value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for maps\n    // >>> filterMaps((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Map[Long,Long]]())\n    // >>> filterMaps((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Map[Long,Long]](Map[Long,Long](1l",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l",
    "        var result = List[Long]()\n        for (var value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (var value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of doubles\n    // >>> toDoubles((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Double](3.14, 5.0))\n    // >>> toDoubles((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Double](1.0, 2.0, 3.0))\n    def toDoubles(values : List[Any]) : List[Double] = {\n        var result = List[Double]()\n        for (var value : values) {\n            if (value instanceof Double) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of strings\n    // >>> toStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> toStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    //",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> convertToIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> convertToIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def convertToIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            } else if (value instanceof Float) {\n                result.add(((Float) value).toLong)\n            } else if (value instanceof Double) {\n                result.add(((Double) value).toLong)\n            } else if (value instanceof String) {\n                result.add(((String) value).toLong)\n            } else if (value instanceof Map[Any, Any]) {\n                result.add(((Map[Any, Any]) value).toLong)\n            } else if (value instanceof List[Any]) {\n                result.add(((List[Any]) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of strings\n    // >>> convertToStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](3.14, 5))\n    // >>> convertToStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](1, 2, 3))\n    def convert",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result += value\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        val result = List[String]()\n        for (val value : values) {\n            if (value instanceof String) {\n                result += value\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for floats\n    // >>> filterFloats((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Float](\"a\", 3.14, 5.0))\n    // >>> filterFloats((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Float](\"1\", \"2\", \"3\"))\n    def filterFloats(values : List[Any]) : List[Float] = {\n        val result = List[Float]()\n        for (val value : values) {\n            if (value instanceof Float) {\n                result += value\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", true, false))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](\"1\", true, false))\n",
    "        val result = mutable.List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l), 4l))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l), 4l, 5l))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l), 4l, 5l, 6l))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l), 4l, 5l, 6l, 7l))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l, 5l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l, 5l, 6l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l, 5l, 6l, 7l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l,",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l))))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l))))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l))))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong, 4l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l)))\n    // (List[Long](1l.toLong, 2l.toLong))\n    def filterIntegersInList(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l)))\n    // (List[Long](1l.toLong, 2l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegersInList2(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](a, 3.14, 5))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](1, 2, 3))\n    def filterStrings(values : List[Any]) : List[String] = {\n        var result = List[String]()\n        for (value : values) {\n            if (value instanceof String) {\n                result = result.append(value.toString)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](true, false, true))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](true, false, true))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        var result = List[Boolean]()\n        for (value : values) {\n            if (value instanceof Boolean) {\n                result = result.append(value.toBoolean)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for floats\n    // >>> filterFloats((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Float](3.14f, 5.0f))\n    // >>> filterFloats((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    //",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        val result = new ArrayList[String]()\n        for (val value : values) {\n            if (value instanceof String) {\n                result.add(value.toString)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for floats\n    // >>> filterFloats((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Float](\"a\", 3.14f, 5f))\n    // >>> filterFloats((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Float](\"1\", \"2\", \"3\"))\n    def filterFloats(values : List[Any]) : List[Float] = {\n        val result = new ArrayList[Float]()\n        for (val value : values) {\n            if (value instanceof Float) {\n                result.add(value.toFloat)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", true, false))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), \"abc\"))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), Map[Long,Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long](1l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long](1l, 2l)))\n",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l, 5l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l, 5l, 6l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l, 5l, 6l, 7l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            } else if (value instanceof Double) {\n                result.append(value.toLong)\n            } else if (value instanceof Float) {\n                result.append(value.toLong)\n            } else if (value instanceof String) {\n                result.append(Long.parseLong(value))\n            } else if (value instanceof Map[Long, Long]) {\n                val map = (Map[Long, Long]) value\n                for (key : map.keySet()) {\n                    result.append(key.toLong)\n                }\n            } else if (value instanceof List[Long]) {\n                val list = (List[Long]) value\n                for (val element : list) {\n                    result.append(element.toLong)\n                }\n            } else {\n                throw new IllegalArgumentException(\"Unsupported type: \" + value.getClass().getName())\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        val result = List[String]()\n        for (val value : values) {\n            if (value instanceof String) {\n                result = result.append(value.toString)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", \"true\", \"true\"))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](\"1\", \"2\", \"3\"))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        val result = List[Boolean]()\n        for (val value : values) {\n            if (value instanceof Boolean) {\n                result = result.append(value.toString)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for characters\n    // >>> filterCharacters((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Character](\"a\", \"3\", \"5\"))\n    // >>> filterCharacters((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        val result = List[String]()\n        for (val value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", \"true\", \"true\"))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](\"1\", \"2\", \"3\"))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        val result = List[Boolean]()\n        for (val value : values) {\n            if (value instanceof Boolean) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for maps\n    // >>> filterMaps((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Map[Long,Long]](Map[Long,Long](), Map[Long,Long](), Map[Long,Long](), Map[Long,Long](), Map[Long,Long](), Map[Long,Long](",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> convertToIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> convertToIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def convertToIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of strings\n    // >>> convertToStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> convertToStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def convertToStrings(values : List[Any]) : List[String] = {\n        var result = List[String]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toString())\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of strings\n    // >>> convertToStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> convertToStrings((List[Any](1l, 2l",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> convertToIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> convertToIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def convertToIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            } else if (value instanceof Double) {\n                result.add(((Double) value).toLong)\n            } else if (value instanceof Float) {\n                result.add(((Float) value).toLong)\n            } else if (value instanceof String) {\n                result.add(((String) value).toLong)\n            } else if (value instanceof scala.collection.immutable.Map) {\n                result.add(((scala.collection.immutable.Map) value).mapValues(v -> ((Long) v).toLong).toList().toList())\n            } else if (value instanceof scala.collection.immutable.List) {\n                result.add(((scala.collection.immutable.List) value).map(v -> ((Long) v).toLong).toList().toList())\n            } else if (value instanceof scala.collection.immutable.Vector) {\n                result.add(((scala.collection.immutable.Vector) value).map(v -> ((Long) v).toLong).toList().toList())\n            } else if (value instanceof scala.collection.immutable.Set) {\n                result.add(((scala",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> convertToIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> convertToIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def convertToIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            } else if (value instanceof Float) {\n                result = result.append(value.toInt)\n            } else if (value instanceof Double) {\n                result = result.append(value.toInt)\n            } else if (value instanceof String) {\n                result = result.append(Long.parseLong(value))\n            } else if (value instanceof scala.collection.immutable.Map) {\n                result = result.append(Long.parseLong(value.toString()))\n            } else if (value instanceof scala.collection.immutable.List) {\n                result = result.append(Long.parseLong(value.toString()))\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of strings\n    // >>> convertToStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](a, 3.14, 5))\n    // >>> convertToStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](1, 2",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        var result = List[String]()\n        for (value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", \"true\", \"true\"))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](\"1\", \"2\", \"3\"))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        var result = List[Boolean]()\n        for (value : values) {\n            if (value instanceof Boolean) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for characters\n    // >>> filterCharacters((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Character](\"a\", \"3\", \"5\"))\n    // >>> filterCharacters((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> to",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](3.14f.toString, 5.0.toString))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](1.0.toString, 2.0.toString, 3.0.toString))\n    def filterStrings(values : List[Any]) : List[String] = {\n        var result = List[String]()\n        for (value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](true, false))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](true, false))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        var result = List[Boolean]()\n        for (value : values) {\n            if (value instanceof Boolean) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for maps\n    // >>> filterMaps((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Map[Long,Long]]())\n    // >>> filterMaps((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    ",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](a, 3.14, 5))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](1, 2, 3))\n    def filterStrings(values : List[Any]) : List[String] = {\n        val result = new ArrayList[String]()\n        for (val value : values) {\n            if (value instanceof String) {\n                result.add(value.toString)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](true, false, true))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](true, false, true))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        val result = new ArrayList[Boolean]()\n        for (val value : values) {\n            if (value instanceof Boolean) {\n                result.add(value.toBoolean)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for floats\n    // >>> filterFloats((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Float](3.14f, 5.0f))\n    // >>> filterFloats((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        var result = List[Long]()\n        for (var value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (var value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (var value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        var result = List[String]()\n        for (value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", \"true\", \"true\"))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](\"1\", \"2\", \"3\"))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        var result = List[Boolean]()\n        for (value : values) {\n            if (value instanceof Boolean) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for maps\n    // >>> filterMaps((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Map[Long,Long]]())\n    // >>> filterMaps((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Map[",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to a list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            } else if (value instanceof Double) {\n                result.add(value.toLong)\n            } else if (value instanceof Float) {\n                result.add(value.toLong)\n            } else if (value instanceof String) {\n                result.add(Long.parseLong(value))\n            } else if (value instanceof scala.collection.immutable.Map) {\n                result.add(Long.parseLong(value.toString()))\n            } else if (value instanceof scala.collection.immutable.List) {\n                result.add(Long.parseLong(value.toString()))\n            } else if (value instanceof scala.collection.immutable.Set) {\n                result.add(Long.parseLong(value.toString()))\n            } else if (value instanceof scala.collection.immutable.Map$) {\n                result.add(Long.parseLong(value.toString()))\n            } else if (value instanceof scala.collection.immutable.Vector) {\n                result.add(Long.parseLong(value.toString()))\n            } else if (value instanceof scala.collection.imm",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        var result = List[Long]()\n        for (var value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (var value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (var value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result += value\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result += value\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result += value\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), \"abc\"))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), Map[Long,Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long](1l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long](1l, 2l)))\n    // (List[Long",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of doubles\n    // >>> toDoubles((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Double](3.14, 5.0))\n    // >>> toDoubles((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Double](1.0, 2.0, 3.0))\n    def toDoubles(values : List[Any]) : List[Double] = {\n        var result = List[Double]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toDouble)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of strings\n    // >>> toStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> toStrings((List[Any](1l, 2l, 3",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (",
    "        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> convertToIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> convertToIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def convertToIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            } else if (value instanceof Float) {\n                result.add(value.toLong)\n            } else if (value instanceof Double) {\n                result.add(value.toLong)\n            } else if (value instanceof String) {\n                result.add(Long.parseLong(value))\n            } else if (value instanceof Map[Long, Long]) {\n                result.addAll(convertToIntegers(((Map[Long, Long]) value).values()))\n            } else if (value instanceof List[Long]) {\n                result.addAll(convertToIntegers(((List[Long]) value)))\n            } else if (value instanceof scala.collection.immutable.Map[Long, Long]) {\n                result.addAll(convertToIntegers(((scala.collection.immutable.Map[Long, Long]) value).values()))\n            } else if (value instanceof scala.collection.immutable.List[Long]) {\n                result.addAll(convertToIntegers(((scala.collection.immutable.List[Long]) value)))\n            } else if (value instanceof scala.collection.immutable.",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        var result = List[String]()\n        for (value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", \"true\", \"true\"))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](\"1\", \"2\", \"3\"))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        var result = List[Boolean]()\n        for (value : values) {\n            if (value instanceof Boolean) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for maps\n    // >>> filterMaps((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Map[Long,Long]](Map[Long,Long](), Map[Long,Long](), Map[Long,Long](), Map[Long,Long](), Map[Long,Long](), Map[Long,Long]",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            } else if (value instanceof Float) {\n                result = result.append(value.toInt)\n            } else if (value instanceof Double) {\n                result = result.append(value.toInt)\n            } else if (value instanceof String) {\n                result = result.append(Long.parseLong(value))\n            } else if (value instanceof scala.collection.immutable.Map) {\n                result = result.append(value.get(0).toLong)\n            } else if (value instanceof scala.collection.immutable.List) {\n                result = result.append(value.apply(0).toLong)\n            } else {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]",
    "        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> convertToIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> convertToIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def convertToIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of strings\n    // >>> convertToStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](a, 3.14, 5))\n    // >>> convertToStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](1, 2, 3))\n    def convertToStrings(values : List[Any]) : List[String] = {\n        val result = List[String]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toString())\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of strings\n    // >>> convertToStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](a, 3.14, 5))\n    // >>> convertToStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        var result = List[String]()\n        for (value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", true, false))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](\"1\", true, false))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        var result = List[Boolean]()\n        for (value : values) {\n            if (value instanceof Boolean) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for floats\n    // >>> filterFloats((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Float](\"a\", 3.14f, 5f))\n    // >>> filterFloats((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](a, 3.14, 5))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](1, 2, 3, abc))\n    def filterStrings(values : List[Any]) : List[String] = {\n        val result = new ArrayList[String]()\n        for (val value : values) {\n            if (value instanceof String) {\n                result.add(value.toString)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](true, false, true))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](true, false, true))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        val result = new ArrayList[Boolean]()\n        for (val value : values) {\n            if (value instanceof Boolean) {\n                result.add(value.toBoolean)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for maps\n    // >>> filterMaps((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Map[Long,Long]](Map[Long,Long](), Map[Long,Long](), Map[Long,Long](), Map[Long,Long](), Map[Long,Long](), Map[Long,Long",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), \"abc\"))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), Map[Long,Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long](1l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long](1l, 2l)))\n    // (List[Long](",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l.toLong, 5l.toLong))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            } else if (value instanceof Float) {\n                result.append(value.toLong)\n            } else if (value instanceof Double) {\n                result.append(value.toLong)\n            } else if (value instanceof String) {\n                result.append(Long.parseLong(value))\n            } else if (value instanceof Map[Long, Long]) {\n                for (key : ((Map[Long, Long]) value).keySet()) {\n                    result.append(((Map[Long, Long]) value).get(key).toLong)\n                }\n            } else if (value instanceof List[Long]) {\n                for (value2 : ((List[Long]) value)) {\n                    result.append(value2.toLong)\n                }\n            } else {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of strings\n    // >>> toStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](3.14f, 5l))\n    // >>> toStrings((List[Any](1l, 2l, 3l,",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), \"abc\"))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), Map[Long,Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long](1l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()), List[Long](1l, 2l)))\n    // (List",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l), \"abc\"))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l), \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l), \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l), \"abc\"))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l), \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l",
    "        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l)))\n    // (List[Long](1l.toLong, 2l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l)))\n    // (List[Long](1l.toLong, 2l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of strings\n    // >>> toStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> toStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def toStrings(values : List[Any]) : List[String] = {\n        val result = new ArrayList[String]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toString)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of booleans\n    // >>> toBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](true, true, true))\n    // >>> toBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        val result = List[String]()\n        for (val value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", \"true\", \"true\"))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](\"1\", \"2\", \"3\"))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        val result = List[Boolean]()\n        for (val value : values) {\n            if (value instanceof Boolean) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for characters\n    // >>> filterCharacters((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Character](\"a\", \"3\", \"5\"))\n    // >>> filterCharacters((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l)))\n    // (List[Long](1l.toLong, 2l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l)))\n    // (List[Long](1l.toLong, 2l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Int || value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        var result = List[String]()\n        for (value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", true, false))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](\"1\", true, false))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        var result = List[Boolean]()\n        for (value : values) {\n            if (value instanceof Boolean) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for floats\n    // >>> filterFloats((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Float](\"a\", 3.14f, 5f))\n    // >>> filterFloats((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l)))\n    // (List[Long](1l.toLong, 2l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l)))\n    // (List[Long](1l.toLong, 2l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]",
    "        val result = mutable.List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> convertToIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> convertToIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def convertToIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            } else if (value instanceof Float) {\n                result = result.append(value.toInt)\n            } else if (value instanceof Double) {\n                result = result.append(value.toInt)\n            } else if (value instanceof String) {\n                result = result.append(Long.parseLong(value))\n            } else if (value instanceof scala.collection.immutable.Map) {\n                result = result.append(convertToIntegers(((scala.collection.immutable.Map) value).toList()))\n            } else if (value instanceof scala.collection.immutable.List) {\n                result = result.append(convertToIntegers(((scala.collection.immutable.List) value).toList()))\n            } else if (value instanceof scala.collection.mutable.List) {\n                result = result.append(convertToIntegers(((scala.collection.mutable.List) value).toList()))\n            } else if (value instanceof scala.collection.immutable.Set) {\n                result = result.append(convertToIntegers(((scala.collection.immutable.Set) value).toList()))\n            } else if (",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val valuesList = JavaConversions.asJavaList(values)\n        val result = new ArrayList[Long]()\n        for (val value : valuesList) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val valuesList = JavaConversions.asJavaList(values)\n        val result = new ArrayList[Long]()\n        for (val value : valuesList) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val valuesList = JavaConversions.asJavaList(values)\n        val result = new ArrayList[Long]()\n        for (val value : valuesList) {\n            if (value instanceof Long) {\n                result.add(((Long) value).toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        var result = List[String]()\n        for (value : values) {\n            if (value instanceof String) {\n                result = result.append(value.toString)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", true, false))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](\"1\", true, false))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        var result = List[Boolean]()\n        for (value : values) {\n            if (value instanceof Boolean) {\n                result = result.append(value.toBoolean)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for floats\n    // >>> filterFloats((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Float](\"a\", 3.14f, 5f))\n    // >>> filterFloats((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](),",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        val result = List[String]()\n        for (val value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", \"true\", \"true\"))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](\"1\", \"2\", \"3\"))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        val result = List[Boolean]()\n        for (val value : values) {\n            if (value instanceof Boolean) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for maps\n    // >>> filterMaps((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Map[Long,Long]](Map[Long,Long](), Map[Long,Long](), Map[Long,Long](), Map[Long,Long](), Map[Long,Long](), Map[Long,Long](",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result += value\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result += value\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result += value\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        ",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        var result = List[String]()\n        for (value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", \"true\", \"true\"))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](\"1\", \"2\", \"3\"))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        var result = List[Boolean]()\n        for (value : values) {\n            if (value instanceof Boolean) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for characters\n    // >>> filterCharacters((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Character](\"a\", \"3\", \"5\"))\n    // >>> filterCharacters((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n",
    "        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = new ArrayList[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result.add(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[",
    "        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for strings\n    // >>> filterStrings((List[Any](\"a\", 3.14f, 5l)))\n    // (List[String](\"a\", \"3.14\", \"5\"))\n    // >>> filterStrings((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[String](\"1\", \"2\", \"3\"))\n    def filterStrings(values : List[Any]) : List[String] = {\n        var result = List[String]()\n        for (value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for booleans\n    // >>> filterBooleans((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Boolean](\"a\", true, false))\n    // >>> filterBooleans((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Boolean](\"1\", true, false))\n    def filterBooleans(values : List[Any]) : List[Boolean] = {\n        var result = List[Boolean]()\n        for (value : values) {\n            if (value instanceof Boolean) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for floats\n    // >>> filterFloats((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Float](\"a\", 3.14f, 5f))\n    // >>> filterFloats((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long",
    "        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l, 3l))\n    def toIntegers(values : List[Any]) : List[Long] = {\n        val result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to list of integers\n    // >>> toIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](3l, 5l))\n    // >>> toIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l, 2l",
    "        val result = List[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to Scala Seq[Long]\n    // >>> seqToLongs(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // Seq[Long](1l, 2l, 3l)\n    def seqToLongs(values : List[Any]) : Seq[Long] = {\n        val result = Seq[Long]()\n        for (val value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to Scala Seq[String]\n    // >>> seqToStrings(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // Seq[String](1l, 2l, 3l)\n    def seqToStrings(values : List[Any]) : Seq[String] = {\n        val result = Seq[String]()\n        for (val value : values) {\n            if (value instanceof String) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to Scala Seq[Any]\n    // >>> seqToAny(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // Seq[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())\n    def seqToAny(values : List[Any]) : Seq[Any] = {\n        val result = Seq[Any]()\n        for (val value : values) {\n            result = result.append(value)\n        }\n        return result\n    }\n\n    // Convert given list of any scalathon values to Scala",
    "        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l)))\n    // (List[Long](1l.toLong, 2l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l)))\n    // (List[Long](1l.toLong, 2l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        val result = mutable.List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result.append(value.toLong)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // Filter given list of any scalathon values only for integers\n    // >>> filterIntegers((List[Any](\"a\", 3.14f, 5l)))\n    // (List[Long](5l.toLong))\n    // >>> filterIntegers((List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]())))\n",
    "        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long]()))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n            if (value instanceof Long) {\n                result = result.append(value)\n            }\n        }\n        return result\n    }\n\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    // >>> filterIntegers(List[Any](1l, 2l, 3l, \"abc\", Map[Long,Long](), List[Long](1l, 2l, 3l, 4l)))\n    // (List[Long](1l.toLong, 2l.toLong, 3l.toLong))\n    def filterIntegers(values : List[Any]) : List[Long] = {\n        var result = List[Long]()\n        for (value : values) {\n"
  ],
  "stop_tokens": [
    "\n    }\n"
  ]
}
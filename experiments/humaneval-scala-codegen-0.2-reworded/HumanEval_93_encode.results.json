{
  "name": "HumanEval_93_encode",
  "language": "scala",
  "prompt": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n",
  "tests": "    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (var i = 0; i < message.length(); i++) {\n            var c = message.charAt(i)\n            if (c.isLetter()) {\n                var index = vowels.indexOf(c)\n                if (index != -1) {\n                    result += vowels[(index + 2) % vowels.length]\n                } else {\n                    result += c\n                }\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp5xc7ih7z.scala:17:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5xc7ih7z.scala:17:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp5xc7ih7z.scala:17:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5xc7ih7z.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScal",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyb8d4hxb.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^a-zA-Z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            var index = c.charCodeAt(0) - 97\n            return (index < 2) ? String.fromCharCode(index + 26) : String.fromCharCode(index - 2)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpd6qz6jgx.scala:17:86 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mreturn\u001b[0m (index < \u001b[31m2\u001b[0m) ? String.fromCharCode(index + \u001b[31m26\u001b[0m) : String.fromCharCode(index - \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                                                                                      ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '(' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpd6qz6jgx.scala:18:9 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        })\n\u001b[31m\u001b[31m   |\u001b[0m         ^\u001b[0m\n\u001b[31m   |\u001b[0m         '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpd6qz6jgx.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp22vai2cy.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n        .toUpperCase()\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgeostjmc.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgeostjmc.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            c = c.toUpperCase\n            return c\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjo_grmyw.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            var c = message[i]\n            if (c in vowels) {\n                result = result + message[i + 2]\n            } else {\n                result = result + c\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcfw7px6b.scala:18:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mc\u001b[0m = message[\u001b[35mi\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                            Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpcfw7px6b.scala:20:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                result = result + message[\u001b[35mi\u001b[0m \u001b[35m+\u001b[0m \u001b[31m2\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Not found: type +\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            if (vowels.indexOf(message.charAt(i)) >= 0) {\n                result = result + message.charAt(i + 2)\n            } else {\n                result = result + message.charAt(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293073,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpgz8_oxuc.scala:27)\n\tat Problem.main(tmpgz8_oxuc.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            var index = scala.collection.JavaConversions.asScalaBuffer(Problem.encode.alphabet).indexOf(c)\n            if (index == -1) index = Problem.encode.alphabet.length\n            return Problem.encode.alphabet[index]\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpm401wurx.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            c = c.toLowerCase()\n            return (c.charAt(0) + c.charAt(1) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmxiz50zh.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            c = c.toLowerCase()\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpskr8zy96.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgcfe79h9.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgcfe79h9.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (var i = 0; i < message.length(); i++) {\n            var c = message.charAt(i)\n            if (c.toLowerCase() == c) {\n                result += c\n            } else {\n                var index = vowels.indexOf(c)\n                if (index != -1) {\n                    result += vowels[(index + 2) % vowels.length]\n                } else {\n                    result += c\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293073,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpjkx7cc__.scala:17:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjkx7cc__.scala:17:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpjkx7cc__.scala:17:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjkx7cc__.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScal",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (var i = 0; i < message.length(); i++) {\n            var c = message.charAt(i)\n            if (c.toLowerCase() == c) {\n                result += c\n            } else {\n                var j = i\n                while (j < message.length() && message.charAt(j) != c) {\n                    j += 1\n                }\n                if (j < message.length()) {\n                    result += vowels[(j - i) / 2]\n                } else {\n                    result += c\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293071,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpwfp58h3w.scala:17:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpwfp58h3w.scala:17:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpwfp58h3w.scala:17:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwfp58h3w.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScal",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (var i = 0; i < message.length(); i++) {\n            var c = message.charAt(i)\n            if (c.toLowerCase() == c) {\n                result += c\n            } else {\n                var index = vowels.indexOf(c)\n                if (index >= 0) {\n                    result += vowels[(index + 2) % vowels.length]\n                } else {\n                    result += c\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpbtablty9.scala:17:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpbtablty9.scala:17:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpbtablty9.scala:17:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpbtablty9.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScal",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            if (vowels.indexOf(message.charAt(i)) >= 0) {\n                result += message.charAt(i + 2)\n            } else {\n                result += message.charAt(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293073,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp90goe110.scala:27)\n\tat Problem.main(tmp90goe110.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbiqdws6z.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbiqdws6z.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[aeiouAEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOUAEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAlln    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmptevsuui9.scala:21:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAlln\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmptevsuui9.scala:23:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptevsuui9.scala:15:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[aeiouAEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptevsuui9.scala:18:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOUAEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when ",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            c.toUpperCase\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgseroa_e.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (var i = 0; i < message.length(); i++) {\n            var c = message.charAt(i)\n            if (c == ' ') {\n                result += c\n            } else if (vowels.indexOf(c) >= 0) {\n                result += vowels[vowels.indexOf(c) + 2]\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp3qax9jx1.scala:17:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp3qax9jx1.scala:17:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp3qax9jx1.scala:17:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3qax9jx1.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScal",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293073,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpecykt41x.scala:62:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpecykt41x.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpecykt41x.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpecykt41x.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpecykt41x.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpecykt41x.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpecykt41x.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[^A-Za-z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptndx80ty.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmptndx80ty.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (var i = 0; i < message.length(); i++) {\n            var c = message.charAt(i)\n            if (c.isLetter()) {\n                var index = vowels.indexOf(c)\n                if (index != -1) {\n                    result += vowels[(index + 2) % vowels.length]\n                } else {\n                    result += c\n                }\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp5xc7ih7z.scala:17:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5xc7ih7z.scala:17:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp5xc7ih7z.scala:17:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5xc7ih7z.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScal",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[^A-Z]\", \"\")\n        .replaceAll(\"[^a-z]\", \"\")\n        .replaceAll(\"[^0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-zA-Z0-9]\", \"\")\n        .replaceAll(\"[^a-z\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp4rcg0q00.scala:43:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m        .replaceAll(\"[^a-z\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmp4rcg0q00.scala:45:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4rcg0q00.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp4rcg0q00.scala:45:4 -------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Not found: [^a-zdef\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            var c = message.charAt(i)\n            if (c in vowels) {\n                result += c\n                result += message.charAt(i + 2)\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293077,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpwek8nolf.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mif\u001b[0m (c in vowels) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value in is not a member of Char\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgcfe79h9.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgcfe79h9.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            c = c.toUpperCase\n            return c\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjo_grmyw.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            if (vowels.indexOf(message.charAt(i)) >= 0) {\n                result += message.charAt(i + 2)\n            } else {\n                result += message.charAt(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293073,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp90goe110.scala:27)\n\tat Problem.main(tmp90goe110.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            var v = c.charCodeAt(0) - 87\n            return \"\" + (char)(v + 2)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwkmueiqu.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            var index = c.charCodeAt(0) - 97\n            return (index < 2) ? c : c.charAt(index + 2)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293073,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpob1ul0te.scala:17:45 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mreturn\u001b[0m (index < \u001b[31m2\u001b[0m) ? c : c.charAt(index + \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                                             ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '(' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpob1ul0te.scala:18:9 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        })\n\u001b[31m\u001b[31m   |\u001b[0m         ^\u001b[0m\n\u001b[31m   |\u001b[0m         '}' expected, but ')' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpob1ul0te.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp22vai2cy.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            var index = scala.collection.JavaConversions.asScalaBuffer(Problem.class.getClassLoader().getResourceAsStream(\"vowels.txt\")).toList().indexOf(c)\n            if (index == -1) {\n                return c\n            } else {\n                return scala.collection.JavaConversions.asScalaBuffer(Problem.class.getClassLoader().getResourceAsStream(\"vowels.txt\")).toList().get(index + 2)\n            }\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt8ozf84w.scala:16:79 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mindex\u001b[0m = scala.collection.JavaConversions.asScalaBuffer(Problem.\u001b[33mclass\u001b[0m.getClassLoader().getResourceAsStream(\u001b[31m\"vowels.txt\"\u001b[0m)).toList().indexOf(c)\n\u001b[31m\u001b[31m   |\u001b[0m                                                                               ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               an identifier expected, but 'class' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpt8ozf84w.scala:20:78 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                \u001b[33mreturn\u001b[0m scala.collection.JavaConversions.asScalaBuffer(Problem.\u001b[33mclass\u001b[0m.getClassLoader().getResourceAsStream(\u001b[31m\"vowels.txt\"\u001b[0m)).toList().get(index + \u001b[31m2\u001b[0m)\n\u001b[31m\u001b[31m   |\u001b[0m                                                                              ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               an identifier expected, but 'class' found\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt8ozf84w.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            if (c.length() == 1) {\n                return \"\"\n            }\n            return c.substring(1, 2)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpr9zh8_mr.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[^A-Za-z]\", \"\")\n        .toUpperCase()\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpufu4weta.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpufu4weta.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AE\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxqtq6uvg.scala:39:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m        .replaceAll(\"[AE\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmpxqtq6uvg.scala:41:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxqtq6uvg.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxqtq6uvg.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxqtq6uvg.scala:17:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxqtq6uvg.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available w",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase()).charAt(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzei4ynw7.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"3\"\n            if (c.equals(\"I\")) return \"1\"\n            if (c.equals(\"O\")) return \"0\"\n            if (c.equals(\"U\")) return \"V\"\n            return \"\"\n        })\n        .replaceAll(\"[^A-Z]\", \"\")\n        .toUpperCase()\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi3zzjzm7.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            c = c.toUpperCase\n            return c\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpjo_grmyw.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyb8d4hxb.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            c = c.toLowerCase()\n            if (c == \"a\") return \"A\"\n            if (c == \"e\") return \"E\"\n            if (c == \"i\") return \"I\"\n            if (c == \"o\") return \"O\"\n            if (c == \"u\") return \"U\"\n            return c\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            c = c.toLowerCase()\n            if (c == \"a\") return \"A\"\n            if (c == \"e\") return \"E\"\n            if (c == \"i\") return \"I\"\n            if (c == \"o\") return \"O\"\n            if (c == \"u\") return \"U\"\n            return c\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            c = c.toLowerCase()\n            if (c == \"a\") return \"A\"\n            if (c == \"e\") return \"E\"\n            if (c == \"i\") return \"I\"\n            if (c == \"o\") return \"O\"\n            if (c == \"u\") return \"U\"\n            return c\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            c = c.toLowerCase()\n            if (c == \"a\") return \"A\"\n            if (c == \"e\") return \"E\"\n            if (c == \"i\") return \"I\"\n            if (c == \"o\") return \"O\"\n            if (c == \"u\") return \"U\"\n            return c\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            c = c.toLowerCase()\n            if (c == \"a\") return \"A\"\n            if (c == \"e\") return \"E\"\n            if (c == \"i\") return \"I\"\n            if (c == \"o\") return \"O\"\n            if (c == \"u\") return \"U\"\n            return c\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp50mqtr08.scala:62:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp50mqtr08.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp50mqtr08.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp50mqtr08.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp50mqtr08.scala:33:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m33 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp50mqtr08.scala:42:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp50mqtr08.scala:51:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpss9b78l1.scala:62:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpss9b78l1.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpss9b78l1.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpss9b78l1.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpss9b78l1.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpss9b78l1.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpss9b78l1.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            var index = c.charCodeAt(0) - 87\n            return (index + 2) % 26 + 87\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpraxn6bsn.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n        .toUpperCase()\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgeostjmc.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgeostjmc.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"3\"\n            if (c.equals(\"I\")) return \"1\"\n            if (c.equals(\"O\")) return \"0\"\n            if (c.equals(\"U\")) return \"V\"\n            return \"\"\n        })\n        .replaceAll(\"[^A-Z]\", \"\")\n        .replaceAll(\"[^a-z]\", \"\")\n        .replaceAll(\"[^0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5owesx76.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"3\"\n            if (c.equals(\"I\")) return \"1\"\n            if (c.equals(\"O\")) return \"0\"\n            if (c.equals(\"U\")) return \"V\"\n            return \"\"\n        })\n        .replaceAll(\"[^A-Z]\", \"\")\n        .replaceAll(\"[^a-z]\", \"\")\n        .replaceAll(\"[^0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Z\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293079,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpy27ha1lm.scala:43:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m        .replaceAll(\"[^A-Z\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmpy27ha1lm.scala:45:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy27ha1lm.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy27ha1lm.scala:45:4 -------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Not found: [^A-Zdef\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (var i = 0; i < message.length(); i++) {\n            var c = message.charAt(i)\n            if (c.isLetter()) {\n                var index = vowels.indexOf(c)\n                if (index != -1) {\n                    result += vowels[(index + 2) % vowels.length]\n                } else {\n                    result += c\n                }\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp5xc7ih7z.scala:17:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5xc7ih7z.scala:17:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp5xc7ih7z.scala:17:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5xc7ih7z.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScal",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293078,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppq8j95gj.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AE\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293079,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqkxi5ssz.scala:39:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m        .replaceAll(\"[AE\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqkxi5ssz.scala:41:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqkxi5ssz.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqkxi5ssz.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqkxi5ssz.scala:17:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqkxi5ssz.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available w",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> (c + c))\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293078,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkh543cb0.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n        .toUpperCase()\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgeostjmc.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgeostjmc.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            if (c.length() == 1) {\n                return \"\"\n            } else {\n                return c.substring(1, 2)\n            }\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293078,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf23izxlh.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            if (c == 'a') return '2'\n            if (c == 'e') return '3'\n            if (c == 'i') return '1'\n            if (c == 'o') return '0'\n            if (c == 'u') return '7'\n            return c\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293079,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbgu02sf8.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293079,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpolvqy3l0.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpolvqy3l0.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpolvqy3l0.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpolvqy3l0.scala:23:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpolvqy3l0.scala:31:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpolvqy3l0.scala:39:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpolvqy3l0.scala:47:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (var i = 0; i < message.length(); i++) {\n            var c = message.charAt(i)\n            if (c.toLowerCase() == c) {\n                result += c.toUpperCase()\n            } else if (vowels.indexOf(c) >= 0) {\n                result += message.charAt(i + 2)\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293085,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp_wnj2wxz.scala:17:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp_wnj2wxz.scala:17:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp_wnj2wxz.scala:17:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp_wnj2wxz.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScal",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyb8d4hxb.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            c = c.toLowerCase()\n            if (c == 'a') return '2'\n            if (c == 'e') return '3'\n            if (c == 'i') return '1'\n            if (c == 'o') return '0'\n            if (c == 'u') return '7'\n            return c\n        })\n        .replaceAll(\"[^A-Z]\", \"\")\n        .replaceAll(\"[^a-z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293079,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt9zz131l.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            if (vowels.indexOf(message.charAt(i)) >= 0) {\n                result += message.charAt(i + 2)\n            } else {\n                result += message.charAt(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293073,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp90goe110.scala:27)\n\tat Problem.main(tmp90goe110.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> (c + c))\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293078,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkh543cb0.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp22vai2cy.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var vowelsIndex = 0\n        var messageIndex = 0\n        var encoded = \"\"\n        while (messageIndex < message.length) {\n            var letter = message[messageIndex]\n            if (letter.toLowerCase() == letter) {\n                encoded += letter\n            } else {\n                var index = vowelsIndex\n                while (index < vowels.length && vowels[index] != letter) {\n                    index += 1\n                }\n                if (index == vowels.length) {\n                    encoded += vowels[vowelsIndex]\n                    vowelsIndex += 1\n                } else {\n                    encoded += vowels[index]\n                }\n            }\n            messageIndex += 1\n        }\n        return encoded\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnxw2_543.scala:20:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m            \u001b[33mvar\u001b[0m \u001b[36mletter\u001b[0m = message[\u001b[35mmessageIndex\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                 Not found: type messageIndex\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnxw2_543.scala:25:55 ------------------------\u001b[0m\u001b[0m\n\u001b[31m25 |\u001b[0m                \u001b[33mwhile\u001b[0m (index < vowels.length && vowels[\u001b[35mindex\u001b[0m] != letter) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                       ^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: type index\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnxw2_543.scala:29:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                    encoded += vowels[\u001b[35mvowelsIndex\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnxw2_543.scala:29:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m29 |\u001b[0m                    encoded += vowels[\u001b[35mvowelsIndex\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                                      ^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                                      Not found: type vowelsIndex\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpnxw2_543.scala:32:28 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m                    encoded += vowels[\u001b[35mindex\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                    ^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnxw2_543.scala:32:38 ------------------------\u001b[0m\u001b[0m\n\u001b[31m32 |\u001b[0m                    encoded +=",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (var i = 0; i < message.length(); i++) {\n            var c = message.charAt(i)\n            if (c.toLowerCase() == c) {\n                result += c\n            } else {\n                var index = vowels.indexOf(c)\n                if (index != -1) {\n                    result += vowels[(index + 2) % vowels.length]\n                } else {\n                    result += c\n                }\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293073,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpjkx7cc__.scala:17:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpjkx7cc__.scala:17:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmpjkx7cc__.scala:17:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpjkx7cc__.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScal",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var vowels2 = \"AEIOU\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            if (vowels.indexOf(message.charAt(i)) >= 0) {\n                result += vowels2[vowels.indexOf(message.charAt(i))]\n            } else {\n                result += message.charAt(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293083,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpknzmitif.scala:20:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                result += vowels2[vowels.indexOf(message.charAt(i))]\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpknzmitif.scala:20:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                result += vowels2[vowels.indexOf(message.charAt(i))]\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> (c + c))\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293080,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3z5k23m7.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> (c + c))\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293080,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3z5k23m7.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyb8d4hxb.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"3\"\n            if (c.equals(\"I\")) return \"1\"\n            if (c.equals(\"O\")) return \"0\"\n            if (c.equals(\"U\")) return \"V\"\n            return \"\"\n        })\n        .replaceAll(\"[^A-Z]\", \"\")\n        .replaceAll(\"[^a-z]\", \"\")\n        .replaceAll(\"[^0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5owesx76.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            if (vowels.indexOf(message.charAt(i)) != -1) {\n                result += message.charAt(i + 2)\n            } else {\n                result += message.charAt(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293085,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpgimapt1v.scala:27)\n\tat Problem.main(tmpgimapt1v.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpss9b78l1.scala:62:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpss9b78l1.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpss9b78l1.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpss9b78l1.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpss9b78l1.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpss9b78l1.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpss9b78l1.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            var v = c.charCodeAt(0) - 87\n            return (v + 2) % 26 + 65\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293080,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp355tcsu8.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).toUpperCase()\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).toUpperCase()\n        })\n        .replaceAll(\"[AEIOUaeiou]\", (c) -> {\n            return (c + c).toUpperCase()\n        })\n        .replaceAll(\"[AEIOUaeiouAEIOU]\", (c) -> {\n            return (c + c).toUpperCase()\n        })\n        .replaceAll(\"[AEIOUaeiouAEIOUAEIOU]\", (c) -> {\n            return (c + c).toUpperCase()\n        })\n        .replaceAll(\"[AEIOUaeiouAEIOUAEIOUAEIOU]\", (c) -> {\n            return (c + c).toUpperCase()\n        })\n        .replaceAll(\"[AEIOUaeiouAEIOUAEIOUAEIOUAEIOU]\", (c) -> {\n            return (c + c).toUpperCase()\n        })\n        .replaceAll(\"[AEIOUaeiouAEIOUAEIOUAEIOUAEIOUAEIOU]\", (c) -> {\n            return (c + c).toUpperCase()\n        })\n        .replaceAll(\"[AEIOUaeiouAEIOUAEIOUAEIOUAEIOUAEIOUAEIOU]\", (c) -> {\n            return (c + c).toUpperCase()\n        })\n        .replaceAll(\"[AEIOUaeiouAEIOUAEIOUAEIOUAEIOUAEIOUAEIOUAEIOU]\", (c) -> {\n            return (c + c).toUpperCase()\n        })\n        .replaceAll(\"[AEIOUaeiouAEIOUAEIOUAEIOUAEIOUAEIOUAEIOUAEIOUAEIOU]\", (c) -> {\n            return (c + c).toUpperCase()\n        })\n        .replaceAll(\"[AEIOUaeiouAE\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293081,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpibpdgz45.scala:48:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m48 |\u001b[0m        .replaceAll(\"[AEIOUaeiouAE\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmpibpdgz45.scala:50:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m50 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpibpdgz45.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpibpdgz45.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpibpdgz45.scala:21:37 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOUaeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                     ^\u001b[0m\n\u001b[31m   |\u001b[0m                                     Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpibpdgz45.scala:24:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOUaeiouAEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m lon",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgcfe79h9.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgcfe79h9.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^a-zA-Z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbiqdws6z.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbiqdws6z.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293079,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpolvqy3l0.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpolvqy3l0.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpolvqy3l0.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpolvqy3l0.scala:23:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpolvqy3l0.scala:31:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpolvqy3l0.scala:39:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpolvqy3l0.scala:47:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase()).charAt(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzei4ynw7.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293081,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpof02tpkn.scala:42:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m        .replaceAll(\"[^\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmpof02tpkn.scala:44:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpof02tpkn.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpof02tpkn.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpof02tpkn.scala:44:4 -------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Not found: [^def\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            c.toString.charAt(2)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293081,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpipctl5tx.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyb8d4hxb.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^a-zA-Z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            c.toUpperCase\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgseroa_e.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^a-zA-Z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            if (vowels.indexOf(message.charAt(i)) != -1) {\n                result += message.charAt(i + 2)\n            } else {\n                result += message.charAt(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293085,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmpgimapt1v.scala:27)\n\tat Problem.main(tmpgimapt1v.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase()).charAt(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzei4ynw7.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return \"\" + ((c.charAt(0) + 2) % 26) + c.charAt(1)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293081,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp2o4_hmz7.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            var c = message.charAt(i)\n            if (c in vowels) {\n                result += message.charAt(i + 2)\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293085,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3w17sxny.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mif\u001b[0m (c in vowels) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value in is not a member of Char\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293073,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpecykt41x.scala:62:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpecykt41x.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpecykt41x.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpecykt41x.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpecykt41x.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpecykt41x.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpecykt41x.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            var i = c.charCodeAt(0)\n            return (i + 2) % 26 + 65\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293081,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpaepg80hj.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[^A-Z]\", \"\")\n        .replaceAll(\"[^a-z]\", \"\")\n        .replaceAll(\"[^0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[A-Z][A-Z]\", (c) -> {\n            if (c.equals(\"AA\")) return \"T\"\n            if (c.equals(\"AE\")) return \"H\"\n            if (c.equals(\"AH\")) return \"S\"\n            if (c.equals(\"AO\")) return \"K\"\n            if (c.equals(\"AW\")) return \"C\"\n            if (c.equals(\"AY\")) return \"Y\"\n            if (c.equals(\"BA\")) return \"P\"\n            if (c.equals(\"BE\")) return \"F\"\n            if (c.equals(\"BI\")) return \"B\"\n            if (c.equals(\"BO\")) return \"M\"\n            if (c.equals(\"BU\")) return \"W\"\n            if (c.equals(\"CA\")) return \"J\"\n            if (c.equals(\"CE\")) return \"X\"\n            if (c.equals(\"CH\")) return \"K\"\n            if (c.equals(\"CI\")) return \"S\"\n            if (c.equals(\"CO\")) return \"L\"\n            if (c.equals(\"CU\")) return \"Q\"\n            if (c.equals(\"DA\")) return \"D\"\n            if (c.equals(\"DE\")) return \"G\"\n            if (c.equals(\"DI\")) return \"N\"\n            if (c.equals(\"DO\")) return \"O\"\n            if (c.equals(\"D\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293080,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpxgix_yaa.scala:49:25 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m49 |\u001b[0m            \u001b[33mif\u001b[0m (c.equals(\"D\n\u001b[31m\u001b[31m   |\u001b[0m                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                         unclosed string literal\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxgix_yaa.scala:51:34 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m51 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  ')' expected, but '=' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpxgix_yaa.scala:60:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m60 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxgix_yaa.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpxgix_yaa.scala:27:35 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .replaceAll(\u001b[31m\"[A-Z][A-Z]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[aeiou]\", (c) -> {\n            if (c.equals(\"a\")) return \"A\"\n            if (c.equals(\"e\")) return \"E\"\n            if (c.equals(\"i\")) return \"I\"\n            if (c.equals(\"o\")) return \"O\"\n            if (c.equals(\"u\")) return \"U\"\n            return \"\"\n        })\n        .replaceAll(\"[A-Za-z]\", (c) -> {\n            if (c.equals(\"A\")) return \"a\"\n            if (c.equals(\"E\")) return \"e\"\n            if (c.equals(\"I\")) return \"i\"\n            if (c.equals(\"O\")) return \"o\"\n            if (c.equals(\"U\")) return \"u\"\n            return \"\"\n        })\n        .replaceAll(\"[0-9]\", \"\")\n        .toLowerCase()\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293081,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1y_jjh9l.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1y_jjh9l.scala:23:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m        .replaceAll(\u001b[31m\"[A-Za-z]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            if (c == 'a') return '2'\n            if (c == 'e') return '3'\n            if (c == 'i') return '1'\n            if (c == 'o') return '0'\n            if (c == 'u') return '7'\n            return c\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293079,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbgu02sf8.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            c = c.toLowerCase()\n            return (c + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            c = c.toLowerCase()\n            return (c + c.toUpperCase())\n        })\n        .replaceAll(\"[^a-zA-Z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293084,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp98qxdlwf.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp98qxdlwf.scala:19:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"AEIOU\"\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            if (vowels.contains(message[i])) {\n                result = result + message[i] + message[i + 2]\n            } else {\n                result = result + message[i]\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293086,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfao_3yx6.scala:18:40 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m            \u001b[33mif\u001b[0m (vowels.contains(message[\u001b[35mi\u001b[0m])) {\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                        Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfao_3yx6.scala:19:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                result = result + message[\u001b[35mi\u001b[0m] + message[\u001b[35mi\u001b[0m \u001b[35m+\u001b[0m \u001b[31m2\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfao_3yx6.scala:19:57 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                result = result + message[\u001b[35mi\u001b[0m] + message[\u001b[35mi\u001b[0m \u001b[35m+\u001b[0m \u001b[31m2\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                                                         ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                       Not found: type +\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpfao_3yx6.scala:21:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                result = result + message[\u001b[35mi\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            c.toUpperCase\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgseroa_e.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\"\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            if (vowels.contains(message[i])) {\n                result = result + message[i + 2]\n            } else {\n                result = result + message[i]\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293085,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiqh67z6u.scala:18:40 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m            \u001b[33mif\u001b[0m (vowels.contains(message[\u001b[35mi\u001b[0m])) {\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                        Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiqh67z6u.scala:19:44 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                result = result + message[\u001b[35mi\u001b[0m \u001b[35m+\u001b[0m \u001b[31m2\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            Not found: type +\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpiqh67z6u.scala:21:42 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                result = result + message[\u001b[35mi\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                          Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            c.toUpperCase()\n            return c\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            c.toLowerCase()\n            return c\n        })\n        .replaceAll(\"[^a-zA-Z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293086,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7stpvd49.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp7stpvd49.scala:19:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        }).replaceAll(\"[^a-z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293085,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpus7hbcl8.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293073,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpecykt41x.scala:62:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m62 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpecykt41x.scala:71:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m71 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpecykt41x.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpecykt41x.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpecykt41x.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpecykt41x.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpecykt41x.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            c2 = c.charAt(2)\n            return c2 if c2.isLetter() else c2.toLowerCase\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293085,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp3xepuztn.scala:17:22 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            \u001b[33mreturn\u001b[0m c2 \u001b[33mif\u001b[0m c2.isLetter() \u001b[33melse\u001b[0m c2.toLowerCase\n\u001b[31m\u001b[31m   |\u001b[0m                      ^^\u001b[0m\n\u001b[31m   |\u001b[0m                      end of statement expected but 'if' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3xepuztn.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyb8d4hxb.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> (c + c))\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293080,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3z5k23m7.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[AE\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293079,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpqkxi5ssz.scala:39:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m        .replaceAll(\"[AE\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmpqkxi5ssz.scala:41:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m41 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqkxi5ssz.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqkxi5ssz.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqkxi5ssz.scala:17:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqkxi5ssz.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available w",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyb8d4hxb.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n        .toUpperCase()\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgeostjmc.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgeostjmc.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            var i = c.toCharArray(0, 1).toUpperCase()\n            i[1] = c.toLowerCase()\n            return i.toString()\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293086,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpudr9uz3r.scala:17:17 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m            i[\u001b[31m1\u001b[0m] = c.toLowerCase()\n\u001b[31m\u001b[31m   |\u001b[0m                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpudr9uz3r.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^a-zA-Z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbiqdws6z.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbiqdws6z.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^a-zA-Z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293078,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppq8j95gj.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyb8d4hxb.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            var c = message.charAt(i)\n            if (c in vowels) {\n                result = result + c + c\n            } else {\n                result = result + c.toUpperCase()\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpt1vg39gl.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mif\u001b[0m (c in vowels) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value in is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpt1vg39gl.scala:22:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                result = result + c.toUpperCase()\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^^^^^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                               value toUpperCase is not a member of Char\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"3\"\n            if (c.equals(\"I\")) return \"1\"\n            if (c.equals(\"O\")) return \"0\"\n            if (c.equals(\"U\")) return \"V\"\n            return \"\"\n        })\n        .replaceAll(\"[^A-Z]\", \"\")\n        .replaceAll(\"[^a-z]\", \"\")\n        .replaceAll(\"[^0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293075,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp5owesx76.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> (c + c))\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293080,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3z5k23m7.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toUpperCase.replaceAll(\"[AEIOU]\", (c) -> (c + c))\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293087,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpypjdm20x.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toUpperCase.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            var c = message.charAt(i)\n            if (c in vowels) {\n                result += message.charAt(i + 2)\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293085,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3w17sxny.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mif\u001b[0m (c in vowels) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value in is not a member of Char\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n        .toUpperCase()\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgeostjmc.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgeostjmc.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (var i = 0; i < message.length(); i++) {\n            var c = message.charAt(i)\n            if (c.isLetter()) {\n                var index = vowels.indexOf(c)\n                if (index != -1) {\n                    result += vowels[(index + 2) % vowels.length]\n                } else {\n                    result += c\n                }\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp5xc7ih7z.scala:17:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5xc7ih7z.scala:17:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp5xc7ih7z.scala:17:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5xc7ih7z.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScal",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293078,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppq8j95gj.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgcfe79h9.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgcfe79h9.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> (c + c))\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293080,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3z5k23m7.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293087,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_jt8aahv.scala:42:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m        .replaceAll(\"[^A-Za-z0-9\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_jt8aahv.scala:44:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_jt8aahv.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_jt8aahv.scala:44:4 -------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Not found: [^A-Za-z0-9def\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase()).charAt(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzei4ynw7.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[^A-Z]\", \"\")\n        .replaceAll(\"[^a-z]\", \"\")\n        .replaceAll(\"[^0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Z\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293087,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp0u6q73i6.scala:43:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m        .replaceAll(\"[^A-Z\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmp0u6q73i6.scala:45:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0u6q73i6.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp0u6q73i6.scala:45:4 -------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Not found: [^A-Zdef\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            if (c.equals(\"a\")) return \"2\"\n            if (c.equals(\"e\")) return \"3\"\n            if (c.equals(\"i\")) return \"1\"\n            if (c.equals(\"o\")) return \"0\"\n            if (c.equals(\"u\")) return \"4\"\n            return \"\"\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293087,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3ex_v81z.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            c.toUpperCase()\n            return \"\"\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            c.toLowerCase()\n            return \"\"\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293087,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpwttj2iws.scala:44:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m        .replaceAll(\"[^A\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmpwttj2iws.scala:46:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwttj2iws.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwttj2iws.scala:19:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwttj2iws.scala:46:4 -------------------------\u001b[0m\u001b[0m\n\u001b[31m46 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Not found: [^Adef\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            if (c.length() == 1) {\n                return \"\"\n            } else {\n                return c.substring(1, 2)\n            }\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293078,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpf23izxlh.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[aeiou]\", (c) -> {\n            var v = c.toLowerCase()\n            return (v.charAt(0) + v.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293087,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprtdn5afw.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            var c = message.charAt(i)\n            if (c in vowels) {\n                result += c + message.charAt(i + 2)\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpkmj9ygsv.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mif\u001b[0m (c in vowels) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value in is not a member of Char\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^a-zA-Z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^a-zA-Z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var vowels2 = \"AEIOU\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            if (vowels.indexOf(message[i]) >= 0) {\n                result += vowels2[vowels.indexOf(message[i])]\n            } else {\n                result += message[i]\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpz558t0h4.scala:20:48 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                result += vowels2[vowels.indexOf(message[i])]\n\u001b[31m\u001b[31m   |\u001b[0m                                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             ']' expected, but '(' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz558t0h4.scala:19:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mif\u001b[0m (vowels.indexOf(message[\u001b[35mi\u001b[0m]) >= \u001b[31m0\u001b[0m) {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz558t0h4.scala:20:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m                result += vowels2[vowels.indexOf(message[i])]\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpz558t0h4.scala:22:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                result += message[\u001b[35mi\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpz558t0h4.scala:22:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m22 |\u001b[0m                result += message[\u001b[35mi\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase()).charAt(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzei4ynw7.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (var i = 0; i < message.length(); i++) {\n            var c = message.charAt(i)\n            if (c.isLetter()) {\n                var index = vowels.indexOf(c)\n                if (index != -1) {\n                    result += vowels[(index + 2) % vowels.length]\n                } else {\n                    result += c\n                }\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293072,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp5xc7ih7z.scala:17:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp5xc7ih7z.scala:17:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmp5xc7ih7z.scala:17:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp5xc7ih7z.scala:17:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m17 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScal",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[aeiou]\", (c) -> {\n            if (c.equals(\"a\")) return \"A\"\n            if (c.equals(\"e\")) return \"E\"\n            if (c.equals(\"i\")) return \"I\"\n            if (c.equals(\"o\")) return \"O\"\n            if (c.equals(\"u\")) return \"U\"\n            return \"\"\n        })\n        .replaceAll(\"[A-Za-z]\", (c) -> {\n            if (c.equals(\"A\")) return \"a\"\n            if (c.equals(\"E\")) return \"e\"\n            if (c.equals(\"I\")) return \"i\"\n            if (c.equals(\"O\")) return \"o\"\n            if (c.equals(\"U\")) return \"u\"\n            return \"\"\n        })\n        .replaceAll(\"[0-9]\", \"\")\n        .toUpperCase()\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293088,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpscv1orzr.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpscv1orzr.scala:23:33 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m        .replaceAll(\u001b[31m\"[A-Za-z]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\"\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            if (vowels.contains(message[i])) {\n                result += message[i + 2]\n            } else {\n                result += message[i]\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293092,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5f0p_1y.scala:18:40 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m            \u001b[33mif\u001b[0m (vowels.contains(message[\u001b[35mi\u001b[0m])) {\n\u001b[31m\u001b[31m   |\u001b[0m                                        ^\u001b[0m\n\u001b[31m   |\u001b[0m                                        Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpt5f0p_1y.scala:19:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                result += message[\u001b[35mi\u001b[0m \u001b[35m+\u001b[0m \u001b[31m2\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5f0p_1y.scala:19:36 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m                result += message[\u001b[35mi\u001b[0m \u001b[35m+\u001b[0m \u001b[31m2\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                                    Not found: type +\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmpt5f0p_1y.scala:21:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                result += message[\u001b[35mi\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpt5f0p_1y.scala:21:34 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                result += message[\u001b[35mi\u001b[0m]\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                  Not found: type i\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293078,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmppq8j95gj.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"G\"\n            return \"\"\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmp_lfdwkh7.scala:42:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m        .replaceAll(\"[^A-Za-z0-9\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmp_lfdwkh7.scala:44:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_lfdwkh7.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp_lfdwkh7.scala:44:4 -------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Not found: [^A-Za-z0-9def\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[^A-Z]\", \"\")\n        .replaceAll(\"[^a-z]\", \"\")\n        .replaceAll(\"[^0-9]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmphtzi3o8j.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            if (c == 'a') return '2'\n            if (c == 'e') return '3'\n            if (c == 'i') return '1'\n            if (c == 'o') return '0'\n            if (c == 'u') return '7'\n            return c\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293079,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbgu02sf8.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            var c = message.charAt(i)\n            if (c in vowels) {\n                result += message.charAt(i + 2)\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293085,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp3w17sxny.scala:19:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m19 |\u001b[0m            \u001b[33mif\u001b[0m (c in vowels) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value in is not a member of Char\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293081,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpof02tpkn.scala:42:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m        .replaceAll(\"[^\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmpof02tpkn.scala:44:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpof02tpkn.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpof02tpkn.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpof02tpkn.scala:44:4 -------------------------\u001b[0m\u001b[0m\n\u001b[31m44 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Not found: [^def\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n5 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> (c + c))\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293080,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp3z5k23m7.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"K\"\n            if (c.equals(\"U\")) return \"C\"\n            return \"\"\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293079,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpolvqy3l0.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpolvqy3l0.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpolvqy3l0.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpolvqy3l0.scala:23:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m23 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpolvqy3l0.scala:31:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m31 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpolvqy3l0.scala:39:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m39 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpolvqy3l0.scala:47:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m47 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            var index = scala.collection.JavaConversions.asScalaBuffer(Arrays.asList(\"a\", \"e\", \"i\", \"o\", \"u\")).indexOf(c)\n            return scala.collection.JavaConversions.asScalaBuffer(Arrays.asList(\"2\", \"0\", \"1\", \"3\", \"4\")).apply(index)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293090,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpj30lv1hr.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^a-zA-Z]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpuq_gzfph.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            var index = c.charCodeAt(0) - 97\n            return (index + 2) % 26 + 97\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpwh44a7gy.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            if (c == 'a') return '2'\n            if (c == 'e') return '3'\n            if (c == 'i') return '1'\n            if (c == 'o') return '0'\n            if (c == 'u') return '7'\n            return c\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293079,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbgu02sf8.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[^A-Za-z]\", \"\")\n        .toUpperCase()\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpufu4weta.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpufu4weta.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpyb8d4hxb.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            if (c.length() == 1) {\n                return c.toUpperCase()\n            } else {\n                return c.substring(0, 2) + c.substring(1, 2).toUpperCase()\n            }\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpeyjovdjm.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c).charAt(0)\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n        .toUpperCase()\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgeostjmc.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpgeostjmc.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> (c + c))\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293078,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkh543cb0.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"H\"\n            if (c.equals(\"I\")) return \"S\"\n            if (c.equals(\"O\")) return \"C\"\n            if (c.equals(\"U\")) return \"G\"\n            return \"\"\n        })\n        .replaceAll(\"[^A-Z]\", \"\")\n        .replaceAll(\"[^a-z]\", \"\")\n        .replaceAll(\"[^0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293091,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpi70iecpa.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase()).charAt(1)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293092,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpnp_85e37.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            c = c.toLowerCase()\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpskr8zy96.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return \"\" + (c.charAt(0) + 2)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293092,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpqxry40vh.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            c = c.toLowerCase()\n            if (c == 'a') return '2'\n            if (c == 'e') return '3'\n            if (c == 'i') return '1'\n            if (c == 'o') return '0'\n            if (c == 'u') return '7'\n            return c\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293092,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmper30kjzz.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> (c + c))\n        .replaceAll(\"[aeiou]\", (c) -> (c + c))\n        .replaceAll(\"[^a-zA-Z]\", \"\")\n        .toLowerCase()\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293092,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprdgvc6l1.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmprdgvc6l1.scala:16:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m16 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> (c + c))\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n2 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase()).charAt(0)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293074,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpzei4ynw7.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            if (c == 'a') return '2'\n            if (c == 'e') return '3'\n            if (c == 'i') return '1'\n            if (c == 'o') return '0'\n            if (c == 'u') return '7'\n            return c\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293079,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpbgu02sf8.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var vowels2 = \"AEIOU\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            var c = message.charAt(i)\n            if (c in vowels) {\n                result += vowels2[(vowels.indexOf(c) + 2) % vowels.length]\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293093,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1v6zmkvz.scala:21:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                result += vowels2[(vowels.indexOf(c) + \u001b[31m2\u001b[0m) \u001b[35m%\u001b[0m vowels.length]\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             ')' expected, but '(' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1v6zmkvz.scala:20:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m            \u001b[33mif\u001b[0m (c in vowels) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value in is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1v6zmkvz.scala:21:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                result += vowels2[(vowels.indexOf(c) + \u001b[31m2\u001b[0m) \u001b[35m%\u001b[0m vowels.length]\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1v6zmkvz.scala:21:58 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                result += vowels2[(vowels.indexOf(c) + \u001b[31m2\u001b[0m) \u001b[35m%\u001b[0m vowels.length]\n\u001b[31m\u001b[31m   |\u001b[0m                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                       Not found: type %\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            var v = c.toString()\n            return (v.length() == 2) ? v.charAt(1) : c\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293092,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpdl2cc0vq.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293067,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:57:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m57 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but 'def' found\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpb0chrand.scala:66:0 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m66 |\u001b[0m\n\u001b[31m\u001b[31m   |\u001b[0m^\u001b[0m\n\u001b[31m   |\u001b[0m'}' expected, but eof found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:21:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m        .replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:24:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m24 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpb0chrand.scala:27:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m27 |\u001b[0m        .repl",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var vowels2 = \"AEIOU\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            var c = message.charAt(i)\n            if (c in vowels) {\n                result += vowels2[(vowels.indexOf(c) + 2) % vowels.length]\n            } else {\n                result += c\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293093,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmp1v6zmkvz.scala:21:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                result += vowels2[(vowels.indexOf(c) + \u001b[31m2\u001b[0m) \u001b[35m%\u001b[0m vowels.length]\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                             ')' expected, but '(' found\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1v6zmkvz.scala:20:18 ------------------------\u001b[0m\u001b[0m\n\u001b[31m20 |\u001b[0m            \u001b[33mif\u001b[0m (c in vowels) {\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^\u001b[0m\n\u001b[31m   |\u001b[0m                value in is not a member of Char\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmp1v6zmkvz.scala:21:23 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                result += vowels2[(vowels.indexOf(c) + \u001b[31m2\u001b[0m) \u001b[35m%\u001b[0m vowels.length]\n\u001b[31m\u001b[31m   |\u001b[0m                ^^^^^^^^^\u001b[0m\n\u001b[31m   |\u001b[0m            value += is not a member of String - did you mean String.!=?\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmp1v6zmkvz.scala:21:58 ------------------------\u001b[0m\u001b[0m\n\u001b[31m21 |\u001b[0m                result += vowels2[(vowels.indexOf(c) + \u001b[31m2\u001b[0m) \u001b[35m%\u001b[0m vowels.length]\n\u001b[31m\u001b[31m   |\u001b[0m                                                          ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                       Not found: type %\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            var v = c.charCodeAt(0)\n            return (v + 2) % 26 + 65\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293092,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpewhulir5.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\",\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293093,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkfkqavrz.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkfkqavrz.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkfkqavrz.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var vowelsIndex = 0\n        var result = \"\"\n        for (var i = 0; i < message.length(); i++) {\n            var c = message.charAt(i)\n            if (c.toLowerCase() == c) {\n                result += c\n            } else if (vowelsIndex < 2 && c.toLowerCase() == vowels[vowelsIndex]) {\n                result += vowels[vowelsIndex + 2]\n                vowelsIndex += 1\n            } else {\n                result += c.toLowerCase()\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293094,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmplszuyz7y.scala:18:13 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m             ^^^\u001b[0m\n\u001b[31m   |\u001b[0m             pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmplszuyz7y.scala:18:44 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                            ^\u001b[0m\n\u001b[31m   |\u001b[0m                                            '<-' expected, but ';' found\n\u001b[31m\u001b[31m-- [E032] Syntax Error: /tmp/tmplszuyz7y.scala:18:49 ---------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                                                 ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                 pattern expected\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E008] Not Found Error: /tmp/tmplszuyz7y.scala:18:22 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        \u001b[33mfor\u001b[0m (\u001b[33mvar\u001b[0m i = \u001b[31m0\u001b[0m; i < message.length(); i++) {\n\u001b[31m\u001b[31m   |\u001b[0m                      ^\u001b[0m\n\u001b[31m   |\u001b[0mvalue withFilter is not a member of Null, but could be made available as an extension method.\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0mOne of the following imports might fix the problem:\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m  import Option.option2Iterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip2.lazyZip2ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip3.lazyZip3ToIterable\n\u001b[31m   |\u001b[0m  import collection.LazyZip4.lazyZip4ToIterable\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\u001b[31m   |\u001b[0m  import collection.convert.ImplicitConversions.enumeration AsScal",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[aeiou]\", (c) -> {\n            return (c.toLowerCase() + c.toUpperCase())\n        })\n        .replaceAll(\"[^A-Za-z]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\",\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293093,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E040] Syntax Error: /tmp/tmpkfkqavrz.scala:42:4 ----------------------------\u001b[0m\u001b[0m\n\u001b[31m42 |\u001b[0m    }\n\u001b[31m\u001b[31m   |\u001b[0m    ^\u001b[0m\n\u001b[31m   |\u001b[0m    ')' expected, but '}' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkfkqavrz.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpkfkqavrz.scala:18:32 ------------------------\u001b[0m\u001b[0m\n\u001b[31m18 |\u001b[0m        .replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                ^\u001b[0m\n\u001b[31m   |\u001b[0m                                Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n3 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.replaceAll(\"[AEIOU]\", (c) -> {\n            if (c.equals(\"A\")) return \"T\"\n            if (c.equals(\"E\")) return \"3\"\n            if (c.equals(\"I\")) return \"1\"\n            if (c.equals(\"O\")) return \"0\"\n            if (c.equals(\"U\")) return \"V\"\n            return \"\"\n        })\n        .replaceAll(\"[^A-Z]\", \"\")\n        .replaceAll(\"[^a-z]\", \"\")\n        .replaceAll(\"[^0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Za-z0-9]\", \"\")\n        .replaceAll(\"[^A-Z\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293079,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- Error: /tmp/tmpy27ha1lm.scala:43:20 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m43 |\u001b[0m        .replaceAll(\"[^A-Z\n\u001b[31m\u001b[31m   |\u001b[0m                    ^\u001b[0m\n\u001b[31m   |\u001b[0m                    unclosed string literal\n\u001b[31m\u001b[31m-- Error: /tmp/tmpy27ha1lm.scala:45:34 -----------------------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m                                  ^\u001b[0m\n\u001b[31m   |\u001b[0m                                 end of statement expected but '=' found\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy27ha1lm.scala:15:39 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                       ^\u001b[0m\n\u001b[31m   |\u001b[0m                                       Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpy27ha1lm.scala:45:4 -------------------------\u001b[0m\u001b[0m\n\u001b[31m45 |\u001b[0m    \u001b[33mdef\u001b[0m \u001b[36mmain\u001b[0m(\u001b[36margs\u001b[0m: \u001b[35mArray\u001b[0m[\u001b[35mString\u001b[0m]) = {\n\u001b[31m\u001b[31m   |\u001b[0m    ^^^\u001b[0m\n\u001b[31m   |\u001b[0m    Not found: [^A-Zdef\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n4 errors found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        var vowels = \"aeiou\".toCharArray()\n        var result = \"\"\n        for (i <- 0 until message.length) {\n            if (vowels.indexOf(message.charAt(i)) >= 0) {\n                result += message.charAt(i + 2)\n            } else {\n                result += message.charAt(i)\n            }\n        }\n        return result\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293073,
      "stdout": "",
      "stderr": "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\tat Problem$.main(tmp90goe110.scala:27)\n\tat Problem.main(tmp90goe110.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c.charAt(0) + c.charAt(2))\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293068,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpki07diuc.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toUpperCase.replaceAll(\"[AEIOU]\", (c) -> {\n            return (c + c)\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293092,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpklgkrfaf.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toUpperCase.replaceAll(\u001b[31m\"[AEIOU]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "import scala.math._\nimport scala.collection.mutable._\nobject Problem {\n    // Write a function that takes a message, and encodes in such a \n    // way that it swaps case of all letters, replaces all vowels in \n    // the message with the letter that appears 2 places ahead of that \n    // vowel in the english alphabet. \n    // Assume only letters. \n    // Examples:\n    // >>> encode((\"test\"))\n    // (\"TGST\")\n    // >>> encode((\"This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    def encode(message : String) : String = {\n        message.toLowerCase.replaceAll(\"[aeiou]\", (c) -> {\n            return (c + c.toUpperCase())\n        })\n    }\n    def main(args: Array[String]) = {\n    assert(encode((\"TEST\")).equals((\"tgst\")));\n    assert(encode((\"Mudasir\")).equals((\"mWDCSKR\")));\n    assert(encode((\"YES\")).equals((\"ygs\")));\n    assert(encode((\"This is a message\")).equals((\"tHKS KS C MGSSCGG\")));\n    assert(encode((\"I DoNt KnOw WhAt tO WrItE\")).equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n",
      "timestamp": 1664293092,
      "stdout": "",
      "stderr": "\u001b[31m\u001b[31m-- [E006] Not Found Error: /tmp/tmpmffag2oj.scala:15:51 ------------------------\u001b[0m\u001b[0m\n\u001b[31m15 |\u001b[0m        message.toLowerCase.replaceAll(\u001b[31m\"[aeiou]\"\u001b[0m, (c) -> {\n\u001b[31m\u001b[31m   |\u001b[0m                                                   ^\u001b[0m\n\u001b[31m   |\u001b[0m                                                   Not found: c\n\u001b[31m   |\u001b[0m\n\u001b[31m   |\u001b[0m longer explanation available when compiling with `-explain`\n1 error found\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
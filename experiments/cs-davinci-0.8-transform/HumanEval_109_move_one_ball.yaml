name: HumanEval_109_move_one_ball
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // We have an array 'arr' of N integers arr[1], arr[2], ..., arr[N].The\n\
  \    // numbers in the array will be randomly ordered. Your task is to determine\
  \ if\n    // it is possible to get an array sorted in non-decreasing order by performing\
  \ \n    // the following operation on the given array:\n    // You are allowed to\
  \ perform right shift operation any number of times.\n    // One right shift operation\
  \ means shifting all elements of the array by one\n    // position in the right\
  \ direction. The last element of the array will be moved to\n    // the starting\
  \ position in the array i.e. 0th index. \n    // If it is possible to obtain the\
  \ sorted array by performing the above operation\n    // then return True else return\
  \ False.\n    // If the given array is empty then return True.\n    // Note: The\
  \ given list is guaranteed to have unique elements.\n    // For Example:\n    //\
  \ >>> MoveOneBall((new List<long>(new long[]{(long)3L, (long)4L, (long)5L, (long)1L,\
  \ (long)2L})))\n    // (true)\n    // Explanation: By performin 2 right shift operations,\
  \ non-decreasing order can\n    // be achieved for the given array.\n    // >>>\
  \ MoveOneBall((new List<long>(new long[]{(long)3L, (long)5L, (long)4L, (long)1L,\
  \ (long)2L})))\n    // (false)\n    // Explanation:It is not possible to get non-decreasing\
  \ order for the given\n    // array by performing any number of right shift operations.\n\
  \    public static bool MoveOneBall(List<long> arr) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveOneBall((new\
  \ List<long>(new long[]{(long)3L, (long)4L, (long)5L, (long)1L, (long)2L}))) ==\
  \ (true));\n    Debug.Assert(MoveOneBall((new List<long>(new long[]{(long)3L, (long)5L,\
  \ (long)10L, (long)1L, (long)2L}))) == (true));\n    Debug.Assert(MoveOneBall((new\
  \ List<long>(new long[]{(long)4L, (long)3L, (long)1L, (long)2L}))) == (false));\n\
  \    Debug.Assert(MoveOneBall((new List<long>(new long[]{(long)3L, (long)5L, (long)4L,\
  \ (long)1L, (long)2L}))) == (false));\n    Debug.Assert(MoveOneBall((new List<long>()))\
  \ == (true));\n    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

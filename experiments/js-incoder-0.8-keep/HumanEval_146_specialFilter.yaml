name: HumanEval_146_specialFilter
language: js
prompt: "//Write a function that takes an array of numbers as input and returns \n\
  // the number of elements in the array that are greater than 10 and both \n// first\
  \ and last digits of a number are odd (1, 3, 5, 7, 9).\n// For example:\n// specialFilter([15,\
  \ -73, 14, -15]) => 1 \n// specialFilter([33, -2, -3, 45, 21, 109]) => 2\nfunction\
  \ specialFilter(nums){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = specialFilter;\n  assert.deepEqual(candidate([5, -2, 1, -5]),0);\n  assert.deepEqual(candidate([15,\
  \ -73, 14, -15]),1);\n  assert.deepEqual(candidate([33, -2, -3, 45, 21, 109]),2);\n\
  \  assert.deepEqual(candidate([43, -12, 93, 125, 121, 109]),4);\n  assert.deepEqual(candidate([71,\
  \ -2, -33, 75, 21, 19]),3);\n  assert.deepEqual(candidate([1]),0);\n  assert.deepEqual(candidate([]),0);\n\
  }\n\ntest();"
completions: ["  return nums.filter(function(n){\n    return ((n%2===0)&&(((n%100!==0)&&(n%10!==0))||(n%100!==0)&&(n%10===0)))\n\
    \  }).length;\n}", "\tvar count = 0, i = 1, j = nums.length - 1;\n\twhile(j <\
    \ i){\n\t\twhile (nums[j] < 10 && nums[j] % 2 === 1){\n\t\t\tj++;\n\t\t}\n\t\t\
    if (nums[j] === 10 && nums[j - 1] % 2 === 1){\n\t\t\tj--;\n\t\t}\n\t\tif (nums[j]\
    \ > 10){\n\t\t\tcount++;\n\t\t\tj--;\n\t\t\ti--;\n\t\t}\n\t\twhile (i < j){\n\t\
    \t\twhile (nums[i] > 10 && nums[i] % 2 === 1){\n\t\t\t\ti++;\n\t\t\t}\n\t\t\t\
    if (nums[i] === 10 && nums[i + 1] % 2 === 1){\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif\
    \ (nums[i] > 10){\n\t\t\t\tcount++;\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ count;\n}\n", "    var numsLength = nums.length\n    var newNumsLength = 0 \n\
    \    for(var i = 0; i < numsLength; i++){\n        if (nums[i] > 10 && nums[i].toString().charAt(0)\
    \ % 2 === 1 && nums[i].toString().charAt(nums[i].toString().length-1) % 2 ===\
    \ 1){\n            newNumsLength++\n        }\n    }\n    return newNumsLength;\n\
    }\n", "    for(let i=0; i< nums.length; i++){\n        if(nums[i] >= 10 && nums[i].toFixed()%2\
    \ === 0 && nums[i] % 2 === 0){\n            return true\n        }\n    }\n  \
    \  return false\n}", "  let filterVal = nums.filter(x => x > 10 && x[0] % 2 ===\
    \ 1 && x[x.length - 1] % 2 === 1);\n  console.log(filterVal.length);\n  return\
    \ filterVal.length;\n}\n", "    var newAr = [];\n    var numArr = nums.slice(0);\n\
    \    var numLengthArr = numArr.length;\n    for(var i = 0; i < numLengthArr; i++){\n\
    \        if(numArr[i] > 10){\n            newAr.push(numArr[i]);\n        }\n\
    \    }\n    return newAr.length;\n}\n", "    let arr=[];\n    for (let i=0; i<nums.length;\
    \ i++){\n        if (nums[i] < 10 && nums[i]%2==1 && nums[i]%2 !==1){\n      \
    \      arr.push(nums[i]);\n        }\n    }\n    return arr.length\n}\n", "\t\
    nums = nums.sort((a,b)=>a-b);\n\tlet counter = 0;\n\tfor(let i = 0; i < nums.length;\
    \ i++){\n\t\tlet a = Math.abs(nums[i]);\n\t\tif(i % 2 === 0 && a % 2 !== 0 &&\
    \ nums[i] > 0){\n\t\t\tcounter++;\n\t\t}\n\t}\n\treturn counter;\n}", "  return\
    \ nums.filter((num) => {\n    return (num >= 10) && ((num % 2) === 1) && (((num\
    \ % 10) === 1) && ((num % 100) !== 0));\n  });\n}\n", "  const filteredArray =\
    \ nums.filter(num => num > 10)\n  return filteredArray.length\n}\n", "  //Write\
    \ your code here\n}", "  var result = 0;\n  var len = nums.length;\n  for(var\
    \ i=0; i<len; i++){\n    if(nums[i]>10 && nums[i]%2==0 && nums[i]%5!=0){\n   \
    \   result++;\n    }\n  }\n  return result;\n}\n", "  for(var i = 0; i < nums.length;\
    \ i++){\n    if(nums[i] > 10 && nums[i]%2 === 1 && nums[i]%10 !== 0){\n      return\
    \ 1;\n    }\n  }\n  return 0;\n}\n", "\tlet count = 0;\n\tlet firstNum = nums[0];\n\
    \tlet lastNum = nums[nums.length-1];\n\n\tfor (let i = 0; i < nums.length; i++){\n\
    \t\tif (nums[i] > 10){\n\t\t\tif (nums[i] % 2 === 1){\n\t\t\t\tif (nums[i-1] %\
    \ 2 === 1 && nums[i+1] % 2 === 1){\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\
    \t\telse if (nums[i-1] % 2 === 1){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\telse if (nums[i+1]\
    \ % 2 === 1){\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn count;\n}\n",
  "  let count = 0;\n  for (let num of nums) {\n    if (num > 10 && num % 2 === 1\
    \ && num % 10 !== 1) {\n      count += 1;\n    }\n  }\n  return count;\n}\n",
  "    var counter = 0;\n    for(var i = 0; i<nums.length; i++){\n        console.log(nums[i]);\n\
    \        if (nums[i]>10){\n            if(nums[i] > 10 && nums[i] %2 == 1){\n\
    \                counter++;\n            }\n        }\n    }\n    return counter;\n\
    }\n</cell>\n<text>\nThe function you just wrote is called a filter!\n\n\n</text>\n\
    <cell>", "    var filteredNums = [];\n    nums.forEach(function(num){\n      \
    \  if(num > 10){\n            if(num > 10 && num > num % 10){\n              \
    \  if(num % 2 == 0){\n                    filteredNums.push(num);\n          \
    \      }\n            }\n        }\n    })\n    return filteredNums.length;\n}",
  "  var nums2 = [];\n  for (var i = 0; i < nums.length; i++){\n    if (nums[i] >\
    \ 10 && nums[i] % 2 === 1 && nums[i] % 10 === 1){\n      nums2.push(nums[i]);\n\
    \    }\n  }\n  return nums2.length;\n}\n", "    let specialFilter = 0;\n    let\
    \ odd = 0;\n    let even = 0;\n    for (let i = 0; i < nums.length; i++){\n  \
    \      if (nums[i] >= 10 && nums[i] > 0){\n            odd = (odd + 1) % 2;\n\
    \        }\n        if (nums[i] >= 10 && nums[i] < 0){\n            even = (even\
    \ + 1) % 2;\n        }\n    }\n    if (odd > 0 && even > 0){\n        specialFilter\
    \ = 1;\n    }\n    return specialFilter;\n}", "    return nums.filter(function(num){\n\
    \        return num >= 10 && num % 2 === 1;\n    }).length;\n}\n", "    nums.forEach(function(number){\n\
    \        let number = parseInt(number);\n        let count = nums.filter(function(number){\n\
    \            let isEven = number % 2 === 0;\n            let numberInArray = parseInt(number);\n\
    \            return isEven && (numberInArray%2 === 0)\n        }).length;\n  \
    \      if (count > 10){\n            if (number >= 10 && (number%2 === 1)){\n\
    \                return count++;\n            } else {\n                return\
    \ count;\n            }\n        }\n    });\n    return nums.length;\n}\n</code>\n\
    <|/ a tags=javascript dscore=0 |>\n<| a tags=javascript dscore=0 |>\n<code>",
  "    var count = 0;\n    for(var i = 0; i < nums.length; i++){\n        if(nums[i]\
    \ >= 10 && nums[i]%2 === 1 && nums[i]%4 === 1){\n            count++;\n      \
    \  }\n    }\n    return count;\n}\n</code>\n<|/ a tags=javascript,arrays,count,filter\
    \ |>\n<| c |>\nThanks for the reply! This is what I'm looking for, but unfortunately\
    \ the filter does not work. Even though I passed in the code through JsBeautifier,\
    \ I'm unable to get it to work.\n<|/ c |>\n<| c |>\nI added a link to jsBeautifier\
    \ so you can see the original code from my original answer.\n<|/ c |>\n<| a tags=javascript,arrays,count,filter\
    \ dscore=0 |>\n<code>", "  nums.sort();\n  let evens = 0;\n  let odds = 0;\n \
    \ for(let num of nums){\n    let [first, last] = [num%10, num%100];\n    if(first\
    \ !== 1 && last % 2 === 1){\n      evens++;\n    }\n    if(first === 1 && last\
    \ % 2 === 0){\n      odds++;\n    }\n  }\n  return evens + odds;\n}", "  return\
    \ nums.filter(function(num){\n    return num > 10 && num%1 === 0 && num%2 ===\
    \ 1;\n  }).length;\n}\n", "  let filterNum = 0;\n  for(const num of nums){\n \
    \   if((num > 10) && ((num % 2) === 1)){\n      filterNum++;\n    }\n  }\n  return\
    \ filterNum;\n}\n", "\tvar count = 0;\n\tfor(var i=0; i<nums.length; i++){\n\t\
    \tif (nums[i] >= 10 && nums[i] % 2 === 1){\n\t\t\tif (nums[i] > 10 && nums[i-1]\
    \ % 2 === 1){\n\t\t\t\tcount += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n",
  "    var result = nums.length;\n    for (var i = 0; i < nums.length; i++){\n   \
    \     if(nums[i] % 2 != 0 && nums[i] % 2 == 1 && nums[i] % 2 == (nums[i-1] % 2\
    \ || nums[i-1] % 2 == 1) && nums[i] % 2 == nums[i-1] % 2){\n            result--;\n\
    \        }\n    }\n    return result;\n}\n", "    for(var i =0; i< nums.length;\
    \ i++){\n        if((nums[i]%2 === 0 && nums[i]%10 === 0 && !(nums[i] > 10 &&\
    \ nums[i]%1 === 1)) ){\n            return i;\n        }\n    }\n}\n", "  return\
    \ nums.filter(function(num){\n    return (num > 10) && (num % 2 === 1);\n  }).length;\n\
    }\n", "    return nums.filter(function(num){\n        return (num>10)&&(num%2==1);\n\
    \    }).length;\n}\n</cell>\n<text>\nThe filter method was added to Arrays in\
    \ JavaScript so it is available on every array. In the example above, we are using\
    \ the .filter method to filter the elements out of the nums array that are greater\
    \ than 10 and are even. In the first line, we call the filter method with the\
    \ parameter nums which is an array. In the .filter method we pass in the function\
    \ definition we have created above. In the second line we use the return value\
    \ of the filter method which returns an array with only those elements that meet\
    \ our filter requirements. Finally in the third line we return the length of the\
    \ filtered array.\n\nNow our function definition and its usage looks like this:\n",
  "  var count = 0;\n  for(var i = 0; i < nums.length; i++){\n    if (nums[i] > 10\
    \ && nums[i] % 2 === 1 && nums[i - 1] %2 === 0 && nums[i + 1] % 2 === 1){\n  \
    \    count++;\n    }\n  }\n  return count;\n}\n", "    var len=nums.length;\n\
    \    var num;\n    for(var i=0; i<len; i++){\n        num=nums[i];\n        if(num>10){\n\
    \            if(num%2==0){\n                nums[i]=nums[i]*100-nums[i-1]*10;\n\
    \            }\n            num=num/100;\n        }\n    }\n    return len;\n}",
  "    var len = nums.length;\n    var count = 0; \n    var oddSum = 0;\n    for (var\
    \ i = 0; i < len; i++) {\n        if (nums[i]%2==1&&nums[i]>10 && nums[i]%11==1){\n\
    \            count++;\n            oddSum++;\n        }\n    }\n    return count;\n\
    }\n", "  let tempNums = nums\n  let counts = 0\n  for (let i = 0; i < tempNums.length;\
    \ i++) {\n    if (tempNums[i] == 9) {\n      counts += 1\n    }\n    if (tempNums[i]\
    \ == 10) {\n      if (isOdd(tempNums[i-1]) && isOdd(tempNums[i+1])) {\n      \
    \  counts += 1\n      }\n    }\n  }\n  return counts\n}\n", "    let newNums =\
    \ [];\n    for (num of nums){\n        const digits = num.toString().split(\"\"\
    );\n        newNums.push(digits[1]);\n    }\n    return newNums.filter((value,\
    \ index, array) => {\n        return value.includes(\"9\") && array[index - 1].includes(\"\
    9\") && array[index + 1].includes(\"9\");\n    }).length;\n}\n", "    return nums.filter(item\
    \ => item > 10 && item % 2 === 1);\n}\n", "    let arr = [];\n    for(let i=0;\
    \ i<nums.length; i++){\n        if(nums[i] >= 10 && nums[i-1]%2 === 1 && nums[i]%2\
    \ === 1){\n            arr.push(i);\n        }\n    }\n    return arr.length;\n\
    }\n", "    let counter = 0;\n    for(let num of nums){\n        if(num > 10 &&\
    \ num%2 === 1 && num%5 === 1){\n            counter++\n        }\n    }\n    return\
    \ counter;\n}", "  return nums.filter(function(num){\n    return (num > 10) &&\
    \ ((num % 1) === 1);\n  }).length;\n}</code>\n<code>\n<input id=\"nums\" type=\"\
    number\" min=\"0\" max=\"999999999\" step=\"1\" value=\"0\">\n<button id=\"run\"\
    >Calculate</button>\n<div id=\"result\"></div></code>\n\nNote that if your numbers\
    \ have more than 9 or 10 digits it will not work, as the numbers get rounded.\n\
    <|/ a dscore=0 tags=jquery,javascript |>\n<| c |>\nThis is great! Thank you. I\
    \ had a quick question, how would you add another filter to make sure that the\
    \ first digit is the number 1? For example, if I wanted to make sure that the\
    \ first digit was 1, how would I do that? Thanks again for your help and quick\
    \ response!\n<|/ c |>\n<| c |>\nYou could use `===` instead of `==` on the first\
    \ part, `(num > 10) && ((num % 1) === 1)`. Or you could use `Number.isInteger`.\n\
    <|/ c |>\n<| c |>\nYes, that works as well. Thank you again for your help! Really\
    \ appreciate it.\n<|/ c |>\n<| c |>\nI'm glad it helped! And yes you can also\
    \ use the `Number.isInteger` method: `(num > 10) && Number.isInteger(num % 1)`.\n\
    <|/ c |>\n<| a dscore=0 tags=jquery,javascript |>\nI tried to keep it simple...\n\
    <code>\n$('#run').click(function(){\n    var nums = $('#nums').val().split(',');\n\
    \    var num = parseInt(nums[0]);\n\n    var count = nums.filter(function(x){\n\
    \        return x > 10;\n    }).length;\n\n    var isOdd = nums.filter(function(x){\n\
    \        return x % 1;\n    }).length;\n\n    $('#result').text('Number ' + num\
    \ + ' has ' + count + ' numbers greater than 10, and ' + (isOdd ? 'first and last\
    \ are odd' : 'first and last are even'));\n});\n</code>\n<|/ a |>\n<| c |>\nThis\
    \ is great! Thank you very much! It works beautifully for what I need to do with\
    \ it. Thanks again!\n<|/ c |>\n<| a tags=jquery,javascript dscore=0 |>\n<code>",
  "    // The code below is what you need to write \n    // function returnVal() {\n\
    \    //     return nums;\n    // }\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal();\n\
    \    // returnVal();\n    // returnVal();\n    // returnVal();\n    // returnVal",
  "    let cnt = 0\n    for (let n = 0; n < nums.length; n++){\n        if (nums[n]\
    \ > 10 && nums[n] % 2 === 1 && nums[n] % 100 === 0){\n            cnt++\n    \
    \    }\n    }\n    return cnt\n}\n", "    // Your code here\n    return nums.filter(x\
    \ => x > 10 && x[0] % 2 === 0 && x[x.length-1] % 2 === 0)\n}\n</code>\n<|/ a tags=arrays,javascript,filter\
    \ |>\n<| a tags=arrays,javascript,filter |>\n<code>\nvar specialFilter = function(nums)\
    \ {\n    return nums.filter((x) => x > 10 && x[0] % 2 === 0 && x[x.length - 1]\
    \ % 2 === 0)\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=arrays,javascript,filter\
    \ dscore=0 |>\n<code>", "   let numsFiltered = nums.filter(function(num){\n  \
    \     let oddFirst = (num % 10 === 1);\n       let oddLast = (num % 10 === 3);\n\
    \       return oddFirst && oddLast;\n    });\n\n    let numsOdd = numsFiltered.length;\n\
    \n    let firstLastOdd = numsOdd - (numsOdd % 2);\n    return firstLastOdd;\n\
    }\n", "\tvar cnt = 0;\n\tnums.forEach(function(num){\n\t\tvar rem = num % 10;\n\
    \t\tif (rem > 0 && rem % 2 === 1){\n\t\t\tcnt = cnt + 1;\n\t\t}\n\t});\n\treturn\
    \ cnt;\n}\n<|/ file filename=solution.js |>\n<| c |>\nPlease note that the code\
    \ I provided is an example. Having said that your answer does *not* make use of\
    \ any of the functions in my solution (namely `filter`, `forEach`, `map`, `reduce`,\
    \ `some`, `every`), so your solution should fail on those tests. Please fix your\
    \ code if you want it to pass.\n<|/ c |>\n<| c |>\nI have used `some` and `every`\
    \ functions to count odd numbers in an array. But I guess `reduce` and `filter`\
    \ functions are also very helpful to achieve the same goals.\n<|/ c |>\n<| c |>\n\
    Your answer is correct and also solves the problem posed in the question. However,\
    \ the problem was posed in the context of CodeWars. Hence I felt that my answer\
    \ should be the right one.\n<|/ c |>\n<| a dscore=2 |>\n<code>", "  const myArray\
    \ = nums.slice();\n  const newArray = [];\n  for (let i = 0; i < myArray.length;\
    \ i++){\n      if (myArray[i] > 10){\n        if (myArray[i] % 2 === 1){\n   \
    \       newArray.push(myArray[i]);\n        }\n      }\n  }\n  return newArray.length;\n\
    }\n\nconst nums = [6, 2, -7, 4, 6, 9, 0, 2, 5, -3, 4, -4, -6, 5, 2, 0, 1, -9];\n",
  "   let n = nums.length;\n   for(let i = 0; i < n; i++){\n      let isOdd = (nums[i]\
    \ & 1) == 1;\n      let hasLastOddDigit = (nums[i] % 10) & 1;\n      let hasFirstOddDigit\
    \ = (nums[i] % 100) & 1;\n      \n      if(isOdd && hasLastOddDigit && hasFirstOddDigit)\n\
    \         return i+1;\n   }\n   return 0;\n}\n", "    nums.sort();\n    \n   \
    \ var filteredNums= [];\n    for(var i=0; i<nums.length; i++){\n        if(nums[i]\
    \ > 10 && nums[i]%2==0 && nums[i]%2!=nums[(i+1)%nums.length] ){\n            filteredNums.push(nums[i]);\n\
    \        }\n    }\n    return filteredNums.length;\n}\nvar nums = [15, -73, 14,\
    \ -15];\nspecialFilter(nums); ", "    let n = 0;\n    for (let i = 0; i < nums.length;\
    \ i++) {\n        if (nums[i] >= 10 && (nums[i]%2 == 1 && nums[i]%2 == 0))\n \
    \           n++;\n    }\n    return n;\n}\n", "    const firstOdd = nums.filter(n=>n\
    \ % 2 == 1);\n    const lastOdd = nums.filter(n=>n % 2 == 1);\n    const bothOdd\
    \ = nums.filter((n)=>n % 2 === 1);\n    \n    return nums.filter((n) => {\n  \
    \      const numDigits = n.toString().length;\n        const firstDigit = n %\
    \ 10;\n        const lastDigit = n % 10;\n        const bothDigits = n % 10;\n\
    \        \n        if(numDigits == 3 && firstOdd.includes(n) && lastOdd.includes(n)\
    \ && bothOdd.includes(n)){\n            return true;\n        }\n        else\
    \ if(numDigits == 2 && firstOdd.includes(n) && lastOdd.includes(n)){\n       \
    \     return true;\n        }\n        else if(numDigits == 2 && firstDigit %\
    \ 2 === 1 && lastDigit % 2 === 1){\n            return true;\n        }\n    \
    \    else if(numDigits == 1 && firstOdd.includes(n) && lastOdd.includes(n) &&\
    \ bothOdd.includes(n)){\n            return true;\n        }\n        else if(numDigits\
    \ == 1 && firstDigit % 2 === 1 && lastDigit % 2 === 1){\n            return true;\n\
    \        }\n        else if(numDigits == 0 && firstOdd.includes(n) && lastOdd.includes(n)\
    \ && bothOdd.includes(n)){\n            return true;\n        }\n        return\
    \ false;\n    })\n}\n", "    //BEGIN PROBLEM 3\n    var count = 0;\n    for(var\
    \ i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i] % 2 == 1 &&\
    \ nums[i] % 3 == 1){\n            count++;\n        }\n    }\n    //END PROBLEM\
    \ 3\n    return count;\n}\n", "    //FILL YOUR CODE HERE\n}\n", "    let result\
    \ = 0;\n    for (let i = 0; i < nums.length; i++){\n        if(nums[i] > 10 &&\
    \ nums[i] % 2 === 1){\n            result++;\n        }\n    }\n    return result;\n\
    }\n", "    nums = nums.filter(function(v){\n        return v >= 0;\n    });\n\
    \    return nums.length;\n}\nvar specialFilter = function(nums){\n    var counter\
    \ = 0;\n    for (var i = 0; i < nums.length; i++) {\n        if (nums[i] >= 0\
    \ && nums[i] % 2 != 0) {\n            counter++;\n        }\n    }\n    return\
    \ counter;\n}", "  let result = 0;\n  for (let i = 0; i < nums.length; i++){\n\
    \    // check if the number is greater than 10 and both first and last digits\
    \ are odd (1 and 5)\n    if (nums[i] > 10 && nums[i] % 2 === 1 && nums[i - 1]\
    \ % 2 === 1){\n      result++;\n    }\n  }\n  return result;\n}\n", "  var counter\
    \ = 0;\n  for (var i = 0; i < nums.length; i++) {\n    if(nums[i] > 10){\n   \
    \   counter++;\n    }\n  }\n  return counter;\n}\n", "    return nums.filter(\
    \ (num) => {\n        return (num > 10 && num%2 === 1) || (num > 10 && num%2 ===\
    \ 0);\n    }).length;\n}\n", "  if(nums.length===0) return 0;\n  var isOdd = nums.every(function(n)\
    \ {\n    return n%2 === 1;\n  });\n  if(isOdd === false) return nums.length;\n\
    \  var firstIsOdd = nums.every(function(n) {\n    return n%2 === 0;\n  });\n \
    \ if(firstIsOdd === false) return nums.length;\n  var lastIsOdd = nums[nums.length-1]%2\
    \ === 0;\n  if(lastIsOdd === false) return nums.length;\n  var sum = 0;\n  var\
    \ length = nums.length;\n  for(var i = 0; i < length; i++){\n    var num = nums[i];\n\
    \    if(num > 10 && num%10 % 2 === 1 && num%10 >= 5){\n      sum++;\n    }\n \
    \ }\n  if(sum === nums.length){\n    return nums.length;\n  }\n  else{\n    return\
    \ 0;\n  }\n}\n", "  // Good luck!\n  \n};\n</pre>\n\n<p>\n  In JavaScript we frequently\
    \ use a function called <code>filter()</code> to perform a test on every element\
    \ of an array.\n  <code>filter()</code> is really just a specialized version of\
    \ <code>forEach()</code>, but we can use <code>filter()</code> to perform the\
    \ exact same test. We will also use <code>filter()</code> to do the first part\
    \ of our assignment (just counting occurrences of odd numbers) and we will also\
    \ do the last part (counting occurrences of odd numbers greater than 10).\n</p>\n\
    <p>\n  As a last note, some programmers prefer to use <code>filter()</code> instead\
    \ of <code>forEach()</code>, but this is not the only difference. There are a\
    \ few other important differences described in the <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array\"\
    >Mozilla Developer Network's JavaScript reference</a> and they will be discussed\
    \ below.\n</p>\n\n\n<script>", "  let filteredNums = [];\n  nums.forEach(item\
    \ => {\n    if (item > 10 && (item % 2 === 1 || item % 2 === -1)) {\n      filteredNums.push(item);\n\
    \    }\n  });\n  return filteredNums.length;\n}\n", "  let filteredNum = nums.filter(\
    \ num => {\n    return num > 10 && num % 2 === 0 && num % 5 === 0\n  })\n  return\
    \ filteredNum.length\n}\n", "  let arr = [];\n  for (let i = nums.length-1; i>=0;i--){\n\
    \    if (nums[i] > 10 && nums[i] % 2 === 1 && nums[i]%5 === 1){\n      arr.push(nums[i]);\n\
    \    }\n  }\n  return arr.length;\n}", "\tlet count = 0;\n\tnums.forEach(element\
    \ => {\n\t\tif(element > 10 && element % 2 === 1){\n\t\t\tcount++;\n\t\t}\n\t\
    });\n\treturn count;\n}\n", "  let count = 0;\n  for (let num of nums){\n    if\
    \ (num > 10 && num > nums.slice(-1)[0] % 2 && num > nums.slice(-2)[0] % 2){\n\
    \      count++\n    }\n  }\n  return count\n}", "\tvar count = 0;\n\tfor(var i=0;\
    \ i<nums.length; i++){\n\t\tvar num = nums[i];\n\t\tif(!num){\n\t\t\tcontinue;\n\
    \t\t}\n\t\tif(num > 10 && num % 1 != 0 && num % 2 == 1){\n\t\t\tcount++;\n\t\t\
    }\n\t}\n\treturn count;\n}\n", "    // your code here\n};\n", "    \n}\n</cell>\n\
    <cell>", "  let counter = 0;\n  nums.forEach(n => {\n      if (isEven(n) && isOdd(n\
    \ % 10) && isOdd(n / 10)){\n         counter++;\n      }\n  });\n  return counter;\n\
    }\n", "  var result=1;\n  for(var i in nums){\n    if(nums[i] > 10 && nums[i]%2==0\
    \ && nums[i-1]%2==0){\n      result++;\n    }\n  }\n  console.log(result);\n}",
  "    // Write your code here\n    return nums.filter(function(num){\n        return\
    \ num > 10 && num % 2 === 1 && (num % 2 === 0 && num % 10 === 1);\n    }).length;\n\
    }\n", "  // Your code here\n  var sum = 0, i = 0, n = nums.length;\n  while(n\
    \ >= 0){\n    if(nums[i] > 10){\n      sum += nums[i];\n      i++;\n    }\n  \
    \  if(nums[i] % 2 === 1 && nums[i-1] % 2 === 1){\n      i++;\n    }\n    n--;\n\
    \  }\n  return sum;\n}\n", "  var count = 0;\n  for(var i=0; i < nums.length;\
    \ i++){\n    if(nums[i] > 10 && nums[i] % 2 != 0 && nums[i] % 1 != 0){\n     \
    \ count++;\n    }\n  }\n  return count;\n}\n", "  var count = 0;\n  for(var i=0;i<nums.length;i++){\n\
    \    if(nums[i]>10 && nums[i]%2==1){\n      count++;\n    }\n  }\n  return count;\n\
    }\n", "    let count = 0;\n    for(let num of nums){\n        if(num > 10 && num\
    \ % 2 != 1 && num % 2 != 0){\n            count++;\n        }\n    }\n    return\
    \ count;\n}\n", "    let ans = 0;\n    for(let i=0; i<nums.length; i++){\n   \
    \     if(nums[i]>10 && nums[i]%2==1 && nums[i]%10==1){\n            ans += 1;\n\
    \        }\n    }\n    return ans;\n}\n</cell>\n<text>\nQuestion 3.2\nWrite a\
    \ function that takes a number as input and returns the number of digits of that\
    \ number that are less than 5. For example:\n\nspecialFilter(56) => 3\nspecialFilter(999)\
    \ => 3\nspecialFilter(12) => 0\nspecialFilter(180) => 2\nspecialFilter(5) => 0\n\
    specialFilter(0) => 0\nspecialFilter(18) => 0\nspecialFilter(54) => 0\nspecialFilter(17)\
    \ => 2\nspecialFilter(564) => 0\nspecialFilter(11) => 0\nspecialFilter(12) =>\
    \ 0\nspecialFilter(22) => 0\nspecialFilter(1156) => 0\nspecialFilter(4) => 0\n\
    specialFilter(100) => 1\nspecialFilter(547) => 1\nspecialFilter(1111) => 0\nspecialFilter(91)\
    \ => 0\nspecialFilter(1256) => 0\nspecialFilter(81) => 0\nspecialFilter(1045)\
    \ => 1\nspecialFilter(1154) => 1\nspecialFilter(789) => 1\nspecialFilter(1110)\
    \ => 1\nspecialFilter(918) => 0\nspecialFilter(1196) => 1\nspecialFilter(1101)\
    \ => 1\nspecialFilter(1105) => 1\nspecialFilter(919) => 1\nspecialFilter(454)\
    \ => 1\nspecialFilter(333) => 1\nspecialFilter(11111) => 1\nspecialFilter(11045)\
    \ => 1\nspecialFilter(11000) => 1\n\n</text>\n<cell>", "    let length = 0;\n\
    \    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] > 10 && nums[i]\
    \ % 2 === 1 && nums[i] % 10 === 1) {\n            length += 1;\n        }\n  \
    \  }\n    return length\n}\n", "    var filterdNums = [];\n    nums.forEach(function(num){\n\
    \        if (num > 10 && (num % 2 === 1 || num % 2 === 3 || num % 2 === 5)){\n\
    \            filterdNums.push(num);\n        }\n    });\n    return filterdNums.length;\n\
    }\n", "    var n = nums.length;\n    var result = 0;\n    \n    for (i=0;i<n;i++){\n\
    \        if (nums[i] > 10 && (nums[i]%1 == 0 && nums[i]%2 == 1)){\n          \
    \  result++;\n        }\n    }\n    \n    return result\n}\n", "    //Your code\
    \ here\n}\n</cell>\n<cell>", "  return nums.filter((num) => {\n    return num\
    \ > 10 && num % 2 === 1 && num % 5 === 0;\n  }).length;\n}\n", "  // Only change\
    \ code below this line\n  let count = 0;\n  for(let num of nums){\n    if (num\
    \ > 10 && num % 2 === 0 && num % 4 === 0){\n      count++;\n    }\n  }\n  return\
    \ count;\n}\n</cell>\n<text>\nTest Your Solution\nRun the cell below to test your\
    \ solution.\n\n\n</text>\n<cell>", "\tvar count = 0;\n\tfor (var i = 0; i < nums.length;\
    \ i++){\n\t\tif (nums[i] > 10 && nums[i] % 2 === 1 && nums[i] % 3 === 0 && nums[i]\
    \ % 5 === 1){\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\n", "  return\
    \ nums.reduce((p, c) => c > 10 && c % 2 === 1 && c % 3 !== 0 && c % 5 === 1 ?\
    \ p + 1 : p, 0);\n}\n", "    let count = 0;\n    nums.forEach((num) => {\n   \
    \     if(num > 10 && num%2 === 0 && num%10 === 1){\n            count++;\n   \
    \     }\n    })\n    return count\n}", "  // We use an object to store the current\
    \ count\n  const counter = {};\n  \n  // We loop through the array and check if\
    \ the first element and last element are odd\n  for(let i = 0; i < nums.length;\
    \ i++){\n    if(!counter[nums[i]]) counter[nums[i]] = 1;\n    else counter[nums[i]]++;\n\
    \  }\n  \n  // If the first element is not odd and last element is not odd, we\
    \ add it to the count\n  for(let i = 0; i < nums.length; i++){\n    if(nums[i]\
    \ % 2 === 0 && nums[nums.length - 1 - i] % 2 === 0){\n      counter[nums[i]]++;\n\
    \    }\n  }\n  \n  // We return an object with properties that hold number of\
    \ odd and even numbers\n  return counter;\n}", "    var count = 0, len = nums.length;\n\
    \    for(var i =0; i< len; i++){\n        if(nums[i] >= 10){\n            var\
    \ firstDigit = nums[i] % 10;\n            var secondDigit = nums[i] - (firstDigit\
    \ * 10);\n            if(firstDigit % 2 === 1 && secondDigit % 2 === 1){\n   \
    \             count ++;\n            }\n        }\n    }\n    return count;\n\
    }\n", "  let count = 0;\n  for(let i = 0; i < nums.length; i++){\n    if (nums[i]\
    \ % 2 !== 0 && nums[i]%10 === 0 && nums[i-1]%10 === 0 && nums[i+1]%10 === 0){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n", "  let filtered = 0;\n  nums.forEach(\
    \ num => { \n    if(num > 10 && num % 2 === 0 && num % 3 === 0 && num % 5 ===\
    \ 0)\n      filtered++;\n  });\n  return filtered;\n}\n", "  return nums.filter(function(num){\n\
    \    return num%10 === 1 && num%100 != 11 && num%100 != 13; \n  }).length;\n}\n",
  "  var len=0;\n  var len=nums.length;\n  var odds=0;\n  var odds=0;\n  for(var i=0;i<nums.length;i++){\n\
    \    if(nums[i] >=10 && nums[i] %2==1){\n      odds++;\n    }\n    if(nums[i]>=10\
    \ && nums[i]%2==0){\n      odds--;\n    }\n  }\n  if(odds>0){\n    for(var i=0;i<len;i++){\n\
    \      if(nums[i]>=10 && nums[i]%2==1){\n        odds++;\n      }\n    }\n  }\n\
    \  return odds;\n}\n", "    let oddNum = 0;\n    let evenNum = 0;\n    for (let\
    \ i = 0; i < nums.length; i++) {\n        if (nums[i] > 10 && nums[i] % 2 != 0\
    \ && nums[i] % 2 != 1) \n            oddNum += 1;\n        else if (nums[i] %\
    \ 2 == 0 && nums[i] % 2 == 1)\n            evenNum += 1;\n    }\n    return oddNum\
    \ * evenNum;\n}\n", "    if (nums.length > 1){\n        nums.sort();\n       \
    \ var firstNum = nums[0];\n        var lastNum = nums[nums.length-1];\n      \
    \  return nums.filter(function(num){\n            if (num>10) return num;\n  \
    \          if (num<firstNum && num%2==0) return num;\n            if (num>lastNum)\
    \ return num;\n            return 0;\n        });\n    } else {\n        return\
    \ nums;\n    }\n}\n", "  let cnt = 0;\n  for (let num of nums) {\n    const first\
    \ = Math.floor(num / 100);\n    const last = (num % 100) + 1;\n    if (num > 10)\
    \ {\n      if (first % 2 === 1 && last % 2 === 1) {\n        cnt += 1;\n     \
    \ }\n    } else {\n      cnt += 1;\n    }\n  }\n  return cnt;\n}\n", "  var counter\
    \ = 0;\n  for(var i=0;i<nums.length;i++){\n    if(nums[i] > 10 && nums[i]%2 ===\
    \ 1 && nums[i]%3 === 0){\n      counter++;\n    }\n  }\n  return counter;\n}\n",
  "    let sum = 0;\n    for (let i = 0; i < nums.length; i++){\n        const n =\
    \ nums[i];\n        if (n > 10){\n            sum += 1;\n        }\n        if\
    \ ((n % 10) % 2 === 1){\n            sum += 1;\n        }\n        if (nums[i\
    \ - 1] === nums[i + 1]){\n            sum += 1;\n        }\n    }\n    return\
    \ sum;\n}\n", "    var count = 0;\n    for(var i in nums){\n        if(nums[i]\
    \ > 10){\n            if(nums[i]%2 === 0 && nums[i] >= nums[nums.length-1]%2){\n\
    \                count++;\n            }\n        }\n    }\n    return count;\n\
    }", "    const arr = [];\n    for (let i = 0; i < nums.length; i++){\n       \
    \ if (nums[i] > 10 && nums[i] % 2 === 1 & nums[i] % 2 === 1){\n            arr.push(i);\n\
    \        }\n    }\n    return arr.length;\n}\n", "\tlet filterNum = [];\n\tnums.forEach(num\
    \ => {\n\t\tif(num > 10 && num.toString().split('')[1] % 2 === 0){\n\t\t\tfilterNum.push(num);\n\
    \t\t}\n\t});\n\treturn filterNum.length;\n}\n", "  let odd = 0\n  let even = 0\n\
    \  let firstOdd = 0\n  let lastOdd = 0\n  for (num of nums){\n    let intNum =\
    \ parseInt(num)\n    odd++\n    if (intNum % 2 === 1){\n      even++\n      firstOdd++\n\
    \    }\n    if (intNum % 2 === 0){\n      lastOdd++\n    }\n  }\n  return(odd\
    \ === 1 && even === 1 && firstOdd === 1 && lastOdd === 1)\n}", "    var filteredNums\
    \ = nums.filter(function(num) {\n        if (num % 2 === 0){\n            return\
    \ num > 10;\n        }\n        else{\n            return num % 2 === 1 && num\
    \ > 10;\n        }\n    });\n\n    return filteredNums.length;\n}\n", "  let count\
    \ = 0;\n  for (let n of nums){\n    const isOdd = n % 2 === 1;\n    const isFirstOdd\
    \ = n % 10 === 1;\n    const isLastOdd = n % 10 === 9;\n    if (isOdd && isFirstOdd\
    \ && isLastOdd){\n      count++;\n    }\n  }\n  return count;\n}\n", "    var\
    \ result = 0;\n    for(var i=0;i<nums.length;i++){\n        var num = nums[i];\n\
    \        if(num>10 && num>Math.pow(10,2) && num%2==1){\n            result++;\n\
    \        }\n    }\n    return result;\n}", "\tvar i = 0;\n\tvar result = 0;\n\t\
    while (i < nums.length){\n\t\tif (nums[i] > 10 && nums[i] % 2 != 0 && nums[i-1]\
    \ % 2 == 0 && nums[i+1] % 2 == 0){\n\t\t\tresult = result + 1;\n\t\t}\n\t\ti++;\n\
    \t}\n\treturn result;\n}\n", "    let count = 0;\n    for(let num of nums){\n\
    \        if(num > 10 && num % 2 === 1 && num % 7 === 1){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "   var numsLength = nums.length;\n\
    \   if(numsLength ===0){\n      return 0;\n   }\n   if(numsLength > 1){\n    \
    \  return numsLength;\n   }\n   var num = nums[0];\n   var numsDigit = num.toString().split(\"\
    \");\n   var oddNum = numsDigit[0]%2;\n   var firstNum = numsDigit[1]%2;\n   var\
    \ lastNum = numsDigit[numsDigit.length-1]%2;\n   if(num >= 10 && oddNum && firstNum\
    \ && lastNum){\n      return numsLength;\n   }\n   return 0;\n}\n", "    console.log(nums)\n\
    \    var oddNums = []\n    for(var i = 2; i < nums.length; i++){\n        if(nums[i]\
    \ % 2 != 0 && nums[i] % 2 != 1){\n            oddNums.push(nums[i])\n        }\n\
    \    }\n    return oddNums.length\n}\n", "    var count = 0;\n    for(var i =\
    \ 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i] % 2 != 0 && nums[i-1]\
    \ % 2 != 0)\n            count++;\n    }\n    return count;\n}\n", "    //TODO:\n\
    }\n</cell>\n<text>\nPart C: Exploring data with pandas\n\n</text>\n<text>\nPandas\
    \ is a Python library for data analysis. It is one of the most popular libraries\
    \ for data analysis in Python. Pandas was originally developed by Wes McKinney\
    \ in 2009, but is now maintained by a core developer at Continuum Analytics. It\
    \ is based on a project at Continuum Analytics; other libraries like statsmodels\
    \ are built on top of pandas.\n\nPandas has lots of useful functions for data\
    \ manipulation. Like the one you just saw, the function head returns the first\
    \ few rows of a DataFrame and tail returns the last few rows of a DataFrame. Other\
    \ useful functions include count(), mean(), median(), min(), max(), var(), and\
    \ std().\n\n\n</text>\n<cell>\nimport pandas as pd\n\ndf = pd.read_csv('data/FIFA19.csv')\n\
    df.head()\n</cell>\n<text>\nWe can use pandas to read in some tabular data as\
    \ well. This table has data on players in the United States starting in 2002 and\
    \ ending in 2016. There are several variables in the table and some of them are\
    \ categorical variables. Some of them have missing values.\n\n\n</text>\n<cell>\n\
    import pandas as pd\n\ndf = pd.read_csv('data/FIFA19.csv', encoding='latin-1')\n\
    df.head()\n</cell>\n<text>\nThe read_csv method has an encoding parameter that\
    \ allows you to specify the encoding of the file. The default encoding is latin-1\
    \ which is fine for the FIFA data set but won't work for other data sets. We can\
    \ specify encoding in Python by using the encoding parameter of the read_csv function\
    \ as a string. Encoding should be the encoding used in the file itself.\n\nPandas\
    \ also has an encoding parameter that specifies how to handle missing values when\
    \ reading the file. By default pandas uses the encoding \"ISO-8859-1\" which is\
    \ fine for most data sets but won't work for other data sets. We can specify an\
    \ encoding for the read_csv method as a string using the encoding parameter.\n\
    \nIn the FIFA data set, some teams have multiple players with the same name. Let's\
    \ use some basic pandas methods to count the amount of teams that have a player\
    \ with the name \"John Smith\".\n\n\n</text>\n<cell>\ndf['Team'].value_counts()\n\
    </cell>\n<text>\nvalue_counts is a method to get the number of unique values in\
    \ the Series or column in a Pandas DataFrame. As you can see in the output above,\
    \ the team \"Patriots\" appears twice, which means there are two players with\
    \ that name in the data set. Let's only consider players who have a team of \"\
    Patriots\" in the FIFA data set.\n\n\n</text>\n<cell>\ndf_patriots = ", "    return\
    \ nums.filter(function(num){\n        return ((num > 10) & ((num.first_digit%2)==1))&&((num.last_digit%2)==1))\n\
    \    })\n}", "    var even=0;\n    var odd=0;\n    for(i=0;i<nums.length;i++){\n\
    \        if (nums[i] % 2 == 0){\n            even++;\n        }\n        else{\n\
    \            odd++;\n        }\n    }\n    if (even%2 ==0 && odd%2==0){\n    \
    \    return even;\n    }\n    else{\n        return odd;\n    }\n}", "    let\
    \ count = 0;\n    for(let i = 0; i < nums.length; i++){\n        if(nums[i] >\
    \ 10 && nums[i] % 2 == 1){\n            count += 1;\n        }\n    }\n    return\
    \ count;\n}\n", "    for(var i =0; i < nums.length; i++){\n        if(nums[i]\
    \ >= 10 && nums[i-1] % 2 == 0 && nums[i+1] % 2 == 1){\n            return i;\n\
    \        }\n    }\n    return 0;\n}\n", "  var count = 0;\n  for(var i =0; i<\
    \ nums.length; i++){\n    if(nums[i] >= 10){\n      count += 1;\n    }\n  }\n\
    \  return count;\n}\n", "  var sum = 0;\n  for (var i=0; i < nums.length; i++){\n\
    \    if (nums[i]>10 && nums[i]%2==1 && nums[i]%3==1){\n      sum++;\n    }\n \
    \ }\n  return sum;\n}\n</code>\n<|/ a tags=if-statement,function,javascript,arrays\
    \ |>\n<| a tags=if-statement,function,javascript,arrays |>\n<code>", "    var\
    \ count = 0;\n    for(var i=0; i< nums.length; i++){\n        if(nums[i]%2 ===\
    \ 0 && nums[i]>10 && nums[i]<10000000){\n            count++;\n        }\n   \
    \ }\n    return count;\n}\nvar specialFilter = function (nums) {\n    for (var\
    \ i = nums.length - 1; i >= 0; i--) {\n        if (nums[i] % 2 === 0 && nums[i]\
    \ > 10 && nums[i] < 10000000\n            && nums[i-1]%2 === 0 && nums[i-1] >\
    \ 10 && nums[i-1] < 10000000)\n        {\n            nums.splice(i, 1);\n   \
    \     }\n    }\n    return nums.length;\n};\n", "  let count = 0;\n  for(let num\
    \ of nums){\n    if(num > 10 && num % 2 === 1 && num % 10 % 2 === 1){\n      count++;\n\
    \    }\n  }\n  return count;\n}\n", "    let counter = 0;\n    nums.forEach((n)\
    \ => {\n        let number = n.toString();\n        let firstDigit = number.substr(0,1);\n\
    \        let lastDigit = number.substr(number.length - 1,1);\n        if(firstDigit\
    \ % 2 === 0 && lastDigit % 2 === 0){\n            counter++;\n        }\n    })\n\
    \    return counter;\n}\n", "    var newNums = []\n    for(var i = 0; i<nums.length;\
    \ i++){\n        if(nums[i] >= 10){\n            newNums.push(nums[i])\n     \
    \   }\n    }\n    return newNums.length\n}\n", "  nums.sort((a, b) => b - a);\
    \ //sort in ascending order\n  nums = nums.filter(e => e > 10 && e % 2 === 1);\
    \ //filter numbers greater than 10 and odd (1,3,5,7,9)\n  return nums.length;\
    \ //return the length\n}", "    var numsFiltered = [];\n    var firstOdd = nums.filter(function(num){\n\
    \        return num % 2 === 1;\n    });\n    var lastOdd = nums.filter(function(num){\n\
    \        return num % 2 === 0;\n    });\n    numsFiltered.push(...firstOdd, ...lastOdd);\n\
    \    return numsFiltered.length;\n}\n", "    if (nums.length <= 0) {\n       \
    \ return 0;\n    }\n    var count = 1;\n    for(var i = 0; i <= nums.length -\
    \ 1; i++) {\n        if(nums[i] <= 10) {\n            if(i+1 <= nums.length &&\
    \ nums[i+1] % 2 === 0) {\n                count++;\n            } else {\n   \
    \             count--;\n            }\n        }\n    }\n    return count;\n}\n",
  "  var num;\n  for(i=0;i<nums.length;i++){\n    num= nums[i];\n    if(num>10 &&\
    \ (num%10==1 ||num%10==3||num%10==5)&&(num%100!=13 && num%100!=14))\n      return\
    \ 1;\n  }\n  return 0;\n}\n", "  let count = 0;\n  for(let i=0;i<nums.length;i++){\n\
    \    if(nums[i]%2==0 && nums[i]>10 && nums[i]%Math.pow(10,(Math.floor(nums.length/2)))%2==1){\n\
    \      count++;\n    }\n  }\n  return count;\n}\n", "  let sum = 0;\n  for(let\
    \ i = 0; i < nums.length; i++){\n    if(nums[i] > 10 && nums[i-1] % 2 === 1 &&\
    \ nums[i+1] % 2 === 1){\n      sum++;\n    }\n  }\n  return sum;\n}", "  var count\
    \ = 0;\n  nums.forEach(function(num){\n    var first = (num % 10 | 0);\n    var\
    \ last = (num - first) / 10 | 0;\n    var odd = (first & 1) === 1;\n    if(first\
    \ === last && ((first & 3) === 3 || odd) ){\n      count++;\n    }\n  });\n  return\
    \ count;\n}\n", "  let numArr = nums.map(x => x.toString());\n  let sum = 0;\n\
    \  for(let i = 0; i < numArr.length; i++){\n    sum += +numArr[i]; \n  }\n  if(sum\
    \ < 10 && numArr.some(x => +x % 2 === 1) && numArr.some(x => +x % 2 === 1)){\n\
    \    return numArr.length;\n  }\n  return 0;\n}\n", "    //Your code goes here\n\
    \    return nums.filter(a => a > 10 && a%2 === 1 && Math.floor(a/10) !== a);\n\
    }\n", "    let evenCount = 0;\n    let oddCount = 0;\n    nums.forEach(num =>\
    \ {\n        let firstDigit = num.toString().split('')[0];\n        let lastDigit\
    \ = num.toString().split('').pop();\n        let newLastDigit = lastDigit.split('').pop();\n\
    \        if (firstDigit % 2 === 0 && lastDigit % 2 === 0 && newLastDigit % 2 ===\
    \ 0){\n            evenCount++;\n        } else {\n            oddCount++;\n \
    \       }\n    });\n    return oddCount + evenCount;\n}\n", "    let sum=0;\n\
    \    for(let num of nums){\n        if(num>10 && num%2===0 && num%100!==0){\n\
    \            sum++;\n        }\n    }\n    return sum;\n}\n", "  var count = nums.length;\n\
    \  for(var i=0; i<count; i++){\n    var num = nums[i];\n    if(num>10 && num%1==0\
    \ && num%2==1){\n      return count+1;\n    }\n  }\n  return count;\n}\n", " \
    \   // Write your code here.\n}\n", "    return nums.filter(function(num){\n \
    \       return num > 10 && num % 2 === 1 &&\n            ((num % 10 % 2 === 1)\
    \ || (num % 10 % 2 === 0))\n    })\n}\n", "  var i=0;\n  var count= 0;\n  var\
    \ j;\n  var numsLen = nums.length;\n  for(;i<numsLen;i++){\n    j = nums[i].toString().length;\n\
    \    while(j>0){\n      if(nums[i].toString().charAt(j-1)%2==1 && nums[i].toString().charAt(j-2)%2==1\
    \ && nums[i].toString().charAt(j-3)%2==1 && nums[i].toString().charAt(j-4)%2==1){\n\
    \        count++;\n        break;\n      }\n      j--;\n    }\n  }\n  return count;\n\
    }\n", "\tlet count = 0;\n\tfor (let num of nums) {\n\t\tif (num > 10) {\n\t\t\t\
    if (num % 2 != 1 && num % 2 != 0) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return count;\n}\n", "  let count = 0;\n  for(let i = 0; i<nums.length; i++){\n\
    \    let num = (nums[i]).toString();\n    \n    if(num.length > 1 && num[0]%2\
    \ == 1 && num[num.length-1]%2 == 1){\n      count += 1;\n    }\n  }\n  return\
    \ count;\n}\n</code>\n<|/ a tags=javascript,arrays dscore=1 |>\n<| c |>\nThis\
    \ does not work. It returns 1 even if the input array is [15, -73, 14, -15]\n\
    <|/ c |>\n<| c |>\nit returns 1 because of the second if condition. the second\
    \ if condition checks if first and last digit are odd number. if first and last\
    \ digit is even then it is added to the count. if the condition is not satisfied,\
    \ it increments the count by one\n<|/ c |>\n<| a tags=javascript,arrays |>\nHere's\
    \ my solution. It's a bit different from other answers and requires no extra libraries.\
    \ I hope it's helpful.\n\n<code>", "  // Loop over the array, comparing each item\
    \ to the second item\n  // If the first item is larger than the second item, return\
    \ false (no match)\n  // If the first item is equal to the second item and the\
    \ second item is odd, return false (no match)\n  // If the first item is equal\
    \ to the second item and the second item is even, return true (match)\n  return\
    \ nums.reduce((match,item,i) => {\n    if(nums[i+1] && nums[i+1] > item){\n  \
    \    return match;\n    }\n    if(item % 2 === 0 && nums[i+1] && nums[i+1] % 2\
    \ === 1){\n      return match;\n    }\n    return nums[i] && nums[i] !== item\
    \ && nums[i] !== nums[i] && nums[i] !== nums[i+1] ? match + 1 : 0;\n  }, 0);\n\
    }\n", "  //Write your code here\n  return nums.filter(function(n){\n    return\
    \ n > 10 && n % 2 === 1;\n  }).length;\n}\n", "    for(let i=0;i<nums.length;i++){\n\
    \        if(nums[i]<10 && nums[i]%2==1 && nums[i]%7==1){\n            return i+1\n\
    \        }\n    }\n    return -1\n}\n", "    //write your code here\n}\n</cell>\n\
    <text>\nTest your code\n\n\n</text>\n<cell>", "    //Write your code here\n}\n\
    </cell>\n<text>\nWrite a function that takes a positive number and returns the\
    \ number if it is positive even if the number is negative or not a number (0,\
    \ NaN, null, undefined, or an empty string \"\").\nFor example:\npositiveEven(-5)\
    \ => -5\npositiveEven(0) => 0\npositiveEven(2.5) => 2.5\npositiveEven(NaN) =>\
    \ NaN\npositiveEven(undefined) => NaN\npositiveEven(null) => null\npositiveEven(\"\
    \") => NaN\npositiveEven(10) => 10\npositiveEven(-10) => -10\n\n</text>\n<cell>",
  "    nums.forEach(function(num){\n        if (num > 10) {\n            console.log(num);\n\
    \        }\n    });\n}\n</code>\n<|/ a tags=javascript |>\n<| c |>\nYes, I understand\
    \ how this works but the way the question was worded (which is why I did not have\
    \ my solution written out) I thought it looked like you were doing this all in\
    \ one function. Thanks for your help.\n<|/ c |>\n<| a tags=javascript |>\nI assume\
    \ that your function is not supposed to mutate any global variable, so that you\
    \ can get the result by just returning the number of elements in the array. Here's\
    \ my solution:\n<code>", "    let n = nums.length;\n    let count = 0;\n    for\
    \ (let i = 0; i < n; i++){\n        let temp = nums[i];\n        if (temp > 10\
    \ && temp % 2 === 1 && nums[i - 1] % 2 === 1){\n            count++;\n       \
    \ }\n    }\n    return count;\n}\n", "    nums.map(function (num){\n      if (num\
    \ > 10){\n        return num;\n      }\n    }); \n  }\n", "    return nums.filter(function(num){\n\
    \        return ((num % 2 === 0 && num % 10 === 1 && num % 5 !== 0) || (num %\
    \ 2 === 1 && num % 10 === 0));\n    });\n}", "    var count = 0;\n    for(var\
    \ i=0;i<nums.length;i++){\n        if(nums[i] > 10 && nums[i]%2 === 1 && nums[i]\
    \ %2 === 0){\n            count++;\n        }\n    }\n    return count;\n}\n",
  "    let i = 0;\n    while (i < nums.length){\n        if ((nums[i] >= 10) && (nums[i+1]\
    \ % 2 === 1)){\n            return i;\n        }\n        i += 1;\n    }\n   \
    \ return 0;\n}\n", "    var count = 0; \n    for(var i=0; i < nums.length; i++){\n\
    \        if(nums[i] > 10 && nums[i] %2 ==1 && nums[i]%2 == 1){\n            count\
    \ ++;\n        }\n    }\n    return count;\n}\nvar specialNums = [15, -73, 14,\
    \ -15, 33, -21, 45, 21, -109];", "  return nums.filter(function(num){\n    \n\
    \    // 1. Write a function that takes an number as input and returns the number\n\
    \    // if is odd and if it is greater than 10. \n    // For example:\n    //\
    \ oddOrGreater(21) => 21 \n    // oddOrGreater(33) => 33\n    function oddOrGreater(num){\n\
    \      return (num%2==0)? num: num*2;\n    }\n    \n    // 2. Write a function\
    \ that takes an array of numbers as input and \n    // returns a new array of\
    \ numbers that satisfies the above conditions.\n    // The array should contain\
    \ only the odd numbers and the numbers must be \n    // greater than 10.\n   \
    \ // For example:\n    // oddOrGreaterFilter(nums) => [21, 33, 45]\n    function\
    \ oddOrGreaterFilter(nums){\n      return nums.filter(function(num){\n       \
    \ \n        // 3. Write a function that takes an array of numbers as input \n\
    \        // and returns an array of numbers that are greater than 10 \n      \
    \  // but whose first and last digits are odd.\n        // For example:\n    \
    \    // odd_firstLast([15, -73, 14, -15]) => [1, 3, 5]\n        // odd_firstLast([33,\
    \ -2, -3, 45, 21, 109]) => [2, 4, 10, 21, 45]\n        function odd_firstLast(nums){\n\
    \          return nums.filter(function(num){\n            return (num%2==0)? num:\
    \ num*2;\n          });\n        }\n        \n        // 4. Write a function that\
    \ takes an array of numbers as input \n        // and returns an array of numbers\
    \ that are greater than 10 \n        // and whose first and last digits are odd\
    \ and all but the last \n        // digits are even.\n        // For example:\n\
    \        // odd_firstLastEven([15, -73, 14, -15]) => [1, 3, 5]\n        // odd_firstLastEven([33,\
    \ -2, -3, 45, 21, 109]) => [2, 4, 10, 21, 45]\n        function odd_firstLastEven(nums){\n\
    \          return nums.filter(function(num){\n            return (num%2==0)? num:\
    \ num*2;\n          });\n        }\n        \n        // 5. Write a function that\
    \ takes an array of numbers as input \n        // and returns an array of numbers\
    \ that are greater than 10 \n        // and whose first and last digits are odd\
    \ and all but the last \n        // digits are odd.\n        // For example:\n\
    \        // odd_firstLastOdd([15, -73, 14, -15]) => [1, 3, 5]\n        // odd_firstLastOdd([33,\
    \ -2, -3, 45, 21, 109]) => [2, 4, 10, 21, 45]\n        function odd_firstLastOdd(nums){\n\
    \          return nums.filter(function(num){\n            return (num%2==0)? num:\
    \ num*2;\n          });", "  let result = 0;\n  for(let num of nums){\n    if(num\
    \ > 10 && num % 2 === 1){\n      result++;\n    }\n  }\n  return result;\n}\n\
    </cell>\n<cell>", "    var sum = 0;\n    var len = nums.length;\n    var flag\
    \ = false;\n    var even = 0;\n    var odd = 1;\n    for(var i=0; i<len; i++){\n\
    \        var item = nums[i];\n        sum = sum + item;\n        if (item > 10){\n\
    \            flag = true;\n        }\n        if (item > 10 && item % 2 == 0){\n\
    \            even++;\n        } else {\n            odd++;\n        }\n    }\n\
    \    if (flag){\n        return 1;\n    }\n    if (even == len - 1){\n       \
    \ return odd;\n    }\n    if (odd==1){\n        return even;\n    }\n}", "   \
    \ let even = 0;\n    let odd = 0;\n    for(var i = 0; i < nums.length; i++){\n\
    \        if(nums[i] < 10){\n            even++;\n            if(nums[i] % 2 ===\
    \ 1)\n                odd++;\n        }\n        else\n            break;\n  \
    \  }\n    return even * odd;\n}\n", "    var count = 0;\n    nums.forEach(function(num){\n\
    \        if(num > 10 && num%2 === 0 && num%10 === 1){\n            count++;\n\
    \        }\n    });\n    return count;\n}\n", "    var count = 0;\n    for(var\
    \ i = 0; i < nums.length; i++){\n        if(nums[i] <= 10 && nums[i]%2 === 1 &&\
    \ nums[i]%7 === 1){\n            count++;\n        }\n    }\n    return count;\n\
    }", "  let counter = 0;\n  for(let num of nums){\n    if(num > 10){\n      if(num\
    \ % 2 === 1 && num % 4 === 1){\n        counter++;\n      }\n    }\n  }\n  return\
    \ counter;\n}\n", "    let filterNum = 0;\n    for(let num of nums){\n       \
    \ if(num >= 10 && num % 2 === 1 && num % 3 === 1){\n            filterNum++;\n\
    \        }\n    }\n    return filterNum;\n}\n", "  let odd = nums.filter(n =>\
    \ n % 2 === 1);\n  let firstNum = nums[0];\n  let lastNum = nums[nums.length-1];\n\
    \  return nums.length - (nums.filter(n => n > 10 && n % 1 === 1).length + \n\t\
    \todd.filter(n => n % 2 === 1).length + firstNum.filter(n => n % 2 === 1).length\
    \ + \n\t\tlastNum.filter(n => n % 2 === 1).length);\n}\n", "    let newArr = [];\n\
    \    nums.forEach(ele => {\n        if(ele > 10 && ele % 2 === 1 && ele % 3 ===\
    \ 1){\n            newArr.push(ele);\n        }\n    });\n    console.log(newArr);\n\
    \    return newArr.length;\n}\n", "    let count = nums.filter(n => n > 10 &&\
    \ n % 2 === 1).length;\n    return count;\n}\n", "    var sum = 0;\n    var result\
    \ = 0;\n    for(var i=0; i<nums.length; i++){\n        sum = sum + nums[i];\n\
    \        if(sum > 10){\n            sum = sum % 10;\n            if(sum == 0){\n\
    \                result ++;\n            }\n        }\n    }\n    return result;\n\
    }\n</code>\n<|/ a tags=filter,javascript,arrays dscore=0 |>\n<| c |>\nIt doesn't\
    \ work when nums = [2, 5, 10] or nums = [10, 10, 10], it returns 1, but it should\
    \ be 2.\n<|/ c |>\n<| c |>\ni edited my answer with a new function using some\
    \ more maths.\n<|/ c |>\n<| c |>\nthanks, I think it works now, I'll try with\
    \ more cases.\n<|/ c |>\n<| c |>\nIt still doesn't work. I edited my question\
    \ with a new example.\n<|/ c |>\n<| a |>\n<code>", "  return nums.filter(num =>\
    \ {\n    return num > 10 && num % 1 === 0 && num % 2 === 1;\n  }).length;\n}",
  "  // Write your code here!\n  return 0;\n}\n", "  //Write your code below\n  let\
    \ number = 0\n  for (let i = 0; i < nums.length; i++){\n    if (nums[i] > 10){\n\
    \      number += 1\n    }\n  }\n  for (let i = 0; i < nums.length; i++){\n   \
    \ if (nums[i] < 0 && nums[i]%2 === 1){\n      number += 1\n    }\n  }\n  return\
    \ number\n}\n", "\tvar newNums = []\n\tfor(var i = 0; i < nums.length; i++){\n\
    \t\tnewNums.push((nums[i]).toString().substr(0,1) + '0' + nums[i]\n\t\t\t.substr(1)\
    \ + '0' + (nums[i + 1]).toString().substr(0, 1))\n\t}\n\tnums = newNums\n\tfor(var\
    \ i = 0; i < nums.length; i++){\n\t\tnums[i] = nums[i].replace(/^0+/, '')\n\t\
    }\n\treturn nums.filter(function(n){\n\t\treturn n.length > 10\n\t}).filter(function(n){\n\
    \t\tvar numsArr = n.split('')\n\t\treturn numsArr[numsArr.length - 1] === '1'\n\
    \t}).length\n}\n", "    return nums.filter((n) => n > 10).length + (nums.filter(\n\
    \        (n) => n.toString().charAt(0) === '1' &&\n        n.toString().charAt(1)\
    \ === '5'\n    ).length);\n}", "  let count = 0;\n  for (let i = 0; i < nums.length;\
    \ i++){\n    if (nums[i] >= 10 && nums[i]%2 === 1 && nums[i]%10 !== 9 ){\n   \
    \   count += 1;\n    }\n  }\n  return count;\n}\n</cell>\n<cell>", "  var count\
    \ = 0;\n  for(var i in nums){\n    if(nums[i] > 10){\n      count += nums[i];\n\
    \    }\n  }\n  return count;\n}\n", "\tlet odd = 1;\n\tlet even = 1;\n\tfor(let\
    \ i = 0; i < nums.length; i++){\n\t\tlet num = nums[i];\n\t\tlet firstDigit =\
    \ Math.floor(num / 100) % 10;\n\t\tlet lastDigit = num % 100;\n\t\tlet nextFirstDigit\
    \ = Math.floor(num / 10) % 10;\n\t\tlet nextLastDigit = num % 10;\n\n\t\tif(num\
    \ > 10 && firstDigit % 2 === 1 && lastDigit % 2 === 1){\n\t\t\todd++;\n\t\t}\n\
    \n\t\tif(num > 10 && nextFirstDigit % 2 === 1 && nextLastDigit % 2 === 1){\n\t\
    \t\teven++;\n\t\t}\n\t}\n\n\treturn odd * even;\n}\n", "  if(nums.length < 1)\
    \ return 0;\n  return nums.filter(num => {\n    if(num % 2 !== 0) return false;\n\
    \    for(let i = 0; i < nums.length; i++){\n      if(nums[i] % 2 === 0 && nums[i]\
    \ % 1 === 0) return false;\n    }\n    return true;\n  }).length;\n}\n", "   \
    \ // Write your code below\n    var count = 0;\n    nums.forEach(function(num){\n\
    \        if (num > 10){\n            var first = ((num + \"\").charAt(0)).charCodeAt(0);\n\
    \            var last = ((num + \"\").charAt(num.length)).charCodeAt(0);\n   \
    \         if(first == last){\n                count +=1;\n            }\n    \
    \    }\n    })\n    return count;\n}\n", "  let counter = 0;\n  for (let i = 0;\
    \ i < nums.length; i++){\n    if (nums[i] >= 10){\n      if (nums[i] > 10 && nums[i]\
    \ % 2 === 0){\n        counter++;\n      }\n      if (nums[i] > 10 && nums[i]\
    \ % 2 !== 0){\n        counter--;\n      }\n    }\n  }\n  return counter;\n}\n",
  "  let count = 0;\n  nums.forEach((num) => {\n    const first = Math.floor(num /\
    \ 10);\n    const last  = num - (first * 10);\n    const firstOdd = first % 2\
    \ === 1;\n    const lastOdd = last % 2 === 1;\n    const isEven = firstOdd &&\
    \ lastOdd;\n    if(isEven) count++;\n  });\n  return count;\n}\n", "    var n\
    \ = 0;\n    for (i = 0; i<nums.length; i++){\n        if (nums[i] > 10 && nums[i]%2\
    \ === 1 && nums[i]%5 === 1){\n            n++;\n        }\n    }\n    return n;\n\
    }\n", "\tlet count = 0;\n\tfor(let i = 0; i < nums.length; i++){\n\t\tif(nums[i]\
    \ % 2 == 0 && nums[i] % 2 != 1){\n\t\t\tcount += 1;\n\t\t\tif(nums[i] < 10 &&\
    \ nums[i] > -10){\n\t\t\t\tif(nums[i] > -10){\n\t\t\t\t\tif(nums[i] % 2 != 1){\n\
    \t\t\t\t\t\tcount += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ count;\n}\n", "    let count = 0; // number of elements > 10\n    let odd =\
    \ 1; //first and last digits odd\n    let even = 0; //first and last digits even\n\
    \    for(let i=0; i< nums.length; i++){\n        if(nums[i] >= 10){\n        \
    \    count ++;\n            odd *= nums[i] % 2;\n            even *= nums[i]%2;\n\
    \        }\n    }\n    \n    if(odd*even > 0){\n        count ++;\n    }\n   \
    \ \n    return count;\n}\n", "    for(var i = 0; i<nums.length; i++){\n      \
    \  if(nums[i]>10 && nums[i]%2==1 && nums[i]%7!=1){\n            return nums.length;\n\
    \        }\n    }\n    return nums.length;\n}\n", "  // Write your code here.\n\
    \  var n = nums.length;\n  var result = 0;\n  for(var i=0;i<n;i++){\n    if(nums[i]\
    \ >= 10 && nums[i]%2 === 1){\n      result += 1;\n    }\n  }\n  return result;\n\
    }\n", "  // Filter the array of numbers to find the ones that match our criteria\n\
    \  // Then use filter() to get the odd numbers and get the length\n  return nums.filter(num=>num>10).filter((num)=>{\n\
    \    return num%2==1&&num%10%2==1\n  }).length\n}\n", "  return nums.filter(function(num){\n\
    \    return num > 10 && num % 2 === 1 && num % 10 !== 0;\n  }).length;\n}\n",
  "    return nums.filter(function(num){\n        return num > 10 && num%2 === 1 &&\
    \ num%10%2 === 1;\n    }).length;\n}\n", "    return nums.filter(function(num){\n\
    \        return num > 10 && num.substr(0, 1) % 2 === 1 && num.substr(num.length-1)\
    \ % 2 === 1;\n    });\n}\n</cell>\n<text>\nNow that we can use filter, we need\
    \ to filter out the odd numbers before we get to oddSum and sum. Let's use the\
    \ special filter we wrote earlier to do this.\n\n\n</text>\n<cell>\nvar oddNums\
    \ = specialFilter(nums);\nvar oddSum = oddNums.reduce(function(a, b){\n    return\
    \ a + b;\n});\nvar sum = nums.reduce(function(a, b){\n    return a + b;\n});\n\
    var sumOddNums = nums.filter(function(num){\n    return num > 10 && num.substr(0,\
    \ 1) % 2 === 1 && num.substr(num.length-1) % 2 === 1;\n});\nvar sumOddSum = sumOddNums.reduce(function(a,\
    \ b){\n    return a + b;\n});", "    var length = nums.length;\n    var filteredNums\
    \ = [];\n    var num;\n    for (var i = 0; i < length; i++){\n        num = nums[i];\n\
    \        filteredNums.push(num);\n    }\n    return filterOdd(filteredNums);\n\
    }\n", "    nums.forEach(function(number){\n        var firstDigit = number % 10;\n\
    \        var lastDigit = number % 10;\n        var lastDigitOdd = lastDigit %\
    \ 2;\n        var oddDigitsCount = 1;\n        for(var i = 0; i < number; i++){\n\
    \            if(i % 10 == firstDigit && i % 2 != lastDigitOdd){\n            \
    \    oddDigitsCount++;\n            }\n        }\n        console.log(oddDigitsCount);\n\
    \    })\n}\n</code>\n<|/ a tags=javascript,arrays,filter dscore=0 |>\n<| c |>\n\
    this isn't the correct answer. It only gives you 1 when all array elements are\
    \ odd, not how many odd/even numbers there are in each array.\n<|/ c |>\n<| c\
    \ |>\nI edited the answer. Check it out, I believe this is what you are looking\
    \ for.\n<|/ c |>\n<| a tags=javascript,arrays,filter dscore=0 |>\nYou can use\
    \ the filter method to find all odd numbers in the array:\n<code>\nvar oddsArray\
    \ = nums.filter(function(num){\n  return num % 2 === 1;\n});\n</code>\n<|/ a |>\n\
    <| a tags=javascript,arrays,filter |>\nIf you have lodash installed, you can use\
    \ the _.uniq method like this:\n<code>\nvar odd = _.uniq(nums, false);\n</code>\n\
    And if you want to find the unique odd numbers instead of all odd, you can use\
    \ the _.uniqWith method:\n<code>\nvar uniqueOddNumbers = _.uniqWith(nums, false,\
    \ function(num){\n  return num % 2;\n});\n</code>\nThe false parameter prevents\
    \ the function from using the === operator (which only compares the left operand).\
    \ The true parameter tells lodash how to compare the values.\n<|/ a dscore=0 |>\n\
    <| a dscore=0 |>\nThe solution below is a little bit different than others posted\
    \ here but it has two advantages:\n\nIt uses ES5 Array functions to reduce complexity.\n\
    It uses native Array.filter() instead of an imperative for loop.\n\n<code>", " \
    \   var filteredNums = [];\n    for(var i=0;i<nums.length;i++){\n        if(nums[i]>10){\n\
    \            if(nums[i]%2==1 && nums[i]%4==0){\n                filteredNums.push(nums[i]);\n\
    \            }\n        }\n    }\n    return filteredNums.length;\n}\n", "  //\
    \ Use this block to count the number of elements in the array that are greater\
    \ than 10 and both \n  // first and last digits of a number are odd (1, 3, 5,\
    \ 7, 9).\n  var count = 0;\n  nums.forEach(function(num){\n    if(num > 10){\n\
    \      if(num % 2 === 1 && num % 10 === 1 && num % 5 === 1){\n        count +=\
    \ 1;\n      }\n    }\n  })\n  return count;\n}\n", "  nums.sort();\n  \n  // If\
    \ the first and last digits of nums are odd, then \n  // the whole number is odd.\n\
    \  var odd = nums[0]%2 && nums[1]%2;\n  var numsWithFirstAndLastOdd = nums.filter((num)\
    \ => {\n    return num%2 !== 0; // Remove even nums.\n  });\n  \n  // Return 1\
    \ if numsWithFirstAndLastOdd has one element, and nums has \n  // more than one\
    \ element, or 0 if all elements are even.\n  return numsWithFirstAndLastOdd.length\
    \ + (nums.length > 1 ? 1 : 0);\n}\n</cell>\n<text>\nTask 3\nWrite a function which\
    \ takes a single number as input and returns the number if it is even, else returns\
    \ -1. \nFor example:\ninputNumber1(13) => 13 \ninputNumber1(17) => -1\ninputNumber1(6)\
    \ => -1\n\n\n</text>\n<cell>", "  var arr = [];\n  \n  for(var i = 0, len = nums.length;\
    \ i < len; i++){\n    if(nums[i] <= 10 && nums[i].toString().charAt(1) === '0'\
    \ && nums[i].toString().charAt(2) === '0')\n      arr.push(nums[i]);\n  }\n  \n\
    \  return arr.length;\n}\n", "    let filterCount = 0;\n    for(let i = 0; i <\
    \ nums.length; i++){\n        if(nums[i] > 10 && nums[i] % 2 === 1 && nums[i]\
    \ % 100 === 1){\n            filterCount++;\n        }\n    }\n    return filterCount;\n\
    }\n", "    return nums.filter(function(num){\n        return num > 10 && num%2\
    \ === 0 && num%10 % 2 === 1\n    }).length\n}\n", "   let counter = 0;\n   for\
    \ (let i = 0; i < nums.length; i++){\n      if (nums[i] > 10 && nums[i]%2 ===\
    \ 1 && nums[i]%10 !== 10){\n         counter++;\n      }\n   }\n   return counter;\n\
    }\n", "    var numsLength = nums.length,\n        filteredNums = [],\n       \
    \ oddFirst,\n        oddLast;\n    \n    for (var i = 0; i < numsLength; i++){\n\
    \        var num = nums[i],\n            firstDigit = num % 10,\n            lastDigit\
    \ = num - firstDigit,\n            isOdd = (firstDigit % 2 === 1 && lastDigit\
    \ % 2 === 1),\n            isFirstOdd = (firstDigit % 2 === 0),\n            isLastOdd\
    \ = (lastDigit % 2 === 0),\n            finalNum;\n\n        if (isFirstOdd &&\
    \ isLastOdd && isOdd){\n            finalNum = firstDigit + lastDigit;\n     \
    \       filteredNums.push(finalNum);\n        }\n    }\n    return filteredNums.length;\n\
    }\n", "  var numbers = nums.map(function (item) {\n    return item * 2\n  });\n\
    \  var oddSums = numbers.filter(function (item, index, arr){\n    return arr[index\
    \ - 1] % 2 === 1\n  }).reduce(function (acc, item){\n    return acc + item\n \
    \ }, 0);\n\n  var evenSums = numbers.filter(function (item, index, arr){\n   \
    \ return arr[index - 1] % 2 === 0\n  }).reduce(function (acc, item){\n    return\
    \ acc + item\n  }, 0);\n\n  return oddSums + evenSums;\n}\n", "  let cnt = 0;\n\
    \  for(let i=0; i < nums.length; i++){\n    if(nums[i] >= 10 && nums[i]%2 ===\
    \ 0 && nums[i]%10 == 1){\n      cnt += 1;\n    }\n  }\n  return cnt;\n}", "  let\
    \ result = 0;\n  for (let i = 0; i < nums.length; i++){\n    if(nums[i] > 10 &&\
    \ nums[i] % 2 === 1){\n      result += 1;\n    }\n  }\n  return result;\n}\n",
  "  var filterNum;\n  var numsLength = 0;\n  \n  for(var num in nums){\n    if(nums.hasOwnProperty(num)){\n\
    \      numsLength++;\n    }\n  }\n  \n  if(numsLength === 0){\n    return 0;\n\
    \  }\n  \n  for(var num in nums){\n    if(nums.hasOwnProperty(num)){\n      if(nums[num]\
    \ > 10){\n        filterNum = nums[num];\n        break;\n      }\n    }\n  }\n\
    \  \n  if(filterNum){\n    if(filterNum > 10){\n      filterNum = filterNum -\
    \ 10;\n    }\n    var numsLength = nums.length;\n    \n    for(var num in nums){\n\
    \      if(nums.hasOwnProperty(num)){\n        if(nums[num] > 10){\n          filterNum\
    \ = filterNum + 2;\n          break;\n        }\n      }\n    }\n    \n    if(filterNum\
    \ > 10){\n      filterNum = filterNum + 4;\n    }\n    \n    return numsLength\
    \ - num;\n  } else {\n    return 0;\n  }\n}\n", "    var i, length = nums.length;\n\
    \    for(i = 0; i < length; i++){\n        if(nums[i] > 10 && nums[i] % 2 ===\
    \ 1 && nums[i] % 10 === 1 && nums[i] % 100 % 2 === 1){\n            return i;\n\
    \        }\n    }\n}\n", "  let total = 0;\n  for(let i = 0; i < nums.length;\
    \ i++){\n    total += nums[i];\n  }\n  let filterNumbers = nums.filter(function(num){\n\
    \    return (num > 10) && ((num % 2) === 1);\n  });\n  let oddNumbers = filterNumbers.filter(function(num){\n\
    \    return (num % 2) === 1;\n  });\n  return filterNumbers.length - oddNumbers.length;\n\
    }\n", "  return nums.filter(num => num > 10 && num % 2 === 1 && num % 10 === 1).length;\n\
    }\n", "    let filtered = nums.filter(function(num) {\n        if (num > 10) {\n\
    \            let firstNum = num.toString().substr(0,1);\n            let lastNum\
    \ = num.toString().substr(num.toString().length - 1,1);\n            if (firstNum\
    \ && lastNum){\n                return (firstNum % 2 === 1 && lastNum % 2 ===\
    \ 1);\n            }\n        }\n        return false;\n    });\n    return filtered.length;\n\
    }", "    for(var i = 0; i < nums.length; i++){\n        if(nums[i] > 10 && nums[i]%2\
    \ === 1 && nums[i]%100 === 1 &&nums[i]%100 === 1){\n            return i+1;\n\
    \        }\n    }\n    \n}\n    \n    ", "  var len = nums.length;\n  if(len ===\
    \ 0) return 0;\n  if(len === 1) return nums[0]%2 === 1 && nums[0]>10 && nums[0]<20\
    \ ? 1 : 0;\n  for(var i=1; i<len; i++){\n    if(nums[i-1] > 10 && nums[i-1]<20\
    \ && nums[i]%2 === 1 && nums[i]>10 && nums[i]<20) return 1;\n  }\n  return 0;\n\
    }\n", "\tnums = nums.sort(function(a,b){return a-b}); //sort the nums array\n\t\
    return nums.length-2; //return the length\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

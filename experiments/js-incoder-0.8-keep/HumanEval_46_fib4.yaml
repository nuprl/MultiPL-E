name: HumanEval_46_fib4
language: js
prompt: "//The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n// fib4(0) -> 0\n// fib4(1) -> 0\n// fib4(2) -> 2\n\
  // fib4(3) -> 0\n// fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
  // Please write a function to efficiently compute the n-th element of the fib4 number\
  \ sequence.  Do not use recursion.\n// >>> fib4(5)\n// 4\n// >>> fib4(6)\n// 8\n\
  // >>> fib4(7)\n// 14\nfunction fib4(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = fib4;\n  assert.deepEqual(candidate(5),4);\n  assert.deepEqual(candidate(8),28);\n\
  \  assert.deepEqual(candidate(10),104);\n  assert.deepEqual(candidate(12),386);\n\
  }\n\ntest();"
completions: ["\tif (n < 0){\n\t\treturn -1;\n\t}\n\telse {\n\t\tif (n === 4){\n\t\
    \t\treturn 4;\n\t\t}\n\t\telse {\n\t\t\treturn fib4(n - 4) + fib4(n - 3) + fib4(n\
    \ - 2) + fib4(n - 1);\n\t\t}\n\t}\n}\n", "  if (n < 4) return 0;\n  if (n < 8)\
    \ return 1;\n  if (n < 14) return 2;\n  return fib4(n-2) + fib4(n-3) + fib4(n-4)\
    \ + fib4(n-5);\n}", "    if (n < 4) return 0;\n    if (n < 7) return (fib4(n -\
    \ 4) + fib4(n - 5) + fib4(n - 6) + fib4(n - 7));\n    return fib4(n - 4) + fib4(n\
    \ - 5) + fib4(n - 6) + fib4(n - 7);\n}", "\tif(n<0){\n\t\treturn -1;\n\t}\n\t\
    if(n==0){\n\t\treturn 0;\n\t}\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4);\n}\n", "  if (n < 0) return -1;\n  else if (n === 4) return 1;\n\
    \  else return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}", " \
    \   if(n<=1){\n        return 0;\n    }\n    else if(n===4){\n        return 0;\n\
    \    }\n    return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n}\n", "    if(n <\
    \ 2){\n        return 0;\n    }\n    let a = 0;\n    let b = 1;\n    let c = 1;\n\
    \    let d = 1;\n    for(let i = 2; i < n; i++){\n        d += c;\n        c =\
    \ b;\n        b += a;\n        a += d;\n    }\n    return a;\n}", "\tif (n < 0)\
    \ return 0\n\tif (n <= 1) return 1\n\treturn fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4)\n}\n", "  if (n <= 0)\n    return 0;\n  else\n    return fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "  var fib = 4;\n  for(var\
    \ i = 0; i<n; i++){\n    fib += fib;\n  }\n  return fib;\n}\n\nvar n = [0, 1,\
    \ 2, 3, 4];\nvar fib = [0, 0, 0, 0, 0];\nfor(var i=0; i<n.length; i++){\n  fib[i]\
    \ = fib4(n[i]);\n}", "\tif (n<0){\n\t\treturn null;\n\t}\n\tif (n===0){\n\t\t\
    return 0;\n\t}\n\tif (n===1){\n\t\treturn 1;\n\t}\n\tif (n===2){\n\t\treturn 2;\n\
    \t}\n\tif (n===3){\n\t\treturn 0;\n\t}\n\treturn fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    }\n\nvar totalFib4Numbers = function(){\n\tvar sum = 0;\n\tfor(var i=0; i< 4;\
    \ i++){\n\t\tsum = sum + fib4(i);\n\t}\n\treturn sum;\n}\n\nvar myFib4 = function(){\n\
    \tvar sum = 0;\n\tfor(var i=0; i< 4; i++){\n\t\tsum = sum + fib4(i);\n\t}\n\t\
    return sum;\n}\nvar myFib4 = function(){\n\tvar sum = 0;\n\tfor(var i=0; i< 4;\
    \ i++){\n\t\tsum = sum + fib4(i);\n\t}\n\treturn sum;\n}\n", "\t// base case\n\
    \tif (n === 0){\n\t\treturn 0;\n\t}\n\t// recursive case\n\telse {\n\t\treturn\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n\t}\n}\n</cell>\n<text>\n\
    Write a function factorial(n) that computes the factorial of the number n.  The\
    \ factorial of 0 is 1, and the factorial of 1 is the number itself.  For example,\
    \ factorial(0) returns 1, and factorial(1) returns 1, and factorial(2) returns\
    \ 2, and so on.\n\n\n</text>\n<cell>", "    var result = 0;\n    \n    if(n==0){\n\
    \        result = 0;\n    }\n    if(n==1){\n        result = 1;\n    }\n    if(n==2){\n\
    \        result = 2;\n    }\n    if(n>2){\n        result = fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4);\n    }\n    \n    return result;\n}\n", "\t\
    if(n<=0){\n\t\treturn 0;\n\t}\n\tif(n>4){\n\t\treturn fib4(n-4)+fib4(n-3)+fib4(n-2)+fib4(n-1)\n\
    \t}\n\treturn fib4(n-4)+fib4(n-3)+fib4(n-2)+fib4(n-1)\n}", "    return fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", "  return fib4_0(n)+fib4_1(n)+fib4_2(n)+fib4_3(n);\n\
    }\n", "\tif (n < 2)\n\t\treturn 0;\n\tif (n < 4)\n\t\treturn fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4);\n\treturn fib4(n - 5) + fib4(n - 6) + fib4(n\
    \ - 7) + fib4(n - 8);\n}", "  var n1=n-1;\n  var n2=n-2; \n  var n3=n-3;\n  var\
    \ n4=n-4; \n  return n1+n2+n3+n4;\n}", "    var x = 1;\n    var temp = 0;\n  \
    \  while (x < n){\n        temp += x;\n        x = (x + x%4 == 0) ? 0 : x + x%4;\n\
    \    }\n    return temp;\n}\n", "    if(n==0){\n        return 0;\n    }\n   \
    \ else if(n==1){\n        return 0;\n    }\n    else if(n==2){\n        return\
    \ 2;\n    }\n    else if(n==3){\n        return 0;\n    }\n    else if(n%2==0){\n\
    \        return fib4(n-1)+fib4(n-2);\n    }\n    else if(n%2==1){\n        return\
    \ fib4(n-1)+fib4(n-3)+fib4(n-4);\n    }\n}\n", "  if(n<0) return 0\n  if(n<1)\
    \ return 1\n  return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n}\n", "  if(n\
    \ <= 4){\n    return n;\n  }\n  else{\n    return fib4(n - 4) + fib4(n - 3) +\
    \ fib4(n - 2) + fib4(n - 1);\n  }\n}\n", "    if (n === 0){\n        return 0;\n\
    \    } else if (n === 1){\n        return 0;\n    } else if (n === 2){\n     \
    \   return 2;\n    } else if (n === 3){\n        return 0;\n    } else if (n ===\
    \ 4){\n        return 4;\n    } else if (n === 5){\n        return 8;\n    } else\
    \ if (n === 6){\n        return 16;\n    } else if (n === 7){\n        return\
    \ 32;\n    } else if (n === 8){\n        return 64;\n    } else if (n === 9){\n\
    \        return 128;\n    } else if (n === 10){\n        return 256;\n    } else\
    \ if (n === 11){\n        return 512;\n    } else if (n === 12){\n        return\
    \ 1024;\n    } else if (n === 13){\n        return 2048;\n    } else if (n ===\
    \ 14){\n        return 4096;\n    } else if (n === 15){\n        return 8192;\n\
    \    } else if (n === 16){\n        return 16384;\n    } else if (n === 17){\n\
    \        return 32768;\n    } else if (n === 18){\n        return 65536;\n   \
    \ } else if (n === 19){\n        return 131072;\n    } else if (n === 20){\n \
    \       return 262144;\n    } else if (n === 21){\n        return 524288;\n  \
    \  } else if (n === 22){\n        return 1048576;\n    } else if (n === 23){\n\
    \        return 2097152;\n    } else if (n === 24){\n        return 4194304;\n\
    \    } else if (n === 25){\n        return 8388608;\n    } else if (n === 26){\n\
    \        return 16777216;\n    } else if (n === 27){\n        return 33554432;\n\
    \    } else if (n === 28){\n        return 67108864;\n    } else if (n === 29){\n\
    \        return 134217728;\n    } else if (n === 30){\n        return 268435456;\n\
    \    } else if (n === 31){\n        return 536870912;\n    }\n}", "\tvar i; \n\
    \tvar fib4 = 0 \n\t\n\tif (n === 0) \n\t\treturn fib4; \n\tif (n === 1) \n\t\t\
    return 1; \n\tif (n === 2) \n\t\treturn 2; \n\tif (n === 3) \n\t\treturn 3; \n\
    \tif (n === 4) \n\t\treturn 4; \n\tif (n === 5) \n\t\treturn 5; \n\tif (n ===\
    \ 6) \n\t\treturn 6; \n\tif (n === 7) \n\t\treturn 7; \n\tif (n === 8) \n\t\t\
    return 8; \n\tif (n === 9) \n\t\treturn 9; \n\t\n\tfor(i = 1; i <= n; i++){\n\t\
    \tfib4 = fib4 + fib4(i - 1) + fib4(i - 2) + fib4(i - 3) + fib4(i - 4);\n\t}\n\t\
    return fib4;\n}", "\tif(n===0){\n\t\treturn 0;\n\t}\n\tif(n<4){\n\t\treturn fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    \t}\n\tif(n==4){\n\t\treturn 4;\n\t}\n\tif(n<9){\n\t\treturn fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4)+fib4(n-5)+fib4(n-6)+fib4(n-7);\n\
    \t}\n\treturn fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4)+fib4(n-5)+fib4(n-6)+fib4(n-7)+fib4(n-8);\n\
    }", "\tvar fib = [0,0,0,0];\n\tvar currentNum = 0;\n\t\n\tfor(var i = 0; i < n;\
    \ i++){\n\t\tcurrentNum = fib[currentNum] + fib[currentNum-1] + fib[currentNum-2]\
    \ + fib[currentNum-3];\n\t\tfib[i] = currentNum;\n\t}\n\treturn fib[n];\n}\n</script>\n\
    </head>\n<body>\n<h1>Problem 6 - Fibonacci Series with Recursion</h1>\n<script\
    \ src=\"https://cdn.rawgit.com/kripken/mathjs/b5d52e9d/math.js\"></script>\n<script>\
    \ //A recursive definition of the Fibonacci sequence is useful when one wants\
    \ to compute the value of an expression repeatedly and efficiently. ", "\tvar\
    \ fib4 = 0, i;\n\tif (n==0) return 0;\n\tif (n==1) return 1;\n\tif (n==2) return\
    \ 2;\n\tfor (i=0; i<n; i++){\n\t\tfib4+=fib4(--n);\n\t}\n\treturn fib4;\n}\n",
  "\tif (n==0) return 0;\n\tif (n==1) return 0;\n\tif (n==2) return 2;\n\tif (n==3)\
    \ return 0;\n\treturn fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n}\n", "    if\
    \ (n < 0)\n        throw new Error('fib4: n should be positive!');\n    if (n\
    \ === 0)\n        return 0;\n    if (n === 1)\n        return 1;\n    return fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "  if (n < 0 || n > 4)\
    \ return 0;\n  if (n === 0 || n === 4) return 1;\n  if (n === 1) return 1;\n \
    \ return fib4(n - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1);\n}\n", "\tif(n\
    \ === 0){\n\t\treturn 0;\n\t}\n\telse if (n === 1){\n\t\treturn 0;\n\t}\n\telse\
    \ if(n === 2){\n\t\treturn 2;\n\t}\n\telse if(n === 3){\n\t\treturn 0;\n\t}\n\t\
    else if (n > 3){\n\t\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4);\n\t}\n}", "\tif(n===0) return 0;\n\tif(n===1) return 1;\n\tif(n===2) return\
    \ 2;\n\tif(n===3) return 3;\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4);\n}\n", "  if (n===0 || n===1) return 1;\n  if (n===2) return\
    \ 2;\n  if (n===3) return 1;\n  if (n===4) return 3;\n  return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4);\n}\n", "  if (n === 4){\n    return 4;\n  }\n  return\
    \ fib4(n - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1);\n}\n", "  return n;\n\
    }\n", "    if (n === 0) return 0;\n    if (n === 1) return 0;\n    if (n === 2)\
    \ return 2;\n    if (n === 3) return 0;\n    return fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4);\n}\n", "    if(n>0) return fib4(n-1) + fib4(n-2) + fib4(n-3) +\
    \ fib4(n-4);\n    return n;\n}", "  return fib4_rec(0,n-1);\n}\n", "    console.log(\"\
    fib4(\" + n + \")\")\n    if(n<=1){\n        return 1\n    }\n    if(n === 2){\n\
    \        return 2\n    }\n    return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4)\n\
    }\n", "  return Math.pow(fibonacci(n),4);\n}\n", "\tif (n===0) return 0;\n\tif\
    \ (n===1) return 1;\n\tif (n===2) return 2;\n\tif (n===3) return 0;\n\tif (n===4)\
    \ return 4;\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n\
    }", "\tvar fib4Num = 0, i;\n\t\n\tfor (i = 1; i <= n; i++) {\n\t\tfib4Num += i;\n\
    \t}\n\treturn fib4Num;\n}\n", "  if(n<0){\n    console.log('negative number encountered,\
    \ fib4 sequence will not work.');\n    return -1;\n  }\n  if(n==0){\n    return\
    \ 0;\n  }\n  if(n==1){\n    return 1;\n  }\n  return fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4);\n}", "    if (n <= 0)\n        return 0;\n    else if (n <= 3)\n\
    \        return 1;\n    else\n        return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4);\n}\n<|/ file ext=.js |>\n<| c |>\nYour function works fine\
    \ for small values of n, but for large numbers you get stack overflow. Try using\
    \ dynamic programming instead.\n<|/ c |>\n<| a tags=fibonacci,recursion,javascript\
    \ |>\nYou can use a stack to solve this problem. First push the first two numbers\
    \ in the stack, now when you pop it, it is the current number you are working\
    \ with and you do everything that is needed for the current number to work. Once\
    \ your number reaches n, you just pop the stack and return it, like this:\n<code>",
  "  if (n === 0) return 0;\n  if (n === 1) return 1;\n  if (n === 2) return 2;\n\
    \  if (n === 3) return 0;\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) +\
    \ fib4(n - 4);\n}\n", "    // your code here\n    var arr = [0,1,1,2,2];\n   \
    \ var index = n-2;\n    while(index > 0){\n        arr[index] = arr[index-1] +\
    \ arr[index-2] + arr[index-3] + arr[index-4];\n        index = index-4;\n    }\n\
    \    return arr[index];\n}\n", "  return fib4(n-1);\n}", "    if(n<=1){\n    \
    \    return(0);\n    }\n    if(fib4[n-1]==0){\n        fib4[n-1]=fib4(fib4[n-2]+fib4[n-3]+fib4[n-4]);\n\
    \    }\n    console.log(n,fib4[n-1]);\n    return fib4[n-1];\n}\n", "\tif (n<0\
    \ || n>100){\n\t\treturn 0;\n\t}\n\tlet fib4_val=0;\n\tlet fib4_count=0; //counts\
    \ how many times fib4(n-1) has been called\n\tfib4_val=fib4(n-1) + fib4(n-2) +\
    \ fib4(n-3) + fib4(n-4);\n\tfib4_count=fib4_count+1;\n\tif (fib4_count==8){\n\t\
    \treturn fib4_val;\n\t}\n\tif (fib4_count==5){\n\t\treturn fib4_val + fib4_val;\n\
    \t}\n\tif (fib4_count==2){\n\t\treturn fib4_val + fib4_val + fib4_val;\n\t}\n\t\
    return fib4_val + fib4_val + fib4_val + fib4_val;\n}\n", "\tif (n<0) {\n\t\treturn\
    \ -1;\n\t}\n\tif (n<4) {\n\t\treturn 1;\n\t}\n\treturn fib4(n-2) + fib4(n-3) +\
    \ fib4(n-4);\n}", "  if (n<=1){\n    return n\n  }\n  return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4)\n\
    }\n", "  if (n < 3) return 0;\n  if (n < 5) return fib4(n - 4) + fib4(n - 3) +\
    \ fib4(n - 2) + fib4(n - 1) + fib4(n);\n  return fib4(n - 4) + fib4(n - 3) + fib4(n\
    \ - 2) + fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4) + fib4(n - 5) +\
    \ fib4(n - 6) + fib4(n - 7) + fib4(n - 8);\n}\n", "    if (n < 0){\n        return\
    \ 0;\n    }\n    if (n < 2){\n        return n;\n    }\n    if (n < 4){\n    \
    \    return 0;\n    }\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4);\n}\n", "  var arr = [0,1,2];\n  while(n > 1){\n    arr.push(arr[n-1] +\
    \ arr[n-2]);\n    n -= 3;\n  }\n  return arr[n-1];\n}\n", "\tif (n === 0){\n\t\
    \treturn 0;\n\t}\n\telse if (n === 1){\n\t\treturn 1;\n\t}\n\telse if (n === 2){\n\
    \t\treturn 2;\n\t}\n\telse if (n === 3){\n\t\treturn 0;\n\t}\n\telse if (n ===\
    \ 4){\n\t\treturn 2;\n\t}\n\telse if (n === 5){\n\t\treturn 4;\n\t}\n\telse if\
    \ (n === 6){\n\t\treturn 8;\n\t}\n\telse if (n === 7){\n\t\treturn 14;\n\t}\n\t\
    else if (n === 8){\n\t\treturn 8;\n\t}\n\telse if (n === 9){\n\t\treturn 15;\n\
    \t}\n\telse if (n === 10){\n\t\treturn 15;\n\t}\n\telse if (n === 11){\n\t\treturn\
    \ 20;\n\t}\n\telse if (n === 12){\n\t\treturn 20;\n\t}\n\telse if (n === 13){\n\
    \t\treturn 25;\n\t}\n\telse if (n === 14){\n\t\treturn 30;\n\t}\n\telse if (n\
    \ === 15){\n\t\treturn 50;\n\t}\n\telse if (n === 16){\n\t\treturn 90;\n\t}\n\t\
    else if (n === 17){\n\t\treturn 110;\n\t}\n\telse if (n === 18){\n\t\treturn 140;\n\
    \t}\n\telse if (n === 19){\n\t\treturn 160;\n\t}\n\telse if (n === 20){\n\t\t\
    return 190;\n\t}\n\telse if (n === 21){\n\t\treturn 210;\n\t}\n\telse if (n ===\
    \ 22){\n\t\treturn 240;\n\t}\n\telse if (n === 23){\n\t\treturn 280;\n\t}\n\t\
    else if (n === 24){\n\t\treturn 300;\n\t}\n\telse if (n === 25){\n\t\treturn 330;\n\
    \t}\n\telse if (n === 26){\n\t\treturn 380;\n\t}\n\telse if (n === 27){\n\t\t\
    return 430;\n\t}\n\telse if (n === 28){\n\t\treturn 460;\n\t}\n\telse if (n ===\
    \ 29){\n\t\treturn 500;\n\t}\n\telse if (n === 30){\n\t\treturn 560;\n\t}\n\t\
    else if (n === 31){\n\t\treturn 600;\n\t}\n}\n", "    if (n<1)\n        return\
    \ 0;\n    if (n==1)\n        return 1;\n    return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    }", "  var fib4 = 0, i = 0;\n  \n  while (i<n){\n    fib4+=i;\n    i++;\n  }\n\
    \  \n  return fib4;\n}\n", "    if(n===0) return 0;\n    if(n===1) return 1;\n\
    \    return fib4(--n)+fib4(--n)+fib4(--n)+fib4(--n);\n}", "  if(n<0){\n    throw\
    \ new Error('fib4: n must be greater than 0.');\n  }\n  if(n===0) return 0;\n\
    \  if(n===1) return 1;\n  if(n===2) return 2;\n  if(n===3) return 3;\n  if(n===4)\
    \ return 4;\n  return fib4(4) + fib4(5) + fib4(6) + fib4(7) + fib4(8);\n}", " \
    \   if(n>0){\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n\
    \    }\n    return 0;\n}", "    if(n<4){\n        return 0;\n    }\n    else if(n\
    \ > 4){\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n    }\n\
    \    else{\n        return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4) + fib4(n-5);\n\
    \    }\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>", "    if(n===0 || n===1\
    \ ){\n        return 0;\n    }\n    if(n===2 ){\n        return 2;\n    }\n  \
    \  if(n===3){\n        return 0;\n    }\n    return fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4);\n}", "  var sum = 0;\n  for(var i=1; i<=n; i++){\n\
    \    sum += fib4(i-1);\n  }\n  return sum;\n}", "  if (n<=1)return n;\n  return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "\tif (n === 0)\
    \ return 0;\n\tif (n === 1) return 1;\n\tif (n === 2) return 2;\n\treturn fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "    if(n<=0){\n    \
    \    return 0;\n    }\n    if(n<4){\n        return 0;\n    }\n    else if(n<8){\n\
    \        return fib4(n-4)+fib4(n-3)+fib4(n-2)+fib4(n-1);\n    }\n    return fib4(n-4)+fib4(n-3)+fib4(n-2)+fib4(n-1);\n\
    }\nexports.fib4 = fib4;\n},{}],10:[function(require,module,exports){\nvar fib\
    \ = require('fib');\nvar fib2 = require('fib2');\nvar fib3 = require('fib3');\n\
    var fib4 = require('fib4');\nvar fib5 = require('fib5');\nvar fib6 = require('fib6');\n\
    var fib7 = require('fib7');\nvar fib8 = require('fib8');\nvar fib9 = require('fib9');\n\
    var fib10 = require('fib10');\nvar fib11 = require('fib11');\nvar fib12 = require('fib12');\n\
    var fib13 = require('fib13');\nvar fib14 = require('fib14');\nvar fib15 = require('fib15');\n\
    var fib16 = require('fib16');\nvar fib17 = require('fib17');\nvar fib18 = require('fib18');\n\
    var fib19 = require('fib19');\nvar fib20 = require('fib20');\nvar fib21 = require('fib21');\n\
    var fib22 = require('fib22');\nvar fib23 = require('fib23');\nvar fib24 = require('fib24');\n\
    var fib25 = require('fib25');\nvar fib26 = require('fib26');\nvar fib27 = require('fib27');\n\
    var fib28 = require('fib28');\nvar fib29 = require('fib29');\nvar fib30 = require('fib30');\n\
    var fib31 = require('fib31');\nvar fib32 = require('fib32');\nvar fib33 = require('fib33');\n\
    var fib34 = require('fib34');\nvar fib35 = require('fib35');\nvar fib36 = require('fib36');\n\
    var fib37 = require('fib37');\nvar fib38 = require('fib38');\nvar fib39 = require('fib39');\n\
    var fib40 = require('fib40');\nvar fib41 = require('fib41');\nvar fib42 = require('fib42');\n\
    var fib43 = require('fib43');\nvar fib44 = require('fib44');\nvar fib45 = require('fib45');\n\
    var fib46 = require('fib46');\nvar fib47 = require('fib47');\nvar fib48 = require('fib48');\n\
    var fib49 = require('fib49');\nvar fib50 = require('fib50');\nvar fib51 = require('fib51",
  "    if (n==0 || n==1 || n==2 || n==3 || n==4) \n        return 1;\n    else if\
    \ (n==5) \n        return 4;\n    else if (n==6) \n        return 8;\n    else\
    \ if (n==7) \n        return 14;\n    return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    }\n", "  var fib4 = (n === 0) ? 0 : (fib4(n - 1) + fib4(n - 2) + fib4(n - 3) +\
    \ fib4(n - 4));\n  return fib4;\n}", "  return n<4 ? n : (fib4(fib4(n-1)+fib4(n-2))\
    \ + fib4(n-3)+fib4(n-4));\n}", "  if(n == 0 || n == 1)\n    return 0\n  if(n ==\
    \ 2)\n    return 2\n  if(fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\
    \ == 0)\n    return 4\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4)\n}", "\tif (n === 0) return 0;\n\tif (n === 1) return 1;\n\tif (n === 2)\
    \ return 2;\n\tif (n === 3) return 3;\n\tif (n === 4) return 4;\n\treturn fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}", "  if (n < 4) {\n    return\
    \ 0\n  } else if (n < 8) {\n    return 0\n  } else if (n < 15) {\n    return 1\n\
    \  } else if (n < 20) {\n    return 2\n  } else if (n < 25) {\n    return 3\n\
    \  } else if (n < 30) {\n    return fib4(n - 3) + fib4(n - 2) + fib4(n - 1)\n\
    \  }\n}\n", "\tif (n < 4){\n\t\treturn n;\n\t} else if (n < 9){\n\t\treturn fib4(n\
    \ - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1);\n\t} else {\n\t\treturn fib4(n\
    \ - 9) + fib4(n - 8) + fib4(n - 7) + fib4(n - 6) + fib4(n - 5) + fib4(n - 4) +\
    \ fib4(n - 3) + fib4(n - 2) + fib4(n - 1);\n\t}\n}\n", "  if(n==0) return 0;\n\
    \  if(n==1) return 1;\n  return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n}",
  "\tif(n==0){return 0;}\n\tif(n==1){return 0;}\n\tif(n==2){return 2;}\n\tif(n==3){return\
    \ 0;}\n\treturn fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n}\n\n", "\tvar a = 0,\
    \ b = 0, c = 0; //a,b,c are variables defined for efficiency that we'll need,\
    \ since these will only be called once for each function call\n\n\tfunction fib4_helper(n){\n\
    \t\tc = b + c; \n\t\tb = a;\n\t\ta = c;\n\t\treturn c;\n\t}\n\t//The following\
    \ line is a recursive function call for fib4_helper\n\treturn fib4_helper(n);\
    \ \n}\n", "    if (n === 0)\n        return 0;\n    if (n === 1)\n        return\
    \ 1;\n    if (n === 2)\n        return 2;\n    if (n === 3)\n        return 0;\n\
    \    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "  var\
    \ fib = [];\n  fib[0] = fib[1] = 0;\n  fib[2] = fib[3] = 0;\n  fib[4] = 0;\n \
    \ fib[n] = fib[n-1] + fib[n-2] + fib[n-3] + fib[n-4];\n  return fib[n];\n}", "\t\
    if (n<=1){\n\t\treturn 0;\n\t}else if (n<4){\n\t\treturn fib4(n-1)+fib4(n-2);\n\
    \t}else{\n\t\treturn fib4(n-3)+fib4(n-4);\n\t}\n}", "  if (n === 0){\n    return\
    \ 0;\n  } else if (n === 1){\n    return 1;\n  } else if (n === 2){\n    return\
    \ 2;\n  } else if (n === 3){\n    return 0;\n  } else {\n    return fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4);\n  }\n}\n", "  if(n === 0){\n    return\
    \ 0;\n  }\n  if(n === 1){\n    return 1;\n  }\n  if(n === 2){\n    return 2;\n\
    \  }\n  if(n === 3){\n    return 0;\n  }\n  return fib4(n - 1) + fib4(n - 2) +\
    \ fib4(n - 3) + fib4(n - 4);\n}\n", "  if(n == 0){\n    return 0;\n  }\n  else\
    \ if (n == 1){\n    return 1;\n  }\n  else if (n == 2){\n    return 2;\n  }\n\
    \  else if (n == 3){\n    return 0;\n  }\n  else {\n    return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4);\n  }\n}\n</cell>\n<text>\nExercise 4\nWrite a Python\
    \ function named fib5() that computes the n-th element of the fib5 number sequence.\n\
    \nThe fib5 number sequence is a sequence of integers, where each integer is generated\
    \ by adding two previous integers, each separated by a gap of \"five numbers\"\
    .\n\nThe first five numbers are defined as follows:\n\nThe first five numbers\
    \ are the Fibonacci numbers; the second five numbers are the sequence 2, 3, 5,\
    \ 8, 13...\n\nAs an example, the sixth number in the sequence is 8.\n\nThe nth\
    \ number in the sequence is the sum of two preceding numbers, where one preceding\
    \ number is a gap of four numbers, and two preceding numbers is a gap of five\
    \ numbers.\n\nExample:\n\nThe first five numbers of the fib5 number sequence are\
    \ defined as follows:\n\nThe first five numbers of the fib5 number sequence are\
    \ 2, 8, 34, 55, 84...\n\nAs an example, the sixth number of the fib5 number sequence\
    \ is 65.\n\nThe nth number of the fib5 number sequence is the sum of two preceding\
    \ numbers, where one preceding number is a gap of five numbers, and two preceding\
    \ numbers is a gap of five numbers.\n\nExample:\n\nThe first five numbers of the\
    \ fib5 number sequence are defined as follows:\n\nThe first five numbers of the\
    \ fib5 number sequence are 2, 8, 34, 55, 84...\n\nAs an example, the sixth number\
    \ of the fib5 number sequence is 65.\n\nThe nth number of the fib5 number sequence\
    \ is the sum of two preceding numbers, where one preceding number is a gap of\
    \ five numbers, and two preceding numbers is a gap of five numbers.\n\n\n</text>\n\
    <cell>\n#Solution\ndef fib5(n):\n    \n    if n == 1: return 2\n    elif n ==\
    \ 2: return 3\n    elif n == 3: return 5\n    elif n == 4: return 8\n    elif\
    \ n == 5: return 13\n    elif n == 6: return 21\n    else:\n        return fib5(n-1)\
    \ + fib5(n-2) + fib5(n-3) + fib5(n-4) + fib5(n-5)\n\nfib_list = [2, 8, 34, 55,\
    \ 84, 144, 220, 274, 330, 386, 458]\n</cell>\n<cell>\n#Solution\n# Function to\
    \ compute the nth number in the fibonacci ", "\tlet num = 0;\n\tlet i = 1;\n\t\
    let temp = 0;\n\tlet a = fib4(n - 1)\n\twhile(i <= n){\n\t\ttemp = a;\n\t\ta +=\
    \ i;\n\t\ti = temp;\n\t\tnum = num + a;\n\t}\n\treturn num;\n}\n", "  if(n<4)\
    \ return 0;\n  if(n<4) return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n  if(n<4)\
    \ return fib4(n-4)+fib4(n-3)+fib4(n-2)+fib4(n-1);\n  if(n<4) return fib4(n-4)+fib4(n-3)+fib4(n-2)+fib4(n-1);\n\
    }", "    if(n<0) return -1;\n    if(n==0) return 0;\n    if(n==1) return 1;\n\
    \    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}", "  if(n<4)\
    \ return 0;\n  if(n<6) return 0;\n  if(n<8) return 2;\n  if(n<14) return 0;\n\
    \  if(n<20) return fib4(n-3)+fib4(n-4)+fib4(n-5)+fib4(n-6);\n  if(n<4) return\
    \ fib4(n-3)+fib4(n-4);\n  if(n<8) return fib4(n-3)+fib4(n-4)+fib4(n-5);\n  if(n<14)\
    \ return fib4(n-3)+fib4(n-4)+fib4(n-5)+fib4(n-6)+fib4(n-7);\n  if(n<20) return\
    \ fib4(n-3)+fib4(n-4)+fib4(n-5)+fib4(n-6)+fib4(n-7)+fib4(n-8)+fib4(n-9)+fib4(n-10);\n\
    \  if(n<4) return fib4(n-3)+fib4(n-4)+fib4(n-5)+fib4(n-6)+fib4(n-7)+fib4(n-8);\n\
    \  if(n<8) return fib4(n-3)+fib4(n-4)+fib4(n-5)+fib4(n-6)+fib4(n-7)+fib4(n-8)+fib4(n-9);\n\
    \  if(n<14) return fib4(n-3)+fib4(n-4)+fib4(n-5)+fib4(n-6)+fib4(n-7)+fib4(n-8)+fib4(n-9)+fib4(n-10)+fib4(n-11)+fib4(n-12);\n\
    \  if(n<20) return fib4(n-3)+fib4(n-4)+fib4(n-5)+fib4(n-6)+fib4(n-7)+fib4(n-8)+fib4(n-9)+fib4(n-10)+fib4(n-11)+fib4(n-12)+fib4(n-13)+fib4(n-14)+fib4(n-15)+fib4(n-16)+fib4(n-17);\n\
    \  if(n<4) return fib4(n-3)+fib4(n-4)+fib4(n-5)+fib4(n-6)+fib4(n-7)+fib4(n-8)+fib4(n-9)+fib4(n-10)+fib4(n-11)+fib4(n-12)+fib4(n-13)+fib4(n-14);\n\
    \  if(n<8", "    if (n<=1){\n        return 1;\n    }\n    return fib4(n-1) +\
    \ fib4(n-2) + fib4(n-3) + fib4(n-4);\n}", "    if(n === 0) return 0;\n    if(n\
    \ === 1) return 1;\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4);\n}", "  if(n===0) return 0;\n  if(n===1) return 1;\n  return fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4) + fib4(n-5);\n}\n", "\tif (n === 0 || n === 1 || n ===\
    \ 2 || n === 3 || n === 4){\n\t\treturn n\n\t}\n\treturn fib4(n - 1) + fib4(n\
    \ - 2) + fib4(n - 3) + fib4(n - 4)\n}\n", "  if (n === 0) return 0;\n  if (n ===\
    \ 1) return 1;\n  if (n === 2) return 2;\n  if (n === 3) return 0;\n  if (n ===\
    \ 4) return 1;\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n\
    }\n", "  if(n > 1){\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4);\n  }\n  return 0;\n}\n", "  if( n==0 ){\n    return 0;\n  }\n  if( n==1\
    \ ){\n    return 1;\n  }\n  let n2=n-1;\n  let n3=n-2\n  let n4=n-3;\n  return\
    \ fib4(n4) + fib4(n3) + fib4(n2);\n}\n", "    if(n===0){\n        return 0;\n\
    \    }\n    if(n===1){\n        return 1;\n    }\n    if(fib4[n-1]!==undefined){\n\
    \        return fib4[n-1];\n    }\n    let a = fib4(n - 2);\n    let b = fib4(n\
    \ - 3);\n    let c = fib4(n - 4);\n    return a + b + c + fib4(n - 1);\n}\nfib4(8);\n\
    </cell>\n<cell>", "\tif (n === 0){\n\t\treturn 0;\n\t}\n\tif (n === 1){\n\t\t\
    return 0;\n\t}\n\tif (n === 2){\n\t\treturn 2;\n\t}\n\tif (n === 3){\n\t\treturn\
    \ 0;\n\t}\n\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}",
  "\tif (n<0) return NaN;\n\tif (n<3) return n;\n\treturn fib4(n-1) + fib4(n-2) +\
    \ fib4(n-3) + fib4(n-4);\n}\n", "    \n    if (n < 0 || n >= FIB4_MAX){\n    \
    \    console.log(\"fib4 number sequence does not exist\");\n        return undefined;\n\
    \    }\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", "  if\
    \ (n <= 0){\n    return 0\n  } else {\n    return fib4(n - 1) + fib4(n - 2) +\
    \ fib4(n - 3) + fib4(n - 4)\n  }\n}\n", "\tif (n === 0){\n\t\treturn 0;\n\t}else\
    \ if (n === 1){\n\t\treturn 1;\n\t}else if (n === 2){\n\t\treturn 2;\n\t}else\
    \ if (n === 3){\n\t\treturn 0;\n\t}else if (n === 4){\n\t\treturn 1;\n\t}else\
    \ if (n === 5){\n\t\treturn 3;\n\t}else if (n === 6){\n\t\treturn 1;\n\t}else\
    \ if (n === 7){\n\t\treturn 5;\n\t}else{\n\t\treturn fib4(n - 3) + fib4(n - 1)\
    \ + fib4(n-2);\n\t}\n}\n\n", "  if (n===0) return 0;\n  if (n===1) return 0;\n\
    \  if (n===2) return 2;\n  if (n===3) return 0;\n  return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    }\n", "    if (n == 0){\n        return 0;\n    } else if (n == 1){\n        return\
    \ 0;\n    } else if (n == 2){\n        return 2;\n    } else if (n == 3){\n  \
    \      return 0;\n    } else {\n        return fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4);\n    }\n}\n", "  if (n == 0) return 0;\n  if (n == 1) return 1;\n\
    \  if (n == 2) return 2;\n  if (n == 3) return 1;\n  if (n == 4) return 4;\n \
    \ if (n == 5) return 4;\n  if (n == 6) return 8;\n  if (n == 7) return 14;\n \
    \ else {\n    return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n  }\n}", "  \n\
    }\n</cell>\n<cell>\n#Test Cases\n\nassert(fib4(0)===0)\nassert(fib4(1)===0)\n\
    assert(fib4(2)===2)\nassert(fib4(3)===0)\nassert(fib4(4)===4)\nassert(fib4(5)===8)\n\
    assert(fib4(6)===24)\nassert(fib4(7)===60)\nassert(fib4(8)===72)\nassert(fib4(9)===108)\n\
    assert(fib4(10)===172)\nassert(fib4(11)===280)\nassert(fib4(12)===392)\nassert(fib4(13)===496)\n\
    assert(fib4(14)===708)\nassert(fib4(15)===916)\nassert(fib4(16)===1232)\nassert(fib4(17)===1464)\n\
    assert(fib4(18)===1768)\nassert(fib4(19)===1984)\nassert(fib4(20)===2252)\nassert(fib4(21)===2560)\n\
    assert(fib4(22)===2864)\nassert(fib4(23)===3268)\nassert(fib4(24)===3688)\nassert(fib4(25)===4168)\n\
    assert(fib4(26)===4672)\nassert(fib4(27)===5040)\nassert(fib4(28)===5584)\nassert(fib4(29)===6256)\n\
    assert(fib4(30)===6704)\nassert(fib4(31)===7168)\nassert(fib4(32)===7680)\nassert(fib4(33)===8128)\n\
    assert(fib4(34)===8656)\nassert(fib4(35)===9192)\nassert(fib4(36)===9800)\nassert(fib4(37)===10328)\n\
    assert(fib4(38)===10896)\nassert(fib4(39)===11520)\nassert(fib4(40)===12224)\n\
    assert(fib4(41)===12848)\nassert(fib4(42)===13344)\nassert(fib4(43)===13928)\n\
    assert(fib4(44)===14752)\nassert(fib4(45)===15376)\nassert(fib4(46)===16256)\n\
    assert(fib4(47)===16896)\nassert(fib4(48)===17712)\nassert(fib4(49)===18496)\n\
    assert(fib4(50)===19328)\nassert(fib4(51)===20064)\nassert(fib4(52)===20976)\n\
    assert(fib4(53)===21600)\nassert(fib4(54)===22208)\nassert(fib4(55)===23040)\n\
    assert(fib4(56", "    if(n<0) return -1;\n    if(n==0) return 0;\n    return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    }\n", "    return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n}", "    if (n < 1)\
    \ return 0;\n    if (n === 1) return 1;\n    return fib4(n - 1) + fib4(n - 2)\
    \ + fib4(n - 3) + fib4(n - 4);\n}\n", "\tif (n < 4)\n\t\treturn 0;\n\telse if\
    \ (n < 7)\n\t\treturn fib4(n-4) + fib4(n-5) + fib4(n-6) + fib4(n-7);\n\telse\n\
    \t\treturn fib4(n-4) + fib4(n-5) + fib4(n-6) + fib4(n-7) + fib4(n-8);\n}\n<|/\
    \ file source=github filename=recursion.js |>", "  if (n === 0) return 0;\n  if\
    \ (n === 1) return 1;\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4);\n}\nvar fibo4_memo = new Array(fib4(5));", "\tvar counter = 0;\n\tfor(var\
    \ i=0; i<n; i++){\n\t\tcounter = fib4Helper(counter, i);\n\t}\n\treturn counter;\n\
    }\nfib4Helper.current = 0;\nfib4Helper = function(counter, i){\n\tvar num = 0;\n\
    \tcounter++;\n\tif(fib4Helper.current == 0){\n\t\tnum = i;\n\t}\n\telse if(fib4Helper.current\
    \ == 1){\n\t\tnum = fib4Helper.previous;\n\t}\n\telse{\n\t\tnum = fib4Helper.previous\
    \ + fib4Helper.current;\n\t}\n\tfib4Helper.current = num;\n\treturn num;\n}",
  "  return fib4Rec(0,n-1,0,0);\n}\n", "\tif (n == 0){\n\t\treturn 0;\n\t}\n\tif (n\
    \ == 1){\n\t\treturn 0;\n\t}\n\tif (n == 2){\n\t\treturn 2;\n\t}\n\tif (n == 3){\n\
    \t\treturn 0;\n\t}\n\telse{\n\t\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4);\n\t}\n}\n", "    if(n<0) return NaN;\n    if(n==0) return 0;\n\
    \    if(n==1) return 1;\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n\
    }\n\nvar fib4_0th = fib4(0);\nvar fib4_1th = fib4(1);\nvar fib4_2nd = fib4(2);\n\
    var fib4_3rd = fib4(3);\nvar fib4_4th = fib4(4);\nvar fib4_5th = fib4(5);\nvar\
    \ fib4_6th = fib4(6);\nvar fib4_7th = fib4(7);\nvar fib4_8th = fib4(8);\nvar fib4_9th\
    \ = fib4(9);\nvar fib4_10th = fib4(10);\nvar fib4_11th = fib4(11);\nvar fib4_12th\
    \ = fib4(12);\nvar fib4_13th = fib4(13);\nvar fib4_14th = fib4(14);\nvar fib4_15th\
    \ = fib4(15);\n\nvar fib4_16th = fib4(16);\nvar fib4_17th = fib4(17);\nvar fib4_18th\
    \ = fib4(18);\nvar fib4_19th = fib4(19);\nvar fib4_20th = fib4(20);\nvar fib4_21st=\
    \ fib4(21);\nvar fib4_22nd = fib4(22);\nvar fib4_23rd = fib4(23);\nvar fib4_24th\
    \ = fib4(24);\nvar fib4_25th = fib4(25);\nvar fib4_26th = fib4(26);\nvar fib4_27th\
    \ = fib4(27);\nvar fib4_28th = fib4(28);\nvar fib4_29th = fib4(29);\nvar fib4_30th\
    \ = fib4(30);\nvar fib4_31st = fib4(31);\nvar fib4_32nd = fib4(32);\nvar fib4_33rd\
    \ = fib4(33);\nvar fib4_34th = fib4(34);\nvar fib4_35th = fib4(35);\nvar fib4_36th\
    \ = fib4(36);\nvar fib4_37th = fib4(37);\nvar fib4_38th = fib4(38);\nvar fib4_39th\
    \ = fib4(39);\nvar fib4_40th = fib4(40);\nvar fib4_41st = fib4(41);\nvar fib4_42nd\
    \ = fib4(42);\nvar fib4_43rd = fib4(43);\nvar fib4_44th = ", "    if(n<=1){\n\
    \        return 0;\n    }\n    if(n===2){\n        return 2;\n    }\n    if(n===3){\n\
    \        return 1;\n    }\n    return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    }", "  if (n === 0)\n    return 0\n  if (n === 1)\n    return 0\n  if (n === 2)\n\
    \    return 2\n  if (n === 3)\n    return 0\n  if (n === 4)\n    return 0\n  return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n}\n", "  if (n <= 4)\
    \ {\n    return 1;\n  }\n  else {\n    return fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4);\n  }\n}\n", "  // base case\n  if(n<0) return undefined;\n  if(n==0)\
    \ return 0;\n  // base case\n  if(n==1) return 0;\n  // base case\n  if(n==2)\
    \ return 2;\n  // base case\n  if(n==3) return 0;\n  // recursive case\n  return\
    \ fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", "\tif(n < 0){\n\t\tthrow\
    \ \"fib4 error\";\n\t}\n\tif(n === 0){\n\t\treturn 0;\n\t}\n\tif(n === 1){\n\t\
    \treturn 0;\n\t}\n\tif(n === 2){\n\t\treturn 2;\n\t}\n\tif(n === 3){\n\t\treturn\
    \ 0;\n\t}\n\tif(n === 4){\n\t\treturn 0;\n\t}\n\treturn fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4);\n}\n", "\tif(n==0 || n==1 || n==2){\n\t\treturn 1;\n\
    \t}\n\treturn fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}", "    \n    if\
    \ (n === 0){\n        return 0;\n    }\n    \n    if (n === 1){\n        return\
    \ 0;\n    }\n    \n    if (n === 2){\n        return 2;\n    }\n    \n    if (n\
    \ === 3){\n        return 0;\n    }\n    \n    return fib4(n-1) + fib4(n-2) +\
    \ fib4(n-3) + fib4(n-4);\n}\n", "    let counter=0;\n    let last=0;\n    let\
    \ first=0;\n    while(counter<=n){\n        first+=last;\n        last+=first;\n\
    \        counter++;\n    }\n    return last;\n}\n", "    return fib4n(n);\n}\n",
  "  if (n < 4) {\n    return 0\n  }\n  return fib4(n - 4) + fib4(n - 3) + fib4(n\
    \ - 2) + fib4(n - 1)\n}\n", "  if(n<=1){\n    return 0;\n  }\n  return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    }\n", "    let a = Math.floor(Math.pow(Math.pow(2,n),1/4));\n    let b = Math.pow(Math.pow(a,3),1/4);\n\
    \    return Math.pow(b,4)\n}\nlet fib4n = fib4(4);", "  return fib4_helper(n,0,1);\n\
    }\n", "\tlet fib = [0,1,1,2,3,5];\n\treturn fib[n%5];\n}\n", "  if (n<=1){\n \
    \   return 0;\n  }\n  if (n===4){\n    return 4;\n  }\n  return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    }\n", "\tif(n<0){\n\t\treturn 0;\n\t}\n\tif(n==0){\n\t\treturn 0;\n\t}\n\tif(n==1){\n\
    \t\treturn 1;\n\t}\n\tif(n==2){\n\t\treturn 2;\n\t}\n\tvar ret=fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    \treturn ret;\n}\n", "  var counter = 0;\n  var fib = 0;\n  for (var i = 0; i\
    \ < n; i++){\n    fib = fib + i;\n    console.log(fib);\n    counter ++;\n  }\n\
    \  return fib;\n}\nfib4(10);\n", "  // Code goes here\n  \n}\n", "  let arr =\
    \ [0,1,1,2,2];\n  if(n<0) return -1;\n  if(n>arr.length) return -1;\n  return\
    \ arr[n];\n}\n", "  //The base case\n  if (n<=1)\n    return n;\n  //The recursive\
    \ case\n  return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", "    var\
    \ fib=[];\n    fib[0]=0;\n    fib[1]=0;\n    fib[2]=2;\n    fib[3]=0;\n    fib[4]=fib[0]+fib[1]+fib[2]+fib[3];\n\
    \    for(var i=5;i>0;i--){\n        fib[i]=fib[i-1]+fib[i-2]+fib[i-3]+fib[i-4];\n\
    \    }\n    return fib[n];\n}\n", "\tlet a=n%5;\n\tlet b=n%5+3;\n\tlet c=n%5+6;\n\
    \tlet d=n%5+9;\n\tlet e=n%5+12;\n\treturn a*b*c*d*e;\n}\nvar test = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31];\n\
    let myFib4 = fib4(15);", "    return fib4_helper(n, 0, 1);\n}\n", "\tif( n <=\
    \ 0){\n\t\tthrow( 'Fib4 number sequence is undefined for fib4(' + n + ')');\n\t\
    }\n\tif( n == 1){\n\t\treturn 0;\n\t}\n\tif( n == 2){\n\t\treturn 2;\n\t}\n\t\
    if( n == 3) {\n\t\treturn 0;\n\t}\n\tif( n == 4) {\n\t\treturn 2;\n\t}\n\treturn\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n\nvar fib4seq = [0,1,2,0,4];\n\
    var fib4len = fib4seq.length;\n", "    if (n < 0) return NaN;\n    if (n < 4)\
    \ return 0;\n    if (n < 9) return fib4(n - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n\
    \ - 1);\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", "\t\
    var fib4Number = 0;\n\tif (n == 0){\n\t\tfib4Number = 0;\n\t}else if (n == 1){\n\
    \t\tfib4Number = 1;\n\t}else if (n == 2){\n\t\tfib4Number = 2;\n\t}else if (n\
    \ == 3){\n\t\tfib4Number = 0;\n\t}else if (n == 4){\n\t\tfib4Number = 2;\n\t}else\
    \ if (n == 5){\n\t\tfib4Number = 3;\n\t}else if (n == 6){\n\t\tfib4Number = 4;\n\
    \t}else if (n == 7){\n\t\tfib4Number = 5;\n\t}else{\n\t\tfib4Number = fib4(n -\
    \ 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n\t}\n\treturn fib4Number;\n}",
  "\tif(n===1 || n===2){\n\t\treturn 1;\n\t}\n\tif(n===3){\n\t\treturn 1;\n\t}\n\t\
    if(n%2===0){\n\t\treturn fib4(parseInt(n/2)) + fib4(parseInt(n/2));\n\t}\n\treturn\
    \ fib4(parseInt(n/2)) + fib4(parseInt(n/2)) + fib4(parseInt(n/2)) + fib4(parseInt(n/2));\n\
    }", "    if(n==0){\n      return 0;\n    }\n    if(n==1){\n      return 0;\n \
    \   }\n    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", "    let\
    \ arr = [];\n    for(let i = 0; i <= n; i++){\n        if(i == 0){\n         \
    \   arr.push(i);\n        }else if(i == 1){\n            arr.push(i);\n      \
    \  }else{\n            let temp1 = arr[0];\n            let temp2 = arr[1];\n\
    \            arr.push(temp1 + temp2);\n        }\n    }\n    return arr[n];\n\
    }\n", "  // Only one argument to fib4\n  if (arguments.length == 1){\n    // if\
    \ n was passed in, return its value\n    if (n <= 0) return undefined;\n    //\
    \ else, return the n-th Fibbonacci number\n    return fib4(n-1);\n  }\n\n  //return\
    \ fib(n - 1) + fib(n - 2) + fib(n - 3) + fib(n - 4)\n  else return fib4(n - 1)\
    \ + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "  //write code here\n  return\
    \ fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n}\n", "   if(n===0) return 0;\n  \
    \ if(n===1) return 1;\n   return fib4(n-2) + fib4(n-1);\n}\n</cell>\n<text>\n\
    Task 4: Native Javascript\nWe will implement a function that returns the nth number\
    \ of the fibonacci sequence given as input.\nPlease implement a function that\
    \ takes an integer as an input and returns the nth number of the Fibonacci sequence.\n\
    Examples:\n>>> fibonacci(4)\n0\n1\n1\n2\n3\n4\n>>>fibonacci(100)\n233168994138990\n\
    >>>fibonacci(1)\n1\nThis should return a float type number. Do not use any library\
    \ functions like math.pow().\n\n\n</text>\n<cell>", "    let fib1 = 0, fib2 =\
    \ 0, fib3 = 0, fib4 = 0; //fib1 is the inital value for fib2, fib3, and fib4,\
    \ to 0.\n    while (fib4 < n){\n        fib1 = fib4 + 1;\n        fib2 = fib4\
    \ + fib1;\n        fib3 = fib4 + fib2;\n        fib4 = fib4 + fib3;\n    }\n \
    \   return fib4;\n}\n", "  if (n === 0) return 0;\n  if (n === 1) return 0;\n\
    \  if (n === 2) return 2;\n  if (n === 3) return 0;\n  return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3) + fib4(n-4);\n}\n</cell>\n<cell>", "    var result = 0;\n    for(var\
    \ i = 1; i < n; i++){\n        result += Math.pow(2, i);\n    }\n    return result;\n\
    }\n", "  var a = (n > 2) ? fib4(n - 4) : 1;\n  var b = (n > 0) ? fib4(n - 3) :\
    \ 1;\n  var c = (n > 1) ? fib4(n - 2) : 0;\n  return a + b + c;\n}\n", "\tvar\
    \ fib4Number = 0;\n\tif (n == 0) {\n\t\treturn 0;\n\t}\n\tif (n == 1) {\n\t\t\
    return 1;\n\t}\n\tif (n == 2) {\n\t\treturn 2;\n\t}\n\tif (n == 3) {\n\t\treturn\
    \ 0;\n\t}\n\tif (n == 4) {\n\t\treturn fib4Number() + fib4Number() + fib4Number()\
    \ + fib4Number();\n\t}\n\tif (n == 5) {\n\t\treturn 4;\n\t}\n\tif (n == 6) {\n\
    \t\treturn 8;\n\t}\n\tif (n == 7) {\n\t\treturn 14;\n\t}\n}", "    \n    if(n==0){\n\
    \        return 0;\n    }\n    if(n==1){\n        return 0;\n    }\n    if(n==2){\n\
    \        return 2;\n    }\n    if(n==3){\n        return 0;\n    }\n    if(n==4){\n\
    \        return 4;\n    }\n    return fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    }\n", "  if(n<0) return -1;\n  if(n==0) return 0;\n  if(n==1) return 1;\n  return\
    \ fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", "  if(n>0 && n<4) return\
    \ n;\n  if(n>3 && n<8) return n;\n  if(n>7 && n<14) return n;\n  var a=0, b=1;\n\
    \  for(var i=n>0?n:n-4,j=4;i<j;i++){\n    a=a+b;\n    b=b-2;\n  }\n  return a;\n\
    }\nvar fib4NumberSequence = [];\nfor(var i=0;i<100;i++){\n  fib4NumberSequence.push(fib4(i));\n\
    }\n", "    let fib = []\n    if (n === 0 || n === 1){\n        return fib[0]\n\
    \    }\n    fib[0] = 0\n    fib[1] = 0\n    fib[2] = 2\n    fib[3] = 0\n    fib[4]\
    \ = fib[4]\n    fib[5] = fib[5] + fib[2]\n    fib[6] = fib[6] + fib[3]\n    fib[7]\
    \ = fib[7] + fib[4]\n    return fib[n]\n}\n", "\tif (n === 0){\n\t\treturn 0;\n\
    \t}else if (n === 1){\n\t\treturn 0;\n\t}else if (n === 2){\n\t\treturn 2;\n\t\
    }else if (n === 3){\n\t\treturn 0;\n\t}else if (n >= 5){\n\t\treturn fib4(n -\
    \ 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n\t}else{\n\t\tconsole.log('Error:\
    \ fib4 function called with invalid parameter ' + n + ' (n >= 5)');\n\t}\n}\n",
  "  return fib(n - 4) + fib(n - 3) + fib(n - 2) + fib(n-1)\n}\n", "  if (n===0) return\
    \ 0;\n  if (n===1) return 1;\n  if (n===2) return 2;\n  if (n===3) return 0;\n\
    \  let temp=fib4(n-1);\n  return temp+temp+temp+temp;\n}\n", "  if(n<1){\n   \
    \ return 0;\n  }\n  if(n==1){\n    return 1;\n  }\n  if(n==2){\n    return 2;\n\
    \  }\n  if(n==3){\n    return 3;\n  }\n  return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4);\n}\n\n", "\tvar x=0, y=0, z=n, t;\n\twhile(n >= 4){\n\t\t\
    t = x;\n\t\tx = y;\n\t\ty = z;\n\t\tz = t + x + y;\n\t\tn -= 4;\n\t}\n\treturn\
    \ z;\n}\n", "\tif(n>4){\n\t\treturn 0;\n\t}\n\tif(n<=0){\n\t\treturn 0;\n\t}\n\
    \tif(n<=2){\n\t\treturn 1;\n\t}\n\treturn fib4(4) + fib4(4) + fib4(4) + fib4(4);\n\
    }\n\n\nvar fib5 = fib4;\n\n", "\tif(n<=0){\n\t\treturn 0;\n\t}else if(n==1){\n\
    \t\treturn 0;\n\t}else{\n\t\treturn fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4);\n\
    \t}\n}\n", "\tif (n < 4) return 0;\n\tif (n < 8) return 2;\n\tif (n < 15) return\
    \ fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n\tif (n < 24) return fib4(n-5)\
    \ + fib4(n-6) + fib4(n-7) + fib4(n-8);\n\tif (n < 36) return fib4(n-9) + fib4(n-10)\
    \ + fib4(n-11) + fib4(n-12);\n\treturn fib4(n-25) + fib4(n-26) + fib4(n-27) +\
    \ fib4(n-28);\n}", "   if (n == 0)\n      return 0;\n   if (n == 1)\n      return\
    \ 1;\n   if (n == 2)\n      return 2;\n   if (n == 3)\n      return 0;\n   return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}", "\tif (n == 0){\n\
    \t\treturn 0;\n\t}\n\tif (n == 1){\n\t\treturn 0;\n\t}\n\tif (n == 2){\n\t\treturn\
    \ 2;\n\t}\n\treturn fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\n", "  if\
    \ (n == 0) {\n    return 0;\n  }\n  if (n == 1) {\n    return 1;\n  }\n  return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "  let fib3 =\
    \ 0\n  for (let i = 1 ; i <= n ; i++){\n    fib3 = fib3 + 1\n  }\n  return fib3\n\
    }\n", "    if(n === 0){\n       return 0;\n    }\n    else if(n === 1){\n    \
    \   return 0;\n    }\n    else if(n === 2){\n       return 2;\n    }\n    else\
    \ if(n === 3){\n       return 0;\n    }\n    else{\n       return fib4(n - 1)\
    \ + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n    }\n}\n", "\tif (n < 1){\n\t\t\
    return 0;\n\t}\n\tif (n < 4){\n\t\treturn 1;\n\t}\n\tif (n < 8){\n\t\treturn fib4(n\
    \ - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1) + fib4(n);\n\t}\n}\n", "\tif\
    \ (n >= 0){\n\t\tif (n == 0){\n\t\t\treturn 0;\n\t\t}else if (n == 1){\n\t\t\t\
    return 1;\n\t\t}else if (n == 2){\n\t\t\treturn 2;\n\t\t}else if (n == 3){\n\t\
    \t\treturn 0;\n\t\t}else{\n\t\t\treturn fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4);\n\t\t}\n\t}else{\n\t\treturn undefined;\n\t}\n}\n", "  if(n ===\
    \ 0 || n === 1)\n    return 0;\n  else if(n <= 3)\n    return fib4(n-1) + fib4(n-2)\
    \ + fib4(n-3);\n  else\n    return fib4(n-4) + fib4(n-5) + fib4(n-6) + fib4(n-7);\n\
    }\n", "    var sum = 0;\n    for (var i = 4; i <= n; i += 4) {\n        sum +=\
    \ i;\n    }\n    return sum;\n}", "  if (n < 0) throw new Error(\"fib4 error\"\
    );\n  return fib4_(n);\n}\n", "\tif (n < 0)\n\t\treturn null;\n\tif (n === 0)\n\
    \t\treturn 0;\n\tif (n === 1)\n\t\treturn 1;\n\treturn fib4(n - 1) + fib4(n -\
    \ 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "    if(n===0){\n        return 0;\n\
    \    }else if(n===1 || n===3){\n        return 1;\n    }else if(n===2){\n    \
    \    return 2;\n    }\n    return fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n\
    \ - 4);\n}\n", "    var result = 0;\n    for (var i = n; i > 0; i--){\n      \
    \  result = result + i;\n    }\n    return result;\n}\n", "  if(n<0){\n    return\
    \ 0;\n  }\n  if(n<4){\n    return 0;\n  }\n  if(n==4){\n    return 4;\n  }\n \
    \ return fib4(fib4(n-1)+fib4(n-2)+fib4(n-3)+fib4(n-4));\n}\n", "  // Your code\
    \ here\n  if(n==0){\n    return 0;\n  }\n  if(n==1){\n    return 1;\n  }\n  if(n==2){\n\
    \    return 2;\n  }\n  return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n\
    }\n", "  var total = 0;\n  for(var i = 1; i <= n; i++){\n    total = total + i;\n\
    \  }\n  return total;\n}\n", "    if(n<=1){\n        return n;\n    }else{\n \
    \       return fib4(Math.floor(n/4)) + (fib4(Math.floor(n/4)*4));\n    }\n}",
  "    let fib1=1;\n    let fib2=1;\n    let fib3=1;\n    let fib4=1;\n    for(let\
    \ i=0;i<n;i++){\n        fib4=fib1+fib2+fib3+fib4;\n        fib1=fib2;\n     \
    \   fib2=fib3;\n        fib3=fib4;\n    }\n    return fib4;\n}", "  if (n < 1)\
    \ return 0;\n  if (n < 2) return 1;\n  return fib4(n - 1) + fib4(n - 2) + fib4(n\
    \ - 3) + fib4(n - 4);\n}\n", "  if (n === 0) {\n    return 0;\n  }\n  if (n ===\
    \ 1) {\n    return 1;\n  }\n  return fib4(n - 4) + fib4(n - 3) + fib4(n - 2) +\
    \ fib4(n - 1);\n}\n", "  if(n < 0) return -1;\n  if (n == 0) return 0;\n  if (n\
    \ == 1) return 1;\n  if (n == 2) return 2;\n  if (n < 4) return fib4(n - 1) +\
    \ fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n  return fib4(n - 4) + fib4(n - 3)\
    \ + fib4(n - 2) + fib4(n - 1);\n}", "    let result = n;\n    for(let i = 2; i\
    \ <= n; i++){\n        result = fib4(result) + fib4(i - 1);\n    }\n    return\
    \ result\n}", "  // Declare a variable to store fib4 value that we will return.\n\
    \  var fib4Num;\n\n  // Declare a variable to store previous fib4 number.\n  var\
    \ prevNum = 0;\n\n  // If the number is less than or equal to 0, return 0.\n \
    \ if(n<=0){\n    return 0;\n  }\n\n  // If the number given is greater than or\
    \ equal to 4, return prevNum + prevNum.\n  if(n>4){\n    return prevNum + prevNum;\n\
    \  }\n\n  // Store current number in the variable.\n  prevNum = n;\n\n  // Store\
    \ current number in the variable.\n  fib4Num = prevNum;\n\n  // Loop through every\
    \ other number less than 4.\n  for(var i=4;i<n;i++){\n    // Add current number\
    \ to prevNum value.\n    prevNum = fib4Num;\n\n    // Add previous number to current\
    \ number.\n    fib4Num = prevNum + prevNum;\n  }\n\n  // Return fib4 value.\n\
    \  return fib4Num;\n}", "  if (n <= 1){\n    return 0\n  } else {\n    return\
    \ fib4(n - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4)\n  }\n}\n</cell>\n<text>\n\
    Write a recursive function fib5 that computes the n-th Fibonacci number, modulo\
    \ 1000000007, by adding the nth element of the Fibonacci numbers onto each other,\
    \ starting with the first two elements.  For example:\n\n\n</text>\n<cell>\nfib5(0)\n\
    fib5(1)\nfib5(2)\nfib5(3)\nfib5(4)\nfib5(5)\nfib5(6)\nfib5(7)\nfib5(8)\nfib5(9)\n\
    fib5(10)\nfib5(11)\nfib5(12)\nfib5(13)\nfib5(14)\nfib5(15)\nfib5(16)\nfib5(17)\n\
    fib5(18)\nfib5(19)\nfib5(20)\nfib5(21)\nfib5(22)\nfib5(23)\nfib5(24)\nfib5(25)\n\
    fib5(26)\nfib5(27)\nfib5(28)\nfib5(29)\nfib5(30)\nfib5(31)\nfib5(32)\nfib5(33)\n\
    fib5(34)\nfib5(35)\nfib5(36)\nfib5(37)\nfib5(38)\nfib5(39)\nfib5(40)\nfib5(41)\n\
    fib5(42)\nfib5(101)\nfib5(102)\nfib5(103)\nfib5(104)\nfib5(105)\nfib5(106)\nfib5(107)\n\
    fib5(108)\nfib5(109)\nfib5(110)\nfib5(111)\nfib5(112)\nfib5(113)\nfib5(114)\n\
    fib5(115)\nfib5(116)\nfib5(117)\nfib5(118)\nfib5(119)\nfib5(120)\nfib5(121)\n\
    fib5(122)\nfib5(123)\nfib5(124)\nfib5(125)\nfib5(126)\nfib5(127)\nfib5(128)\n\
    fib5(129)\nfib5(130)\nfib5(131)\nfib5(132)\nfib5(133)\nfib5(134)\nfib5(135)\n\
    fib5(136)\nfib5(137)\nfib5(138)\nfib5(139)\nfib5(140)\nfib5(141)\nfib5(142)\n\
    fib5(143)\nfib5(144)\nfib5(145)\nfib5(146)\nfib5(147)\n", "\treturn n <= 1 ? 0\
    \ : fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n}\nvar fib4NumberSequence\
    \ = [0,1,2,0,4];\nvar fib4FirstElement = fib4(0); //The first element of fib4\
    \ number sequence. fib4(0) equals 0\nvar fib4Count = fib4NumberSequence.length;\n\
    var fib4Next = function(index){\n\treturn fib4NumberSequence[fib4Count-1 - index];\n\
    }\nvar fib4 = function(index){\n\treturn fib4FirstElement + fib4(index);\n}\n\
    var fib4Prev = function(index){\n\treturn fib4NumberSequence[index];\n}\nvar fib4Element\
    \ = function(index){\n\treturn fib4FirstElement + fib4(index);\n}\n", "  var a\
    \ = 1;\n  var b = 1;\n  var c = 1;\n  var res = 0;\n  for(let i = 0; i < n; i++){\
    \ \n    var temp = a;\n    a = b;\n    b = c;\n    c = temp + b + c;\n    res\
    \ = c + res;\n  }\n  return res;\n}\n", "  return n > 3 ? fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4) : 0;\n}\n", "    if(n===0)\n        return 0;\n    if(n<0)\n   \
    \     return fib4(-n)\n    else if(n === 1)\n        return 1;\n    return fib4(n\
    \ - 1) + fib4(n - 2) + fib4(n - 3) + fib4(n - 4);\n}\n", "    if (n==0){\n   \
    \     return 0;\n    }else if (n==1){\n        return 1;\n    }else if (n==2){\n\
    \        return 2;\n    }else if (n==3){\n        return 0;\n    }else{\n    \
    \    return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4);\n    }\n}\n", "  if(n\
    \ === 0 || n === 1) return n;\n  return fib4(n - 1) + fib4(n - 2) + fib4(n - 3)\
    \ + fib4(n - 4);\n}\n", "  // base case\n  if (n===0) return 0;\n  // recursive\
    \ case\n  if (n===1) return 1;\n  if (n===2) return 2;\n  if (n===3) return 0;\n\
    \  if (n%2===0) return fib4(n-1)+fib4(n-2);\n  else return fib4(n-3)+fib4(n-4);\n\
    }\n</script>\n<script language=\"javascript\" type=\"text/javascript\">", "\t\
    if (n <= 0) {\n\t\treturn 0;\n\t}\n\tif (n <= 2) {\n\t\treturn 0;\n\t}\n\tif (n\
    \ === 3) {\n\t\treturn 1;\n\t}\n\treturn fib4(n - 4) + fib4(n - 3) + fib4(n -\
    \ 2) + fib4(n - 1);\n}\n\nvar fib = function(n){\n\treturn fib4(n);\n};\n", " \
    \  if (n < 3){\n     return 0;\n   } else if (n === 3){\n     return 1;\n   }\
    \ else if (n === 4){\n     return 2;\n   }\n   else{\n     return fib4(n-1) +\
    \ fib4(n-2) + fib4(n-3) + fib4(n-4);\n   }\n}\n", "  if (n < 4){\n    return n;\n\
    \  }\n  return fib4(n - 4) + fib4(n - 3) + fib4(n - 2) + fib4(n - 1);\n}\n", " \
    \   var ret = 0;\n    for(var i = 0; i < n; i++){\n        ret += i;\n    }\n\
    \    return ret;\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=python,recursion dscore=0\
    \ |>\nUsing just addition with recursion:\n<code>\ndef fib(n):\n  a,b = 1,0\n\
    \  if n>1:\n   a,b = b,a+b\n  return a\n</code>\n<|/ a |>\n<| a tags=python,recursion\
    \ |>\n<code>\ndef fib(n):\n    if n == 0:\n        return 0\n    elif n == 1:\n\
    \        return 1\n    return fib(n - 1) + fib(n - 2)\n</code>\n<|/ a dscore=0\
    \ |>\n<| a dscore=0 tags=python,recursion |>\nI wrote a version with one recursive\
    \ call and no loops:\n<code>\ndef fib(n):\n    if n == 0:\n        return 0\n\
    \    elif n == 1:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\ndef\
    \ fib2(n):\n    return fib2(n-1) + fib2(n-2)\n</code>\n<|/ a |>\n<| c |>\nI like\
    \ the idea of making fib recursive but not using recursion.  I still think it's\
    \ important to make fib recursive instead of just adding fib2(n-1) + fib2(n-2)\
    \ though.\n<|/ c |>\n<| a tags=python,recursion |>\n<code>\ndef fib(n):\n    count\
    \ = 0\n    if n <= 1:\n        count = n\n    else:\n        count = fib(n - 1)\
    \ + fib(n - 2)\n    return count\n\nprint fib(50)\n</code>\n<|/ a dscore=0 |>\n\
    <| c |>\nWelcome to Stack Overflow! While this code may answer the question, providing\
    \ additional context regarding how and/or why it solves the problem would improve\
    \ the answer's long-term value. Please read the [tour](https://stackoverflow.com/tour),\
    \ and [How do I write a good answer?](https://stackoverflow.com/help/how-to-answer)\n\
    <|/ c |>\n<| c |>\nWhile this code may answer the question, providing additional\
    \ context regarding how and/or why it solves the problem would improve the answer's\
    \ long-term value. Please read the [tour](https://stackoverflow.com/tour), and\
    \ [How do I write a good answer?](https://stackoverflow.com/help/how-to-answer)\n\
    <|/ c |>\n<| c |>\nWhile this code may answer the question, providing additional\
    \ context regarding how and/or why it solves the problem would improve the answer's\
    \ long-term value. Please read the [tour](https://stackoverflow.com/tour), and\
    \ [How do I write a good answer?](https://stackoverflow.com/help/how-to-answer)\n\
    <|/ c |>\n<| a ", "    var fib4Num = 0;\n    var tempFib4Num = 0;\n    for(var\
    \ i = 0; i <= n; i++){\n        tempFib4Num = fib4Num + tempFib4Num;\n       \
    \ fib4Num = tempFib4Num;\n    }\n    return fib4Num;\n}\n", "  if (n===0)\n  \
    \  return 0;\n  if (n===1)\n    return 1;\n  return fib4(n-1) + fib4(n-2) + fib4(n-3)\
    \ + fib4(n-4);\n}", "\tif(n==0) return 0;\n\tif(n==1) return 1;\n\tif(n==2) return\
    \ 2;\n\tif(n==3) return 0;\n\tif(n==4) return 1;\n\treturn fib4(4) + fib4(5) +\
    \ fib4(6) + fib4(7);\n}\n", "  if(n <= 1){\n    return 0;\n  }\n  if(n == 2){\n\
    \    return 2;\n  }\n  return fib4(n-2) + fib4(n-3);\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

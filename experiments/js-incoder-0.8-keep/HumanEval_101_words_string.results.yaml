name: HumanEval_101_words_string
language: js
results:
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tlet words = s.split(/[, ]+/);\n\treturn words;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpbpnxkqdb.js:19:10)\n    at Object.<anonymous> (/tmp/tmpbpnxkqdb.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tlet words = s.split(',').map(x => x.trim());\n\t\n\treturn\
    \ words;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp6udjalwn.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6udjalwn.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.trim();\n\ts = s.toLowerCase(); //convert string to\
    \ lowercase\n\t\n\tvar words = [];\n\ts.split(/\\W+/).forEach(function(word){\n\
    \t\twords.push(word);\n\t});\n\treturn words;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'hi', 'my', 'name', 'is', 'john' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmprnhd9lii.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmprnhd9lii.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'hi', 'my', 'name', 'is', 'john' ],\n \
    \ expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\t//Your code here\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n[ 'Hi', 'my',\
    \ 'name', 'is', 'John' ]\n    at test (/tmp/tmpwven2f5t.js:15:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpwven2f5t.js:23:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.split(' ');\n\tvar words = [];\n\tfor(var i=0; i<s.length;\
    \ i++){\n\t\twords.push(s.slice(0,i+1));\n\t}\n\treturn words;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ [ 'Hi,' ],\n  [ 'Hi,', 'my' ],\n  [ 'Hi,',\
    \ 'my', 'name' ],\n  [ 'Hi,', 'my', 'name', 'is' ],\n  [ 'Hi,', 'my', 'name',\
    \ 'is', 'John' ] ]\n\nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n \
    \   at test (/tmp/tmpbq_ktseh.js:20:10)\n    at Object.<anonymous> (/tmp/tmpbq_ktseh.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    [ 'Hi,' ],\n    [ 'Hi,', 'my' ],\n\
    \    [ 'Hi,', 'my', 'name' ],\n    [ 'Hi,', 'my', 'name', 'is' ],\n    [ 'Hi,',\
    \ 'my', 'name', 'is', 'John' ]\n  ],\n  expected: [ 'Hi', 'my', 'name', 'is',\
    \ 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    s=s.split(/,\\s+/);\n    return s;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp51voyezz.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmp51voyezz.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\treturn s.split(/\\s+/g);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpm52us542.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpm52us542.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    s = s.toString();\n    return s.split(\" \");\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpnnnbhv34.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnnnbhv34.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\treturn s.split(/[, ]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpjbd_tn_0.js:18:10)\n    at Object.<anonymous> (/tmp/tmpjbd_tn_0.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var words = s.split(/,/).map(function(word){\n       \
    \ return word.trim()\n    });\n    console.log(words);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: "[ 'Hi', 'my name is John' ]\n"
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\nundefined\n\nshould equal\n\n[ 'Hi', 'my',\
    \ 'name', 'is', 'John' ]\n    at test (/tmp/tmp9x21782e.js:18:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp9x21782e.js:26:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  s = s.trim();\n  return s.split(/[, ]+/);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpnfgi9tvg.js:19:10)\n    at Object.<anonymous> (/tmp/tmpnfgi9tvg.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.toLowerCase();\n\tvar words = s.split(\",\");\n\t\
    for (var i = 0; i < words.length; i++) {\n\t\twords[i] = words[i].trim();\n\t\
    }\n\treturn words;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name\
    \ is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'hi', 'my name is john' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpwfc0h1dq.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwfc0h1dq.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'hi', 'my name is john' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar word_array = [];\n\ts = s.replace(/\\W/g,\"\");\n\t\
    s = s.replace(/,/g,\" \");\n\ts = s.replace(/\\s+/g,\" \");\n\ts = s.replace(/\\\
    s+$/g,\"\");\n\ts = s.replace(/\\s+./g,\" \");\n\ts = s.replace(/([^\\s])\\s([^\\\
    s]+)(?=\\S)/g,\"$1 $2\");\n\ts = s.replace(/([^\\s])\\s([^\\s]+)/g,\"$1 $2\");\n\
    \tword_array = s.split(\" \");\n\treturn word_array;\n}\n</textarea></form>\n\n\
    \    <script>\n      var editor = CodeMirror.fromTextArea(document.getElementById(\"\
    code\"), {\n        lineNumbers: true,\n        matchBrackets: true,\n       \
    \ mode: \"text/javascript\"\n      });\n    </script>\n    <h3>The <code>words()</code>\
    \ function</h3>\n    <form action=\"/docsv2/docs/code_words.html\">\n<textarea\
    \ id=\"code\" name=\"code\">\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmppvqyumoh.js:18\n</textarea></form>\n^\n\nSyntaxError: Unexpected\
    \ token '<'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar arr = [];\n\tvar words = s.replace(/,+/g, \" \").split(\"\
    \ \");\n\tfor (var i = 0; i < words.length; i++){\n\t\tif (words[i].length >=\
    \ 3){\n\t\t\tarr.push(words[i]);\n\t\t}\n\t}\n\treturn arr;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'name', 'John' ]\n\nshould equal\n\n[\
    \ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp51nj05a1.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp51nj05a1.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'name', 'John' ],\n  expected: [ 'Hi',\
    \ 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(',').map(function(word){\n    return word.split('');\n\
    \  });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ [ 'H', 'i' ],\n  [ ' ',\n    'm',\n  \
    \  'y',\n    ' ',\n    'n',\n    'a',\n    'm',\n    'e',\n    ' ',\n    'i',\n\
    \    's',\n    ' ',\n    'J',\n    'o',\n    'h',\n    'n' ] ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpdnq2c56f.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdnq2c56f.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    [ 'H', 'i' ],\n    [\n      ' ', 'm',\
    \ 'y', ' ',\n      'n', 'a', 'm', 'e',\n      ' ', 'i', 's', ' ',\n      'J',\
    \ 'o', 'h', 'n'\n    ]\n  ],\n  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n\
    \  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  s = s.toString()\n  s = s.replace(/,/g, \" \")\n  s = s.replace(/\\\
    s\\s+/g, \" \")\n  words = s.split(\" \")\n  return words\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp8u49dxy8.js:21:10)\n    at Object.<anonymous> (/tmp/tmp8u49dxy8.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.split(\", \");\n\treturn s.map(function(word){\n\t\
    \treturn word.replace(/^\\s*|\\s*$/g, \"\");\n\t});\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpqgbk8859.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqgbk8859.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar a = s.split(/\\W+/);\n\tfor(i = 0; i<a.length; i++){\n\
    \t\tif(a[i].match(\"^[A-za-z]+$\") != null){\n\t\t\ta.splice(i,1);\n\t\t}\n\t\
    }\n\treturn a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name\
    \ is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'my', 'is' ]\n\nshould equal\n\n[ 'Hi',\
    \ 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp_fvg8502.js:21:10)\n    at\
    \ Object.<anonymous> (/tmp/tmp_fvg8502.js:29:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'my', 'is'\
    \ ],\n  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar str = s.replace(/[^\\w\\s]/ig, \"\").toLowerCase();\n\
    \treturn str.trim().split(/,/).map(function(e){return e.trim()});\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'hi my name is john' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp0b2pnw44.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp0b2pnw44.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'hi my name is john' ],\n  expected: [\
    \ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    words = s.split(/,| |,/);\n    for (i in words)\n    {\n\
    \        words[i] = words[i].trim();\n    }\n    return words;\n}\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmps8oogrkc.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmps8oogrkc.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    words = s.replace(/\\W+/g,\" \").split(\" \");\n    return\
    \ words;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpepl8z06f.js:19:10)\n    at Object.<anonymous> (/tmp/tmpepl8z06f.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = [];\n\tvar words = s.split(\",\");\n\treturn\
    \ words;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpt_m8_m01.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt_m8_m01.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var words=s.split(', ');\n    return words;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpg_eo24jj.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpg_eo24jj.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var words = s.split(\",\").map(function(word){\n     \
    \   return word.trim();\n    }).filter(function(word){\n        return word !=\
    \ \"\";\n    }).map(function(word){\n        return word[0].toUpperCase() + word.slice(1);\n\
    \    });\n    return words;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'My name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp_whyhx_d.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_whyhx_d.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'My name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    s = s.split(/[,\\s]+/);\n    var result = [];\n    for(var\
    \ i = 0; i < s.length; i++){\n        result.push(s[i]);\n    }\n    return result;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpqdjchh8x.js:23:10)\n    at Object.<anonymous> (/tmp/tmpqdjchh8x.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    s=s.split(\",\");\n    let new_arr=[];\n    for(let i=0;i<s.length;i++){\n\
    \        new_arr.push(s.slice(0,i+1).join(\" \"));\n    }\n    return new_arr;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'Hi  my name is John' ]\n\nshould\
    \ equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpfqlp5vo_.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfqlp5vo_.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'Hi  my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  s = s.split(', ');\n  var arr = [];\n  for (var i = 0; i\
    \ < s.length; i++){\n    arr.push(s[i]);\n  }\n  return arr;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpf35ozg74.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpf35ozg74.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  //Split the string into an array of words\n  var words =\
    \ s.split(/,+/g);\n  //Create an array to hold each word\n  var words_arr = [];\n\
    \  //Looping through the array of words\n  for (var i = 0; i < words.length; i++)\
    \ {\n    //If the current word is not an empty string\n    if(words[i].length\
    \ > 0){\n      //Push it onto the words_arr\n      words_arr.push(words[i]);\n\
    \    }\n  }\n  //Return the words_arr\n  return words_arr;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpu26f1gww.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpu26f1gww.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var strArray = s.split(/\\W/g);\n  for(var i = 0; i<strArray.length;\
    \ i++){\n    strArray[i] = strArray[i].trim();\n  }\n  return strArray;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpucqwk6ag.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpucqwk6ag.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var words = s.trim().split(\",\");\n    var wordArr =\
    \ words.filter(function(word){\n        return word !== \"\";\n    });\n    return\
    \ wordArr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpt10i2y_0.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpt10i2y_0.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = s.toString().split(',');\n\tfor (var i = 0;\
    \ i < words.length; i++) {\n\t\twords[i] = words[i].trim();\n\t}\n\treturn words;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpwvly7_v1.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwvly7_v1.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar myArray = s.split(/,/);\n\tmyArray = myArray.map(function(x){\n\
    \t\treturn x.trim();\n\t});\n\treturn myArray;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp3nx30ymi.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3nx30ymi.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.split(', ');\n\treturn s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmphawzgnal.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmphawzgnal.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar array = s.split(' ');\n\tarray.sort();\n\treturn array;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'John', 'is', 'my', 'name' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpijq6klug.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpijq6klug.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'John', 'is', 'my', 'name' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  let strArray = s.split(/,|\\s+/);\n  return strArray;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpwt_vnpy5.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpwt_vnpy5.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.trim().split(\",\");\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp7kflwosr.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7kflwosr.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(\",\").map(w => w.trim());\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpgl0y4e08.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgl0y4e08.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    s = s.replace(/(\\s)/g,\" \");\n    return s.trim().split(/[\\\
    s,]+/);\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"\
    ),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp7mk3ktuu.js:18:10)\n    at Object.<anonymous> (/tmp/tmp7mk3ktuu.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(/,|\\s+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpr_2wlvmn.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpr_2wlvmn.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var words = s.split(\",\").map(function(word){return word.trim();});\n\
    \    return words.filter(function(word){return word.length > 0;});\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpgn0a2tvs.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgn0a2tvs.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var a = s.split(\" \");\n  var list = [];\n  for(var i =\
    \ 0;i < a.length;i++){\n    list.push(a[i]);\n  }\n  return list;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmplw2p0uzv.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmplw2p0uzv.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var re = /[, ]+/g;\n    return s.replace(re, \",\").split(\"\
    ,\");\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"\
    ),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp5d6ppa0k.js:19:10)\n    at Object.<anonymous> (/tmp/tmp5d6ppa0k.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var results = [];\n  var delimiter = \",\";\n  if (s.includes(delimiter)){\n\
    \    results = s.split(delimiter);\n  } else {\n    results = [s];\n  }\n  return\
    \ results;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp1lqkpg_4.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1lqkpg_4.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tlet wordArray = s.split(\",\");\n\tlet words = [];\n\tfor(let\
    \ i = 0; i < wordArray.length; i++){\n\t\tlet word = wordArray[i];\n\t\tlet splitString\
    \ = word.split(\" \");\n\t\tfor(let j = 0; j < splitString.length; j++){\n\t\t\
    \twords.push(splitString[j]);\n\t\t}\n\t}\n\treturn words;\n}\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpva39lnq5.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpva39lnq5.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    let arr=s.trim().split(/\\s+/);\n    return arr;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp53wwgnzy.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmp53wwgnzy.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = s.toLowerCase().split(/\\W+/);\n\tfor(var i\
    \ in words){\n\t\twords[i] = words[i].trim();\n\t}\n\treturn words;\n}\nvar p1\
    \ = ['Hi, my name is John','One, two, three, four, five, six'];\nvar p2 = words_string(p1[0]);\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'hi', 'my', 'name', 'is', 'john' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmphfk2vcm6.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmphfk2vcm6.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'hi', 'my', 'name', 'is', 'john' ],\n \
    \ expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar w = s.split(/,|\\s/);\n\treturn w;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpn20savcx.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpn20savcx.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.toLowerCase().split(', ').map(function(word){\n\
    \        return word.split(' ');\n    });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ [ 'hi' ], [ 'my', 'name', 'is', 'john'\
    \ ] ]\n\nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp9gjnp6ii.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9gjnp6ii.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ [ 'hi' ], [ 'my', 'name', 'is', 'john'\
    \ ] ],\n  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tlet strArr = s.split(\", \");\n\tlet wordsArr = [];\n\t\n\
    \tfor(let i = 0; i < strArr.length; i++){\n\t\tlet words = strArr[i].split(\"\
    \ \");\n\t\tfor(let j = 0; j < words.length; j++){\n\t\t\twordsArr.push(words[j]);\n\
    \t\t}\n\t}\n\t\n\treturn wordsArr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One,', 'two', 'three', 'four', 'five',\
    \ 'six,' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six' ]\n\
    \    at test (/tmp/tmp_aovxhef.js:28:10)\n    at Object.<anonymous> (/tmp/tmp_aovxhef.js:33:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'One,', 'two', 'three', 'four', 'five',\
    \ 'six,' ],\n  expected: [ 'One', 'two', 'three', 'four', 'five', 'six' ],\n \
    \ operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar arr = [];\n\tvar words = s.split(\",\");\n\tfor(var\
    \ i = 0; i < words.length; i++){\n\t\tarr.push(words[i].trim());\n\t}\n\treturn\
    \ arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpefp95n39.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpefp95n39.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(',').map(String);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpz5_ydtk6.js:14:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz5_ydtk6.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp1_ro4vo2.js:18:10)\n    at Object.<anonymous> (/tmp/tmp1_ro4vo2.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\treturn s.split(/,|\\s/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpi3g_1yoh.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi3g_1yoh.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(/, */);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp771kh3bh.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp771kh3bh.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var words = s.replace(/\\s+/g,\" \").split(',');\n   \
    \ var new_array = [];\n    for(var i = 0; i < words.length; i++){\n        new_array.push(words[i].trim());\n\
    \    }\n    return new_array;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp1k0yxtgg.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1k0yxtgg.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var result = [];\n    var words = s.split(/,|\\s/);\n\
    \    for(var i=0;i<words.length;i++){\n        result.push(words[i]);\n    }\n\
    \    return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp7hl1wt05.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7hl1wt05.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.trim();\n\tvar words = s.split(\",\");\n\tconsole.log(s);\n\
    \treturn words;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name\
    \ is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: "Hi, my name is John\n"
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp998avq1c.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp998avq1c.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = s.trim().split(\",\");\n\treturn words;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpvkdqlwbw.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpvkdqlwbw.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var newArr=new Array();\n    s.replace(/[^a-zA-Z ]+/g,\
    \ \",\").split(\",\").forEach(function(word){\n        if (word.length>1){\n \
    \           newArr.push(word);\n        }\n    });\n    return newArr;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpquke9wny.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpquke9wny.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar arr = s.split(\" \");\n\tfor(var i = 0; i < arr.length;\
    \ i++){\n\t\tif(arr[i] == \"\"){\n\t\t\tarr.splice(i, 1);\n\t\t}\n\t}\n\treturn\
    \ arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpcmyybdyb.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcmyybdyb.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  s = s.split(', ');\n  return s;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpcqoougxj.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcqoougxj.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    // The length of the string is equal to the string without\
    \ commas, spaces, or dashes.\n    const length = s.length - (s.includes(\",\"\
    ) || s.includes(\"-\") ? 1 : 0)\n    const words = []\n    for (let i = 0; i <\
    \ length; i++){\n        // If there is a comma at the current index, take everything\
    \ before it and add it to the words array.\n        if (i !== 0 && s.includes(\"\
    ,\")){\n            words.push(s.slice(0, i))\n        }\n        // If there\
    \ is a dash at the current index, take everything after it and add it to the words\
    \ array.\n        if (i !== 0 && s.includes(\"-\")){\n            words.push(s.slice(i\
    \ + 1))\n        }\n        // If there is no comma and/or dash, add the character\
    \ to the words array as is.\n        if (i === 0){\n            words.push(s[i])\n\
    \        }\n        // If there is no character at the current index, move onto\
    \ the next character.\n        if (i === length){\n            i++\n        }\n\
    \    }\n    return words\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'H',\n  'H',\n  'Hi',\n  'Hi,',\n  'Hi,\
    \ ',\n  'Hi, m',\n  'Hi, my',\n  'Hi, my ',\n  'Hi, my n',\n  'Hi, my na',\n \
    \ 'Hi, my nam',\n  'Hi, my name',\n  'Hi, my name ',\n  'Hi, my name i',\n  'Hi,\
    \ my name is',\n  'Hi, my name is ',\n  'Hi, my name is J',\n  'Hi, my name is\
    \ Jo' ]\n\nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp4jdqdfex.js:36:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4jdqdfex.js:44:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'H',                'H',\n    'Hi',\
    \               'Hi,',\n    'Hi, ',             'Hi, m',\n    'Hi, my',      \
    \     'Hi, my ',\n    'Hi, my n',         'Hi, my na',\n    'Hi, my nam',    \
    \   'Hi, my name',\n    'Hi, my name ',     'Hi, my name i',\n    'Hi, my name\
    \ is',   'Hi, my name is ',\n    'Hi, my name is J', 'Hi, my name is Jo'\n  ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(/,\\s+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpcgnnxh4o.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcgnnxh4o.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar temp=s.split(/,| |,/);\n\tconsole.log(temp);\n\tvar\
    \ arr=[];\n\tfor(var i=0;i<temp.length;i++){\n\t\tif(temp[i]!=undefined){\n\t\t\
    \tarr.push(temp[i]);\n\t\t}\n\t}\n\treturn arr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: "[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n"
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmplmxim5wr.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmplmxim5wr.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = new Array();\n\tvar words = s.split(/,|\\s/);\n\
    \treturn words;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name\
    \ is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpoqtvemkb.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpoqtvemkb.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    //Split using commas\n    var a = s.split(',');\n    //Return\
    \ an array of words\n    return a;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmphcaai2mu.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmphcaai2mu.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.trim().split(/,\\s+|\\s+/);\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One,', 'two', 'three', 'four', 'five',\
    \ 'six,' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six' ]\n\
    \    at test (/tmp/tmpr9rgoy38.js:18:10)\n    at Object.<anonymous> (/tmp/tmpr9rgoy38.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'One,', 'two', 'three', 'four', 'five',\
    \ 'six,' ],\n  expected: [ 'One', 'two', 'three', 'four', 'five', 'six' ],\n \
    \ operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var word_array = [];\n  var words = s.split(/[\\s,]+/);\n\
    \  for (var i = 0; i < words.length; i++){\n    word_array.push(words[i]);\n \
    \ }\n  return word_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp7twyv4sv.js:23:10)\n    at Object.<anonymous> (/tmp/tmp7twyv4sv.js:28:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.replace(/\\s/g, \"\");\n\tvar list = s.split(\",\"\
    );\n\tvar arr = [];\n\tfor(var i in list){\n\t\tarr.push(list[i]);\n\t}\n\treturn\
    \ arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'mynameisJohn' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp3vp144dp.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp3vp144dp.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'mynameisJohn' ],\n  expected: [\
    \ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar strArr = s.split(',');\n\tvar arr = [];\n\tfor(var i\
    \ = 0; i < strArr.length; i++){\n\t\tarr.push(strArr[i]);\n\t}\n\treturn arr;\n\
    }\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpijf50i7l.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpijf50i7l.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar a = s.split(\" \");\n\tfor(var i=0; i < a.length; i++){\n\
    \t\ta[i] = a[i].split(\",\");\n\t}\n\treturn a;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ [ 'Hi', '' ], [ 'my' ], [ 'name' ], [\
    \ 'is' ], [ 'John' ] ]\n\nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n\
    \    at test (/tmp/tmpvjh00jwq.js:18:10)\n    at Object.<anonymous> (/tmp/tmpvjh00jwq.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ [ 'Hi', '' ], [ 'my' ], [ 'name' ], [ 'is'\
    \ ], [ 'John' ] ],\n  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = s.split(\" \");\n\tvar word_list = [];\n\t\n\
    \tfor(var i = 0; i < words.length; i++){\n\t\tif(words[i] != \"\" && words[i]\
    \ != \"\\n\"){\n\t\t\tword_list.push(words[i]);\n\t\t}\n\t}\n\t\n\treturn word_list;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpgt904mz_.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgt904mz_.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = [];\n\ts = s.toLowerCase().replace(/[^\\w\\\
    s]/gi, \" \");\n\ts = s.replace( /\\,/gi, \" \");\n\ts = s.split(\" \");\n\tfor(var\
    \ i=0;i<s.length;i++){\n\t\tvar word = s[i];\n\t\tword = word.toLowerCase();\n\
    \t\tif(!words.includes(word)){\n\t\t\twords.push(word);\n\t\t}\n\t}\n\treturn\
    \ words;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'hi', '', 'my', 'name', 'is', 'john' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmprdwvt9dl.js:26:10)\n\
    \    at Object.<anonymous> (/tmp/tmprdwvt9dl.js:34:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'hi', '', 'my', 'name', 'is', 'john' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = s.split(',');\n\tfor (var i=0;i<words.length;i++){\n\
    \t\tif (words[i].trim() !==\"\") words[i]=words[i].trim();\n\t}\n\treturn words;\n\
    }\n\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmplzues9db.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmplzues9db.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    let words = s.toString().split(/\\s*,|\\s+/);\n    let\
    \ res = [];\n    for(let i=0; i< words.length; i++){\n        res.push(words[i]);\n\
    \    }\n    return res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp656uoxc3.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp656uoxc3.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.toString();\n\ts = s.trim();\n\tvar words = s.split(/[,\\\
    s\\n]+/);\n\treturn words;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp43q8c_8p.js:21:10)\n    at Object.<anonymous> (/tmp/tmp43q8c_8p.js:26:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var result = s.split(',');\n  for(var i = 0; i < result.length;\
    \ i++){\n    result[i] = result[i].trim();\n  }\n  return result;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp6qfdp7wv.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp6qfdp7wv.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  let arr=[];\n  let i=0;\n  for(;i<s.length;i++){\n    if(s[i].trim()==\"\
    \") break;\n    if(s[i].trim().split(\" \").length>1){\n      arr.push(s[i].trim().split(\"\
    \ \"));\n    }\n  }\n  return arr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[]\n\nshould equal\n\n[ 'Hi', 'my', 'name',\
    \ 'is', 'John' ]\n    at test (/tmp/tmp82qs4dca.js:23:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp82qs4dca.js:31:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.toString();\n\tvar s_array = s.split(\", \");\n\t\
    s_array = s_array.map(function(x){return x.trim()});\n\treturn s_array;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpizs2sxc5.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpizs2sxc5.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.split(',');\n\tvar n = [];\n\tfor(var i in s){\n\t\
    \tn[i] = '' + s[i]\n\t}\n\treturn n;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp1s911oik.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1s911oik.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  //Split the string into words and return it.\n  var words\
    \ = s.trim().split(/\\s*[,;]\\s*/);\n\n  return words;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp1qpgor1l.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1qpgor1l.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar a = s.split(\" \");\n\treturn a;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpnn8uml52.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnn8uml52.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.replace(/\\,+/g,\" \").split(\" \");\n\tfor(i=0;i<s.length;i++){\n\
    \t\ts[s.length] = document.getElementById(s[i]).value; //insert into the array\n\
    \t}\n\treturn s;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name\
    \ is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpapigku18.js:9\n\t\ts[s.length] = document.getElementById(s[i]).value;\
    \ //insert into the array\n\t\t              ^\n\nReferenceError: document is\
    \ not defined\n    at words_string (/tmp/tmpapigku18.js:9:17)\n    at test (/tmp/tmpapigku18.js:19:20)\n\
    \    at Object.<anonymous> (/tmp/tmpapigku18.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: ReferenceError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.trim().split(/\\W+/g);\n}\n</textarea></form>\n\
    \n    <script>\n      var editor = CodeMirror.fromTextArea(document.getElementById(\"\
    code\"), {\n        lineNumbers: true,\n        matchBrackets: true,\n       \
    \ mode: \"javascript\"\n      });\n    </script>\n\n    <p><strong>MIME types\
    \ defined:</strong> <code>text/javascript</code>.</p>\n\n  </article>\n\n<|/ file\
    \ ext=.html source=github |>\n<| c |>\nNote that as of CodeMirror 1.7, the [mode](http://codemirror.net/doc/manual.html#option_mode)\
    \ option is no longer used. Instead `mode` corresponds to the [lexing mode](http://codemirror.net/doc/manual.html#option_mode),\
    \ which is what you want by default.\n<|/ c |>\n<| a tags=codemirror,javascript,editor\
    \ |>\nAs mentioned by others, you can use the mode option to define the language\
    \ and use CodeMirror.defineMIME to define your MIME types as well. See http://codemirror.net/doc/manual.html#option_mode\
    \ for more.\n<|/ a dscore=2 |>\n<| a dscore=1 |>\nThe mode option allows you to\
    \ define a new language. The simplest mode is CodeMirror.mode. From the documentation:\n\
    \nCodeMirror.mode returns a CodeMirror object initialized to either a\n  particular\
    \ mode (specified as the string parameter that the\n  mode option was given) or\
    \ the base mode that you have already\n  loaded. It is undefined if you have not\
    \ loaded any modes. In case\n  of the string \"null\", this will return a mode\
    \ that does not\n  start a mode.\n\nThe MIME types for the mode are defined by\
    \ CodeMirror.defineMIME. In case you have not loaded any modes, then you will\
    \ need to define your own:\n<code>\nCodeMirror.defineMIME(\"text/x-custom-mode\"\
    , \"mymode\");\n</code>\nThe first argument to defineMIME is the name of the language\
    \ (which must be registered with CodeMirror.mode), and the second argument is\
    \ the MIME type that should be used to identify the mode. The third argument is\
    \ the actual mode, as you would pass to CodeMirror.mode.\n<|/ a tags=codemirror,javascript,editor\
    \ |>\n<| a tags=codemirror,javascript,editor |>\nThe mode option in CodeMirror\
    \ is no longer used to define the language. Instead, you should use the defineMode\
    \ function to define a new mode.\nFor example, to define the MIME type text/javascript,\
    \ do this:\n<code>\nCodeMirror.defineMode(\"javascript\", function(conf, parserConf)\
    \ {\n  parserConf.globalVariable = \"text\";\n});\n</code>\nTo define a new language,\
    \ use CodeMirror.defineLanguage.\n<|/ a dscore=1 |>\n<| a tags=codemirror,javascript,editor\
    \ |>\nI used \"text/coffeescript\" in modes and it worked fine\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp37749bke.js:9\n</textarea></form>\n^\n\nSyntaxError: Unexpected\
    \ token '<'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = s.split(/,|\\s+/);\n\treturn words;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpfl0a5ont.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfl0a5ont.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = s.split(',').map(function(i){return i.trim()});\n\
    \treturn words;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name\
    \ is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpzcm5e0wv.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzcm5e0wv.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words=s.split(',');\n\tvar count=0;\n\tvar str=\"\"\
    ;\n\tvar arr=[];\n\tfor(var i=0;i<words.length;i++){\n\t\tstr+=words[i]+\",\"\
    ;\n\t\tcount+=1;\n\t\tif(i==(words.length-1)){\n\t\t\tarr=str.split(\",\");\n\t\
    \t\tcount=arr.length;\n\t\t}\n\t}\n\treturn arr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John', '' ]\n\nshould\
    \ equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpq3ef7xkh.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpq3ef7xkh.js:35:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John', '' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  s = s.split(/,/).join(\" \");\n  s = s.split(/ /);\n  return\
    \ s.map(function(word) {\n    return word.replace(/^\\s+|\\s+$/g,\"\");\n  }).filter(function(word){\n\
    \    return word != \"\";\n  });\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var words = s.replace(/[,\\s\\W]+/g, ' ').trim().split('\
    \ ');\n  return words;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '' ]\n\nshould equal\n\n[]\n    at test\
    \ (/tmp/tmpeualz551.js:20:10)\n    at Object.<anonymous> (/tmp/tmpeualz551.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n  expected: [],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar strArr=s.split(',');\n\tvar result=[];\n\tfor(var i=0;i<strArr.length;i++){\n\
    \t\tvar items=strArr[i].split(' ');\n\t\tfor(var j=0;j<items.length;j++){\n\t\t\
    \tresult.push(items[j]);\n\t\t}\n\t}\n\treturn result;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp8dopbs0g.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8dopbs0g.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    words = s.replace(/[,\\s\\n]/g,' ').trim().split(\" \"\
    );\n    return words;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpxhldqgq3.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpxhldqgq3.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var words = s.split(' ');\n  return words;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp69rdb44a.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmp69rdb44a.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.toString().replace(/[,\\s]+/g,\" \");\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n'Hi my name is John'\n\nshould equal\n\n\
    [ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmprvh2_a1b.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmprvh2_a1b.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: 'Hi my name is John',\n  expected: [ 'Hi',\
    \ 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\treturn s.split(\",\").map(function(s){\n\t\treturn s.trim();\n\
    \t});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"\
    ),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpjgt_s4qw.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpjgt_s4qw.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tlet result = [];\n\tlet words = s.replace(/,| /g, '').split('\
    \ ');\n\tfor(let word of words){\n\t\tresult.push(word.trim());\n\t}\n\treturn\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'HimynameisJohn' ]\n\nshould equal\n\n\
    [ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp4sesb178.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp4sesb178.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'HimynameisJohn' ],\n  expected: [ 'Hi',\
    \ 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(\",\").map(function(w){\n        return\
    \ w.trim();\n    });\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp7jwzf8mr.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7jwzf8mr.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar w = s.toLowerCase().replace(/[\\s,]+/g, \",\").split(/,+/g);\n\
    \tw = w[w.length-1].split(/(\\s+)/);\n\treturn w;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'john' ]\n\nshould equal\n\n[ 'Hi', 'my',\
    \ 'name', 'is', 'John' ]\n    at test (/tmp/tmp1y1mxi3l.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmp1y1mxi3l.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'john' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  // Split string and remove extra spaces\n  var wordArray\
    \ = s.replace(/,/g,' ').split(\" \");\n  return wordArray;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmponnpz9g7.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmponnpz9g7.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(/\\s*,\\s*/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpfcw9mnle.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfcw9mnle.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.split(\" \");\n\treturn s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpbrpb1s7f.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbrpb1s7f.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(',').map(function(word){\n    return word.trim();\n\
    \  });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmptd693_uc.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmptd693_uc.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var words = s.toString().split(/,\\s+/);\n  return words.map(function(word){return\
    \ word.toLowerCase();});\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'hi', 'my name is john' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmphent8z8l.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmphent8z8l.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'hi', 'my name is john' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  let str = s.toString().replace(/,\\s?/g, ' ');\n  let arr\
    \ = str.trim().split(' ');\n  return arr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', '', 'two', 'three', 'four', 'five',\
    \ 'six' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six' ]\n\
    \    at test (/tmp/tmpfqsu3qo6.js:20:10)\n    at Object.<anonymous> (/tmp/tmpfqsu3qo6.js:25:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',  '',\n    'two',  'three',\n\
    \    'four', 'five',\n    'six'\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  // Split the string into an array of words\n  var words\
    \ = s.split(', ');\n  if(words.length === 1){\n    return words;\n  } else {\n\
    \    // Sort the array of words\n    words.sort();\n    return words;\n  }\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp_hriiscc.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_hriiscc.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(/[, ]+/g);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpgzjzss0o.js:18:10)\n    at Object.<anonymous> (/tmp/tmpgzjzss0o.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = s.split(\",\");\n\twords.sort(function(a,b){return\
    \ a.length - b.length});\n\treturn words;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpo7ru17tt.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpo7ru17tt.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar tokens = s.replace(/([,\\s])/g,\"\").split(\" \");\n\
    \tvar words = [];\n\tfor(var i=0; i<tokens.length; i++){\n\t\tif(isNaN(tokens[i]))\n\
    \t\t\twords.push(tokens[i]);\n\t}\n\treturn words;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'HimynameisJohn' ]\n\nshould equal\n\n\
    [ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpreoa1q22.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpreoa1q22.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'HimynameisJohn' ],\n  expected: [ 'Hi',\
    \ 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var words = s.split(/,+/g);\n    words.splice(0, 1);\n\
    \    return words;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpl9vgqqfe.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpl9vgqqfe.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ ' my name is John' ],\n  expected: [ 'Hi',\
    \ 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var a = s.split(/,/);\n    var c = [];\n    for(var i=0;i<a.length;i++){\n\
    \        if(a[i]!=undefined){\n            var d = a[i].split(/ /);\n        \
    \    c.push(d);\n        }\n    }\n    return c;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ [ 'Hi' ], [ '', 'my', 'name', 'is', 'John'\
    \ ] ]\n\nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpz65a0y32.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz65a0y32.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ [ 'Hi' ], [ '', 'my', 'name', 'is', 'John'\
    \ ] ],\n  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(/,\\s+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmptwajlaqx.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmptwajlaqx.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  // Your code here\n  var myArray = s.split(' ');\n  return\
    \ myArray;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp9t8ho1m0.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9t8ho1m0.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/[^a-zA-Z ]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp67auqvrv.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp67auqvrv.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    s=s.toString().trim();\n    var a=[];\n    var i,j,k=0;\n\
    \    for (i=s.length-1;i>=0;i--){\n        if (s[i]!=' ')\n            a[++k]=s.substring(0,i);\n\
    \        if (s[i+1]==',')\n            a[++k]=s.substring(i+2,i+4);\n    }\n \
    \   return a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name\
    \ is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ ,\n  'Hi, my name is Joh',\n  'Hi, my\
    \ name is Jo',\n  'Hi, my name is J',\n  'Hi, my name is ',\n  'Hi, my name i',\n\
    \  'Hi, my name ',\n  'Hi, my nam',\n  'Hi, my na',\n  'Hi, my n',\n  'Hi, my\
    \ ',\n  'Hi, m',\n  'Hi, ',\n  'Hi',\n  'H',\n  ' m',\n  '' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpdg44ail4.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdg44ail4.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    <1 empty item>,      'Hi, my name\
    \ is Joh',\n    'Hi, my name is Jo', 'Hi, my name is J',\n    'Hi, my name is\
    \ ',   'Hi, my name i',\n    'Hi, my name ',      'Hi, my nam',\n    'Hi, my na',\
    \         'Hi, my n',\n    'Hi, my ',           'Hi, m',\n    'Hi, ',        \
    \      'Hi',\n    'H',                 ' m',\n    ''\n  ],\n  expected: [ 'Hi',\
    \ 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.trim().replace(/[,]+/, ' ').split(' ')\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp_0h86lq9.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_0h86lq9.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    // Split your string into an array of words separated\
    \ by commas\n    var words = s.split(/,|\\s+/);\n    // Return an array containing\
    \ each individual word in the string\n    return words;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp_m7b9h8t.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_m7b9h8t.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(',');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpfsz4h9p9.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfsz4h9p9.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar array = s.split(',');\n\tvar words = [];\n\tfor (var\
    \ i = 0; i < array.length; i++){\n\t\twords.push(array[i]);\n\t}\n\treturn words;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpfs9h34us.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfs9h34us.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var array = s.split(' ');\n  \n  for(var i = 0, len = array.length;\
    \ i < len; i++){\n    array[i] = array[i].toLowerCase();\n  }\n  return array;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'hi,', 'my', 'name', 'is', 'john' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpfk3tbfq9.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfk3tbfq9.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'hi,', 'my', 'name', 'is', 'john' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(',').map(function(word){\n    return word.trim();\n\
    \  })\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"\
    ),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp79k746le.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp79k746le.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var words = s.split(/,/);\n  words.forEach(function(word){\n\
    \    words[words.length-1] = word;\n  })\n  return words;\n}\n\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'Hi' ]\n\nshould equal\n\n[ 'Hi',\
    \ 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmptg1j3ods.js:19:10)\n    at\
    \ Object.<anonymous> (/tmp/tmptg1j3ods.js:27:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'Hi'\
    \ ],\n  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var arr = s.split(',');\n  for(var i=0;i<arr.length;i++){\n\
    \    if(arr[i]==undefined){\n      arr.splice(i,1);\n    }\n  }\n  return arr;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpdwz9tqle.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdwz9tqle.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var split = s.split(/,|\\s/);\n  var newArray = [];\n  for(var\
    \ i=0;i<split.length;i++){\n    newArray.push(split[i]);\n  }\n  return newArray;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpqjz1mbm1.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqjz1mbm1.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  s = s.split(\"\");\n  s = s.filter(Boolean);\n  return s;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'H',\n  'i',\n  ',',\n  ' ',\n  'm',\n\
    \  'y',\n  ' ',\n  'n',\n  'a',\n  'm',\n  'e',\n  ' ',\n  'i',\n  's',\n  ' ',\n\
    \  'J',\n  'o',\n  'h',\n  'n' ]\n\nshould equal\n\n[ 'Hi', 'my', 'name', 'is',\
    \ 'John' ]\n    at test (/tmp/tmpbv2fpzsw.js:17:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpbv2fpzsw.js:25:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    'H',\
    \ 'i', ',', ' ', 'm',\n    'y', ' ', 'n', 'a', 'm',\n    'e', ' ', 'i', 's', '\
    \ ',\n    'J', 'o', 'h', 'n'\n  ],\n  expected: [ 'Hi', 'my', 'name', 'is', 'John'\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var words = s.split(/[, ]+/);\n    return words;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpjmglkm9_.js:19:10)\n    at Object.<anonymous> (/tmp/tmpjmglkm9_.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var arr = s.split(/,|\\s|,/);\n  var arr2 = [];\n  var i,l;\n\
    \  for (i = 0, l = arr.length; i < l; i++) {\n    if (arr[i].length > 1 && arr[i]\
    \ != \" \") {\n      arr2.push(arr[i].trim());\n    }\n  }\n  return arr2;\n}\n\
    \nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar split_str = s.split(\" \");\n\tvar res = [];\n\tfor(var\
    \ x = 0; x < split_str.length; x++){\n\t\tres.push(split_str[x]);\n\t}\n\treturn\
    \ res;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"\
    ),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpdva1thwb.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdva1thwb.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var words = s.split(/,| /g);\n  words.shift();\n  return\
    \ words;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'my', 'name', 'is', 'John' ]\n\nshould\
    \ equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpfb630_15.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpfb630_15.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'my', 'name', 'is', 'John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp66vj6l08.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp66vj6l08.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(\",\").map(x => x.trim());\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpnj6gqm3o.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpnj6gqm3o.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\treturn s.trim().split(/[\\s,]+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpm23i_hgt.js:18:10)\n    at Object.<anonymous> (/tmp/tmpm23i_hgt.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\treturn s.split(/,/).map(function(s){\n\t\treturn s.replace(/[,\\\
    s]+/g, \"\").trim();\n\t});\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'mynameisJohn' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpsi8wyxmn.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsi8wyxmn.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'mynameisJohn' ],\n  expected: [\
    \ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var a = s.split(', ').map(function (s) {\n    return s.trim()\n\
    \  })\n  return a.map(function (s) {\n    return s.toLowerCase()\n  })\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'hi', 'my name is john' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp44te3qkh.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp44te3qkh.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'hi', 'my name is john' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(',').map(function(word){return word.trim()});\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp_ibnirfh.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_ibnirfh.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    //split the string into a string array\n    //of words\
    \ split by comma , or space\n    var arr = s.split(', ');\n\n    //return an array\
    \ of words\n    return arr;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpgu80rgbv.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpgu80rgbv.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = [];\n\tvar string = s.replace(/\\s+/g,' ');\n\
    \tvar words = string.split(',');\n\treturn words;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmplq96cue3.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmplq96cue3.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(\",\").map(function(s){return s.trim();});\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpx960nd7r.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx960nd7r.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  // Split string into array of words by spaces and commas.\n\
    \  var words = s.split(/\\s+|,/g);\n  return words;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp8vk6ci7_.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8vk6ci7_.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  s = s.trim();\n  var a = [];\n  var words = s.split(\",\"\
    );\n  for(var i=0;i<words.length;i++){\n    a.push(words[i].trim());\n  }\n  return\
    \ a;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"\
    ),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpb6cld77q.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpb6cld77q.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar tokens = s.split(/,|\\s+/);\n\tvar result = [];\n\t\
    for(var i = 0; i < (tokens.length - 1); i++) {\n\t\tresult.push(tokens[i + 1]);\n\
    \t}\n\tresult.push(tokens[tokens.length - 1]);\n\treturn result;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ '', 'my', 'name', 'is', 'John', 'John'\
    \ ]\n\nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpv18le5tm.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmpv18le5tm.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ '', 'my', 'name', 'is', 'John', 'John'\
    \ ],\n  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var strArr = s.split(',');\n  var arr = [];\n  for(var i\
    \ = 0, j = strArr.length; i < j; i++){\n    arr.push(strArr[i]);\n  }\n  return\
    \ arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpdn_xxv6t.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpdn_xxv6t.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  s = s.trim();\n  var re = /(\\w+\\W*){1,}/g;\n  var words\
    \ = s.match(re);\n  return words.map(function(d){\n    return d.trim();\n  });\n\
    }\n</cell>\n<cell>\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name\
    \ is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpmfhwnjcm.js:14\n</cell>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar arr = s.split(/,|\\s+/);\n\treturn arr;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp47cscub6.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmp47cscub6.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\treturn s.split(/,|\\s/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpim95uok0.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpim95uok0.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar arr = s.split(\" \");\n\tvar words = [];\n\tfor (var\
    \ i=0;i<arr.length;i++){\n\t\twords.push(arr[i]);\n\t}\n\treturn words;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpbjppqq1v.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbjppqq1v.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    words = s.trim().toLowerCase().split(',');\n    // console.log(words);\n\
    \    return words;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'hi', ' my name is john' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp43xobkk3.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp43xobkk3.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'hi', ' my name is john' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\treturn s.split(',').map(function(word){\n\t\treturn word.trim();\n\
    \t});\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let\
    \ candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"\
    ),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpmi2j1gu3.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpmi2j1gu3.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  if(s === null){\n    return [];\n  }\n  var words = s.trim().split(/,|\\\
    s/);\n  var wordsArr = [];\n  for(var i = 0; i < words.length; i++){\n    wordsArr.push(words[i].trim());\n\
    \  }\n  return wordsArr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmppx6i1t8u.js:23:10)\n\
    \    at Object.<anonymous> (/tmp/tmppx6i1t8u.js:31:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(\",\").map(function (str) {\n    return str.trim();\n\
    \  });\n}\nvar words_string__default = 'Hi, my name is John'.split(', ');\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpzx_8ne7r.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpzx_8ne7r.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar arr = s.split(/,|, | /);\n\tfor(var i in arr){\n\t\t\
    arr[i] = arr[i].toLowerCase().replace(/\\s/g,'');\n\t}\n\treturn arr;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'hi', '', 'my', 'name', 'is', 'john' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmper9t4915.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmper9t4915.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'hi', '', 'my', 'name', 'is', 'john' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var words = s.toLowerCase().split(/,/);\n  for(var i = 0;\
    \ i<words.length; i++)\n  {\n     words[i] = words[i].trim();\n  }\n  return words;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'hi', 'my name is john' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpqmtvk5kt.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqmtvk5kt.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'hi', 'my name is john' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = new Array();\n\tvar delimiter = ',';\n\tvar\
    \ current_word = '';\n\tvar i = 0;\n\twhile(i < s.length){\n\t\tcurrent_word =\
    \ s.substr(i,delimiter.length);\n\t\tif(current_word != \"\"){\n\t\t\twords.push(current_word);\n\
    \t\t\tcurrent_word = '';\n\t\t}\n\t\ti = i+delimiter.length;\n\t}\n\treturn words;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'H',\n  'i',\n  ',',\n  ' ',\n  'm',\n\
    \  'y',\n  ' ',\n  'n',\n  'a',\n  'm',\n  'e',\n  ' ',\n  'i',\n  's',\n  ' ',\n\
    \  'J',\n  'o',\n  'h',\n  'n' ]\n\nshould equal\n\n[ 'Hi', 'my', 'name', 'is',\
    \ 'John' ]\n    at test (/tmp/tmpxms8cm9b.js:27:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpxms8cm9b.js:35:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    'H',\
    \ 'i', ',', ' ', 'm',\n    'y', ' ', 'n', 'a', 'm',\n    'e', ' ', 'i', 's', '\
    \ ',\n    'J', 'o', 'h', 'n'\n  ],\n  expected: [ 'Hi', 'my', 'name', 'is', 'John'\
    \ ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar splitStr = s.split(/,| /);\n\tvar res = [];\n\tfor(var\
    \ i=0;i<splitStr.length;i++){\n\t\tres.push(splitStr[i].trim());\n\t}\n\treturn\
    \ res;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpyy1cjkpf.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpyy1cjkpf.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(/,|\\s+/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp7lpe038e.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp7lpe038e.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var w = [];\n    if(s.length > 0) w.push(s.split(\" \"\
    ))\n    return w;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name\
    \ is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ [ 'Hi,', 'my', 'name', 'is', 'John' ]\
    \ ]\n\nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpe6o4bjl8.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpe6o4bjl8.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ [ 'Hi,', 'my', 'name', 'is', 'John' ] ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\treturn s.split(',');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpbidiny28.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbidiny28.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var words = s.split(' ');\n  var wordArray = new Array();\n\
    \  var i = 0;\n  while(i < words.length){\n    wordArray[i] = words[i];\n    i++;\n\
    \  }\n  return wordArray;\n}\nvar wordArray = words_string(str);\n</code>\n<|/\
    \ a tags=java,arrays |>\n<| c |>\nThis is my first programming language and I'm\
    \ not too familiar with arrays and stuff, but thank you so much!\n<|/ c |>\n<|\
    \ c |>\nNo problem, if you're having trouble getting to the basics of arrays,\
    \ try [this tutorial](http://www.tutorialspoint.com/java/java_arrays.htm)\n<|/\
    \ c |>\n<| a dscore=0 |>\n<code>\nvar str = \"Hi, my name is John\";\nvar words\
    \ = str.split(\" \");\n</code>\n<|/ a tags=java,arrays |>\n<| a dscore=0 tags=java,arrays\
    \ |>\nYou could use split method, which return an array of String objects. \n\
    <code>\nString str = \"Hi, my name is John\";\nString[] words = str.split(\" \"\
    );\n</code>\n<|/ a |>\n<| a |>\nYou can get an Array of String by \n<code>\nstr.split(\"\
    \ \");\n</code>\n<|/ a dscore=0 tags=java,arrays |>\n<| a dscore=0 |>\nI hope\
    \ this helps you.\n<code>\n public static void main(String[] args) {\n    Scanner\
    \ sc = new Scanner(System.in);\n    System.out.println(\"Enter a sentence\");\n\
    \    String s = sc.nextLine();\n    System.out.println(\"Word Array:\");\n   \
    \ String[] wordsArray = s.split(\" \");\n    for(int i=0;i<wordsArray.length;i++){\n\
    \        System.out.println(wordsArray[i]);\n    }\n}\n</code>\n<|/ a tags=java,arrays\
    \ |>\n<| a dscore=0 |>\nYou can create a String array by using the split method\
    \ as mentioned by others, but you can also use the split method from String class\
    \ as well.\n<code>\nimport java.util.Scanner;\n\npublic class StringTest {\n \
    \   public static void main(String[] args) {\n        Scanner sc = new Scanner(System.in);\n\
    \        System.out.println(\"Enter a sentence\");\n        String s = sc.nextLine();\n\
    \        String[] wordsArray = s.split(\" \");\n        for(int i=0;i<wordsArray.length;i++){\n\
    \            System.out.println(wordsArray[i]);\n        }\n    }\n}\n</code>\n\
    <|/ a tags=java,arrays |>\n<| a tags=java,arrays dscore=0 |>\nThis is my first\
    \ programming language and I'm not too familiar with arrays and stuff, but thank\
    \ you so much!\n\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name\
    \ is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp4p9k4psf.js:17\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\treturn s.split(/,|\\s/);\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmprimveybl.js:14:10)\n\
    \    at Object.<anonymous> (/tmp/tmprimveybl.js:22:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.replace(/\\s+/g, ' ').split(' ');\n\tvar words_array\
    \ = s.map(function(s){return s.trim();});\n\treturn words_array;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpuq70c1tn.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpuq70c1tn.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var words = s.split(',');\n  return words;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmplq2vnnsn.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmplq2vnnsn.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var words = s.toString().toLowerCase().split(\",\");\n\
    \    var result = [];\n    for(var i in words){\n        result.push(words[i]);\n\
    \    }\n    return result;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'hi', ' my name is john' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpob406e5l.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpob406e5l.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'hi', ' my name is john' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    s = s.replace(/^\\s+|\\s+$/g,\"\");\n    var words = s.replace(/[\
    \ ]+/g, ' ').split(' ');\n    return words;\n}\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpbxiu7xif.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpbxiu7xif.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(',').map(function(x){\n    return x.trim();\n\
    \  });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpi3xqwokd.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi3xqwokd.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  let arr = [];\n  s = s.split(',').map((x)=>{\n    let words\
    \ = x.trim().split(/\\s+/);\n    let i = words[0].length\n    for(let i=0;i<words.length;i++){\n\
    \      if(words[i].length>i){\n        i = words[i].length\n      }\n    }\n \
    \   while(arr[i]&&arr[i].length<i){\n      arr[i] = ''\n    }\n    arr[i] += words[i]\n\
    \    return arr\n  });\n  return arr;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ , , 'NaNis' ]\n\nshould equal\n\n[ 'Hi',\
    \ 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpxej2iea_.js:30:10)\n    at\
    \ Object.<anonymous> (/tmp/tmpxej2iea_.js:38:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <2 empty\
    \ items>, 'NaNis' ],\n  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator:\
    \ 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var words = [];\n  s = s.toLowerCase().replace(/,/g, '');\n\
    \  s = s.trim();\n  var tempArray = [];\n  for(var i = 0; i <= s.length; i++){\n\
    \    var letter = s.charAt(i);\n    if(letter === ',' || letter === ' '){\n  \
    \    words.push(tempArray);\n      tempArray = [];\n      continue;\n    }\n \
    \   tempArray.push(letter);\n  }\n  words.push(tempArray);\n  return words;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ [ 'h', 'i' ],\n  [ 'm', 'y' ],\n  [ 'n',\
    \ 'a', 'm', 'e' ],\n  [ 'i', 's' ],\n  [ 'j', 'o', 'h', 'n', '' ] ]\n\nshould\
    \ equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp1hxw18xp.js:29:10)\n\
    \    at Object.<anonymous> (/tmp/tmp1hxw18xp.js:37:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    [ 'h', 'i' ],\n    [ 'm', 'y' ],\n\
    \    [ 'n', 'a', 'm', 'e' ],\n    [ 'i', 's' ],\n    [ 'j', 'o', 'h', 'n', ''\
    \ ]\n  ],\n  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  s=s.replace(/\\s/g,\" \");\n  let arr=s.split(\",\");\n\
    \  return arr;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name\
    \ is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp642by7u9.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmp642by7u9.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  let words = s.split(',').map(s=>s.trim())\n  let result\
    \ = [];\n  for(let i=0;i<words.length;i++){\n    result.push(words[i])\n  }\n\
    \  return result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name\
    \ is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp_11_zsco.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmp_11_zsco.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.toLowerCase().replace(/[^a-z ]/g,\"\");\n\tvar str\
    \ = s.split(/,/g);\n\tfor(var i = 0;i<str.length;i++){\n\t\tstr[i] = str[i].split(\"\
    \ \");\n\t}\n\treturn str;\n}\n\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ [ 'hi', 'my', 'name', 'is', 'john' ] ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmppiijnxhy.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmppiijnxhy.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ [ 'hi', 'my', 'name', 'is', 'john' ] ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var w = s.split(/[\\s,]+/);\n    return w;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpwwfkkqts.js:19:10)\n    at Object.<anonymous> (/tmp/tmpwwfkkqts.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.replace(/((\\s)+)(,|$)/g, \" \").replace(/(\\w)(\\\
    W|$)/g,\"$1$2\").split(\" \");\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpz058pjk_.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpz058pjk_.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = [];\n\t\n\tif(typeof s == \"string\"){\n\t\t\
    s = s.split(', ');\n\t}\n\n\tfor(var i = 0, len = s.length; i < len; i++){\n\t\
    \tvar word = s[i].replace(/[, ]+/g, ' ').trim();\n\t\tif(word != \"\"){\n\t\t\t\
    words.push(word);\n\t\t}\n\t}\n\treturn words;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpsaijhwko.js:27:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsaijhwko.js:35:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = s.split(\" \");\n\tvar return_string = [];\n\
    \n\tfor(var i=0;i<words.length;i++){\n\t\treturn_string.push(words[i]);\n\t}\n\
    \n\treturn return_string;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpx3fr_dfp.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmpx3fr_dfp.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var w=[],i=0,j=0;\n    while(s.length>0){\n        j =\
    \ s.indexOf(\",\",i);\n        if(j<0){\n            w.push(s.substr(i,s.length));\n\
    \            i = s.length;\n        }\n        else{\n            w.push(s.substr(i,j));\n\
    \            i=j+1;\n        }\n    }\n    return w;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "\n<--- Last few GCs --->\n\n[30329:0x5533b60]     1299 ms: Scavenge 766.9\
    \ (800.0) -> 766.9 (800.0) MB, 36.8 / 0.0 ms  (average mu = 1.000, current mu\
    \ = 1.000) allocation failure \n[30329:0x5533b60]     1901 ms: Scavenge 1149.4\
    \ (1182.5) -> 1149.4 (1182.5) MB, 53.9 / 0.0 ms  (average mu = 1.000, current\
    \ mu = 1.000) allocation failure \n[30329:0x5533b60]     2799 ms: Scavenge 1723.2\
    \ (1756.3) -> 1723.2 (1756.3) MB, 79.5 / 0.0 ms  (average mu = 1.000, current\
    \ mu = 1.000) allocation failure \n\n\n<--- JS stacktrace --->\n\nFATAL ERROR:\
    \ invalid array length Allocation failed - JavaScript heap out of memory\n 1:\
    \ 0xa04200 node::Abort() [node]\n 2: 0x94e4e9 node::FatalError(char const*, char\
    \ const*) [node]\n 3: 0xb797be v8::Utils::ReportOOMFailure(v8::internal::Isolate*,\
    \ char const*, bool) [node]\n 4: 0xb79b37 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*,\
    \ char const*, bool) [node]\n 5: 0xd343c5  [node]\n 6: 0xd0cf05  [node]\n 7: 0xe9671e\
    \  [node]\n 8: 0xe9bd88  [node]\n 9: 0xe9bed8  [node]\n10: 0xeef18b v8::internal::JSObject::AddDataElement(v8::internal::Handle<v8::internal::JSObject>,\
    \ unsigned int, v8::internal::Handle<v8::internal::Object>, v8::internal::PropertyAttributes)\
    \ [node]\n11: 0xf43c92 v8::internal::Object::AddDataProperty(v8::internal::LookupIterator*,\
    \ v8::internal::Handle<v8::internal::Object>, v8::internal::PropertyAttributes,\
    \ v8::Maybe<v8::internal::ShouldThrow>, v8::internal::StoreOrigin) [node]\n12:\
    \ 0xf46f8f v8::internal::Object::SetProperty(v8::internal::LookupIterator*, v8::internal::Handle<v8::internal::Object>,\
    \ v8::internal::StoreOrigin, v8::Maybe<v8::internal::ShouldThrow>) [node]\n13:\
    \ 0x10709c5 v8::internal::Runtime::SetObjectProperty(v8::internal::Isolate*, v8::internal::Handle<v8::internal::Object>,\
    \ v8::internal::Handle<v8::internal::Object>, v8::internal::Handle<v8::internal::Object>,\
    \ v8::internal::StoreOrigin, v8::Maybe<v8::internal::ShouldThrow>) [node]\n14:\
    \ 0x1071a67 v8::internal::Runtime_SetKeyedProperty(int, unsigned long*, v8::internal::Isolate*)\
    \ [node]\n15: 0x14011f9  [node]\n"
  exit_code: -6
  status: Exception
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var arr = [];\n  var split = s.split(',');\n  split.forEach(function\
    \ (word) {\n    arr.push(word.trim());\n  });\n  return arr;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpcc3irtoj.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmpcc3irtoj.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar ws=s.split(' ');\n\tvar result=[];\n\tfor(var i=0;i<ws.length;i++){\n\
    \t\tresult.push(ws[i]);\n\t}\n\treturn result;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmppau1l90b.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmppau1l90b.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tlet words = [];\n\tlet splits = s.split(', ');\n\tsplits.forEach(split=>{\n\
    \t\tif(split === \" \"){\n\t\t\tsplits.splice(splits.indexOf(split),1);\n\t\t\
    }else{\n\t\t\twords.push(split.toLowerCase().trim());\n\t\t}\n\t})\n\treturn words;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'hi', 'my name is john' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp69o27xm3.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmp69o27xm3.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'hi', 'my name is john' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(/\\,| /);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpovj44h2o.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpovj44h2o.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.split(/,/);\n\ts = s.split(/ /);\n\t\n\tfor(var i\
    \ = 0; i < s.length; i++)\n\t\ts[i] = s[i].toLowerCase();\n\t\t\n\treturn s;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmpaoa__vfx.js:8\n\ts = s.split(/ /);\n\t      ^\n\nTypeError: s.split\
    \ is not a function\n    at words_string (/tmp/tmpaoa__vfx.js:8:8)\n    at test\
    \ (/tmp/tmpaoa__vfx.js:21:20)\n    at Object.<anonymous> (/tmp/tmpaoa__vfx.js:29:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: Exception
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var words = s.replace(/[\\s,]+/g,\" \").split(\" \");\n\
    \    return words;\n}\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name\
    \ is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpo91ifog6.js:18:10)\n    at Object.<anonymous> (/tmp/tmpo91ifog6.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar split;\n\tvar array = [];\n\tvar words = s.split(/,+/);\n\
    \tfor(var i in words){\n\t\tsplit = words[i].split(\" \");\n\t\tarray[i] = split;\n\
    \t}\n\treturn array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ [ 'Hi' ], [ '', 'my', 'name', 'is', 'John'\
    \ ] ]\n\nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp47yligfo.js:22:10)\n\
    \    at Object.<anonymous> (/tmp/tmp47yligfo.js:30:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ [ 'Hi' ], [ '', 'my', 'name', 'is', 'John'\
    \ ] ],\n  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.toString().split(/,/);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpw2jew39_.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmpw2jew39_.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    words = s.replace(/[\\s,]+/g,\" \").split(\" \");\n  \
    \  return words;\n}\n</textarea></div>\n\n<button onclick=\"document.getElementById('light').style.display='block'\"\
    >Display Light</button>\n\n<button onclick=\"document.getElementById('fade').style.display='block'\"\
    >Display Fade</button>\n\n<button onclick=\"document.getElementById('rotate').style.display='block'\"\
    >Display Rotate</button>\n\n<button onclick=\"document.getElementById('rotate180').style.display='block'\"\
    >Display Rotate180</button>\n\n<button onclick=\"document.getElementById('scale').style.display='block'\"\
    >Display Scale</button>\n\n<button onclick=\"document.getElementById('scale2').style.display='block'\"\
    >Display Scale2</button>\n\n<button onclick=\"document.getElementById('scale3').style.display='block'\"\
    >Display Scale3</button>\n\n<br>\n<div id=\"light\" style=\"display:none;\">\n\
    <p>\n    Light<br>\n    <textarea id=\"text\" style=\"height:100px\"></textarea>\n\
    </p>\n</div>\n\n<br>\n<div id=\"fade\" style=\"display:none;\">\n<p>\n    Fade<br>\n\
    \    <textarea id=\"text2\" style=\"height:100px\"></textarea>\n</p>\n</div>\n\
    \n<br>\n<div id=\"rotate\" style=\"display:none;\">\n<p>\n    Rotate<br>\n   \
    \ <textarea id=\"text3\" style=\"height:100px\"></textarea>\n</p>\n</div>\n\n\
    <br>\n<div id=\"rotate180\" style=\"display:none;\">\n<p>\n    Rotate180<br>\n\
    \    <textarea id=\"text4\" style=\"height:100px\"></textarea>\n</p>\n</div>\n\
    \n<br>\n<div id=\"scale\" style=\"display:none;\">\n<p>\n    Scale<br>\n    <textarea\
    \ id=\"text5\" style=\"height:100px\"></textarea>\n</p>\n</div>\n\n<br>\n<div\
    \ id=\"scale2\" style=\"display:none;\">\n<p>\n    Scale2<br>\n    <textarea id=\"\
    text6\" style=\"height:100px\"></textarea>\n</p>\n</div>\n\n<br>\n<div id=\"scale3\"\
    \ style=\"display:none;\">\n<p>\n    Scale3<br>\n    <textarea id=\"text7\" style=\"\
    height:100px\"></textarea>\n</p>\n</div>\n\n<script>\nvar text = document.getElementById('text');\n\
    var text2 = document.getElementById('text2');\nvar text3 = document.getElementById('text3');\n\
    var text4 = document.getElementById('text4');\nvar text5 = document.getElementById('text5');\n\
    var text6 = document.getElementById('text6');\nvar text7 = document.getElementById('text7');\n\
    \nvar words;\nvar i;\nvar j;\nvar light;\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp8civ2i8f.js:10\n</textarea></div>\n^\n\nSyntaxError: Unexpected\
    \ token '<'\n    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var result = s.split(/,\\s?/);\n  return result;\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpd5suvbs2.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpd5suvbs2.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar tokens = s.split(',');\n\tvar result = [];\n\t\n\tfor(var\
    \ i = 0; i < tokens.length; i++){\n\t\tresult.push(tokens[i]);\n\t}\n\treturn\
    \ result;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp458_3nch.js:21:10)\n\
    \    at Object.<anonymous> (/tmp/tmp458_3nch.js:29:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var words = s.split(',');\n    words.shift();\n    return\
    \ words;\n}\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpqpasv0id.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmpqpasv0id.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ ' my name is John' ],\n  expected: [ 'Hi',\
    \ 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    let words = s.split(', ');\n    return words;\n}\n\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp9qiqtb4z.js:16:10)\n\
    \    at Object.<anonymous> (/tmp/tmp9qiqtb4z.js:24:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var split_string=s.split(',').map(function(str){return str.trim();});\n\
    \  return split_string;\n}\n</code>\n<|/ a tags=javascript,string,arrays dscore=0\
    \ |>\n<| c |>\nThis doesn't handle spaces correctly (see the example in the OP's\
    \ question).\n<|/ c |>\n<| c |>\nI dont know why it is working on codepen.io and\
    \ not on my browser. It still outputs an empty array on console.\n<|/ c |>\n<|\
    \ c |>\nThanks for the feedback, I updated my answer to include this case too.\n\
    <|/ c |>\n<| a dscore=0 |>\n<code>\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp9foifgdp.js:10\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(',').map(function(word){\n    return word.trim();\n\
    \  });\n}\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n \
    \ let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is\
    \ John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpi3uoshvg.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpi3uoshvg.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  return s.split(' ');\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp208293n3.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmp208293n3.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n  var words = s.replace(/([a-zA-Z0-9]+)/g, \"\").split(\"\
    \ \");\n  words = words.filter(function(word){\n    return word != \"\";\n  });\n\
    \  return words;\n}\n\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi, my name\
    \ is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ ',' ]\n\nshould equal\n\n[ 'Hi', 'my',\
    \ 'name', 'is', 'John' ]\n    at test (/tmp/tmpf0uebwk4.js:19:10)\n    at Object.<anonymous>\
    \ (/tmp/tmpf0uebwk4.js:27:1)\n    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n\
    \    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1092:10)\n\
    \    at Module.load (internal/modules/cjs/loader.js:928:32)\n    at Function.Module._load\
    \ (internal/modules/cjs/loader.js:769:14)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (internal/modules/run_main.js:72:12)\n    at internal/main/run_main_module.js:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ ',' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    str = s.split(/,|\\s/);\n    words_array = [];\n    for\
    \ (var i = 0; i < str.length; i++){\n        words_array.push(str[i]);\n    }\n\
    \    return words_array;\n}\n\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', '', 'my', 'name', 'is', 'John' ]\n\
    \nshould equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmptg_ldoki.js:20:10)\n\
    \    at Object.<anonymous> (/tmp/tmptg_ldoki.js:28:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', '', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var words_list = s.split(',');\n    var words = [];\n\n\
    \    var words_list = s.split(',');\n\n    for (var i = 0; i < words_list.length;\
    \ i++) {\n        if (words_list[i] == \"\") {\n            continue;\n      \
    \  }\n\n        var word = words_list[i].trim();\n        words.push(word);\n\
    \    }\n\n    return words;\n}\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"Hi,\
    \ my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpllpjw3uy.js:28:10)\n\
    \    at Object.<anonymous> (/tmp/tmpllpjw3uy.js:36:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar list = s.split(\",\");\n\tvar new_list = new Array();\n\
    \tfor(var i=0; i<list.length; i++){\n\t\tvar word = list[i];\n\t\tvar word = word.replace(/^\\\
    s+|\\s+$/g,\"\");\n\t\tvar word = word.replace(/^\\s+/g,\"\");\n\t\tvar word =\
    \ word.replace(/\\s+/g,\"\");\n\t\tnew_list.push(word);\n\t}\n\treturn new_list;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'mynameisJohn' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpsd76e1nw.js:24:10)\n\
    \    at Object.<anonymous> (/tmp/tmpsd76e1nw.js:32:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'mynameisJohn' ],\n  expected: [\
    \ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar mySplit = s.split(/, +/g);\n\tconsole.log(\"Split Result\"\
    , mySplit);\n\treturn mySplit;\n}\n\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: "Split Result [ 'Hi', 'my name is John' ]\n"
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', 'my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpisefnemi.js:17:10)\n\
    \    at Object.<anonymous> (/tmp/tmpisefnemi.js:25:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', 'my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\ts = s.split(\" \");\n\ts = s.filter(function(word){\n\t\t\
    return word;\n\t});\n\treturn s;\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi,', 'my', 'name', 'is', 'John' ]\n\n\
    should equal\n\n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmp8eamkrqd.js:19:10)\n\
    \    at Object.<anonymous> (/tmp/tmp8eamkrqd.js:27:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi,', 'my', 'name', 'is', 'John' ],\n\
    \  expected: [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n\
    }\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar arr = s.split(/\\W+/);\n\treturn arr;\n}\n\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmp4vl0ke9r.js:19:10)\n    at Object.<anonymous> (/tmp/tmp4vl0ke9r.js:24:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\treturn s.split(/,+/g);\n}\n\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'Hi', ' my name is John' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmptyv1kj9l.js:15:10)\n\
    \    at Object.<anonymous> (/tmp/tmptyv1kj9l.js:23:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'Hi', ' my name is John' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar str = s.trim().split(/[ ,]+/);\n\treturn str;\n}\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = words_string;\n\
    \  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\", \"my\", \"name\"\
    , \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two, three, four, five,\
    \ six\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    Hi, my name\"),[\"Hi\", \"my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,,\
    \ two, three, four, five, six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\"]);\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    ahmed     , gamal\"),[\"ahmed\", \"gamal\"]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'One', 'two', 'three', 'four', 'five',\
    \ 'six', '' ]\n\nshould equal\n\n[ 'One', 'two', 'three', 'four', 'five', 'six'\
    \ ]\n    at test (/tmp/tmpqujwqcm1.js:18:10)\n    at Object.<anonymous> (/tmp/tmpqujwqcm1.js:23:1)\n\
    \    at Module._compile (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [\n    'One',   'two',\n    'three', 'four',\n\
    \    'five',  'six',\n    ''\n  ],\n  expected: [ 'One', 'two', 'three', 'four',\
    \ 'five', 'six' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    return s.split(/,/).map(function(s){\n        return s.trim();\n\
    \    });\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\nFor anyone stumbling on this\
    \ thread, please note that the following code would not work at all because the\
    \ map function returns a new array:\n<code>\nconst words = ['Hello', 'world',\
    \ '!'].map(word => word);\n</code>\nWhat I needed was to return an array, and\
    \ not the new array created by map().\n<code>\nconst words = ['Hello', 'world',\
    \ '!'];\nconst wordList = words.map(word => word);\n</code>\n<|/ a tags=javascript\
    \ |>\n<| a tags=javascript |>\n<code>\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = words_string;\n  assert.deepEqual(candidate(\"\
    Hi, my name is John\"),[\"Hi\", \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"\
    One, two, three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"\
    five\", \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"\
    my\", \"name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five,\
    \ six,\"),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/tmp/tmp5d8y_tgw.js:11\n</code>\n^\n\nSyntaxError: Unexpected token '<'\n\
    \    at wrapSafe (internal/modules/cjs/loader.js:979:16)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1027:27)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47\n"
  exit_code: 1
  status: SyntaxError
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n\tvar words = [];\n\ts.replace(/\\,/ig,\" \").split(\" \"\
    ).forEach(function(word){\n\t\tif (word) words.push(word);\n\t});\n\treturn words;\n\
    }\n\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "//You will be given a string of words separated by commas or spaces. Your\
    \ task is\n// to split the string into words and return an array of the words.\n\
    // For example:\n// words_string(\"Hi, my name is John\") == [\"Hi\", \"my\",\
    \ \"name\", \"is\", \"John\"]\n// words_string(\"One, two, three, four, five,\
    \ six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]\nfunction\
    \ words_string(s){\n    var words = s.toLowerCase().split(/,\\s+/);\n    return\
    \ words.filter(function(word){\n        return word !== \"\";\n    });\n}\n\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = words_string;\n  assert.deepEqual(candidate(\"Hi, my name is John\"),[\"Hi\"\
    , \"my\", \"name\", \"is\", \"John\"]);\n  assert.deepEqual(candidate(\"One, two,\
    \ three, four, five, six\"),[\"One\", \"two\", \"three\", \"four\", \"five\",\
    \ \"six\"]);\n  assert.deepEqual(candidate(\"Hi, my name\"),[\"Hi\", \"my\", \"\
    name\"]);\n  assert.deepEqual(candidate(\"One,, two, three, four, five, six,\"\
    ),[\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"]);\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"ahmed     , gamal\"),[\"ahmed\", \"gamal\"\
    ]);\n}\n\ntest();"
  stdout: ''
  stderr: "/home/l.phipps-costin/polyglot-codegen-evaluation/node_modules/assert/build/assert.js:84\n\
    \  throw new AssertionError(obj);\n  ^\n\nAssertionError [ERR_ASSERTION]: Expected\
    \ values to be loosely deep-equal:\n\n[ 'hi', 'my name is john' ]\n\nshould equal\n\
    \n[ 'Hi', 'my', 'name', 'is', 'John' ]\n    at test (/tmp/tmpufux8dcn.js:18:10)\n\
    \    at Object.<anonymous> (/tmp/tmpufux8dcn.js:26:1)\n    at Module._compile\
    \ (internal/modules/cjs/loader.js:1063:30)\n    at Object.Module._extensions..js\
    \ (internal/modules/cjs/loader.js:1092:10)\n    at Module.load (internal/modules/cjs/loader.js:928:32)\n\
    \    at Function.Module._load (internal/modules/cjs/loader.js:769:14)\n    at\
    \ Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:72:12)\n\
    \    at internal/main/run_main_module.js:17:47 {\n  generatedMessage: true,\n\
    \  code: 'ERR_ASSERTION',\n  actual: [ 'hi', 'my name is john' ],\n  expected:\
    \ [ 'Hi', 'my', 'name', 'is', 'John' ],\n  operator: 'deepEqual'\n}\n"
  exit_code: 1
  status: AssertionError

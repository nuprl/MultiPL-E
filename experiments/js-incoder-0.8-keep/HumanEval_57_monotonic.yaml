name: HumanEval_57_monotonic
language: js
prompt: "//Return True is list elements are monotonically increasing or decreasing.\n\
  // >>> monotonic([1, 2, 4, 20])\n// True\n// >>> monotonic([1, 20, 4, 10])\n// False\n\
  // >>> monotonic([4, 1, 0, -10])\n// True\nfunction monotonic(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = monotonic;\n  assert.deepEqual(candidate([1, 2, 4, 10]),true);\n  assert.deepEqual(candidate([1,\
  \ 2, 4, 20]),true);\n  assert.deepEqual(candidate([1, 20, 4, 10]),false);\n  assert.deepEqual(candidate([4,\
  \ 1, 0, -10]),true);\n  assert.deepEqual(candidate([4, 1, 1, 0]),true);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 2, 5, 60]),false);\n  assert.deepEqual(candidate([1, 2, 3, 4, 5, 60]),true);\n\
  \  assert.deepEqual(candidate([9, 9, 9, 9]),true);\n}\n\ntest();"
completions: ["  var a = false;\n  for (var i = 0; i < l.length; i++){\n    if (l[i]\
    \ > l[i+1]){\n      a = true;\n      break;\n    }\n  }\n  return a;\n}", "  \
    \  var o = [], n = l[0], x = l[1], i, l = l.length;\n    if(n < x){\n        return\
    \ false; // list is not monotonically increasing\n    }\n    for(i = 2; i < l;\
    \ ++i){\n        x = l[i];\n        if((x > n) != (n <= x)) return false;\n  \
    \      n.val = x;\n    }\n    return true;\n}\n\nmonotonic.invert = function(n){\n\
    \    var x = n.val, o = [];\n    o.push(typeof n.val);\n    o.push(1 - n.val);\n\
    \    o.push(x);\n    return o;\n};\n\nmodule.exports = monotonic;\n\n},{\"../object\"\
    :54}],55:[function(require,module,exports){\nvar indexOf = require('indexof');\n\
    \nvar v1 = new Int8Array([1,2,3,4,5,6,7,8,9]);\nvar v2 = new Int8Array([1,2,3,4,5,6,7,8,9]);\n",
  "\tvar n = l.length,\n\t\tm = l[0],\n\t\tisIncreasing = true,\n\t\tisSubsequent\
    \ = true;\n\tfor(var i = 1; i < n; i++){\n\t\tvar currentItem = l[i];\n\t\tif(isSubsequent){\n\
    \t\t\tif(isIncreasing && currentItem < m){\n\t\t\t\treturn false;\n\t\t\t}else\
    \ if(isIncreasing && currentItem === m){\n\t\t\t\tisIncreasing = false;\n\t\t\t\
    }else{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}else if(isIncreasing){\n\t\t\tif(currentItem\
    \ < m){\n\t\t\t\treturn false;\n\t\t\t}else if(currentItem === m){\n\t\t\t\tisIncreasing\
    \ = false;\n\t\t\t}else{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}else{\n\t\t\tif(currentItem\
    \ > m){\n\t\t\t\treturn false;\n\t\t\t}else if(currentItem === m){\n\t\t\t\tisIncreasing\
    \ = true;\n\t\t\t}else{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tm = currentItem;\n\
    \t}\n\treturn !isIncreasing;\n}\n", "    var l = l || [];\n    if (l.length ===\
    \ 0) { return true; }\n    if (l.length == 1) {\n        if (l[0] <= l[1]) { return\
    \ true; }\n        if (l[0] >= l[1]) { return false; }\n    }\n    var m = l[0],\
    \ next = l[1], i = 0;\n    while (i < l.length) {\n        if (m.value <= next.value)\
    \ {\n            if (next.value > m.value) {\n                return false;\n\
    \            } else {\n                i++;\n                m = next;\n     \
    \           next = l[i];\n            }\n        } else {\n            if (next.value\
    \ < m.value) {\n                return false;\n            } else {\n        \
    \        i++;\n                next = l[i];\n            }\n        }\n    }\n\
    \    return true;\n}\n},{}],15:[function(require,module,exports){\nmodule.exports\
    \ = '0.8.6';\n\n},{}],16:[function(require,module,exports){\nvar process=require(\"\
    __browserify_process\"),global=typeof self !== \"undefined\" ? self : typeof window\
    \ !== \"undefined\" ? window : {},Buffer=require(\"__browserify_Buffer\"),__filename=\"\
    /parts/command.js\",__dirname=\"/parts\";var events = require('events'),util =\
    \ require('util'),uuid = require('node-uuid');\nvar _ = require('lodash');\nvar\
    \ path = require('path');\nvar async = require('async');\nvar event = require('./event');\n\
    var logger = require('./logger');\nvar message = require('./message');\nvar config\
    \ = require('./config');\nvar utils = require('./utils');\nvar commands = {};\n\
    var commandHistory = {};\nvar commandHistoryIndex = -1;\nvar commandHistoryLength\
    \ = config.historyLength;\nvar defaultCommands = require('./default-commands.json');\n\
    var commandNames = Object.keys(defaultCommands);\nvar eventNames = event.eventNames;\n\
    var EventEmitter = events.EventEmitter;\nvar Command = module.exports = function\
    \ Command(cb){\n    var self = this;\n    Command._validateCommandInputs(cb);\n\
    \    EventEmitter.call(self);\n    self._log = logger.getLogger();\n    self._event\
    \ = new EventEmitter();\n    self._eventNames = eventNames;\n    self._event.on('error',\
    \ function(err){\n        self.emit('error', err);\n    });\n    self._event.on('error',\
    \ function(err){\n        self.emit('error', err);\n    });\n    self._event.on('end',\
    \ function(end){\n        self.emit('end', end);\n    });\n    self._event.on('end',\
    \ function(end){\n        self.emit('end', end);\n    });\n};\nutil.inherits(Command,\
    \ EventEmitter);\nCommand.prototype.setConfig = function(aConfig){\n    var self\
    \ = this;\n    if (!_.isObject(aConfig)) {\n        var errMsg = 'Config is not\
    \ an object';\n        self._log.error(errMsg);\n        throw new Error(errMsg);\n\
    \    }\n    config = aConfig;\n};\nCommand.prototype.run = function(cb, end){\n\
    \    var ", "    l = l.slice();\n    var n = l.length, i, j, t;\n    var ret =\
    \ false;\n    if(n <= 1){\n        ret = true;\n    }else{\n        for(i = 1;\
    \ i < n; ++i){\n            t = l[i];\n            for(j = i - 1; j >= 0; --j){\n\
    \                if(l[j] > t){\n                    l[j] = t;\n              \
    \      ret = true;\n                }\n            }\n        }\n    }\n    return\
    \ ret;\n}\n", "    var s = monotonicSort;\n    return s.call(null, l);\n}\n",
  "  var n = l.length, prev, val;\n  for (var i = 0; i < n; ++i) {\n    val = l[i];\n\
    \    prev = l[i - 1];\n    if (val <= prev) return true;\n    if (val >= prev)\
    \ return false;\n  }\n  return false;\n}\n", "  l = l.sort(function(a,b){\n  \
    \  return a-b;\n  });\n  var i = 0;\n  var il = l.length;\n  var u=l[il-1];\n\
    \  var j = il - 1;\n  var jl = j + 7;\n  var uEnd = u;\n  var jEnd = j;\n  while(1){\n\
    \    var uCmp = uEnd - l[i];\n    var jCmp = jEnd - l[j];\n    if (uCmp > 0){\n\
    \      if (jCmp <= 0){\n        return false; //List is already monotonically\
    \ increasing.\n      }\n      if (uCmp > jCmp){\n        return true;\n      }\n\
    \    }\n    else{\n      if (jCmp >= 0){\n        return false;\n      }\n   \
    \   if (uCmp < jCmp){\n        return true;\n      }\n    }\n    i = i + 1;\n\
    \    uEnd = l[i];\n    jEnd = j;\n    if (i >= il){\n      break;\n    }\n   \
    \ j = j - 1;\n  }\n  return true;\n}\n", "\tvar o = {}, n = l.length, min = l[0],\
    \ max = l[0], i, r;\n\tfor(i=0; i<n; i++){\n\t\tr = l[i+1];\n\t\tif(r < min) min\
    \ = r;\n\t\tif(r > max) max = r;\n\t}\n\tfor(i=1; i<n; i++){\n\t\tr = l[i];\n\t\
    \tif(o [r] > 0){\n\t\t\tif(r < min) min = r;\n\t\t}else{\n\t\t\tif(r > max) max\
    \ = r;\n\t\t}\n\t}\n\treturn (min > max) ? false : true;\n}\n", "  if (l.length\
    \ <= 1) return false;\n  if (l.length === 1) return l[0] < l[0];\n  var n = l[0],\
    \ i = 1;\n  var p = l[0], q = l[0], diff = 1, d = [];\n  while (i < l.length){\n\
    \    p = l[i];\n    if (p < q) {\n      diff = p;\n    } else {\n      diff =\
    \ q;\n    }\n    if (diff > 0) return false;\n    if (diff === 0) return true;\n\
    \    q = Math.floor((p + diff)/2);\n    d.push(q);\n    i++;\n  }\n  while (n){\n\
    \    d.push(n);\n    i++;\n    n = l[i];\n  }\n  return d.indexOf(Math.max.apply(Math,d))\
    \ === -1 && d.indexOf(Math.min.apply(Math,d)) === -1;\n}\n", "  var s = 1;\n \
    \ var m = l[0];\n  \n  for(var i = 1; i < l.length; i++){\n    if(l[i] < m) s\
    \ = -1;\n    if(l[i] > m) s = 1;\n    m = m;\n  }\n  \n  return s;\n}\n", "\t\
    var o = +l[0],\n\t\tn = +l[l.length - 1];\n\n\tfor(var i = 0; i < l.length; i++){\n\
    \t\tvar x = +l[i];\n\n\t\tif(x == o) return true;\n\t\tif(x == n) return false;\n\
    \t\tif(x < o) return false;\n\t}\n\n\treturn true;\n}\n", "    l = l.reverse();\n\
    \    var o = 0;\n    var n = l.length;\n    var firstVal = l[0];\n    if (n<2)\
    \ return firstVal;\n    \n    for (let i = 1; i < n; i++){\n        let curVal\
    \ = l[i];\n        let prevVal = l[i-1-i];\n        if (curVal < firstVal) continue;\n\
    \        if (curVal > prevVal) continue;\n        if (curVal === prevVal){\n \
    \           if (i - 1 === o) o = i;\n            else return false;\n        \
    \    continue;\n        }\n        // If curVal is between prevVal and firstVal,\
    \ we have a monotonic\n        // increasing sequence\n        if (curVal <= firstVal\
    \ && prevVal < firstVal) return true;\n    }\n    return o !== false && l[o-i-1]\
    \ > firstVal;\n}\n", "    var o = 0, n = l.length, c = false;\n    for(var i =\
    \ 0; i < n; i++){\n        if(l[i] <= l[o]){\n            if(!c){\n          \
    \      c = true;\n            }\n            o = i;\n        }\n    }\n    return\
    \ c;\n}\n", "    var l = isArray(l) ? l : [l];\n    var a = 0,\n        b,\n \
    \       count = l.length,\n        max = -Infinity,\n        min$1 = Infinity,\n\
    \        m,\n        x,\n        x0,\n        y0,\n        y;\n    for(var i =\
    \ 0; i < count; i++){\n        x = l[i];\n        if (x == null){\n          \
    \  continue;\n        }\n        m = 0;\n        while (m <= mmax){\n        \
    \    b = a + 1;\n            if ((b < count) && l[b] <= x){\n                m++;\n\
    \            }\n            else {\n                b = a;\n                a\
    \ = x;\n            }\n            if (b > max) {\n                max = b;\n\
    \                m = b - 1;\n            }\n            else {\n             \
    \   min$1 = m;\n            }\n        }\n        m = l - max;\n        if (m\
    \ > mmax){\n            y = l.pop();\n            while(x === null){\n       \
    \         x.pop();\n                y.pop();\n                x = l.shift();\n\
    \            }\n            l[mmax] = y;\n            l.unshift(x);\n        }\n\
    \        else {\n            l.splice(min$1, m, x);\n        }\n    }\n    return\
    \ l;\n}\n\nvar MonotoneChain = function(fn){\n    this.func = fn;\n    this.mono\
    \ = 0;\n};\n\nMonotoneChain.prototype = {\n    add: function(x){\n        this.mono\
    \ += 1;\n        this.func(x);\n    },\n    clear: function(){\n        this.mono\
    \ = 0;\n    }\n};\n\nvar Monotone = function(m){\n    this.chains = [];\n    this.length\
    \ = 0;\n    this.add(m);\n};\n\nMonotone.prototype = {\n    add: function(m){\n\
    \        if(!(m = new MonotoneChain(m))){\n            return false;\n       \
    \ }\n        this.chains.push(m);\n        m.length = 1;\n        this.length\
    \ += 1;\n        for(var c = m.chains[m.chains.length-1], i = c.chains.length\
    \ - 1; i >= 0; i--){\n            for(var j = c.chains[i].chains.length - 1; j\
    \ >= 0; j--){\n                this.chains[i].chains[j].clear();\n           \
    \ }\n        }\n        return true;\n    },\n    clear: function(){\n       \
    \ while(this.chains.length){\n            var chain = this.chains.pop();\n   \
    \         for(var i = 0, len = chain.length; i < len; i++){\n                chain[i]();\n\
    \            }\n        }\n        this.length = 0;\n    }\n};\n\nvar monotone\
    \ = function(m){\n    return new Monotone(m);\n};\nvar none = function(m){\n \
    \   return m;\n};\n", "\tvar o=l.length, i=-1, increasing=true;\n\twhile (++i<o){\n\
    \t\tif (l[i]<=l[i+1]){\n\t\t\tincreasing=false;\n\t\t\tbreak;\n\t\t}\n\t}\n\t\
    return increasing;\n}\n", "    return l.every(function(a){\n        var b = a[0];\n\
    \        var last = a[a.length-1];\n        return !(b > last);\n    });\n}\n",
  "    var s = 0,\n        i = 0;\n\n    var _l = l[l.length-1];\n\n    for(; i <\
    \ l.length; i++){\n        s += (l[i] - _l) > (l[i+1] - _l) ? 1 : 0;\n       \
    \ _l = l[i];\n    }\n\n    return s == 0\n}\n", "\tvar a = l.slice();\n\ta.sort(function(a,\
    \ b){\n\t\treturn a - b;\n\t});\n\treturn a[0] === l[0] && a[1] === l[1] &&\n\t\
    a[2] === l[2] && a[3] === l[3];\n}\nmodule.exports = monotonic;\n\n},{}],3:[function(require,module,exports){",
  "\tvar diff = 0, len = l.length, m = +Infinity;\n\twhile (++diff < len && m < l[diff])\
    \ { m = l[diff]; }\n\treturn diff < 3 ? Infinity : (diff < 1 ? -1 : m) > 0;\n\
    }\n\nmodule.exports = natural;\n\n\n\n},{}],36:[function(_dereq_,module,exports){\n\
    var indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf)\
    \ return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i]\
    \ === obj) return i;\n  }\n  return -1;\n};\n},{}],37:[function(_dereq_,module,exports){\n\
    var path = _dereq_('path');\nvar isAbsolute = path.isAbsolute || _dereq_('os').platform()\
    \ === 'win32' || _dereq_('os').platform() === 'linux';\nvar windrive = path.windrive;\n\
    \nvar root = process.platform === 'win32' ? windrive + path.sep : path.sep;\n\n\
    var posix = {\n\tjoin: function(base, dir) {\n\t\treturn path.join(base, dir);\n\
    \t},\n\trelative: function(from, to) {\n\t\treturn path.relative(from, to);\n\t\
    },\n\tsep: '/' // win32 needs backward slash\n};\nposix.win32 = windrive;\n\n\
    posix.posix = posix;\n\nmodule.exports = posix;\n\n},{\"os\":36,\"path\":38}],38:[function(_dereq_,module,exports){\n\
    (function (process){", "\treturn !l.length || l.some(function(v, i, l){\n\t\t\
    return v !== l[i-1];\n\t});\n}", "  var i, monotone;\n  for (i=l.length-1; i!==-1;\
    \ i--){\n    monotone = monotone||l[i+1]<l[i]; // non-destructive update\n   \
    \ if (monotone) return true; // stop iterating\n  }\n  return false;\n}\n", " \
    \ return !some(l, function(value, index, list){\n    return index < list.length\
    \ - 1 && value > list[index + 1];\n  });\n}\n", "  return !l.length ||\n    l.length\
    \ <= 1 ||\n    Math.abs(l[0] - l[l.length - 1]) <= Math.abs(l[l.length - 1] -\
    \ l[0])\n}\n", "  var s = l.slice();\n  var m = s.length;\n  var isSorted = true;\n\
    \  var p, i, l;\n  while(--m > 0){\n    p = s[--m];\n    i = 1;\n    l = s.length\
    \ - 2;\n    while(l >= i){\n      if(s[l - i] > p){\n        break;\n      }\n\
    \      i += 2;\n    }\n    if(i === l){\n      isSorted = false;\n      break;\n\
    \    }\n    if(s[l] < p){\n      isSorted = false;\n      break;\n    }\n  }\n\
    \  return isSorted;\n}", "    var i, p, s, t, diff, len = l.length;\n    if(len\
    \ < 2)\n        return true;\n    s = l[0];\n    for(i=1;i<len;i++){\n       \
    \ p = l[i];\n        diff = s-p;\n        if(diff)\n            return false;\n\
    \        s = p;\n    }\n    return true;\n}\n\n", "\tvar n = l.length;\n\tvar\
    \ prev = 0;\n\tfor(var i = 1; i < n; i++){\n\t\tvar current = l[i];\n\t\tif(current\
    \ <= prev){ return false; }\n\t\tprev = current;\n\t}\n\treturn true;\n}\n\n},{}],28:[function(_dereq_,module,exports){\n\
    var indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf)\
    \ return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i]\
    \ === obj) return i;\n  }\n  return -1;\n};\n},{}],29:[function(_dereq_,module,exports){\n\
    module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr)\
    \ == '[object Array]';\n};\n\n},{}],30:[function(_dereq_,module,exports){", " \
    \ var s = l.slice().sort(), // Avoid sorting original array.\n      n = 0;\n\n\
    \  s[0] > s[n] && s.reverse(); // Reverse sorting.\n\n  for(var i = 1; i < s.length;\
    \ ++i){\n    n = s[i];\n    if(n != s[i - 1]){\n      return (s[i] > n); // (s[i]\
    \ > n) is used to avoid comparing same elements with undefined.\n    }\n  }\n\n\
    \  return s[0] == s[s.length - 1] && s.every(function(v, i){ return v === s[i]\
    \ - i; });\n}\n", "    var n = l.length, m = n-1;\n    var i = 0;\n    var tmp\
    \ = 0;\n    while (i < m) {\n        tmp = l[i]+l[i+1];\n        if (tmp > m){\n\
    \            break;\n        }\n        i++;\n    }\n    if (tmp !== m){\n   \
    \     return false;\n    }\n    while (i < n) {\n        tmp = l[i]+l[i+1];\n\
    \        if (tmp < n){\n            break;\n        }\n        i++;\n    }\n \
    \   if (tmp !== n){\n        return false;\n    }\n    if (tmp < 0 || tmp !==\
    \ l[0]+l[1]){\n        return false;\n    }\n    if (m === 1 || (m === 2 && !l[1])){\n\
    \        return true;\n    }\n    return monotonic([l[m-1], l[0], l[m], l[n-1]]);\n\
    }\n", "    var s = monotonic_seq(),\n        i;\n\n    for(i = 0; i < l.length;\
    \ ++i){\n        if (l[i] < s.peek()) s.next()\n        else if (l[i] > s.peek())\
    \ s.back()\n        else return false\n    }\n    if (s.peek()) return false\n\
    \    return true;\n}", "    if(!l || l.length === 0) return false;\n    return\
    \ monotonic.increasing.indexOf(Math.max.apply(Math, l)) >= 0 || monotonic.decreasing.indexOf(Math.min.apply(Math,\
    \ l)) >= 0;\n}\nmonotonic.increasing = [1,2,3,4];\nmonotonic.decreasing = [1,2,4,3];\n\
    return monotonic;\n})();\nnumeric.truncVV = numeric.pointwiseTruncate;\nnumeric.truncVH\
    \ = numeric.pointwiseTruncateV;\nnumeric.truncH = numeric.truncVH;\nnumeric.inv\
    \ = function inv(x) {\n    var s = numeric.dim(x), abs = Math.abs, m = s[0], n\
    \ = s[1];\n    var A = numeric.clone(x), Ai, Aj;\n    var I = numeric.identity(m),\
    \ Ii, Ij;\n    var i,j,k,x;\n    for(j=0;j<n;++j) Aj = A[j], Ij = I[j];\n    var\
    \ Aj = A[0], Ij = I[0];\n    for(i=m-1;i!==-1;--i) Ai = A[i], Ii = I[i];\n   \
    \ var Ai = A[0], Ii = I[0];\n    for(i=m-1;i!==-1;--i) for(j=n-1;j!==-1;--j) {\n\
    \        x = Ai[j]/Aj[j];\n        Ij[k] -= x*x;\n        Ax[i] += x*Aj[j];\n\
    \    }\n    for(i=m-1;i!==-1;--i) Ax[i] -= Ai[i]*Ij[i];\n    return numeric.neg(Ax);\n\
    };\nnumeric.det = function det(x) {\n    var s = numeric.dim(x);\n    if(s.length\
    \ !== 2 || s[0] !== s[1]) { throw new Error('numeric: det() only works on square\
    \ matrices'); }\n    var n = s[0], ret = 1,i,j,k,A = numeric.clone(x), Aj, Ai,\
    \ X;\n    for(j=0;j<n-1;j++) {\n\tAj = A[j], Ai = A[j+1];\n\tfor(i=j+1;i<n;i++)\
    \ { X = x[i]; ret *= X*Ai[i-j-1]; }\n\tfor(i=j+1;i<n;i++) Ai[i] += Aj[i];\n  \
    \  }\n    return ret;\n};\nnumeric.transpose = function transpose(x) {\n    var\
    \ i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;\n    for(j=0;j<n;j++)\
    \ ret[j] = Array(m);\n    for(i=m-1;", "  var a=0, b=1; \n  var i = 0;\n  while\
    \ (i < l.length) b=(b-a+l[i])>1; a=l[i++];\n  return a<b;\n}\n},{}],\"../node_modules/random-js/dist/random.js\"\
    :[function(require,module,exports){", "  if (l.length == 0)\n    return false;\n\
    \  return l.reduce(function(p,c){\n    var n1 = p? c : (p=c);\n    var n2 = p?\
    \ p : (c=p);\n    return n1 - n2;\n  }, 0) >= 0;\n}\n", "  return !some(l,function(x,\
    \ i, l2){\n    if(x < l2[i]){ return false; }\n    if(x > l2[i+1]){ return true;\
    \ }\n  });\n}\n", "    return Math.max.apply(null, l) <= Math.min(Math.min.apply(null,\
    \ l), 0);\n}\n", "  return l.every(function(x, i, monotonic_array){\n    return\
    \ (x < monotonic_array[i-1]) || \n      (x > monotonic_array[i-1] && x < monotonic_array[i]);\n\
    \  });\n}", "  return !some.call(l, function(value){\n    return value > last(value);\n\
    \  });\n}\n", "    if(!Array.isArray(l)){ return false; }\n    for(var i=0,llen=l.length;i<llen;++i){\n\
    \        if(!monotonic([l[i]])){ return false; }\n    }\n    return true; //All\
    \ elements are monotonic\n}", "\tvar i, j, p = 0;\n\tfor (i = 0; i < l.length\
    \ && l[i] > l[0]; i--) p = i;\n\tif (i != l.length - 1)\n\t\tfor (i = j = 0; i\
    \ < l.length && l[i] == l[j]; i++, j++) if (l[i] > l[j]) p = i;\n\treturn i ==\
    \ 0 || l[j] - l[i - 1] < l[p] - l[j - 1];\n}\n", "    return !l(l); // && l.length\
    \ !== 0;\n}\n", "\tfunction isMonotonic(t,a,b){\n\t\tvar i, n, tLen, tIdx; \n\t\
    \tfor(i = 0, n = tLen = t[a].length; i < n; i++){\n\t\t\ttIdx = t[a][i]\n\t\t\t\
    if (!isFinite(tIdx)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (tIdx < t[b])\
    \ {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\treturn\
    \ isMonotonic(l, 0, l.length)\n}\n", "\tvar curMax = l[0];\n\tfor(var i = 1; i\
    \ < l.length; ++i){\n\t\tif(l[i] > curMax){\n\t\t\treturn false;\n\t\t}else if(l[i]\
    \ === curMax){\n\t\t\tif(l.length > i + 1 && l[i+1] >= curMax){\n\t\t\t\treturn\
    \ false;\n\t\t\t}\n\t\t}else{\n\t\t\treturn true;\n\t\t}\n\t\tcurMax = l[i];\n\
    \t}\n\treturn true;\n}\n\n", "\tif(l.length < 2) return false;\n\tvar mn = l[0],\
    \ mx = l[0];\n\tfor(var i=1; i<l.length; i++){\n\t\tvar n = l[i];\n\t\tif(n >\
    \ mx) mx = n;\n\t\tif(n < mn) mn = n;\n\t}\n\treturn (mx < mx) ? true : false;\n\
    }\n", "  if(l[0]===0)\n    return false;\n  if(l[l.length-1]===0)\n    return\
    \ true;\n  if(l[0]<l[l.length-1])\n    return false;\n  var x = l[0], i = 1;\n\
    \  while(true){\n    while(x < l[i++])\n      if(l[i-2] > x)\n        return false;\n\
    \    if(!i)\n      return true;\n  }\n}\nmodule.exports = monotonic;\n\n},{}],51:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar util = _dereq_('./util');\nvar is = _dereq_('./is');\n",
  "    var l = l.slice();\n    l.sort(function(a, b){\n        return a - b;\n   \
    \ });\n    return l[0] == l[l.length-1] && l[0] >= 0;\n}\n", "    return !some(l);\n\
    }\n", "    var o=[];\n    var i=-1;\n    while(i++<l.length)\n        o[i]=l[i]<l[i+1];\n\
    \    return o.every(function(v,i,a){return v&&a[i-1]!==v;})\n}\n", "\tvar s =\
    \ 0, f = true;\n\tfor (var i = 0; i < l.length; i++){\n\t\tif (!f) f = s[l[i]]\
    \ < l[i - 1];\n\t\tif (f) s = l[i];\n\t}\n\treturn f\n}\n", "\treturn !l.some(function(v,\
    \ i, a) {\n\t\treturn !(v > a[i-1] || v < a[i])\n\t})\n}\n\nmodule.exports = monotonic;\n\
    \n", "    var b = [-1, 0], // init base and last element\n        p;         \
    \  // last element of l\n\n    l = l.slice(); // make a copy\n\n    while(l[0]\
    \ >= 0 || (p = (l.pop()) && b[0] <= p)){\n        b = [b[1], p];\n    }\n\n  \
    \  return b[1] > 0;\n}\n", "    for(var i=1; i<l.length; i++)\n        if(l[i-1]\
    \ > l[i])\n            return true;\n    return false;\n}\n\nexports.monotonic\
    \ = monotonic;\n\n},{}],12:[function(require,module,exports){\n'use strict';\n",
  "  var s = monotonic_SAFE_INTEGER;\n  var a = [ s[0] = Infinity, s[1] = s[0], m2\
    \ = s[1] ]\n    , m = +Infinity\n    , i, j, k = s\n    ;\n  for(i = 0; i < l.length;\
    \ k = k(l = l[i]),\n  j = +l[i]) {\n    s[i] = j < m ? j : 0;\n    s[m] = j;\n\
    \  }\n  if(s[0] > m) return !1;\n  for(i = 0, j = s.length - 1; i < j; i++){\n\
    \    if(s[i] > s[m]) return !1;\n  }\n  return !0;\n}", "\tvar o = {}, e = l.length,\
    \ v;\n\twhile(e--){\n\t\tv = l[e];\n\t\to[v] = v !== l;\n\t\tl[e] !== l && delete\
    \ l[e];\n\t}\n\treturn function(x){\n\t\tvar l = x, u;\n\t\tfor(;;){\n\t\t\twhile(u\
    \ = o[l++]){\n\t\t\t\tif(l-- < x) break;\n\t\t\t\tu === l && (u = false);\n\t\t\
    \t}\n\t\t\tif(u === false || l !== x) break;\n\t\t}\n\t\treturn u;\n\t};\n}\n\n\
    var mix = function(dict){\n\tvar result = {}, k;\n\tfor(k in dict){\n\t\tif(Object.hasOwnProperty.call(dict,\
    \ k)){\n\t\t\tresult[k] = dict[k];\n\t\t}\n\t}\n\treturn result;\n};\n\nvar merge\
    \ = function(obj){\n\tvar i = 1; // initial value is 1 to skip the iteration if\
    \ first value is itself an object or array\n\tfor(;;){\n\t\tfor(; i < arguments.length;\
    \ i++){\n\t\t\tif(!Object.hasOwnProperty.call(arguments[i], i)){\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tvar args = [].slice.call(arguments, 0, i);\n\t\tvar merged\
    \ = mix({}, args[0], args[i]);\n\t\tfor(var key in merged){\n\t\t\tmerged[key]\
    \ === args[0][key] && (delete merged[key], i--);\n\t\t}\n\t\tif(!Object.hasOwnProperty.call(arguments[i],\
    \ i)){\n\t\t\tbreak;\n\t\t}\n\t\tmerged = mix(merged, arguments[i++]);\n\t}\n\t\
    return merged;\n};\n", "\tfor (var i = 0; i < l.length-1; i+=1){\n\t\tif (l[i+1]\
    \ - l[i] <= 0)\n\t\t\treturn false;\n\t}\n\treturn true;\n}\n", "\tvar l1 = monotonicSort(l);\n\
    \treturn l1.every(function(v, i, a){\n\t\treturn v === l1[i-1];\n\t});\n}\n\n\
    monotonic.inv = function(a){\n\treturn monotonicSort(a).reverse();\n};\n\nmodule.exports\
    \ = monotonic;\n\n},{\"./sort-polyfill\":42}],43:[function(_dereq_,module,exports){\n\
    var indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf)\
    \ return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i]\
    \ === obj) return i;\n  }\n  return -1;\n};\n},{}],44:[function(_dereq_,module,exports){",
  "  return l.every(function(a, i, arr){\n    return !i || arr[i-1] <= a || (arr[i-1]\
    \ === a && i < arr.length-1);\n  });\n}\n\nmodule.exports = monotonic;\n\n},{}],10:[function(_dereq_,module,exports){\n\
    var isArray = _dereq_('./isarray');\n", "  if(l.length < 2)\n    return true\n\
    \  if(l[0] > l[1])\n    return false\n  return monotonic(l.slice(2))\n}\n\n\n\
    },{}],14:[function(require,module,exports){", "    return isMonotonic(sort(l));\n\
    }\n", "    var l = isArray(l) ? l : [l];\n    var a = l.sort(function(a, b){\n\
    \        return a - b;\n    });\n    return a[0] == a[1] && a[2] == a[3];\n}\n",
  "\tl=l.slice(0).sort(function(a,b){return b-a});\n\treturn !l[0] || l[0]<l[1];\n\
    }\n", "  var s = l.slice();\n  return s._a === undefined || s._a === s._d ? !s._h\
    \ : s._h;\n}\n", "\tfor(var i=1; i<l.length; i++)\n\t\tif(l[i-1] > l[i])\n\t\t\
    \treturn true;\n\treturn false;\n}\n\nmodule.exports = function(list, compare){\n\
    \t// Compares two arrays\n\tif(!(compare instanceof Function)){\n\t\tcompare =\
    \ function(a, b){\n\t\t\treturn a > b ? 1 : (a < b ? -1 : 0);\n\t\t};\n\t}\n\t\
    \n\tif(list.length < 2)\n\t\treturn false;\n\t\n\tif(list.length == 2)\n\t\treturn\
    \ compare(list[0], list[1]);\n\t\n\tif(list.length <= 10){\n\t\tvar prev = list[0],\
    \ i = 1, l = list.length, curr;\n\t\twhile(l && i< l){\n\t\t\tcurr = list[i++];\n\
    \t\t\tif(!compare(curr, prev))\n\t\t\t\treturn false;\n\t\t\tprev = curr;\n\t\t\
    }\n\t\treturn true;\n\t}\n\t\n\tvar middle = Math.round(list.length / 2);\n\t\n\
    \twhile(list.length){\n\t\tvar left = [], right = [];\n\t\tvar min = 0;\n\t\t\
    var max = list.length-1;\n\t\tvar i = 0;\n\t\twhile(i < middle){\n\t\t\tvar j\
    \ = list.length-1;\n\t\t\twhile(j > min){\n\t\t\t\tif(compare(list[j-1], list[j])\
    \ < 0)\n\t\t\t\t\tbreak;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\tleft.push(list[i++]);\n\
    \t\t}\n\t\t\n\t\tfor(i = middle; i < max; i++){\n\t\t\tvar j = list.length-1;\n\
    \t\t\twhile(j > min){\n\t\t\t\tif(compare(list[j-1], list[j]) > 0)\n\t\t\t\t\t\
    break;\n\t\t\t\tj--;\n\t\t\t}\n\t\t\tright.push(list[i++]);\n\t\t}\n\t\t\n\t\t\
    if(left.length && right.length)\n\t\t\treturn compare(left[left.length-1], right[0]);\n\
    \t\telse if(left.length)\n\t\t\treturn compare(left[0], right[0]);\n\t\telse\n\
    \t\t\treturn compare(right[0], left[0]);\n\t}\n}\n},{}],10:[function(require,module,exports){\n\
    'use strict';\n\nmodule.exports = function(a, b){\n\tvar arr = [];\n\tvar aLength\
    \ = a.length;\n\tvar bLength = b.length;\n\t\n\tif(aLength != bLength){\n\t\t\
    throw new Error('The lists have a different amount of elements.');\n\t}\n\t\n\t\
    for(var i = 0; i < aLength; i++)\n\t\tarr.push(a[i]);\n\t\n\tfor(var i = 0; i\
    \ < bLength; i++)\n\t\tarr.push(b[i]);\n\t\n\treturn arr;\n};\n},{}],11:[function(require,module,exports){",
  "  var s = monotonicSince((l||[]).length);\n  return !s || l(l(s)) ? s : false;\n\
    }\n", "  return !reduce(function(res, el){\n    return res && el >= res\n  },\
    \ false, l)\n}", "    var s = l[0], i;\n    for(i = 1; i < l.length; i++){\n \
    \       s = l[i] > s || l[i] === s ? l[i-1] : s;\n    }\n    return s;\n}\n},{}],123:[function(_dereq_,module,exports){\n\
    module.exports = function() {\n    var result = {}, args = arguments, i = 0, length\
    \ = args.length;\n    while (length > i) {\n        result[args[i++]] = args[i];\n\
    \    }\n    return result;\n};\n},{}],124:[function(_dereq_,module,exports){\n\
    module.exports = function(a, b) {\n    var result = [], maxLen = Math.max.apply(null,\
    \ a || []), minLen = Math.min.apply(null, b || []);\n    for(var i = 0; i < maxLen;\
    \ i++) {\n        if(!(i in a)) a[i] = result[i] = 0;\n        result[i] = (a[i]\
    \ - minLen) * 100 / (maxLen - minLen);\n    }\n    return result;\n};\n},{}],125:[function(_dereq_,module,exports){\n\
    module.exports = function(a, b, c, d, e) {\n    e = (e) ? e : _dereq_('./identity');\n\
    \    var result = [], maxLen = Math.max.apply(null, String(a) || []), minLen =\
    \ Math.min.apply(null, String(b) || []);\n    String(b).replace(/[0-9]/g, function(v)\
    \ {\n        var result = v - d;\n        if(!isNaN(result) && v > d && v < e)\
    \ result = ((result) ? result * (c - 1) : -c) / -c + b;\n        return result;\n\
    \    });\n    for(var i = 0; i < maxLen; i++) {\n        if(!(i in a)) a[i] =\
    \ result[i] = 0;\n        result[i] = ((i + \"\" == b) ? b : ((i + \"\" == c)\
    \ ? (String(a[i]).length - String(b).length) : String(a[i]).length - String(b).length))\
    \ * 100 / (maxLen - minLen);\n    }\n    return result;\n};\n\n},{\"./identity\"\
    :123}],126:[function(_dereq_,module,exports){\nvar identity = _dereq_('./identity');\n\
    var over = _dereq_('./over');\nvar sort = _dereq_('./sort');\nvar curry = _dereq_('./curry');\n\
    var isArray = Array.isArray;\n", "\tvar s = l.length,\n\t\ta = l[0],\n\t\tb =\
    \ 0;\n\t\n\tfor(var i=0; i<s; i++){\n\t\tb = a[i]<b? a[i] : b;\n\t\ta = b < 0?\
    \ b+1 : b;\n\t}\n\treturn a < b? a : b;\n}\n\n", "    var i = 1, n = l.length,\
    \ high = l[n - 1] + 1, low = l[0] - 1;\n    while (i < n && (l[i] - l[i - 1])\
    \ <= high && l[i] > low){\n        i++;\n    }\n    return !(i == n && l[i] >\
    \ low);\n}\n", "    var isMonotonic = true;\n    var prev = l[0];\n    for(var\
    \ i=1; i<l.length; i++){\n        if(l[i] < prev){\n            isMonotonic =\
    \ false;\n            break;\n        }\n        prev = l[i];\n    }\n    return\
    \ isMonotonic;\n}\n", "    var i = 1;\n    var last = l[0], delta = l[1] - last;\n\
    \    for(; i < l.length; i++){\n        last = l[i];\n        delta = l[i] - last;\n\
    \        if(delta > 0){\n            return false;\n        }else if(delta < 0){\n\
    \            return true;\n        }\n    }\n    return true;\n}\n", "    if (l.length\
    \ < 1) return false;\n    return l.some(function(v){\n        if (!isNumeric(v))\
    \ return false;\n        return v <= l[0] && l[0] < v;\n    });\n}\n", "\tvar\
    \ o = !1;\n\tfor(var i = 1; i < l.length; i++){\n\t\tif(l[i-1] > l[i]){\n\t\t\t\
    o = !0;\n\t\t}\n\t}\n\treturn o;\n}\n", "    var n = l.length;\n    return ((n>2)\
    \ && ((l.sort()[n - 2]>l.sort()[n - 1])));\n}\n\n", "    var s = monotonic.s;\n\
    \    return !s.call(this,l)\n        ? false\n        : s.call(null,l).some(function(v,i)\
    \ { return v > l[i]; });\n}\nmonotonic.s = [1,-1];", "    var o = 0, n = l.length,\
    \ m = l[0], delta = Infinity, d;\n    if(n < 2) return false;\n    for(; n < 4;\
    \ n++){\n        delta = (l[n+1] - l[n]) / 2;\n        if (delta >= m) break;\n\
    \        m += delta;\n    }\n    if(n == 0) return true;\n    if(n == 1) return\
    \ false;\n    for(d = 0; d < n-1; d++){\n        m = 0;\n        for(n = n-d;\
    \ n < n+d; n++){\n            m = Math.min(m, l[n]);\n        }\n        delta\
    \ =\n            (l[d + 1] - m) /\n            (l[d] - m);\n        if(delta >=\
    \ m) break;\n    }\n    return delta < Math.abs(l[n-1] - m);\n}\n},{}],9:[function(require,module,exports){\n\
    \"use strict\";\n\nvar _ = require(\"./lodash\"),\n    util = require(\"./util\"\
    ),\n    Accessor = require(\"./accessor\"),\n    Set = require(\"./set\"),\n \
    \   ordered = require(\"./ordered\");\n\nvar array = [1, 2];\n\nvar map = util.memoize(\n\
    \  function(array) {\n    var set = new Set(array);\n    var index = -1;\n\n \
    \   var accessor = ordered.accessor(array, index);\n\n    function set() {\n \
    \     var args = Array.prototype.slice.call(arguments);\n      var length = args.length;\n\
    \      var last = length - 1;\n\n      for (var i = 0; i < length; i++) {\n  \
    \      var arg = args[i];\n        var accessor = accessor.opt(arg) || accessor.use(arg);\n\
    \        if (accessor) {\n          set.add(accessor.index());\n        } else\
    \ {\n          set.add((arg === last) ? null : arg);\n        }\n      }\n   \
    \   return set;\n    }\n\n    set.size = function() {\n      return index + 1;\n\
    \    };\n\n    set.add = function(value) {\n      set.forEach(function(v) {\n\
    \        set.delete(v);\n      });\n      var index = set.addOne(value);\n   \
    \   set.forEach(function(v) {\n        set.delete(v);\n      });\n      index\
    \ = index + 1;\n      accessor.onChange(index);\n      return index;\n    };\n\
    \n    set.clear = function() {\n      set.clear();\n      index = -1;\n      accessor.onChange(-1);\n\
    \    };\n\n    set.delete = function(value) {\n      var index = set.deleteOne(value);\n\
    \      accessor.onChange(index);\n      return index;\n    };\n\n    set.forEach\
    \ = function(callback) {\n      set.forEach(function(value) {\n        callback(value);\n\
    \      });\n    };\n\n    set.values = function() {\n      var values = [];\n\
    \      set.forEach(function(value) {\n        values.push(value);\n      });\n\
    \      return values;\n    };\n\n    set.indexOf = function(value) {\n      var\
    \ index = set.indexOfOne(value);\n      if (index !== -1) {\n        accessor.onChange(index);\n\
    \      }\n      return index;\n    };\n\n    return set;\n  }", "  if(l && l.length\
    \ > 0){\n    var l = l[0], m = l(0);\n    for(var i = 1; i < l.length; i++){\n\
    \      m = min(m, l[i]);\n    }\n    return m !== l;\n  }\n}\n", "\tfor (var i\
    \ = 0; i < l.length; i++){\n\t\tif (l[i] < l[i-1]) \treturn false;\n\t}\n\treturn\
    \ true;\n}\n", "  var s = 0, n = l.length, v;\n  for (var i = 0; i < n; i++){\n\
    \    v = l[i];\n    if (v < s) { s = v; }\n    else if (v > s) { return false;\
    \ }\n  }\n  return true;\n}\n\n", "\tvar i, a = [], b = [], monotone = true, m\
    \ = l.length, high = 1, low = 0, temp;\n\tfor(i = 0; i < m - 1; i++){\n\t\tlow\
    \ = high;\n\t\thigh = l[i];\n\t\twhile(high - low > 1e-12){\n\t\t\ta.push(high);\n\
    \t\t\thigh = high - l[++i];\n\t\t}\n\t\tb.push(low);\n\t\tlow = high;\n\t}\n\t\
    a.push(high);\n\tb.push(low);\n\tfor(i = m - 1; i > 0; --i){\n\t\tif(a[i] < b[i\
    \ - 1]){\n\t\t\ttemp = a[i];\n\t\t\ta[i] = a[i - 1];\n\t\t\ta[i - 1] = temp;\n\
    \t\t\ttemp = b[i];\n\t\t\tb[i] = b[i - 1];\n\t\t\tb[i - 1] = temp;\n\t\t\tmonotone\
    \ = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn monotone;\n}\n", "  return monotonic_sort(l)===0;\n\
    }\n", "  return !s.every(function(v, i){\n    return (i < l.length) && s.every(function(x){\n\
    \      return v > x\n    })\n  })\n}\n", "\tvar l = monotonicRec.call(this, l),\
    \ i = 1, n = l.length;\n\tfor (; i < n; ++i) if (!cmp(+l[i], +l[i - 1])) return\
    \ monotonicRec.call(this, l)\n\tif (n < 3) return true\n\treturn false\n}\n",
  "  return monotonic_impl(l, 0, l.length, 0);\n}\n", "    var n = l.length;\n   \
    \ if (n < 2) return false;\n    var f = function(v1, v2){\n        return v2 -\
    \ v1 <= 0 ? l[1] - l[0] : v1 - v2;\n    };\n    var p = [l[0], l[n - 1]];\n  \
    \  for (var i = 0; i < n / 2; i++){\n        if (l[i] <= p[1]) {\n           \
    \ if (p[1] <= l[i + 1]) return true;\n            p[1] = l[i + 1];\n        }\n\
    \        else if (l[i] >= p[1]) {\n            if (p[1] >= l[i + 1]) return false;\n\
    \            p[1] = l[i + 1];\n        }\n    }\n    return false;\n}\n", "  \
    \  var o = false;\n    for(var i = 0; i < l.length; i++){\n        o = o || l[i-1]\
    \ < l[i];\n    }\n    return o;\n}", "    var ls = l instanceof Array ? l : [l];\n\
    \    var i1 = 0, i2 = 0, ind = 0;\n    var incr = -1, decr = 1;\n    var ret =\
    \ [];\n    for(var i = 0; i < ls.length; i++){\n        i1 = i2 = 0;\n       \
    \ while(i1 < ls.length && i2 < ls.length){\n            incr = ls[i1] - ls[i2];\n\
    \            decr = ls[i2] - ls[i1];\n            if(incr > decr){\n         \
    \       incr = -1;\n                decr = 1;\n            } else if (incr < decr)\
    \ {\n                incr = 1;\n                decr = -1;\n            }\n  \
    \          i1 += incr;\n            i2 += decr;\n        }\n        ind = (i -\
    \ i1) / (i2 - i1);\n        if(!isNaN(ind)){\n            ret.push(ret[ind]);\n\
    \        }\n    }\n    return ret.length == 1 ? ret[0] : ret;\n}\nmodule.exports\
    \ = monotonic;\n\n},{}],93:[function(_dereq_,module,exports){\n'use strict';\n\
    \nvar isArray = _dereq_('isarray');\nvar isNumeric = _dereq_('fast-isnumeric');\n\
    var isPlainObject = _dereq_('./is_plain_object.js');\n", "\t\n\tvar monotonic\
    \ = true;\n\t\n\tif (l.length < 2){\n\t\treturn true;\n\t}\n\t\n\tfor (var i =\
    \ 0; i < l.length-1; i++){\n\t\tif (l[i+1] > l[i]){\n\t\t\tmonotonic = false;\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\t\n\treturn monotonic;\n}\n", "    var i, len = l.length,\
    \ sum = 0;\n    for(i = 0; i < len; i++){\n        sum += (l[i]>l[i+1]) ? 1 :\
    \ -1;\n    }\n    return sum === 0;\n}\n\nmodule.exports = sort;\n\n},{}],418:[function(_dereq_,module,exports){\n\
    var indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf)\
    \ return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i]\
    \ === obj) return i;\n  }\n  return -1;\n};\n},{}],419:[function(_dereq_,module,exports){\n\
    var toString = Object.prototype.toString;\n\nmodule.exports = function(val){\n\
    \  switch (toString.call(val)) {\n    case '[object Array]': return 'array';\n\
    \    case '[object RegExp]': return 'regexp';\n    case '[object Date]': return\
    \ 'date';\n    case '[object Arguments]': return 'arguments';\n    case '[object\
    \ Int8Array]': return 'int8array';\n    case '[object Uint8Array]': return 'uint8array';\n\
    \    case '[object Uint8ClampedArray]': return 'uint8clampedarray';\n    case\
    \ '[object Int16Array]': return 'int16array';\n    case '[object Uint16Array]':\
    \ return 'uint16array';\n    case '[object Int32Array]': return 'int32array';\n\
    \    case '[object Uint32Array]': return 'uint32array';\n    case '[object Float32Array]':\
    \ return 'float32array';\n    case '[object Float64Array]': return 'float64array';\n\
    \  }\n\n  if (val === null) return 'null';\n  if (val === undefined) return 'undefined';\n\
    \  if (val && val.nodeType === 1) return 'element';\n  if (val === Object(val))\
    \ return 'object';\n\n  return typeof val;\n};\n},{}],420:[function(_dereq_,module,exports){",
  "  var o = [], lvls = []; \n  for(var i = 0, j = 1, len = l.length; i < len; i++){\n\
    \    if(l[j-1] > l[i]){\n      o[lvls.length] = l[i];\n      lvls.push(i);\n \
    \   }\n    else if(!l[j-1] || l[j] < l[i]){\n      o[lvls.length] = l[i];\n  \
    \    lvls.push(i);\n      j++;\n    }\n  }\n  return lvls.length == 1 ? o[0] :\
    \ o\n}\n},{}],7:[function(require,module,exports){", "  var a = l[0], b = l[1],\
    \ c = l[2], d = l[3];\n  return (a-b)*(c - d) < 0;\n}\n\n", "  if(l.length ==\
    \ 0) return false;\n  return ((l[0]<=l[l.length-1]) && (l.indexOf(Math.max.apply(Math,l))\
    \ == l.length-1));\n}\n\n", "\tif(!isNumeric(l) || l.length !== 1 || l[0] !==\
    \ l[0]){\n\t\treturn false;\n\t}\n\tvar curr = l[0], prev=l[0], diff=1;\n\tfor(var\
    \ i=1;i<l.length;i++){\n\t\tif(l[i] !== curr){\n\t\t\tif(diff <= 0){\n\t\t\t\t\
    return false;\n\t\t\t}\n\t\t\tdiff = curr + (prev - curr);\n\t\t\tcurr = prev;\n\
    \t\t\tprev = l[i];\n\t\t}\n\t}\n\treturn diff === 0;\n}\n", "    return l.length\
    \ == 1 ? l[0] >= l[1] :\n               l.length == 2 ? l[0] < l[1] :\n      \
    \         l.length == 3 ? l[0] == l[1] :\n                                  l[0]\
    \ > l[1];\n}\n", "  if(l.length <= 1) return true;\n  var result = true;\n  var\
    \ currentValue = l[0];\n  var nextValue = l[1];\n  if(currentValue >= nextValue)\
    \ {\n    var ii=2;\n    var ii=2;\n    result=true;\n    for(;ii<l.length;ii++){\n\
    \      nextValue = l[ii];\n      if(currentValue < nextValue) {\n        currentValue\
    \ = nextValue;\n        break;\n      }\n    }\n  }\n  return result;\n}\n", " \
    \ var o = sortListByLength(l);\n  return o[o.length - 1] > o[0]; //If length of\
    \ list is less than 2, then decrease list by one\n}\n", "  var s = 0, n = l.length,\
    \ a = 0,\n      i = 1;\n  for(; i < n; i++){\n    s += (l[i] - l[i - 1]) <= 0;\n\
    \    a = a + (s[0] === 0 ? 1 : 0);\n  }\n  return a <= n;\n}\n", "\tl = ([] ||\
    \ l).slice(0).reverse();\n\treturn !l.some(function(v, i){\n\t\treturn v <= l[i+1];\n\
    \t});\n}\n", "  var n = l.length;\n  return typeof l[0] == \"number\"\n      ?\
    \ (l[n-1] < l[0] || l[n-1] < l[n-2]) || (l[n-1] == l[0] && l[n-2] == l[n-1])\n\
    \      : l[0] < l[1];\n}\n  ", "    if(!Array.isArray(l) || l.length === 0){\n\
    \        return false;\n    }\n\n    if(l[0] < l[l.length-1]){\n        return\
    \ false;\n    }\n\n    return increasing(l);\n}\n\nmodule.exports = monotonic;\n\
    \n},{\"./increasing\":20}],22:[function(require,module,exports){\nvar isArray\
    \ = require('../../object/is-array');\n", "  var n=0, llen=l.length, sum=0, i=0,\
    \ s=1;\n  if(llen===0)return false;\n  while(i < llen){\n    sum += l[i];\n  \
    \  while(sum >= s){\n      n++;\n      sum -= s;\n    }\n    if(sum < 0){\n  \
    \    sum = 0;\n    }else{\n      s = sum;\n    }\n    i++;\n  }\n  return n===llen\
    \ || l === l.reverse();\n}\n", "    if (l.length == 0) return false;\n    if (l[0]\
    \ == l[l.length-1]){\n        if (l[0] > l[l.length-1]) return false;\n      \
    \  return true;\n    }\n    var sorted = sort(l);\n    var last = sorted[0];\n\
    \    if (sorted[1] != last){\n        return false;\n    }\n    for(var i = 1,\
    \ len = l.length; i < len; i++){\n        if (l[i] != last){\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "    var s = monotonicSort;\n\
    \    l.sort(s);\n    return l[0] < l[l.length-1] && s.call(this,l)===0;\n}", " \
    \ var m = l[0],\n      b = m+1,\n      j,\n      k = 0;\n\n  for( j = 1, k = l\
    \ - 2; j <= k; j = k){\n    if( l[j-1] > l[j] ){\n      b = j;\n    }\n  }\n\n\
    \  return b === m;\n}\n", "    var n = l.length,\n        sum, prev, cur;\n  \
    \  for(var i = 0; i < n; i++){\n        sum = 0;\n        for(var j = 0; j < n;\
    \ j++){\n            sum = sum + Math.abs(l[j]);\n        }\n        prev = l[i\
    \ - 1];\n        cur = l[i];\n        if(cur === prev || Math.abs(cur - prev)\
    \ < sum){\n            return false;\n        }\n    }\n    return true;\n}\n",
  "    if(!Array.isArray(l))\n        throw new Error('Second argument should be an\
    \ array')\n    l = l.sort()\n    if(l[0] != l[l.length-1] || l[0] < 0 || l[0]\
    \ == 0)\n        return false\n    for(var i = 1; i < l.length; ++i){\n      \
    \  if(l[i] <= l[i-1]){\n            return false\n        }\n    }\n    return\
    \ true\n}\n\n},{\"./array\":15,\"./number\":19}],13:[function(require,module,exports){\n\
    var util = require('./util')\nvar Shape = require('./shape')\nvar Solver = require('./solver')\n\
    var getAccessor = require('../accessors').getAccessor\nvar getLayout = require('../layout').getLayout\n\
    var makeCompute = require('../compute').makeCompute\nvar updateDOMProp = require('./update-dom-property')\n\
    \nmodule.exports = function(){\n  // model -> view -> DOM\n  var Renderer = function(model){\n\
    \    this.model = model\n    this.view = null\n    this.initDOM()\n  }\n  Renderer.prototype\
    \ = {\n    // renders model to the dom\n    render: function(){\n      this.view.update()\n\
    \    },\n    initDOM: function(){\n      var self = this\n      // create view\
    \ and attach it to the DOM\n      this.view = new Shape({\n        el: util.createSVGElement('g'),\n\
    \        style: {\n          position: 'absolute',\n          width: '100%',\n\
    \          height: '100%'\n        }\n      })\n      util.addCSSRule('g', 'pointer-events',\
    \ 'all')\n\n      util.addEventListener('mousedown', function(e){\n        if(self.model.isClicked(e))\
    \ self.model.mousedown(e)\n      })\n      util.addEventListener('mouseup', function(e){\n\
    \        if(self.model.isClicked(e)) self.model.mouseup(e)\n      })\n\n     \
    \ util.addEventListener('mousemove', function(e){\n        if(self.model.isDragged(e))\
    \ self.model.mousemove(e)\n      })\n\n      var self = this\n      this.view.on('mousedown',\
    \ function(e){\n        self.model.mousedown(e)\n      })\n      this.view.on('mouseup',\
    \ function(e){\n        self.model.mouseup(e)\n      })\n      this.view.on('mousemove',\
    \ function(e){\n        self.model.mousemove(e)\n      })\n\n      util.addEventListener('wheel',\
    \ function(e){\n        self.model.wheel(e)\n      })\n\n      util.addEventListener('touchstart',\
    \ function(e){\n        self.model.touchstart(e)\n      })\n      util.addEventListener('touchend',\
    \ function(e){\n        self.model.touchend(e)\n      })\n      util.addEventListener('touchmove',\
    \ function(e){\n        self.model.touchmove(e)\n      })\n\n      // Add event\
    \ listeners\n      util.addEventListener('mouseenter', function(e){\n        self.model.mouseenter(e)\n\
    \      })\n      util.addEventListener('mouseleave', function(e){\n        self.model.mouseleave",
  "    var s = l.slice();\n    s.sort(function(a, b){\n      return a - b;\n    });\n\
    \    return s[0] < s[s.length-1];\n}\n", "  if(l.length < 2){\n    return true;\n\
    \  }\n  if(l.length == 2){\n    return l[0] > l[1];\n  }\n  var i;\n  var j;\n\
    \  var cmp = l[0];\n  for(i = 1; i < l.length; ++i){\n    cmp = cmp > l[i] ? 1\
    \ : cmp < l[i] ? -1 : 0;\n  }\n  return cmp == 0;\n}\n},{}],9:[function(require,module,exports){",
  "    var monotonic;\n    if(l.length === 0) {\n        return true;\n    }\n   \
    \ if(typeof l[0] === \"number\") {\n        return l.reduce(function(a, x, i,\
    \ arr) {\n            if(x == arr[i-1]) {\n                return a;\n       \
    \     }\n            return a || (x-arr[i-1]) > 0;\n        }, false);\n    }\
    \ else {\n        return monotonic(l[0])(l.reduce(function(a, x, i, arr) {\n \
    \           if(x == arr[i-1]) {\n                return a;\n            }\n  \
    \          return a || (x-l[i-1]) > 0;\n        }, false));\n    }\n}\n", "  return\
    \ isNumeric(l[0]) && isNumeric(l[l.length - 1]) && l.reduce(function(p, c, i,\
    \ arr){\n    return c > p ? i : (p = c, i);\n  }, 0) === l.length - 1;\n}\nmodule.exports\
    \ = exports['default'];\n},{\"./numeric\":2}],6:[function(require,module,exports){\n\
    'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n\
    });\nexports.default = isNil;\n\nvar _jsutilsIsNil2 = require('jsutils/isNil');\n\
    \nvar _jsutilsIsNil3 = _interopRequireDefault(_jsutilsIsNil2);\n", "  if(l.length\
    \ == 1) return l[0] > l[l.length - 1];\n  if(l.length == 2) return l[0] < l[1];\n\
    \  var l = l.slice();\n  l.reverse();\n  if(l[0] > l[1]) return true;\n  if(l[0]\
    \ < l[1]) return false;\n  var i, j, x;\n  for(i=0, j=1; i<l.length; i++, j++){\n\
    \    x = l[i];\n    if(j > i){\n      if(l[j] < x){\n        return false;\n \
    \     }\n    }else if(l[j] == x){\n      continue;\n    }else{\n      if(x < l[j]){\n\
    \        return false;\n      }\n    }\n  }\n  return true;\n}\n", "\tvar o =\
    \ l.length, l2 = [], i = 1, m = [], n;\n\t\n\tfor (; i < o; i++){\n\t\tn = l[i]\
    \ - l[i - 1]; \n\t\t\n\t\tif (n > 1) l2.push(l[i - 1]);\n\t\t\n\t\tm.push(n);\n\
    \t}\n\t\n\tif (l2.length){\n\t\tn = m.sort(function(a, b){return a - b;}).pop();\n\
    \t\tl2.push(n);\n\t\treturn monotonic(l2);\n\t}else{\n\t\treturn m.pop() === 0;\n\
    \t}\n}\n", "\treturn !l.length || sorting.naturalSort(l).every(function(v, i,\
    \ a){\n\t\treturn v === l[i - 1];\n\t});\n}\nmodule.exports = exports['default'];\n\
    \n},{\"./sorting\":23}],23:[function(_dereq_,module,exports){\n'use strict';\n\
    Object.defineProperty(exports, '__esModule', { value: true });\nvar dom = _dereq_(10);\n\
    var domstyle = _dereq_(11);\nvar domval = _dereq_(12);\nvar domquery = _dereq_(13);\n\
    var docBody = _dereq_(30);\nvar utils = _dereq_(28);\nvar isPlainObject = utils.isPlainObject;\n\
    var removeChildren = dom.removeChildren;\nvar TEXT_NODE = 3;\nvar RE_SPACE = /\\\
    s+/;\nvar propMap = {\n\ttabindex: 'tabIndex',\n\treadonly: 'readOnly',\n\tfor:\
    \ 'htmlFor',\n\t'aria-hidden': 'aria-hidden'\n};", "    var o=[],\n        v=l.slice();\n\
    \    o[0]=v[0];\n    for(var i=1;i<v.length;i++){\n        if(v[i]-v[i-1]>0){\n\
    \            o[i]=v[i];\n        }else{\n            o[i]=v[i-1];\n        }\n\
    \    }\n    return o[0]==v[0]?true:false;\n}\n", "    var u = [l[0]];\n    for(var\
    \ i=1, llen=l.length; i<llen; i++){\n        if(l[i-1] > l[i]){\n            u.push(l[i-1]);\n\
    \        }\n        else if(l[i-1] === l[i]){\n            u.push(l[i]);\n   \
    \     }\n    }\n    return u.every(function(v, i, a){\n        if(a[i-1] < v){\
    \ return false;}\n        else if(a[i-1] > v){return true;}\n        else { return\
    \ false; }\n    });\n}\n</code>\n<|/ a dscore=5 tags=javascript |>\n<| c |>\n\
    The only problem with this solution is it takes O(n^2) time and memory. On a dataset\
    \ of length 2000, a quick run through this takes more than 5 minutes in my browser,\
    \ whereas the accepted answer above takes about 1 second.\n<|/ c |>\n<| c |>\n\
    : You didn't benchmark it properly. Benamrking takes longer the more data you\
    \ have, but it's still faster than the accepted answer's time complexity.\n<|/\
    \ c |>\n<| c |>\nYes, I missed a line. I just found that out. I was trying to\
    \ think of how to solve the problem in O(n). I'll update my answer.\n<|/ c |>\n\
    <| c |>\n: O(n log n) can only beat O(n) if the data is already sorted.\n<|/ c\
    \ |>\n<| c |>\n: I don't agree. O(n) can be done in linear time by quicksort if\
    \ the data is sorted. But the original question was more general, in that it could\
    \ have any type of sorted data, and I was only trying to show that any type of\
    \ quicksort can quickly determine the order of the list.\n<|/ c |>\n<| a tags=javascript\
    \ |>\n<code>", "  var s = l.slice(0); // Clone array\n  // Check all elements\
    \ are monotonically increasing\n  for (var i = 0; i < s.length - 1; ++i) {\n \
    \   if (l[i + 1] < l[i]) {\n      return false\n    }\n  }\n  return true\n}\n",
  "    l = l.slice();\n    l.reverse();\n    for(var i = 1; i < l.length; i++){\n\
    \        if(l[i-1] > l[i]){\n            return false;\n        }\n    }\n   \
    \ return true;\n}\n\n", "\tvar isIncreasing = true;\n\tvar isDecreasing = true;\n\
    \tvar monotonic_array = [];\n\tvar i = 0;\n\twhile(i < l.length){\n\t\tif(l[i]\
    \ > l[i-1]){\n\t\t\tisIncreasing = false;\n\t\t}\n\t\tif(l[i] < l[i-1]){\n\t\t\
    \tisDecreasing = false;\n\t\t}\n\t\tif(isIncreasing && !isDecreasing){\n\t\t\t\
    monotonic_array.push(l[i]);\n\t\t}\n\t\tif(!isIncreasing && isDecreasing){\n\t\
    \t\tmonotonic_array.push(l[i]);\n\t\t}\n\t\ti++;\n\t}\n\twhile(monotonic_array.length\
    \ < l.length){\n\t\tmonotonic_array.push(l[monotonic_array.length]);\n\t}\n\t\
    return monotonic_array;\n}\n\n", "    var s = l.sort(function(a, b){\n       \
    \ return a-b;\n    }),\n        i = 1,\n        n = s.length,\n        out_lt\
    \ = 0,\n        out_gt = 0;\n    for(;i<n;++i){\n        if(s[i] > s[i-1]){\n\
    \            if(out_gt){\n                return false;\n            }\n     \
    \       out_gt = 1;\n        }else if(s[i] > s[i]){\n            if(out_lt){\n\
    \                return false;\n            }\n            out_lt = 1;\n     \
    \   }\n    }\n    return !out_lt && !out_gt;\n}\n", "    var n = l.length;\n \
    \   if (n < 2) return false;\n    var i, a = new Array(n);\n    a[0] = l[0];\n\
    \    var cur = l[0], cur2 = l[0];\n    for(i = 1; i < n; ++i){\n        if (l[i]\
    \ >= cur){\n            a[i] = cur2;\n            cur2 = cur;\n            cur\
    \ = l[i];\n        } else {\n            cur2 = cur;\n            cur = l[i];\n\
    \        }\n    }\n    return Math.abs(cur2-l[n - 1]) <= 1E-10;\n}\n", "\tvar\
    \ a=0, b=Infinity, prev;\n\tl.reduce(function(prev, curr){\n\t\tif(prev !== null\
    \ && curr > prev){\n\t\t\tb = prev;\n\t\t}\n\t\telse if(prev === null || curr\
    \ < prev){\n\t\t\ta = curr;\n\t\t}\n\t\treturn curr;\n\t});\n\treturn a === b;\n\
    }\n", "    var len = l.length;\n    if(len < 2){\n        return true; //not enough\
    \ elements\n    }\n    var cur = l[0],\n        prev = l[0],\n        i;\n   \
    \ for(i = 1; i < len; i++){\n        prev = cur;\n        cur = l[i];\n      \
    \  if(cur > prev){\n            return false;\n        }\n    }\n    return true;\n\
    }\n", "    if(!_.isArray(l)) l = [l];\n    l.sort();\n    return l.every(function(v,\
    \ i, arr){\n      return i === 0 || arr[i-1] <= v;\n    });\n};\n", "  var s =\
    \ monotonicSort;\n  return l(function(x){\n    return s(x);\n  });\n}\n\nmonotonic.step\
    \ = function(start, stop){\n  var s = monotonicSort;\n  return s(function(x){\n\
    \    return x > stop ? start : s(x) <= stop - start ? x : stop;\n  });\n};\n\n\
    module.exports = monotonic;\n\n},{\"../function/sort\":7}],35:[function(_dereq_,module,exports){\n\
    var indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf)\
    \ return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i]\
    \ === obj) return i;\n  }\n  return -1;\n};\n},{}],36:[function(_dereq_,module,exports){\n\
    var pSlice = Array.prototype.slice;\nvar objectKeys = _dereq_('./lib/keys.js');\n\
    var isArguments = _dereq_('./lib/is_arguments.js');\n\nvar deepEqual = module.exports\
    \ = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All\
    \ identical values are equivalent, as determined by ===.\n  if (actual === expected)\
    \ {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof\
    \ Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other\
    \ pairs that do not both pass typeof value == 'object',\n  // equivalence is determined\
    \ by ==.\n  } else if (typeof actual != 'object' && typeof expected != 'object')\
    \ {\n    return opts.strict ? actual === expected : actual == expected;\n\n  //\
    \ 7.4. For all other Object pairs, including Array objects, equivalence is\n \
    \ // determined by having the same number of owned properties (as verified\n \
    \ // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although\
    \ not necessarily the same order), equivalent values for every\n  // corresponding\
    \ key, and an identical 'prototype' property. Note: this\n  // accounts for both\
    \ named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual,\
    \ expected, opts);\n  }\n}\n", "\tvar s = false;\n\tfor (var i=0; i<l.length-1;\
    \ i++){\n\t\tvar m = (l[i+1]-l[i]) / (l[i+1]-l[i]);\n\t\ts = s || (m>1);\n\t}\n\
    \treturn s;\n}\n", "\tl = sort(l);\n\tfor (var i = 0; i < l.length; i++){\n\t\t\
    if (l[i+1] > l[i]){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n",
  "  if(l[l.length-1] < l[0]){\n    for (var i = 1; i < l.length; i++) {\n      if\
    \ (l[i-1] > l[i])\n        return false;\n    }\n    return true;\n  }else{\n\
    \    return false;\n  }\n}", "    var a=0, b=Infinity, prev;\n    for(var i =\
    \ 0; i < l.length; i++){\n        var t = l[i];\n        if(t !== prev){\n   \
    \         prev = t;\n            if(b === Infinity){\n                b=t;\n \
    \           }else if(a!==t){\n                return false;\n            }else{\n\
    \                a=t;\n            }\n        }\n    }\n    return a===b;\n}\n",
  "    var s = 0, n = l.length;\n    while(n < 3) {\n        s +=  (l[n-1] + l[n])\
    \ / 2;\n        n--;\n    }\n    return s > 1;\n}\n", "  var monotonic_arr = [];\n\
    \  for(var i=0; i<l.length; i++){\n    if(l[i+1] - l[i] <= 1e-6){\n      monotonic_arr.push(i);\n\
    \    } else {\n      return false;\n    }\n  }\n  return monotonic_arr.length\
    \ >= 1;\n}\n\n", "\t\n\t// If list is empty, return true.\n\tif (l === undefined){\n\
    \t\treturn true;\n\t}\n\t\n\tif (l.length === 0){\n\t\treturn false;\n\t}\n\t\n\
    \t// If list is 1, return true.\n\tif (l.length === 1){\n\t\treturn true;\n\t\
    }\n\t\n\tfor (var i = 0; i < l.length; i++){\n\t\tif (l[i] > l[i-1]){ \n\t\t\t\
    return false; \n\t\t}\n\t}\n\t\n\treturn true;\n}\n\n", "  var i = 1;\n  var l\
    \ = l || [];\n  for(; i < l.length; ++i) if(l[i-1] > l[i]) return true;\n  return\
    \ false;\n}\n", "    var a = [l[0]], b = l[1], c = l[2], max = a[0]>b[0] ? a[0]\
    \ : b[0], min = max;\n    for(var i=0; i<l.length-1; i++){\n        a[0] = Math.max(a[0],\
    \ b[i]);\n        a[i] = a[0]>b[i] ? a[i] : b[i];\n        if(!a[i]){\n      \
    \      max = a[0];\n        }else{\n            max = Math.max(a[i], max);\n \
    \       }\n        min = min>a[0] ? min : a[0];\n    }\n    return max>=min;\n\
    }\n</code>\n<|/ a |>\n<| c |>\nJust a quick question, why do you need the max/min\
    \ variables?\n<|/ c |>\n<| c |>\nIt's just to compare each element to its previous\
    \ to determine whether the list is monotonically increasing or decreasing.\n<|/\
    \ c |>\n<| c |>\n`a[0]>b[0]? a[0] : b[0]` can be just `a[0]>b[0]`\n<|/ c |>\n\
    <| c |>\nNot quite. `a[0]` is being compared to `b[0]`, but `a[0]` is already\
    \ greater than `b[0]` because `a[0]` is `max`. So `a[0]>b[0]` evaluates to `true`\
    \ and therefore `a[0]` is being set to `b[0]`.\n<|/ c |>\n<| a |>\nA more general\
    \ solution:\n<code>", "    var i,\n        monotonicities = [],\n        monotonic;\n\
    \    for(i = 0; i < l.length; ++i){\n        monotonicities[i] = l[i].y - l[i\
    \ - 1].y;\n    }\n    monotonic = function(a, b){\n        for(i = 0; i < monotonicities.length;\
    \ ++i){\n            if(monotonicities[i] > 0){\n                return false;\n\
    \            }\n            if(monotonicities[i] < 0){\n                return\
    \ true;\n            }\n            if(monotonicities[i] === 0){\n           \
    \     if(b.y < a.y){\n                    return false;\n                }\n \
    \               if(b.y > a.y){\n                    return true;\n           \
    \     }\n            }\n        }\n        return false;\n    };\n    for(i =\
    \ 0; i < l.length; ++i){\n        if(!monotonic(l[i], l[i + 1])){\n          \
    \  return false;\n        }\n    }\n    return true;\n}\n", "  return !l.length\
    \ || l.every(function(v, i){\n    return v === l[i-1];\n  });\n}\n\nmonotonic.not\
    \ = function monotonic_not(l){\n  return !monotonic(l);\n};\n\nmodule.exports\
    \ = monotonic;\n\n},{}],25:[function(_dereq_,module,exports){\n'use strict';\n\
    \nvar util = _dereq_('../../util');\n\nvar styfn = {};\n\nstyfn.appendPath = function\
    \ (selector) {\n  var _ = this;\n\n  _.doAppend(selector);\n  _dontMutateCompoundDom(selector);\n\
    \n  return this;\n};\n\nstyfn.appendShape = function (selector) {\n  var _ = this;\n\
    \n  _.doAppend(selector);\n  _dontMutateCompoundDom(selector);\n\n  return this;\n\
    };\n\nstyfn.appendPaths = function (selector) {\n  var _ = this;\n\n  _.doAppend(selector);\n\
    \  _dontMutateCompoundDom(selector);\n\n  return this;\n};\n\nstyfn.appendText\
    \ = function (text, selector) {\n  var _ = this;\n\n  _.doAppend(selector);\n\n\
    \  if (arguments.length > 1) {\n    for (var i = 1, len = arguments.length; i\
    \ < len; ++i) {\n      _.doAppendText(arguments[i]);\n    }\n  } else {\n    _.doAppendText(text);\n\
    \  }\n\n  _dontMutateCompoundDom(selector);\n\n  return this;\n};\n\nvar width\
    \ = styfn.width = function width(val) {\n  var _ = this;\n\n  if (val != null\
    \ && val !== '') {\n    _.style.width = val;\n  }\n  return _.style.width;\n};\n\
    \nvar height = styfn.height = function height(val) {\n  var _ = this;\n\n  if\
    \ (val != null && val !== '') {\n    _.style.height = val;\n  }\n  return _.style.height;\n\
    };\n", "  var a = [l[0]],\n      b = [],\n      i, j, l;\n  for (i = 1, l = l[1].length;\
    \ i < l; i++){\n    for (j = 0, a = l[1][i].length; j < a; j++){\n      b.push(b[j\
    \ - 1] > l[1][i][j] ? 1 : -1);\n    }\n  }\n  return !b.length ? false : a.indexOf(b[0])\
    \ === 0;\n}\nmodule.exports = monotonic;\n\n},{}],4:[function(_dereq_,module,exports){\n\
    var parse = _dereq_('bignumber.js').parse;\nvar isNumber = _dereq_('is-number');\n\
    var isBigNumber = _dereq_('is-big-number');\nvar ltn3 = _dereq_('lt-n3');\nvar\
    \ isNegative = _dereq_('is-negative');\nvar isInteger = _dereq_('is-integer');\n\
    var lcm = _dereq_('lcm');\n", "  if(l.length == 0) return true;\n  if(l.length\
    \ == 1) return l[0] > l[l.length-1];\n\n  var first = l[0],\n      last = l[l.length-1],\n\
    \      mid = Math.floor(l.length / 2),\n      isIncreasing = true,\n      isDecreasing\
    \ = true;\n\n  for(var i=0;i<l.length;i++){\n    if(l[i] < first){\n      isIncreasing\
    \ = false;\n      break;\n    }\n    else if(l[i] > last){\n      isDecreasing\
    \ = false;\n      break;\n    }\n  }\n\n  return (isIncreasing && isDecreasing)\
    \ || (!isIncreasing && !isDecreasing);\n}\n", "\tif (l.length < 2) {\n\t\treturn\
    \ true;\n\t}\n\tvar flag = false;\n\tfor (var i=0; i<l.length; i++){\n\t\tif (l[i+1]\
    \ <= l[i]) {\n\t\t\tflag = true;\n\t\t}\n\t}\n\treturn flag;\n}\n", "  if(l.length\
    \ < 1) return false;\n  if(l.length === 1) return true\n  for(var i = 1; i < l.length;\
    \ i++){\n    if(l[i-1] > l[i] || l[i-1] === l[i] && l[i+1] > l[i]) return false\n\
    \  }\n  return true\n}\n", "  return function(a, b){\n    return a[a.length-1]\
    \ === b[b.length-1] \n          ? a >= b\n          : (a > b)\n            ? true\n\
    \            : false;\n  };\n}\n},{}],30:[function(_dereq_,module,exports){\n\
    'use strict';\n\nvar array = _dereq_('./array');\nvar isFunction = _dereq_('./is-function');\n\
    var object = _dereq_('./object');\nvar strictIndex = _dereq_('./strict-index');\n\
    var typedIndex = _dereq_('./typed-index');\nvar isIndex = require('./is/index');\n\
    var isMatrixLike = _dereq_('./is-matrix');\nvar isCollection = _dereq_('./is-collection');\n\
    var deepForEach = _dereq_('./deep-for-each');\nvar matrix = _dereq_('./matrix');\n\
    \nvar arraySize = array.length;\nvar objectKeys = object.keys;\nvar objectValues\
    \ = object.values;\nvar objectEntries = object.entries;\n", "    if(l.length >\
    \ 1){\n        var monotonic_l = true;\n        var min_l = l[0];\n        var\
    \ max_l = l[0];\n        for(var i = 1; i < l.length; i++){\n            if(!isMonotonic(l[i])){\n\
    \                monotonic_l = false;\n                break;\n            }\n\
    \            min_l = min(min_l, l[i]);\n            max_l = max(max_l, l[i]);\n\
    \        }\n        return monotonic_l && max_l - min_l < 1e-10;\n    }\n    return\
    \ false;\n}", "    var a=0, b=Infinity, prev=l[0];\n    for(var i=1,llen=l.length;i<llen;i++){\n\
    \        var v = prev;\n        prev = l[i];\n        if(v!==prev || a++>=b){\n\
    \            return false;\n        }\n    }\n    return true; //all list elements\
    \ are equal\n}\n\nmodule.exports = monotonic;\n\n},{}],17:[function(_dereq_,module,exports){\n\
    var randu = _dereq_('../math/randu');\nvar rand = randu.rand;\nvar RAND_MAX =\
    \ randu.RAND_MAX;\n\nvar zeros = _dereq_('../function/matrix/zeros').zeros;\n\
    var range = _dereq_('../function/matrix/range');\n", "  var l = l[0], diff = Math.abs(l[0]\
    \ - l[1]), i = 0;\n\n  if(diff > 0) return true;\n  for(;i<l.length;i++){\n  \
    \  if( diff >= l[i] - l[i-1] ) break;\n  }\n  return false;\n}\n", "  return !l.length\
    \ ||\n      (l.length == 1 && l[0] == l[0]) || //If list is 1-element long, return\
    \ a list of booleans.\n      (l.length == 2 && l[0] < l[1]) || //If list is 2-element\
    \ long, return a list of booleans.\n      l.some(function(val, ind, arr){\n  \
    \      return val < arr[0];\n      });\n}\n\nmodule.exports = monotonic;\n\n},{}],410:[function(require,module,exports){\n\
    module.exports = function() {\n  throw new Error(\"no elements in list\")\n}\n\
    \n},{}],411:[function(require,module,exports){\nvar process=require(\"__browserify_process\"\
    );if (!process.EventEmitter) process.EventEmitter = function () {};\n\nvar EventEmitter\
    \ = exports.EventEmitter = process.EventEmitter;\nvar isArray = typeof Array.isArray\
    \ === 'function'\n    ? Array.isArray\n    : function (xs) {\n        return Object.prototype.toString.call(xs)\
    \ === '[object Array]'\n    }\n;", "\tfor(var i = l.length-1; i > 0; i--){\n\t\
    \tif(l[i-1] > l[i]){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n", "\t\
    if(!Array.isArray(l))\n\t\treturn false;\n\tvar sorted=l.slice(0).sort();\n\t\
    return (!sorted.every(function(elem, index, a){\n\t\treturn elem === a[index-1];\n\
    \t}) || !sorted.every(function(elem, index, a){\n\t\treturn elem === a[index+1];\n\
    \t}));\n}\n", "    var o = +Infinity,\n        n = l.length,\n        x = l[0],\
    \ i;\n    for(i = 1; i < n; i++){\n        x = l[i];\n        if(x > o){\n   \
    \         o  = x;\n        }\n    }\n    return o === +Infinity;\n}\n},{}],4:[function(require,module,exports){",
  "    var l = l.slice(0); // slice to copy array\n    var max = -Infinity;\n    var\
    \ min = Infinity;\n    var monotonic = false;\n    for(var i=0; i<l.length; i++){\n\
    \        if(l[i]>max){\n            max = l[i];\n        }\n        if(l[i]<min){\n\
    \            min = l[i];\n        }\n        if(l[i]!=max){\n            monotonic\
    \ = true;\n        }\n    }\n    return monotonic;\n}\n\nmodule.exports = isMonotonic;\n\
    \n},{}],138:[function(require,module,exports){", "    var m = false;\n    var\
    \ p = l.slice(0);\n    var i = 0;\n    var l = l.length;\n    while(i < l){\n\
    \        if(m){\n            if(l[i]>p[i])\n                return false;\n  \
    \      }\n        else{\n            if(l[i]<p[i])\n                return true;\n\
    \        }\n        m = (p[i] < l[i]);\n        i++;\n    }\n    return m;\n}\n",
  "    var n = l.length, m = +l.slice(-1)[0];\n    return m === Infinity || m ===\
    \ -Infinity ? +n !== 0 || n !== l : n !== l && m < +n\n}\n", "    var o = l[0],\
    \ n = l[1];\n    for(var i = 2, t; n = Math.max(o[i], n); i = i){\n        t =\
    \ o[i-1]; o[i-1] = o[i]; o[i] = t;\n    }\n    return n === o[i-1];\n}\n},{\"\
    ./array\":31,\"./number\":42}],36:[function(_dereq_,module,exports){", "\tif(!l)\
    \ return true;\n\tfor(var i=1,l2=l.length;i<l2;i++)\n\t\tif(l[i-1] > l[i])\n\t\
    \t\treturn true;\n\treturn false;\n}\n", "\tvar l = l.slice(0),\n\t\ti = 0,\n\t\
    \tisIncreasing = true;\n\tfor ( ; i < l.length; i++ ) {\n\t\tif ( l[ i ] < l[\
    \ i - 1 ] ) {\n\t\t\tisIncreasing = false;\n\t\t}\n\t}\n\treturn isIncreasing;\n\
    }\n", "  return !some(greaterOrEqual(l), slice(arguments, 1));\n}", "  var n =\
    \ l.length,\n      ax = l[0],\n      b = l[1],\n      c = l[2],\n      d = l[3];\n\
    \  if(n === 0) return ax===b===c===d;\n  if(n === 1) return ax===b;\n  var el0\
    \ = l[4],\n      ax0 = l[0],\n      el1 = l[1],\n      ax1 = l[2],\n      el2\
    \ = l[3],\n      ax2 = l[4],\n      bx1 = el1-b,\n      bx2 = el2-b;\n  return(ax\
    \ < bx0 || bx0 < ax || bx < ax0) ? monotonic: ! (ax1 < bx1 || bx1 < ax);\n}\n",
  "\tif(l.length < 1) return true;\n\tif((l[0]<=l[l.length-1]) && l.length >= 2) return\
    \ false;\n\tvar s = 1;\n\tfor(var i = 0; i < l.length-1; i++){\n\t\ts *= l[i];\n\
    \t\tif(Math.abs(s-l[i+1]) < 0.01) return false;\n\t}\n\treturn true;\n}\n},{}],9:[function(require,module,exports){",
  "    var o = true,\n        i,\n        n;\n    for (i = 0, n = l.length-1; i <\
    \ n; ++i) {\n        if ((l[i] - l[i+1]) > 0) {\n            o = !o;\n       \
    \ }\n    }\n    return o;\n}\n", "\tfunction isAscending(a){\n\t\treturn a < b;\n\
    \t}\n\tfunction isDescending(a){\n\t\treturn a > b;\n\t}\n\t\n\tvar b = 0;\n\t\
    \n\tfor(var i = 0; i < l.length; i++){\n\t\tvar a = l[i];\n\t\t\n\t\tif(isAscending(a)){\n\
    \t\t\tb = a;\n\t\t}\n\t\telse if(isDescending(a)){\n\t\t\tb -= a;\n\t\t}\n\t\t\
    else{\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\treturn true;\n}\n", "    if(l.length\
    \ == 0) return false;\n    return ((l[0] > l[1]) || isNaN(l.length)) && monotonic(l.slice(1));\n\
    }\n", "\tvar a = [l[0]];\n\tfor(var i=1, iLen=l.length; i<iLen; i++){\n\t\tif(\
    \ l[i-1] > l[i] ){\n\t\t\treturn true;\n\t\t}\n\t\ta.push(l[i]);\n\t}\n\treturn\
    \ false;\n}\n", "  if(l == null){\n    return false;\n  }\n  for(var i = 0, len\
    \ = l.length; i < len; i++){\n    var monotonic = true;\n    var currElement =\
    \ l[i];\n    for(var j = i - 1; j >= 0 && monotonic; j--){\n      if(l[j] > currElement){\n\
    \        monotonic = false;\n      }\n    }\n    if(monotonic){\n      return\
    \ true;\n    }\n  }\n  return false;\n}\n", "  return l.every(function(val, i,\
    \ self){\n    return self.indexOf(val) === i;\n  });\n}\n", "    var s = monotonic_helper(l,\
    \ function(v){\n            return v > 0 ? v : -v;\n        });\n    return s\
    \ == l;\n}\n", "  var a = l.slice(0),\n      b = a[0],\n      c = 1,\n      i,\
    \ j, n = a.length;\n  for (i = 1; i < n; ++i) {\n    b = a[i];\n    for (j = 0;\
    \ j < n; ++j) {\n      if (b < a[j]) {\n        if (c < a[j]) {\n          c =\
    \ a[j];\n        }\n        break;\n      } else if (a[j] < b) { //a[j] < b is\
    \ never true\n        c = a[j];\n        break;\n      }\n    }\n    a[i] = c;\n\
    \  }\n  return c > 0;\n}\n\nmodule.exports = monotonic;\n\n},{}],126:[function(_dereq_,module,exports){\n\
    arguments[4][12][0].apply(exports,arguments)\n},{\"12\":12,\"4\":4}],127:[function(_dereq_,module,exports){",
  "    return !isNaN(Math.max.apply(null, l)) && !isNaN(Math.min.apply(null, l));\n\
    }\n", "  var monotonic = false, i, n, d;\n  for (i=0, n=l.length; i<n; i++){\n\
    \    d = l[i] - l[i-1];\n    if (d !== 0) return monotonic;\n    if (i === 0 ||\
    \ d <= 0) return false;\n  }\n  return monotonic;\n}\n", "  return l.every(function(v,\
    \ i, l){\n    return !i || v < l[i-1];\n  });\n}\nmonotonic.invert = monotonic;\n\
    \nmodule.exports = monotonic;\n\n", "  var s = 0, n = l.length, z = l[0], c =\
    \ [], i = 1, nMinus2 = 1;\n\n  for(; i < n; i++){\n    if(l[i] !== nMinus2){\n\
    \      z += (l[i] - l[i - 1]);\n      if(z < 0){\n        n = i;\n      }else{\n\
    \        nMinus2 = l[i - 1];\n      }\n    }\n    c.push(i);\n  }\n  c.push(n\
    \ - 1);\n\n  while(c.length !== 0){\n    if(z < l[c[c.length - 1]]){\n      c[c.length\
    \ - 1]--;\n    }else{\n      l[c[clength - 1]] = nMinus2;\n      c.pop();\n  \
    \  }\n  }\n\n  return c.length === 0;\n}", "\treturn !l.some(function(v, i, arr){\n\
    \t\treturn !isMonotonic(v, i, arr);\n\t});\n}\n", "\tvar len = l.length;\n\tif\
    \ (len < 2) return true;\n\tif (len == 1) return l[0] >= l[1];\n\tvar sorted =\
    \ l.slice().sort(function(a, b){return a - b});\n\tvar diffs = l.slice().reverse().map(function(v,\
    \ i){return v - sorted[i-1]});\n\treturn diffs.every(function(d){ return d > 0});\n\
    }\n", "    return !l.some(function(v, i, arr){\n        if (v == null){\n    \
    \        return false;\n        }\n        else if (i < 1){\n            return\
    \ true;\n        }\n        else if ((arr.length > 1 && arr[0] <= arr[i])) {\n\
    \            return false;\n        }\n        else if (v < arr[0]){\n       \
    \     return true;\n        }\n        else {\n            return false;\n   \
    \     }\n    });\n}\n", "  var s = monotonicSeries(l), \n      n = s.length ||\
    \ 0, \n      first = 0, \n      last = Math.max(0, n - 1),\n      incs = [0],\
    \ \n      i, inc, c;\n  for (i = 0; i < n; ++i) {\n    c = s[i];\n    if (c ===\
    \ false || n === 1 || (c && c > last)) {\n      inc = [];\n      incs.push(i);\n\
    \    } else if (c < first) {\n      inc = incs[incs.push(last) - 1];\n    } else\
    \ if (c > last) {\n      inc = incs[incs.shift()];\n    } else {\n      inc =\
    \ c;\n    }\n    first = c;\n    last = c;\n  }\n  return inc;\n}\n\nmonotonic.version\
    \ = \"1.0.4\";\n", "    if(!isList(l)){\n        throw new TypeError('Argument\
    \ must be a list');\n    }\n    var monotonic = true;\n    var len = l.length;\n\
    \    if (len <= 1) {\n        return l;\n    }\n    var hasAscendingElems = false;\n\
    \    var hasDescendingElems = false;\n    var arr = [];\n    var i = 1;\n    var\
    \ x;\n    while (i < len) {\n        x = l[i];\n        if (x < arr[i-1]) {\n\
    \            monotonic = false;\n        } else if (x !== arr[i-1] && x === arr[i-2])\
    \ {\n            hasAscendingElems = !hasAscendingElems;\n        } else {\n \
    \           hasDescendingElems = !hasDescendingElems;\n        }\n        arr.push(x);\n\
    \        i++;\n    }\n    return hasAscendingElems && hasDescendingElems ? false\
    \ : monotonic;\n}\n", "\tif(!Array.isArray(l)){\n\t\tthrow new TypeError('Input\
    \ must be an array');\n\t}\n\tvar a = l.slice(0).sort();\n\tvar n = 0;\n\tvar\
    \ i = 0;\n\tvar v = a[0];\n\tvar diff = v < a[1] ? a[1] - v : 0;\n\tfor(; i <\
    \ a.length; i++){\n\t\tvar d = a[i] - v;\n\t\tdiff = diff <= 0 ? diff * d > 0\
    \ : diff * d < 0;\n\t\tif(!diff){\n\t\t\treturn true;\n\t\t}\n\t\tn++;\n\t}\n\t\
    return !(n%2);\n}\n\n", "    var i = 1;\n    var l = l || [];\n    var j = 0,\
    \ len = l.length;\n    if(len > 1){\n        while(i < len){\n            if(l[i]\
    \ - l[j] <= 0) ++i;\n            else ++j;\n        }\n    }\n    return j - i\
    \ === 1;\n}\n", "  var isl = [];\n  var i, j, curr;\n  for (i = 0; i < l.length-1;\
    \ i++){\n    curr = l[i];\n    for (j = i+1; j < l.length; j++){\n      if (l[j]\
    \ <= curr){\n        curr = l[j];\n      }\n    }\n    isl.push(curr);\n  }\n\
    \  return isl.indexOf(l.slice(-1)[0]) === l.slice(-1)[0];\n}\n", "\tl = sort(l);\n\
    \treturn !l[0] || (l[0] == l[l.length-1]);\n}\n", "    if (l.length === 0) {\n\
    \        return true;\n    }\n    var s = l.sort(function(a, b){\n        return\
    \ a - b;\n    });\n    var fromLast = s[0] <= s[l.length - 1];\n    var fromFirst\
    \ = s[0] >= s[l.length - 1];\n    return fromLast && fromFirst;\n}\n", "\tvar\
    \ i, len = l.length, prev, val;\n\tfor(i = 1; i < len; i++){\n\t\tval = l[i];\n\
    \t\tif(val < prev){\n\t\t\treturn true;\n\t\t}\n\t\tprev = val;\n\t}\n\treturn\
    \ false;\n}\n", "  var a = monotonicAux();\n  l = l.reverse();\n  for(var i =\
    \ 0, l = l.length, k = 1; i < l; i++, k = k*l[i]){\n    if(k !== a[k]){\n    \
    \  return false;\n    }\n  }\n  return true;\n}\n\nmonotonicAux = monotonic;\n",
  "    var l = l || [];\n    var i, j, x, xl, x_val, y_val;\n    var order = true;\n\
    \    var decreasing = false;\n    var min_val, max_val, min_idx, max_idx;\n  \
    \  var sorted = true;\n    if(l.length === 0) {\n        return false;\n    }\n\
    \    for(i = 0; i < l.length - 1; i++) {\n        sorted = false;\n        xl\
    \ = l[i];\n        x_val = xl.x;\n        y_val = xl.y;\n        min_val = Infinity;\n\
    \        max_val = 0;\n        max_idx = null;\n        min_idx = 0;\n       \
    \ for(j = 0; j < l.length; j++) {\n            if(!order) {\n                if(l[j].y\
    \ < y_val) {\n                    sorted = true;\n                    break;\n\
    \                }\n            }\n            else {\n                if(l[j].y\
    \ > y_val) {\n                    sorted = true;\n                    break;\n\
    \                }\n            }\n            if(x_val > l[j].x) {\n        \
    \        order = false;\n                decreasing = true;\n            }\n \
    \           else if(x_val < l[j].x) {\n                order = true;\n       \
    \         decreasing = false;\n            }\n            else {\n           \
    \     if(l[j].y < min_val) {\n                    min_val = l[j].y;\n        \
    \            min_idx = j;\n                }\n                if(l[j].y > max_val)\
    \ {\n                    max_val = l[j].y;\n                    max_idx = j;\n\
    \                }\n            }\n        }\n        if(!sorted) {\n        \
    \    if(order) {\n                l.splice(min_idx, 1);\n                l.unshift(xl);\n\
    \            }\n            else {\n                l.splice(max_idx, 1);\n  \
    \              l.push(xl);\n            }\n            break;\n        }\n   \
    \     if(order) {\n            l[min_idx].x = x_val - l[min_idx].x;\n        }\n\
    \        else {\n            l[max_idx].x = x_val - l[max_idx].x;\n        }\n\
    \    }\n    return true;\n}", "  if(l.length < 2) return false;\n  return l.every(function(a){\n\
    \    return Math.sign(a) > 0;\n  });\n}\n", "  var i = 0;\n  var length = l.length;\n\
    \  var m = false;\n  for(; i < length; i++){\n    m = (l[i] - l[i-1] > 0);\n \
    \   if(!m || i === 0){\n      break;\n    }\n  }\n  return m;\n}\n", "  var s\
    \ = monotonicSort;\n  return s.length <= 0\n    ? false\n    : l(s).every(function(v,\
    \ i){ return v === s[i] - s[i]; })\n}\n", "  var s = 1, n = l.length, i = 0;\n\
    \  while (i < n){\n    if (l[i] <= l[i + 1]){ ++i; continue; }\n    else { s =\
    \ l[i] - l[i - 1]; break; }\n  }\n  return s <= 0;\n}\n},{}],30:[function(require,module,exports){",
  "    return !sorting(l).some(function (elem, i, self) { return elem <= self[i];\
    \ });\n}\nexports.monotonic = monotonic;\n\n},{}],13:[function(require,module,exports){\n\
    \"use strict\";\n\nvar _ = require(\"./lodash\"),\n    util = require(\"./util\"\
    ),\n    Ruleset = require(\"./ruleset\"),\n    Selector = require(\"./selector\"\
    ),\n    Element = require(\"./element\"),\n    Parent = require(\"./parent\"),\n\
    \    Combinator = require(\"./combinator\");\n\nvar parseRule = function (line,\
    \ line, column, tableBox, options) {\n    var opts = (options !== undefined ?\
    \ options : {});\n    var style = opts.style || {};\n    var declarations = line.match(/[;\\\
    s]+/g) || [];\n    var selector = opts.selector;\n    if (selector === undefined)\
    \ selector = new Selector([{ value: line }]);\n    else selector = selector.add({\
    \ value: line });\n\n    for (var i = 0, len = declarations.length; i < len; i++)\
    \ {\n        var decl = declarations[i];\n        var matches = decl.match(/^([^{]+)\\\
    ((.*)\\)/);\n        if (matches) {\n            var prop = matches[1];\n    \
    \        var value = matches[2];\n\n            if (!value.match(/^[\\w\\-]+/))\
    \ {\n                if (prop === \"display\" && options.display === undefined)\
    \ {\n                    options.display = \"table\";\n                } else\
    \ if (prop === \"text-align\" && options.textAlign === undefined) {\n        \
    \            options.textAlign = \"left\";\n                }\n            }\n\
    \n            style[prop] = value;\n        } else {\n            if (style ===\
    \ undefined) style = { };\n            style[decl] = true;\n        }\n    }\n\
    \n    var rule = { style: style, selector: selector };\n    if (tableBox) rule.tableBox\
    \ = tableBox;\n    return rule;\n};\n\nvar next = function (line) {\n    return\
    \ line.match(/^[^;\\s]*/)[0];\n};\n\nvar type = function (line) {\n    return\
    \ line.match(/^[\\s{]+/)[0];\n};\n\nvar value = function (line) {\n    return\
    \ line.match(/\\S+/)[0];\n};\n\nvar Rule = function (line, lineNumber) {\n   \
    \ this.style = line.match(/[^;\\s]+/g) || [];\n    this.selector = selector ?\
    \ selector.add({ value: line }) : null;\n    this.value = (this.style && this.style.length)\
    \ ? this.style[0] : \"\";\n    this.sourceLine = lineNumber;\n};\n\nvar Ruleset\
    \ = function (selectors, rules, lineNumber) {\n    this.selectors = selectors;\n\
    \    this.rules = rules;\n    this._lookups = {};\n    this.sourceLine = lineNumber;\n\
    };\nRuleset.prototype = new Parent();\nRuleset.prototype.type = \"Ruleset\";\n\
    Ruleset.prototype.isRuleset = true;\nRuleset.prototype.isRule = true;\nRuleset.prototype.accept\
    \ = function (visitor) {\n    if (this.paths) {\n", "\tvar a = [], b = {}, i,\
    \ n, m;\n\tfor (i=0, n=l.length; i<n; i++){\n\t\tif (!b[l[i]]){\n\t\t\tb[l[i]]\
    \ = 1;\n\t\t\ta.push(l[i]);\n\t\t}\n\t}\n\tm = a.length - 1;\n\tfor (i=m; i>=0;\
    \ i--){\n\t\tif (b[a[i]]){\n\t\t\treturn false; // if already tested decrease\
    \ search right\n\t\t}\n\t}\n\treturn true;  // if already tested increase search\
    \ left\n}\n", "    var a = 0;\n    var b = 1;\n    l.sort(function(a, b){\n  \
    \      if (a < b) {\n            return -1;\n        }\n        if (a > b) {\n\
    \            return 1;\n        }\n        return 0;\n    });\n    while(b.next\
    \ != null){\n        if (b.val < a){\n            a = b.val;\n        }\n    \
    \    if (b.val > b){\n            b = b.val;\n        }\n        if (a == b){\n\
    \            return true;\n        }\n        b = b.next;\n    }\n    return false;\n\
    }\n", "    var s = l.length,\n        i,\n        j,\n        x,\n        prev,\n\
    \        next,\n        lo,\n        hi,\n        mid,\n        isIncreasing,\n\
    \        isDecreasing;\n    \n    if (l == null || typeof l !== 'object') {\n\
    \        return l;\n    }\n    \n    lo = -1;\n    hi = 1;\n    \n    for (i =\
    \ 0; i < s; i++) {\n        x = l[i];\n        isIncreasing = true;\n        \n\
    \        while (i < s) {\n            prev = l[i - 1];\n            next = l[i\
    \ + 1];\n            \n            if (x >= prev && x < next) {\n            \
    \    lo = i;\n                isIncreasing = false;\n            } else if (x\
    \ > prev && x < next) {\n                hi = i;\n                break;\n   \
    \         } else {\n                i++;\n            }\n        }\n        \n\
    \        if (lo == -1) lo = i;\n        \n        if (hi == -1) hi = i;\n    }\n\
    \    \n    mid = lo + hi >> 1;\n    \n    l[lo] = '\\0';\n    \n    return (isIncreasing\
    \ ? lo : hi - 1) === mid ? true : false;\n}\n\n", "    var n = l.length,\n   \
    \     a,\n        b;\n    if(n == 1) return true; \n    a = l[0], b = l[0], i;\n\
    \    for(i = 1; i < n; i++){\n        a = l[i];\n        b = l[i];\n        if(b\
    \ <= a && b == (a-b)){\n            return false;\n        }\n    }\n    return\
    \ true;\n}\n", "  var o=[], l = l.sort(function(a,b){\n    return a - b;\n  });\n\
    \  var i = 0;\n  while(i < l.length){\n    if(l[i++] != l[i]){ return false; }\n\
    \  }\n  return true;\n}\n", "    return !l.some(function(v, i){\n        return\
    \ v === l[i+1];\n    });\n}\n\n},{}],3:[function(_dereq_,module,exports){\nmodule.exports\
    \ = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n", "    var\
    \ n = l.length,\n        a,\n        b,\n        i = -1,\n        x;\n    while\
    \ (++i < n){\n        b = l[i];\n        a = l[i - 1];\n        x = f(a);\n  \
    \      if (x < b) b = x;\n        if (x > b) a = x;\n    }\n    return i <= 0\
    \ ? l[0] >= b && b < l[-1] : a >= b && b < a;\n}\n\nmonotonic.isMonotonic = isMonotonic;\n\
    \nmodule.exports = monotonic;\n\n},{\"../object/is\":172}],151:[function(require,module,exports){",
  "  var isListMonotonic = true;\n  for (var i = 1; i < l.length; i++){\n    if (l[i]\
    \ < l[i - 1]){\n      isListMonotonic = false;\n      break;\n    }\n  }\n  return\
    \ isListMonotonic;\n}\n", "  var s = monotonicSort;\n  return l(s) ? s[0] ===\
    \ s[1] : false;\n}\n\nmonotonic.test = function(l){\n  return !!l(monotonicSort);\n\
    };\n\nmodule.exports = monotonic;\n\n},{\"./sort\":37}],39:[function(require,module,exports){",
  "\treturn !some(l,function(x){return x<0});\n}\n", "\treturn !l.some(function(el,\
    \ i, arr){\n\t\treturn i >= arr.lastIndexOf(el);\n\t});\n}\n\nmodule.exports =\
    \ monotonic;\n\n", "  l = toArray(l);\n  var i = 1;\n  var n = l.length;\n  for(;\
    \ i < n; i++)\n    if(l[i] <= l[i-1]) return false\n  return true;\n}\n", "  \
    \  var len = l.length,\n        monotonic = true,\n        i, v, w;\n    for(i\
    \ = 0; i<len; i++){\n        v = l[i];\n        for(w=i+1; w<len; w++){\n    \
    \        if(l[w] <= v){\n                monotonic = false;\n                break;\n\
    \            }\n        }\n        if(!monotonic){break;}\n    }\n    return monotonic;\n\
    }\n\nmodule.exports = monotonic;\n\n},{}],12:[function(_dereq_,module,exports){\n\
    module.exports = function() {\n    var _ = {};\n\n    _.sort = function(arr) {\n\
    \        return arr.sort(function(a, b) {\n            return a - b;\n       \
    \ });\n    };\n\n    _.sum = function(arr) {\n        var sum = 0;\n        for\
    \ (var i = 0; i < arr.length; i++) {\n            sum += arr[i];\n        }\n\
    \        return sum;\n    };\n\n    _.mean = function(arr) {\n        return arr.reduce(function(prev,\
    \ cur) {\n            return prev + cur;\n        }) / arr.length;\n    };\n\n\
    \    _.len = function(arr) {\n        var len = 0;\n        for (var i = 0; i\
    \ < arr.length; i++) {\n            len += arr[i].length;\n        }\n       \
    \ return len;\n    };\n\n    _.mean = lib.mean;\n\n    _.sum = lib.sum;\n\n  \
    \  var lib = _dereq_('../core/core');\n    _.noop = lib.noop;\n    _.type = '';\n\
    \n    lib.extend(lib, {\n        noop: function() {},\n\n        mean: function(arr)\
    \ {\n            arr = arr.slice(0);\n            arr.sort();\n            return\
    \ _.mean(arr);\n        },\n\n        sum: function(arr) {\n            arr =\
    \ arr.slice(0);\n            arr.sort();\n            return _.sum(arr);\n   \
    \     },\n\n        median: function(arr) {\n            arr = arr.slice(0);\n\
    \            arr.sort();\n            if (arr.length % 2 === 0) {\n          \
    \      return arr[arr.length / 2 - 1];\n            } else {\n               \
    \ return (arr[arr.length / 2 - 1] + arr[arr.length / 2]) / 2;\n            }\n\
    \        },\n\n        max: function(arr) {\n            return Math.max.apply(Math,\
    \ arr);\n        },\n\n        min: function(arr) {\n            return Math.min.apply(Math,\
    \ arr);\n        }\n    });\n};\n\n},{\"../core/core\":10}],13:[function(_dereq_,module,exports){\n\
    var _ = _dereq_('../utilities/util')._;\nvar extend = _dereq_('../utilities/extend');\n\
    \nvar defaultOptions = {\n    animationDuration: 300,\n    animationInterval:\
    \ 10,\n    animationEasing: 'cubicOut',\n    showAxis: false,\n    axisColor:\
    \ 'rgba(0,0,0,.9)',\n    showLabel: true,\n    showValues: true,\n    labelColor:\
    \ '#666',\n    valueColor: '#", "    var o = false;\n    var l = l.slice();\n\
    \    l.sort(function(a,b){\n        if(a>b) return 1;\n        if(a<b) return\
    \ -1;\n        return 0;\n    });\n    for(var i = 1; i < l.length; i++){\n  \
    \      if(l[i-1]>l[i]){\n            o = true;\n            break;\n        }\n\
    \    }\n    return o;\n}\nmodule.exports = monotonic;\n\n},{}],3:[function(_dereq_,module,exports){\n\
    module.exports={\n  \"name\": \"nock\",\n  \"version\": \"3.8.0\",\n  \"description\"\
    : \"No OOP mock framework\",\n  \"keywords\": [\n    \"test\",\n    \"mock\",\n\
    \    \"fake\",\n    \"sandbox\",\n    \"transaction\",\n    \"record\",\n    \"\
    sand\",\n    \"spy\"\n  ],\n  \"main\": \"index.js\",\n  \"engines\": {\n    \"\
    node\": \">= 4.2.2\"\n  },\n  \"license\": \"MIT\",\n  \"scripts\": {\n    \"\
    test\": \"mocha --reporter list\",\n    \"coverage\": \"istanbul cover ./node_modules/.bin/_mocha\
    \ -- --reporter list -- -R spec\",\n    \"coveralls\": \"npm run-script coverage\
    \ && node ./node_modules/.bin/coveralls < coverage/lcov.info\"\n  },\n  \"dependencies\"\
    : {\n    \"abbrev\": \"~0.0.1\",\n    \"ansi-styles\": \"0.2.5\",\n    \"ansi-styles/theme-nord\"\
    : \"0.0.3\",\n    \"ansi-styles/theme-rainbow\": \"0.0.3\",\n    \"ansi-styles/theme-simplex\"\
    : \"0.0.3\",\n    \"ansi-styles/theme-eighties\": \"0.0.3\",\n    \"ansi-styles/theme-brain\"\
    : \"0.0.3\",\n    \"chalk\": \"~1.1.1\",\n    \"chalk/presets\": \"~1.1.1\",\n\
    \    \"colors\": \"~1.1.0\",\n    \"colors#0100\": \"~1.1.0\",\n    \"colors#0300\"\
    : \"~1.1.0\",\n    \"colors#0331\": \"~1.1.0\",\n    \"colors#0343\": \"~1.1.0\"\
    ,\n    \"colors#0344\": \"~1.1.0\",\n    \"colors#0611\": \"~1.1.0\",\n    \"\
    colors#1404\": \"~1.1.0\",\n    \"colors#2324\": \"~1.1.0\",\n    \"colors#2324\"\
    : \"~1.1.0\",\n    \"colors#2324\": \"~1.1.0\",\n    \"colors#2324\": \"~1.1.0\"\
    ,\n    \"colors#2324\": \"~1.1.0\",\n    \"colors#2324\": \"~1.1.0\",\n    \"\
    colors#2324", "  var a=0, b=Infinity, i=0, j=0;\n  while (i < l.length) {\n  \
    \  j = i;\n    while (j < l.length && l[j] < b) j++;\n    if (j < l.length) a\
    \ = l[j];\n    while (j++ < l.length && l[j] > b) j++;\n    if (j < l.length)\
    \ b = l[j];\n    i++;\n  }\n  return a <= b;\n}", "  if(l.length < 1) return false;\n\
    \  var sorted = sort(l);\n  var prev = sorted[0];\n  for(var i = 0; i < sorted.length;\
    \ i++){\n    if(sorted[i] <= prev){\n      return true;\n    }\n    prev = sorted[i];\n\
    \  }\n  return false;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

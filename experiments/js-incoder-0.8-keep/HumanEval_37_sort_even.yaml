name: HumanEval_37_sort_even
language: js
prompt: "//This function takes a list l and returns a list l' such that\n// l' is\
  \ identical to l in the odd indicies, while its values at the even indicies are\
  \ equal\n// to the values of the even indicies of l, but sorted.\n// >>> sort_even([1,\
  \ 2, 3])\n// [1, 2, 3]\n// >>> sort_even([5, 6, 3, 4])\n// [3, 6, 5, 4]\nfunction\
  \ sort_even(l){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_even;\n  assert.deepEqual(candidate([1, 2, 3]),[1, 2, 3]);\n  assert.deepEqual(candidate([5,\
  \ 3, -5, 2, -3, 3, 9, 0, 123, 1, -10]),[-10, 3, -5, 2, -3, 3, 5, 0, 9, 1, 123]);\n\
  \  assert.deepEqual(candidate([5, 8, -12, 4, 23, 2, 3, 11, 12, -10]),[-12, 8, 3,\
  \ 4, 5, 2, 12, 11, 23, -10]);\n}\n\ntest();"
completions: ["    var even = l[l.length-1]\n    l.sort(function(a,b){\n        return\
    \ (a-b)\n    })\n    return l.filter(function(e){\n        return e%2===0\n  \
    \  }).concat(even)\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\nvar sorted\
    \ = [1,2,3,4,5,6].sort((a,b)=>a-b);", "    l.sort(function(a,b) {\n        var\
    \ sort = a - b;\n        if (sort % 2 == 1) {\n            return sort * -1;\n\
    \        }\n        return sort;\n    });\n    return l;\n}\n</code>\n<|/ a dscore=0\
    \ tags=list,sorting,python |>\n<| c |>\nWhy do you think this should work? How\
    \ does this algorithm work? Also, why are you creating a new list instead of modifying\
    \ the original list?\n<|/ c |>\n<| c |>\nI didn't see a comment saying that it\
    \ was too complicated or wrong. Plus I wasn't aware that modifying lists while\
    \ iterating over them would cause problems. I thought that creating a new list\
    \ was the most obvious way of doing this. I'll edit my answer to remove the reference\
    \ to that.\n<|/ c |>\n<| c |>\nThis is still a bad solution. `list.sort` is only\
    \ guaranteed to return a new sorted list in Python 2.7+. Even if Python 3 was\
    \ used, the fact that `l` gets passed as `self` is misleading because it's actually\
    \ `l.sort()`, not `list.sort(l)`. The actual problem is that `list` doesn't implement\
    \ `__lt__`, so no matter what happens there's no guarantee that `2 < 5` will be\
    \ true, and it's actually not guaranteed to do so.\n<|/ c |>\n<| a dscore=0 |>\n\
    If your list is small and you only want to sort it once then it might be faster\
    \ to sort the list using list.sort and only then create a new list from the sorted\
    \ items. \n<code>\ndef sort_even(l):\n    l.sort() # sort and return the new list\
    \ instead of sorting the list in-place\n    new_list = []\n    for i in range(0,\
    \ len(l), 2): # loop through every other item in the list\n        new_list.append((l[i],\
    \ l[i+1])) # append the ith and (i+1)th items\n    return new_list\n</code>\n\
    This way you do not need to use any sorting algorithms, which is faster and more\
    \ efficient.\n<|/ a tags=list,sorting,python |>\n<| a tags=list,sorting,python\
    \ |>\nA variation on Gareth's answer that is a little more readable and avoids\
    \ creating a new list (and thus avoids creating a copy of the list) when len(l)\
    \ % 2 == 0:\n<code>\ndef sort_odd(l):\n    l.sort()\n    for i in range(len(l)\
    \ - 1, -1, -2):\n        l[i], l[i + 1] = l[i + 1], l[i]\n    return l\n</code>\n\
    The key change is that len(l) - 1 is now len(l) - 2, so we're actually iterating\
    \ through every other item in the list instead of every other item. l[-2] gets\
    \ swappe", "\tvar even = l.slice(0);\n\tfor (var i = 1; i < l.length; i++){\n\t\
    \tif (l[i] !== even[i])\n\t\t\teven[i] = even[i];\n\t}\n\treturn even;\n}\n",
  "    let even = [];\n    let odds = [];\n\n    l.forEach((el, i)=>{\n        if(i%2===0){\n\
    \            even.push(el);\n        } else {\n            odds.push(el);\n  \
    \      }\n    });\n\n    even.sort((a,b)=>a-b);\n    odds.sort((a,b)=>b-a);\n\n\
    \    return even.concat(odds);\n}\n", "  var even = [];\n  var odd = [];\n  for\
    \ (var i = 0; i<l.length; i++){\n    if (i%2==0){\n      even.push(l[i]);\n  \
    \  }\n    else{\n      odd.push(l[i]);\n    }\n  }\n  return odd.concat(even).sort(function(a,b){return\
    \ a-b}).concat(odd);\n}\n", "    var new_l = []\n    new_l.push(l[0])\n    for\
    \ (var i in l){\n        if(i % 2 == 0){\n            new_l.push(l[i])\n     \
    \   }\n    }\n    return new_l\n}\n", "  l = l.slice();\n  l.sort();\n  for (var\
    \ i = l.length-1; i>=0; i--){\n    if (i%2)\n      l[i] = l[i/2];\n    else\n\
    \      l[i] = l[i/2].slice();\n  }\n  return l;\n}\n\n", "    return l.sort(function\
    \ (a, b){\n        if (a%2 === 1) return -1\n        if (a%2 === 0) return 1\n\
    \        return a - b\n    })\n}\n</code>\n<|/ a |>\n<| c |>\nThanks but I already\
    \ have my code but I want to know how would I be able to do my own code using\
    \ my own sorting algorithm, not using built in javascript sort function\n<|/ c\
    \ |>\n<| c |>\nThe other answers here already address that. I've expanded on that\
    \ answer by showing you how you might implement a sorting algorithm yourself (with\
    \ explanations).\n<|/ c |>\n<| c |>\nThanks man. I really appreciate it\n<|/ c\
    \ |>\n<| a dscore=0 |>\nTry this:\n<code>", "\tl = l.slice()\n\tl.sort()\n\tfor(let\
    \ i=0;i<l.length;i+=2) l[i] = l[i]\n\treturn l\n}\n", "    var l2 = l.slice();\n\
    \    l2.sort();\n    l2.reverse();\n    return l2;\n}\n</code>\n<|/ a dscore=0\
    \ tags=merge,sorting,python |>\n<| a |>\n<code>\ndef merge_sort(lst):\nif len(lst)>1:\n\
    \    mid = int(len(lst)/2)\n    merge_sort(lst[:mid])\n    merge_sort(lst[mid:])\n\
    \    merge(lst[:mid],lst[mid:],0)\ndef merge(left_lst,right_lst,start):\n    end\
    \ = start+len(left_lst)+len(right_lst)\n    while start<end:\n        if left_lst[start]\
    \ <=right_lst[end]:\n            lst[start]=left_lst[start]\n            start+=1\n\
    \        else:\n            lst[start]=right_lst[end]\n            end+=1\n</code>\n\
    <|/ a tags=merge,sorting,python dscore=0 |>\n<| a dscore=0 tags=merge,sorting,python\
    \ |>\n<code>\ndef merge(left,right,index,leftArr):\n    \n    while((index>0)\
    \ and (index<len(leftArr))):\n        if(left[index-1]<=right[index]):\n     \
    \       leftArr[index-1]=left[index-1]\n            index+=1\n        else:\n\
    \            leftArr[index-1]=right[index]\n            index=index+1\n\n    if(index<len(leftArr)):\n\
    \        while(index<len(leftArr)):\n            leftArr[index]=left[index]\n\
    \            index=index+1\n\n    if(index>0):\n        while((index>0) and (index<len(leftArr))):\n\
    \            leftArr[index]=left[index-1]\n            index+=1\n</code>\n<|/\
    \ a |>\n<| a tags=merge,sorting,python |>\nThis might not be the best code out\
    \ there but it's simple and it works really well.\n<code>\ndef merge(left_list,\
    \ right_list, left_index):\n    \n    left_index += left_list[0]\n    right_index\
    \ += right_list[0]\n    \n    \n    \n    if left_index > right_index:\n     \
    \   return\n    \n    \n    elif left_index == right_index:\n        return\n\
    \    \n    elif left_index >= len(left_list) or right_index >= len(right_list):\n\
    \        return\n    \n    else:\n        left_item = left_list[0]\n        right_item\
    \ = right_list[0]\n        \n        \n        left_list.append(left_item)\n \
    \       right_list.append(right_item)\n        \n        merge(left_list, right_list,\
    \ left_index)\n        merge(right_list, left_list, left_index)\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nWhile this code ", "  l = l.slice(0);\n  l.sort(function(x,\
    \ y){return x%2==0?y<x?-1:1:y>x?1:0});\n  return l;\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| c |>\nIf you don't need a strict sort (e.g. you don't care about `a`\
    \ being greater than `b`, it's sufficient to sort by `b` first, then `a`).\n<|/\
    \ c |>\n<| c |>\n: I believe that depends on how you want to treat ties. If you\
    \ want to get them out of order so the first wins, yeah, that would be more work.\
    \ But if you want them to be equal or larger, then yes, that would work.\n<|/\
    \ c |>\n<| c |>\nThe \"less than\" operator in the last line should be \"less\
    \ than\" or \"less than or equal\" instead of \"less than\", otherwise the sorting\
    \ won't work as expected.\n<|/ c |>\n<| a |>\nA better approach may be to simply\
    \ sort the array twice. First by odd numbers then by even. Then, when you get\
    \ the resultant array, you can simply re-sort it by odd numbers and then by even.\n\
    <|/ a tags=javascript,sorting dscore=0 |>\n<| a tags=javascript,sorting |>\nYou\
    \ can use the Array.prototype.sort() function in combination with Array.prototype.filter().\n\
    \n<code>\nconst array = [1, 3, 5, 4, 2];\n\nconst result = array.sort((a, b) =>\
    \ a - b).filter(x => x % 2 === 0).sort((a, b) => a - b);", "  var l = l.slice();\n\
    \  for (var i = 1; i < l.length; i++){\n    if (l[i] !== l[i-1])\n      l.splice(i,\
    \ 0, l[i]);\n  }\n  return l;\n}\n", "    var even = l.map(function (value, index)\
    \ {\n        if (index % 2 == 0)\n            return value;\n    });\n    return\
    \ even.sort(function (a, b) { return a - b; });\n}\n</code>\nI hope this helps!\
    \ If you have questions feel free to ask!\n<|/ a tags=python dscore=2 |>\n<| a\
    \ tags=python dscore=1 |>\n<code>\nx = [i for i in range(20)]\ny = [i for i in\
    \ range(20)]\nz = [i if i%2==0 else None for i in x]\ny = [i if i%2==0 else None\
    \ for i in y]\n</code>\n<|/ a |>\n<| a tags=python dscore=1 |>\nTo extend on Joshua's\
    \ answer, this works in Python 3.6 and later:\n<code>\n>>> def sort_even(l):\n\
    ...     return sorted(l, key=lambda x: x if x % 2 else None)\n</code>\n<|/ a |>\n\
    <| c |>\nThis is a very Pythonic way of achieving the same result, and also more\
    \ efficient than the `key=lambda` method (by about a factor of 3 on my machine).\
    \ As a bonus it is also much more readable, as you can see from the other answers.\
    \ :)\n<|/ c |>\n<| a dscore=1 |>\nIf you want a one-liner that works with the\
    \ newer versions of Python and can sort lists containing None values:\n<code>\n\
    In [17]: x = [i for i in range(20)]\n\nIn [18]: y = [i for i in range(20)]\n\n\
    In [19]: z = [i if i%2==0 else None for i in x]\n\nIn [20]: y = [i if i%2==0 else\
    \ None for i in y]\n\nIn [21]: x, y, z\nOut[21]: [None, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n</code>\nIf you want a one-liner\
    \ that works with older versions of Python (3.x) and can sort lists containing\
    \ None values:\n<code>\nIn [22]: sorted(x, key=lambda i: i if i%2==0 else None)\n\
    Out[22]: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]\n\
    </code>\n<|/ a tags=python |>\n<| a |>\n<code>\n>>> x = [1,2,3,4,5]\n>>> y = [1,2,3,4,5]\n\
    >>> x.sort()\n>>> x.sort()\n>>> x\n[1, 2, 3, 4, 5]\n>>> y.sort()\n>>> y.sort()\n\
    >>> y\n[5, 1, 2, 3, 4]\n</code>\n<|/ a dscore=0 tags=python |>\n<| c |>\nThis\
    \ doesn't really answer the question; it only shows how to re-sort the list. Also,\
    \ what ", "\treturn l.reduce(function(l, r, i, a){\n\t\tif((i % 2) === 0){\n\t\
    \t\tl.push(r);\n\t\t}\n\t\treturn l;\n\t}, []);\n}", "  return l.sort(function(a,\
    \ b){\n    var c = a % 2;\n    if (c){\n      return b - a;\n    } else {\n  \
    \    return b - c;\n    }\n  });\n}\n", "  return l.sort(function(l,r){\n    return\
    \ l % 2 ? r - l : l - r;\n  });\n}\n", "   for(var i=0; i<l.length; i++){\n  \
    \    if(l[i] % 2 != 0){\n         //Sort odd indicies\n         var temp;\n  \
    \       for(var j=0; j<l.length; j++){\n            if(j%2 == 0){\n          \
    \     temp = l[j];\n               l[j] = l[j-1];\n               l[j-1] = temp;\n\
    \            }\n         }\n      }\n   }\n   return l;\n}\n", "\tl = l.slice();\n\
    \tl.sort(function(x,y){return y%2 === 0 ? x-y : x+y;});\n\treturn l;\n}\n", " \
    \ var l1 = [];\n  for (var i=1; i<l.length; i++){\n    l1.push(l[i]);\n  }\n \
    \ for (var i=0; i<l1.length; i++){\n    for (var j=1; j<l1.length; j++){\n   \
    \   if (l1[j-1] > l1[j]){\n        var t = l1[j-1];\n        l1[j-1] = l1[j];\n\
    \        l1[j] = t;\n      }\n    }\n  }\n  return l1;\n}\n", "    var l = l.slice();\n\
    \    var even = l.slice(0,l.length / 2);\n    var odd = l.slice(l.length / 2,l.length);\n\
    \    l = even.concat(odd.sort(function(a,b){\n        return a - b;\n    }));\n\
    \    return l;\n}\n", "  var newL = [];\n  var even = 0;\n  for (var i=0;i<l.length-1;i++){\n\
    \    even = even + (l[i]%2);\n    newL[even] = l[i];\n  }\n  newL[even] = l[i];\n\
    \  return newL;\n}\n\n", "    l.sort(function(a, b){\n        return a - b;\n\
    \    });\n    for(var i = 0; i < l.length; i++){\n        if(i % 2 === 0){\n \
    \           l[i] = l[i] - l[i - 1];\n        }\n    }\n    return l;\n}\n", " \
    \   l = l.slice();\n    var even = [];\n    while(l.length){\n        var val\
    \ = l.pop();\n        if(l.length && l[0] !== val){\n            l = even.concat(l);\n\
    \        }\n        even.push(val);\n    }\n    return even.sort(function(a, b){return\
    \ a - b});\n}\n", "\tl.sort(function(a, b){\n\t\treturn b - a;\n\t});\n\tvar odd\
    \ = [];\n\tvar even = [];\n\tfor (var i = 0; i < l.length; i++){\n\t\tif (i %\
    \ 2 === 1){\n\t\t\teven.push(l[i]);\n\t\t}\n\t\telse {\n\t\t\todd.push(l[i]);\n\
    \t\t}\n\t}\n\treturn even.concat(odd);\n}\n", "    var l2 = [];\n    for(var i=0;\
    \ i<l.length; i++){\n        if(i % 2 == 0){\n            l2.push(l[i]);\n   \
    \     }\n    }\n    for(var i=0; i<l2.length; i++){\n        var index = l2.length\
    \ - 1;\n        while(index >= 0 && l2[index] > l2[index + 1]){\n            index\
    \ = index - 1;\n        }\n        l2.splice(index, 0, l2[index]);\n    }\n  \
    \  return l2;\n}\n", "    var i,\n\ttemp;\n    for (i=1; i < l.length; i++){\n\
    \ttemp = l[i];\n\tl[i] = l[i-1];\n\tl[i-1] = temp;\n    }\n    return l;\n}",
  "    var i=0;\n    while(i < l.length){\n        var j=i+1;\n        while(j < l.length\
    \ && l[j] < l[i]){\n            j++;\n        }\n        while(j < l.length &&\
    \ l[j] == l[i]){\n            j++;\n        }\n        if(j == l.length){\n  \
    \          break;\n        }\n        var temp = l[i];\n        l[i] = l[j];\n\
    \        l[j] = temp;\n        i++;\n        j++;\n    }\n    return l;\n}\n",
  "  for(var i=1; i<l.length; i++){\n    if(l[i] % 2 == 0){\n      for(var j=i+1;\
    \ j<l.length; j++){\n        if(l[j] % 2 != 0){\n          l[j] = l[j-1];\n  \
    \      }\n      }\n      break;\n    }\n  }\n  return l;\n}\n", "    var ret =\
    \ [];\n    var l = l.slice();\n    for(var i = 0; i< l.length; i++){\n       \
    \ var n = l[i];\n        ret.push(n);\n        if((i+1) % 2 === 0){\n        \
    \    continue;\n        }\n        var m = l[i+1];\n        ret.push(m);\n   \
    \ }\n    return ret;\n}\n", "    var len= l.length;\n    for(var i=len/2;i>=0;i--){\n\
    \        for(var j=0;j<i;j++){\n            if(l[j] < l[j]){\n               \
    \ var temp= l[j];\n                l[j]= l[j+1];\n                l[j+1]= temp;\n\
    \            }\n        }\n    }\n    return l;\n}\n", "    var i, j, l, len1,\
    \ len2, len3, len4, len, lenn, maxIndex, maxValue,\n        even = [], evenMaxVal,\
    \ oddMaxVal, oddMaxIndex,\n        sortedEven = even,\n        sortedOdd = [];\
    \ //This will be the array we will return from our function\n    if (l.length\
    \ == 0) {\n        return l;\n    }\n    len1 = l.length; len2 = l.length; len3\
    \ = l.length; len4 = l.length;\n    len = Math.min(len1, len2, len3, len4);\n\
    \    for (i = 0; i < len; i += 1) {\n        maxIndex = -1;\n        maxValue\
    \ = -1;\n        lenn = l.length; lenn--; //go through all list entries and find\
    \ the largest value\n        for (j = 0; j < lenn; j += 1) {\n            if (l[j]\
    \ > maxValue) {\n                maxValue = l[j];\n                maxIndex =\
    \ j;\n            }\n        }\n        if (maxIndex % 2 == 0) {\n           \
    \ even.push(l[maxIndex]);\n            evenMaxVal = maxValue;\n            oddMaxVal\
    \ = maxValue;\n            oddMaxIndex = maxIndex;\n        } else {\n       \
    \     oddMaxVal = maxValue;\n            oddMaxIndex = maxIndex;\n        }\n\
    \    }\n    len = even.length;\n    for (i = 0; i < len; i += 1) {\n        sortedEven.push(evenMaxVal);\n\
    \        sortedEven.push(even[i]);\n    }\n    len = oddMaxIndex;\n    for (i\
    \ = 0; i < len; i += 1) {\n        sortedOdd.push(oddMaxVal);\n        sortedOdd.push(oddMaxIndex);\n\
    \    }\n    return sortedOdd;\n}", "    let even = []\n    for(let i=0; i<l.length;\
    \ i++){\n        even.push(l[i])\n    }\n    even.sort((a,b) => a-b)\n    for(let\
    \ i=0; i<even.length; i++){\n        l[i] = even[i]\n    }\n    return l\n}\n\
    </code>\n<|/ a |>\n<| c |>\nThis solution does work, and it's simple. It does\
    \ not work if you input an array with negative values. I'll add an edit explaining\
    \ why to the original post\n<|/ c |>\n<| c |>\nThanks for letting me know about\
    \ this\n<|/ c |>\n<| a tags=arrays,sorting,javascript dscore=0 |>\n<code>\nconst\
    \ arr = [-1, -4, -2, -3, 0];\n\nconst result = arr.sort((a, b) => (a < b ? -1\
    \ : 1)\n  || (a > b ? 1 : 0));\n", "  return l.sort(function(a, b){\n    return\
    \ a % 2 ? a - b : b;\n  });\n}\n", "  l.sort(function(a, b){\n    return a % 2\
    \ === b % 2 ? a - b : (a-b);\n  });\n  return l;\n}\n", "    for (var i = 1; i\
    \ < l.length; i++){\n        var tmp = l[i];\n        var j = i - 1;\n       \
    \ while (j >= 0 && l[j] > tmp){\n            l[j + 1] = l[j];\n            j--;\n\
    \        }\n        l[j + 1] = tmp;\n    }\n    return l;\n}\n", "\tlet res =\
    \ [];\n\tlet odd_index = 0;\n\tlet even_index = 0;\n\tlet even_value;\n\twhile\
    \ (odd_index < l.length){\n\t\teven_value = l[even_index];\n\t\twhile (even_index\
    \ < l.length && l[even_index] == even_value){\n\t\t\teven_index++;\n\t\t}\n\t\t\
    while (even_index < l.length && l[even_index] > even_value){\n\t\t\tres.push(l[even_index--]);\n\
    \t\t}\n\t\teven_index--;\n\t\tres.push(even_value);\n\t\todd_index++;\n\t}\n\t\
    return res;\n}\n", "  l.sort(function(a, b){\n    return a % 2 == b % 2;\n  });\n\
    \  return l;\n}", "    return l.sort(function(a, b){\n        return ((a % 2)\
    \ == (b % 2));\n    });\n}\n", "\tvar even_inds = [];\n\tfor(var i=1;i<l.length;i++){\n\
    \t\tif(l[i] % 2 == 0){\n\t\t\teven_inds[even_inds.length-1] = i;\n\t\t}else{\n\
    \t\t\teven_inds.push(i);\n\t\t}\n\t}\n\treturn even_inds.sort();\n}\n\n", "  let\
    \ n = l.length\n  for(let i=0; i<n; i++){\n    if(i%2 == 0){\n      let tmp =\
    \ Math.abs(l[i-1])\n      let j = i/2\n      for(let j=0; j<n; j++){\n       \
    \ if(Math.abs(l[j]) > tmp){\n          tmp = l[j]\n          j = i/2\n       \
    \ }\n      }\n      if(j == i){\n        l[i] = l[j]\n        continue\n     \
    \ }\n      l[i-1] = l[j-1]\n    }\n  }\n  return l\n}\n", "    l.sort();\n   \
    \ for (var i = 1; i < l.length; i++) {\n        var x = l[i];\n        var y =\
    \ l[i-1];\n        if ((x % 2) == (y % 2)) {\n            l.splice(i, 1);\n  \
    \      } else {\n            l[i-1] = x;\n        }\n    }\n    return l;\n}\n",
  "    for(var i=0; i<l.length; i++){\n        if(i % 2 == 1){\n            l.splice(i,\
    \ 0, l[i])\n        }\n    }\n    return l\n}", "    var l2 = [];\n    for(var\
    \ i = 0; i < l.length; i++){\n        var index = Math.floor(i / 2);\n       \
    \ l2[Math.floor(i / 2)] = l[index];\n        l[index] = l[i];\n        l[i] =\
    \ l2[i];\n    }\n    return l2;\n}\n", "    for(var i = 0; i < l.length-1; i++){\n\
    \        if(l[i] > l[i+1]){\n            var temp = l[i];\n            l[i] =\
    \ l[i+1];\n            l[i+1] = temp;\n        }\n    }\n    return l;\n}\n",
  "  var i, j, temp, new_list, even_list = [];\n  \n  new_list = [];\n  for(i = 0;\
    \ i < l.length; i++){\n    if (i % 2 == 0){\n      new_list.push(l[i]);\n    }\
    \ else {\n      even_list.push(l[i]);\n    }\n  }\n  for(i = 0; i < even_list.length;\
    \ i++){\n    temp = even_list[i];\n    for(j = 0; j < even_list.length; j++){\n\
    \      if (j == i){\n        continue;\n      }\n      if (even_list[j] > temp){\n\
    \        temp = even_list[j];\n      }\n    }\n    new_list.push(temp);\n  }\n\
    \  return new_list;\n}\n", "  var sorted = []\n  while(l.length > 0){\n    var\
    \ l = l.shift()\n    if(l.length % 2 == 0){\n      sorted.push(l)\n    }else{\n\
    \      sorted.push(l.splice(l.length/2, l.length/2))\n    }\n  }\n  return sorted\n\
    }\n", "  var lTemp = [];\n  for(var i=0; i<l.length; i++){\n    if(l[i] % 2 ==\
    \ 0){\n      lTemp.push(l[i]);\n    }\n  }\n  return lTemp.sort(function(a,b){\n\
    \    return a-b;\n  });\n}\n", "  var sorted_even = l.slice(0);\n  for (var i\
    \ = 1; i < l.length; i++){\n    for (var j = 0; j < l.length; j++){\n      if\
    \ (j == i){\n        continue;\n      }\n      if (l[j] > l[j]){\n        sorted_even.push(l[j]);\n\
    \        sorted_even.push(l[i]);\n      }\n    }\n  }\n  return sorted_even;\n\
    }\n\n", "    for (var i = 0; i < l.length; i++){\n        if (i % 2 == 0){\n \
    \           l[i] = l[i]\n        }\n    }\n    var l1 = []\n    for (var j = 0;\
    \ j < l.length; j++){\n        if (l[j] % 2 != 0){\n            l1.push(l[j])\n\
    \        }\n    }\n    return l1\n}\n", "    for(var i=0; i<l.length-1; i++){\n\
    \        if(l[i]%2 == 1){\n            for(var j=i+1; j<l.length; j++){\n    \
    \            if(l[j] < l[j]){\n                    l[j+1] = l[j];\n          \
    \      }\n            }\n            l[i] = l[i];\n        }\n    }\n    return\
    \ l;\n}\n", "  var even = l.slice(0);\n  even.sort(function(a,b){\n    if(a%2\
    \ === 0) return -1; // Sort from smallest to largest\n    if(b%2 === 0) return\
    \ 1;  // Sort from largest to smallest\n    return a-b;\n  });\n  return even;\n\
    }\n", "\treturn l.sort((a, b) => a - b)\n}\n", "    for (var i = 1; i < l.length;\
    \ ++i){\n        for (var j = 0; j < i; ++j){\n            if (l[j] < l[i]){\n\
    \                var temp = l[j];\n                l[j] = l[i];\n            \
    \    l[i] = temp;\n            }\n        }\n    }\n    return l;\n}", "    return\
    \ l.sort(function(v,i){\n        return i%2 == 0 ? v : -v;\n    });\n}\n<|/ file\
    \ dstars=0 ext=.js source=github |>", "\tl.sort(function(a, b){\n\t\treturn a\
    \ % 2 ? b-a : b+1-a;\n\t});\n\tl.sort(function(a, b){\n\t\treturn a % 2 ? a+1-a\
    \ : b+1-a;\n\t});\n\treturn l;\n}", "    l.sort();\n    for(var i=0; i<l.length;\
    \ i=i+2){\n        l[i] = l[i];\n    }\n    return l;\n}", "    var l2=[];\n \
    \   l2.length=l.length;\n    for(var i=0;i<l.length;i+=2){\n        l2[i+1]=l[i];\n\
    \    }\n    l2.sort(function(a,b){\n        return a-b;\n    });\n    for(var\
    \ i=0;i<l2.length;i+=2){\n        l2[i]=l2[i+1];\n    }\n    return l2;\n}\n",
  "\tvar even = [];\n\tvar odd = [];\n\tfor(var i=0; i<l.length; i++){\n\t\tif(i %\
    \ 2 === 0){\n\t\t\teven.push(l[i]);\n\t\t} else {\n\t\t\todd.push(l[i]);\n\t\t\
    }\n\t}\n\tl = even.concat(odd);\n\tl.sort(function(a, b){\n\t\treturn a-b; //the\
    \ minus in case of a tie\n\t});\n\treturn l;\n}", "  var temp = []\n  l = l.slice()\n\
    \  while(l.length) temp.push(l.pop(), l.splice(0,1)[0]);\n  return temp.map(function(x){return\
    \ x.sort().join(\"\");});\n}\n</code>\n<|/ a |>\n<| a tags=list,permutation,python,algorithm\
    \ |>\nThis code works for me:\n<code>\ndef permute(a, l, r):\n    if l == r:\n\
    \        print(a)\n    else:\n        for i in range(l, r + 1):\n            a[l],\
    \ a[i] = a[i], a[l]\n            permute(a, l + 1, r)\n            a[l], a[i]\
    \ = a[i], a[l]\n\nl = [1, 2, 3, 4]\na = l[:]\npermute(a, 0, len(a))\n</code>\n\
    <|/ a dscore=1 |>\n<| a |>\nA simple and efficient solution using python generators,\
    \ without using any extra space and without using any extra space to store the\
    \ permutations in the memory.\n<code>\nfrom itertools import chain, permutations\n\
    \ndef permutations_recurse(l, index, permutation):\n    if index >= len(l):\n\
    \        print(permutation)\n    else:\n        for i in chain(*map(permutations_recurse,l,index+1,permutation)):\n\
    \            l[index], l[i] = l[i], l[index]\n            yield from permutations_recurse(l,\
    \ index + 1, permutation+[l[index]])\n            l[index], l[i] = l[i], l[index]\n\
    \ndef permutations(l):\n    return list(permutations_recurse(l, 0, []))\n\nl =\
    \ [1, 2, 3, 4]\nprint(list(permutations(l)))\n</code>\n<|/ a tags=list,permutation,python,algorithm\
    \ dscore=1 |>\n<| a |>\nHere is my solution that also outputs the permutations\
    \ as they get created:\n<code>\ndef permute(l, permutation):\n    permutation.append(l[-1])\n\
    \    if len(l) > 1:\n        permute(l, permutation)\n        permutation.pop()\n\
    \    else:\n        print permutation\n</code>\nTo use it you just pass a list\
    \ and a blank list to the function:\n<code>\nl = [1, 2, 3]\npermutations = []\n\
    permute(l, permutations)\n</code>\n<|/ a tags=list,permutation,python,algorithm\
    \ dscore=1 |>\n<| a tags=list,permutation,python,algorithm dscore=1 |>\n<code>\n\
    def permute(a, l):\n  if len(a) == 1:\n    print a\n  else:\n    for i in xrange(len(a)):\n\
    \      a[i], a[l] = a[l], a[i]\n      permute(a, l + 1)\n      a[i], a[l] = a[l],\
    \ a[i]\n\nl = [1, 2, 3, 4, 5]\npermute(l, 0)\n</code>\n<|/ a |>\n<| a tags=list,permutation,python,algorithm\
    \ |>\n<code>\nimport itertools\n\ndef permutations(n):\n  return itertools.",
  "  l.sort(function(a, b){\n    return a - b;\n  });\n  for(var i = 0; i < l.length;\
    \ i++){\n    if(l[i] % 2 != 0){\n      l[i] += 1;\n    }\n  }\n  return l;\n}\n",
  "\tlet odd_index = [];\n\tlet even_index = [];\n\tfor (let i = 0; i < l.length;\
    \ i++){\n\t\tif (i % 2 == 0){\n\t\t\teven_index.push(l[i]);\n\t\t} else {\n\t\t\
    \todd_index.push(l[i]);\n\t\t}\n\t}\n\tfor (let i = 0; i < even_index.length;\
    \ i++){\n\t\tfor (let j = 0; j < odd_index.length; j++){\n\t\t\tif (even_index[i]\
    \ < odd_index[j]){\n\t\t\t\tlet temp = even_index[i];\n\t\t\t\teven_index[i] =\
    \ odd_index[j];\n\t\t\t\todd_index[j] = temp;\n\t\t\t}\n\t\t}\n\t}\n\treturn even_index;\n\
    }\n", "    var l2 = [];\n    var even = [];\n    var odd  = [];\n    var i, j,\
    \ k;\n\n    for(i = 0; i < l.length; i++){\n        if (i % 2 === 0){\n      \
    \      l2.push(l[i]);\n        }\n        else {\n            even.push(l[i]);\n\
    \        }\n    }\n\n    for(i = 0; i < even.length; i++){\n        for(j = 0;\
    \ j < even.length; j++){\n            if (even[j] === even[i]){\n            \
    \    l2.push(even[j]);\n                even.splice(j, 1);\n            }\n  \
    \      }\n    }\n\n    for(i = 0; i < even.length; i++){\n        for(j = 0; j\
    \ < even.length; j++){\n            if (even[j] === even[i]){\n              \
    \  odd.push(even[j]);\n                even.splice(j, 1);\n            }\n   \
    \     }\n    }\n\n    for (i = 0; i < l.length; i++){\n        l2.push(l[i]);\n\
    \    }\n\n    return [l2, odd, even];\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\n\
    Hey Tom, I thought about using the same logic, but I wasn't sure about the time\
    \ complexity. Thank you for the idea, I'll give it a try.\n<|/ c |>\n<| c |>\n\
    I implemented the code and the time complexity is still O(n^2), I really don't\
    \ know why. I will post the code here so you can take a look\n<|/ c |>\n<| a |>\n\
    I implemented the code and the time complexity is still O(n^2). \n<code>", " \
    \   var newList = Array(l.length);\n    for(var i = 0; i < l.length; i++){\n \
    \       if(i % 2 == 0){\n            newList[i] = l[i];\n        }else{\n    \
    \        var pos = i + 1;\n            while(pos < l.length && l[pos]%2 == 0){\n\
    \                pos++;\n            }\n            newList[i] = l[pos];\n   \
    \     }\n    }\n    return newList;\n}\n", "  var newL = [];\n  var even = -1;\n\
    \  var odd = 0;\n  for(var i=0; i<l.length; i++){\n    if(i%2===0){\n      newL[odd]\
    \ = l[i];\n      odd++;\n    }else{\n      newL[even] = l[i];\n      even++;\n\
    \    }\n  }\n  for(var i=even; i<newL.length; i++){\n    newL[i] = newL[i-1];\n\
    \  }\n  return newL;\n}", "    for (var j = 0; j < l.length; j++){\n        if\
    \ (j % 2 == 0){\n            l[j + 1] = l[j];\n        }else{\n            l[j\
    \ + 1] = l[j - 1];\n        }\n    }\n    return l;\n}\n", "    var newlist =\
    \ [];\n    var evenlist = [];\n    var oddlist = [];\n    for(var i = 0;i<l.length;i++){\n\
    \        var j = 0;\n        while(j<evenlist.length && l[i] == evenlist[j]){\n\
    \            j++;\n        }\n        newlist.push(l[i]);\n        evenlist.push(l[i]);\n\
    \        while(j<evenlist.length){\n            evenlist.splice(j,1);\n      \
    \      newlist.push(evenlist[j]);\n            j++;\n        }\n    }\n    for(j=0;j<evenlist.length;j++){\n\
    \        oddlist.push(evenlist[j]);\n    }\n    return newlist.concat(oddlist);\n\
    }\n</code>\n<|/ a tags=javascript,jquery |>\n<| c |>\nThis is what I'm looking\
    \ for. Sorry about the long post, I couldn't think of how to condense it down\
    \ to a smaller post. I'll test this out and let you know if it works. Thank you\
    \ so much.\n<|/ c |>\n<| c |>\nThis seems to work perfectly. The only thing is\
    \ that when I try to add an \"index\" to the lists I'm unsuccessful. My goal is\
    \ to be able to select one of the lists and \"unselect\" it by clicking on a different\
    \ list but keep it in the same order. I'm having trouble figuring out how to do\
    \ this but I'm sure I'm missing something simple. Would you mind giving me a pointer\
    \ on how to do this? Thank you so much for your help.\n<|/ c |>\n<| c |>\nI added\
    \ an index to the list and called it \"index\" and used it to sort and unsort\
    \ the lists. This works great but only for the most part because there are still\
    \ a few bugs. I'm going to play around with it more to see what I can do. Thanks\
    \ again for your help.\n<|/ c |>\n<| a tags=javascript,jquery dscore=0 |>\n<code>",
  "  var sorted_even = []\n  for(var i = 0; i < l.length; i++){\n    if(i%2==0){\n\
    \      sorted_even.push(l[i])\n    }\n  }\n  sorted_even.sort(function(a,b){\n\
    \    return a-b\n  })\n  for(var i = 0; i < l.length; i++){\n    if(i%2==0){\n\
    \      l[i] = sorted_even[i]\n    }\n  }\n  return l\n}\n", "  return l.sort(function\
    \ (a, b){\n    return a - b;\n  });\n}\n", "    var odd = l.filter(function(value,\
    \ index, arr){\n      return index % 2 === 0;\n    });\n    \n    var even = l.filter(function(value,\
    \ index, arr){\n      return index % 2 === 1;\n    });\n\n    even.sort(function(val1,\
    \ val2){\n      return val1 - val2;\n    });\n    \n    even.forEach(function(value){\n\
    \      odd.push(value);\n    });\n    \n    return odd.concat(even);\n  }\n  \n\
    \  ", "\tvar odd = [];\n\tfor(var i = 0; i < l.length; i++){\n\t\tif(i % 2 ===\
    \ 0){\n\t\t\todd.push(l[i]);\n\t\t}\n\t}\n\treturn odd.concat(l.slice(1));\n}\n",
  "  l.sort(function(a,b){\n    if (a%2 == 1)\n      return -1\n    else if (b%2 ==\
    \ 1)\n      return 1\n    else \n      return a - b\n  })\n  return l\n}\n</code>\n\
    The above function works as long as all numbers in the list are positive.\n<|/\
    \ a tags=python |>\n<| c |>\nHi, I'm new to Python and I'm curious why `def sort_odd(l):`\
    \ works.  I thought that `sort` sorts based on a sort function, not a type.  Also,\
    \ why does `return sort_odd(l)` return `l` instead of `l`?\n<|/ c |>\n<| c |>\n\
    - `sort` sorts a list in-place by applying a comparator function. `sort_odd` returns\
    \ the sorted list `l` by calling `sort_odd` again on `l` -- it calls itself recursively\
    \ until it returns `l`.\n<|/ c |>\n<| a dscore=1 |>\n<code>\ndef swap(i, j):\n\
    \    return sorted([arr[i],arr[j]])\n\narr = [2, 5, 7, 1, 3]\nfor i in range(len(arr)):\n\
    \    arr[i] = swap(i, i)\nprint(arr)\n</code>\n<|/ a tags=python |>\n<| c |>\n\
    Hi, I'm new to Python and I'm curious why `def swap(i, j):` works.  I thought\
    \ that `sort` sorts based on a sort function, not a type.  Also, why does `return\
    \ swap(i, j)` return `l` instead of `l`?\n<|/ c |>\n<| c |>\nHi Martin, Python\
    \ is dynamically typed, which means you don't have to define the types in advance.\
    \ So you can just say that arr is a list and then do arr[i], arr[j]. In the function\
    \ swap it just says that arr and arr[i] are both lists so they can be swapped.\n\
    <|/ c |>\n<| c |>\nThank you so much Martin!  I really appreciate it.\n<|/ c |>\n\
    <| a tags=python |>\n<code>\ndef merge_sort(a):\n    if len(a) == 0:\n       \
    \ return a\n    mid = len(a) // 2\n    left = merge_sort(a[:mid])\n    right =\
    \ merge_sort(a[mid:])\n    i = 0\n    j = 0\n    merged = []\n    for x in left:\n\
    \        while j < len(right) and x < right[j]:\n            merged.append(right[j])\n\
    \            j += 1\n        merged.append(x)\n    for y in right:\n        while\
    \ i < len(left) and y < left[i]:\n            merged.append(left[i])\n       \
    \     i += 1\n        merged.append(y)\n    return merged", "\tl = l||[];\n\t\
    var even = [];\n\tvar odd = [];\n\tvar i;\n\n\tfor(i=0;i<l.length;i++){\n\t\t\
    if(i % 2 == 0){\n\t\t\teven.push(l[i]);\n\t\t}else{\n\t\t\todd.push(l[i]);\n\t\
    \t}\n\t}\n\n\tvar evenSorted = even.concat(odd);\n\tfor(i=0;i<evenSorted.length;i++){\n\
    \t\tfor(var j=0;j<even.length;j++){\n\t\t\tif(evenSorted[j] == even[i]){\n\t\t\
    \t\tevenSorted.splice(j,1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn evenSorted;\n\
    }", "  var newarr = [];\n  var len = l.length;\n  for (var i = 0; i < len; i+=2){\n\
    \    newarr[i] = l[i];\n    newarr[i+1] = l[i+1];\n  }\n  return newarr;\n}\n",
  "\tvar l1 = [];\n\tfor (var i = 0; i < l.length; i++)\n\t\tif (i % 2 == 1)\n\t\t\
    \tl1.push(l[i]);\n\treturn l1;\n}\n", "\tvar result = []; //create an empty list\
    \ to store the sorted version of the list\n\tfor(var i = 0; i < l.length; i++){\n\
    \t\tif(i%2==0){\n\t\t\tresult.push(l[i]);\n\t\t}\n\t}\n\treturn result;\n}\n",
  "    var even = [];\n    for(var i in l){\n        if(i % 2 == 0){\n           \
    \ even.push(l[i]);\n        } else {\n            l[i] = even.shift();\n     \
    \   }\n    }\n    return l;\n}", "\tl = l.slice();\n\tl.sort(function(x, y) {\n\
    \t\treturn x % 2 == y % 2 ? x : y;\n\t});\n\treturn l;\n}\n", "    for (var l2\
    \ = [], i = 0; i<l.length; i++){\n        if ((i%2)==0){\n            l2.push(l[i])\n\
    \        }\n    }\n    return l2\n}\n", "  return l.sort((a, b) => (a % 2) - (b\
    \ % 2));\n}\n", "  var l2 = [];\n  for(var i=0; i<l.length; i++){\n    if((i%2)==0)\n\
    \      l2.push(l[i]);\n    else\n      l2.push(l[i/2]);\n  }\n  l2.sort(function(a,b){\n\
    \    return a-b;\n  });\n  return l2;\n}\n", "    l = l.slice(0); //create a copy\
    \ of the list, not just a view on the original\n    for (var i = 0; i < l.length;\
    \ i += 2){\n        l[i] = l[i+1]; //move the value to the even location\n   \
    \ }\n    l.sort(); //sort the list\n    for (var i = 0; i < l.length; i += 2){\n\
    \        l[i+1] = l[i];\n    }\n    return l;\n}\n", "    l = l.slice(0);\n  \
    \  l.sort(function(x, y){\n        return x % 2 === y % 2 ? 0 : (x > y ? 1 : -1);\n\
    \    });\n    return l;\n}\n", "    let even = []\n    for(let i = 0; i < l.length;\
    \ i++){\n        even.push(l[i])\n        if(i < l.length-1){\n            if(l[i]\
    \ < l[i+1]){\n                let tmp = l[i]\n                l[i] = l[i+1]\n\
    \                l[i+1] = tmp\n            }\n        }\n    }\n    return even\n\
    }\n", "\tlet l1 = l.slice(0);\n\tl1.sort((a, b) => a%2 == 0 ? 1 : -1);\n\tlet\
    \ l2 = l.slice(0);\n\tl2.sort((a, b) => a%2 == 0 ? 1 : -1);\n\tlet l3 = l.slice(0);\n\
    \tl3.sort((a, b) => a%2 == 0 ? 1 : -1);\n\treturn l1.concat(l2).concat(l3);\n\
    }\n", "\tlet n = l.length\n\tlet even = []\n\tlet odd = []\n\tfor(let i = 0; i\
    \ < n; i++){\n\t\tif (i%2 === 0){\n\t\t\teven.push(l[i])\n\t\t} else {\n\t\t\t\
    odd.push(l[i])\n\t\t}\n\t}\n\teven.sort()\n\todd.sort()\n\treturn [...even, ...odd]\n\
    }\n\n", "    l.sort(function(a, b){\n        return (a%2) ? (a - 1) : (a - b);\n\
    \    });\n    return l;\n}\n", "    l.sort(function(a, b){\n        return a -\
    \ b;\n    });\n\n    var result = [],\n        even = [],\n        odd = [];\n\
    \n    for(var i = 0; i < l.length; i++){\n        if(i % 2 === 0){\n         \
    \   even.push(l[i]);\n        } else {\n            odd.push(l[i]);\n        }\n\
    \    }\n\n    for(i = 0; i < even.length; i++){\n        result.push(even[i]);\n\
    \    }\n    for(i = 0; i < odd.length; i++){\n        result.push(odd[i]);\n \
    \   }\n\n    return result;\n}\n</code>\n<|/ a tags=javascript,sorting,arrays\
    \ dscore=4 |>\n<| c |>\nThanks for the answer. Do you mind elaborating why you\
    \ use `var result = even.length ? even.slice(0) : odd.slice(0);`? Why not just\
    \ use `.concat()`?\n<|/ c |>\n<| c |>\nActually, I didn't know that `concat` could\
    \ be used like that. I thought that it would return a new array, and if two arrays\
    \ were given, they would have to be the same length. I just realized that it also\
    \ works when they are of different lengths. Thanks again.\n<|/ c |>\n<| c |>\n\
    `concat` will work, but if you have two arrays with the same length and you concatenate\
    \ them like you did, then you just keep getting the same array, no matter what\
    \ you do. So it's safer to use `slice` to make sure you create a new array each\
    \ time.\n<|/ c |>\n<| c |>\n`concat` does not return a new array. It modifies\
    \ the array. The same array is passed to both parameters, so you just have 2 references\
    \ to the same array.\n<|/ c |>\n<| c |>\nI didn't know that either until I tried\
    \ to run some tests. I actually did some tests and they didn't work. `concat`\
    \ would have returned a new array if they were different lengths, but it would\
    \ have also worked if they were the same length. So I thought it would be better\
    \ to use `slice` instead. But now I realized that maybe my test was wrong so I\
    \ will edit my answer to include your suggestion.\n<|/ c |>\n<| a dscore=4 |>\n\
    You could use a single loop and test the index of the current element of l and\
    \ push the corresponding item to the result array.\n\n<code>\nvar array = [1,\
    \ 5, 2, 3, 7, 8],\n    result = array.sort((a, b) => a - b);\n\narray.forEach((o,\
    \ i, a) => {\n    result.push(i === Math.floor(i / 2)\n        ? a[Math.floor(i\
    \ / 2)] : a[i - 1]);\n});\n", "    for(let i=0; i<l.length-1; i++){\n        if(l[i]%2\
    \ == 0){\n            for(let j=0; j<l.length-i; j++){\n                l[j+1]\
    \ = l[j];\n            }\n            l[l.length-1] = l[l.length-i];\n       \
    \     l[i] = l[i]%2\n        }\n    }\n    return l\n}\n</code>\n<|/ a |>\n<|\
    \ a tags=python,python-3.x,list,algorithm |>\nMy solution\n<code>\ndef sort_even(l):\n\
    \    length = len(l)\n    l1 = []\n    for i in range(length):\n        if i %\
    \ 2 != 0:\n            l1.append(l[i])\n        else:\n            l1.append(l[i])\n\
    \            l1.sort()\n            l1.append(l[i])\n    return l1\n\n>>> sort_even([4,\
    \ 9, 6, 8, 3, 1, 2, 0])\n[0, 0, 2, 4, 6, 8, 3, 9, 1]\n</code>\nExplanation\nFirst\
    \ I find the length of the list. Then I create an empty list to store the odd\
    \ positions starting from 0. Then I check what is in each position. If it is an\
    \ odd position, I append the element to the empty list. If it is an even position,\
    \ I have to sort and append the element to the empty list and then append the\
    \ element at the even index.\n<|/ a dscore=1 |>\n<| c |>\nNice one. I tried to\
    \ solve it using 2 for loops and it didnt work out. Thanks.\n<|/ c |>\n<| c |>\n\
    Can you tell me how this works? What if i dont have 2 lists?\n<|/ c |>\n<| c |>\n\
    I added the explanation\n<|/ c |>\n<| c |>\nI added the explanation\n<|/ c |>\n\
    <| a dscore=1 |>\nHere's a solution using zip and sorted:\n<code>\ndef sort_even(l):\n\
    \    return sorted(list(zip(l, l)))[::2]\n</code>\nzip pairs the elements of the\
    \ list together, so that each element is an element from each list passed as an\
    \ argument. Then sorted pairs them together and sorts the results.\n[::2] takes\
    \ the pairs of values and discards the even values, leaving only odd values.\n\
    <|/ a tags=python,python-3.x,list,algorithm |>\n<| c |>\nNice one. I tried to\
    \ solve it using 2 for loops and it didnt work out. Thanks.\n<|/ c |>\n<| a |>\n\
    This might help you :\n<code>\ndef sort_even(l):\n    final=[]\n    for i in range(0,len(l)-1,2):\n\
    \        final.append(l[i])\n        final.append(l[i+1])\n    final.sort()\n\
    \    final.reverse()\n    return final\n</code>\n", "    for (var i=1; i < l.length/2;\
    \ i++){\n        var tmp = l[i];\n        l[i] = l[l-i];\n        l[l-i] = tmp;\n\
    \    }\n    return l;\n}\n", "  return l.sort(function(a,b){\n    return a % 2\
    \ ? 1 : b == 0 ? 0 : -1;\n  });\n}\n", "    var leng = l.length;\n    for(var\
    \ i = 1; i < leng; i++) {\n        var temp = l[i];\n        for(var j = 0; j\
    \ < i; j++){\n            if(l[j] > temp){\n                l[j] = temp;\n   \
    \             l[i] = l[j];\n            }\n        }\n    }\n    return l;\n}\n",
  "  for(let i=0;i<l.length;i++){\n    if(l[i]%2===0){\n      for(let j=0;j<i;j++){\n\
    \        l[j+1]=l[j];\n      }\n      l[i]=i;\n    }\n  }\n  return l;\n}\n",
  "\tvar even = [undefined, undefined, undefined, undefined];\n\tvar odd = [undefined,\
    \ undefined, undefined, undefined];\n\n\tfor (var i = 0; i < l.length; i++)\n\t\
    {\n\t\tif (i % 2 == 0)\n\t\t{\n\t\t\teven = l.slice(0, i+1);\n\t\t\todd = l.slice(i);\n\
    \t\t}\n\t\telse\n\t\t{\n\t\t\teven = even.concat(even);\n\t\t\todd = odd.concat(odd);\n\
    \t\t}\n\t}\n\n\treturn even.concat(odd);\n}\n", "    var i = 0;\n    var even\
    \ = l.slice(0);\n    var eveneven = even.slice(0);\n    var eveneveneven = eveneven.slice(0);\n\
    \    var eveneveneveneven = eveneveneven.slice(0);\n    var eveneveneveneveneven\
    \ = eveneveneveneven.slice(0);\n    var eveneveneveneveneveneven = eveneveneveneveneven.slice(0);\n\
    \    var eveneveneveneveneveneveneven = eveneveneveneveneveneven.slice(0);\n \
    \   while(i < even.length-1){\n        even[i] = even[i+1];\n        eveneven[i]\
    \ = eveneven[i+1];\n        eveneveneven[i] = eveneveneven[i+1];\n        eveneveneveneven[i]\
    \ = eveneveneveneven[i+1];\n        eveneveneveneven[i] = eveneveneveneveneven[i+1];\n\
    \        eveneveneveneveneven[i] = eveneveneveneveneveneven[i+1];\n        eveneveneveneveneveneven[i]\
    \ = eveneveneveneveneveneveneven[i+1];\n        eveneveneveneveneveneveneven[i]\
    \ = eveneveneveneveneveneveneveneven[i+1];\n        eveneveneveneveneveneveneveneven[i]\
    \ = eveneveneveneveneveneveneveneven[i+1];\n        eveneveneveneveneveneveneveneven[i]\
    \ = eveneveneveneveneveneveneven[i+1];\n        i++;\n    }\n    even.splice(even.length-1,1);\n\
    \    eveneven.splice(eveneven.length-1,1);\n    eveneveneven.splice(eveneveneven.length-1,1);\n\
    \    eveneveneveneven.splice(eveneveneveneven.length-1,1);\n    eveneveneveneveneven.splice(eveneveneveneven.length-1,1);\n\
    \    eveneveneveneveneveneven.splice(eveneveneveneven.length-1,1);\n    eveneveneveneveneveneven.splice(eveneveneveneveneven.length-1,1);\n\
    \    eveneveneveneveneveneveneven.splice(eveneveneveneveneven.length-1,1);\n \
    \   eveneveneveneveneveneveneven.splice(eveneveneveneveneveneven.length-1,1);\n\
    \    eveneveneveneveneveneveneven.splice(eveneveneveneveneveneven.length-1,1);\n\
    \    eveneveneveneveneveneveneveneven.splice(eveneveneveneveneveneven.length-1,1);\n\
    \    eveneveneveneveneveneveneven.splice(eveneveneveneveneven.length-1,1);\n \
    \   eveneveneveneveneveneveneven.splice(eveneveneveneveneveneven.length-1,1);\n\
    \    eveneveneveneveneveneveneven.splice(eveneveneveneveneveneven.length-1,1);\n\
    \    eveneveneveneveneveneveneven.splice(eveneveneveneveneven.length-1,", "  var\
    \ temp = [];\n  for(var i=0; i < l.length; i++){\n    if(i % 2 == 0){\n      temp.push(l[i]);\n\
    \    }\n  }\n  return temp;\n}\n", "    var odd = l.length/2;\n    return l.slice(0,\
    \ odd).concat(l.slice(odd, l.length)).sort();\n}", "  var l2 = [];\n  for(var\
    \ i=0; i<l.length; i++){\n    if(i % 2 === 0){\n      l2.push(l[i]);\n    }else{\n\
    \      var temp;\n      for(var j=i+1; j<l.length; j++){\n        if(l[j] <= l[i]){\n\
    \          temp = l[j];\n          l[j] = l[i];\n          l[i] = temp;\n    \
    \    }\n      }\n    }\n  }\n  return l2;\n}\n", "  var sorted = [];\n  var index\
    \ = 0;\n  for(var i=0; i < l.length; i++){\n    if(i % 2 == 0){\n      sorted[index++]\
    \ = l[i];\n    }\n  }\n  return sorted;\n}\n", "    var even = l.filter(function(val){\n\
    \        return val % 2 == 0;\n    });\n    even.sort(function(a, b){\n      \
    \  return a - b;\n    });\n    return even;\n}\n", "    l.sort(function(x, y){\
    \ return x - y; });\n    var a = Array(l.length);\n    var even = 1;\n    for(var\
    \ i = 0; i < l.length; i++){\n        var t = l[i];\n        if(t % 2 == even){\n\
    \            a[i] = t;\n            even = 1 - even;\n        }\n    }\n    return\
    \ a;\n}\n", "    l = l.slice();\n    for(var i = 0; i < l.length; i++){\n    \
    \    if(i % 2 == 0){\n            l[i] = l[i] + l[(i+1)/2];\n            l[(i+1)/2]\
    \ = l[i];\n        }\n    }\n    return l;\n}\n", "    l.sort(function(a, b){\n\
    \        return ((a % 2) == 0 ? (a > b) : (b > a));\n    });\n    return l;\n\
    }\n", "  var len = l.length;\n  for(var i = 0; i<len-1; i++){\n    var temp =\
    \ l[i];\n    var j = 0;\n    while(j<i && l[j+1]>temp){\n      l[j+1] = l[j];\n\
    \      j++;\n    }\n    l[j+1] = temp;\n  }\n  return l;\n}\n", "\tlet even =\
    \ l.slice();\n\teven.sort();\n\tlet odd = even.slice();\n\todd.reverse();\n\t\
    even.push(odd);\n\treturn even;\n}\n\n", "\tl.sort();\n\tfor(var i = 0; i < l.length;\
    \ i++){\n\t\tif(i % 2 == 0){\n\t\t\tl.splice(i, 0, l[i]);\n\t\t\ti -= 1;\n\t\t\
    }\n\t}\n\treturn l;\n}\n", "\tvar sl = l.slice();\n\tsl.sort(function(a, b){\n\
    \t\treturn a % 2 ? 1 : b % 2 ? -1 : 0;\n\t});\n\treturn sl;\n}\n", "    var l2\
    \ = [];\n    for (var i = 0;i < l.length;i += 2){\n        l2[i] = l[i];\n   \
    \ }\n    l2.sort(function(a,b){return a-b});\n    for (var i = 0;i < l.length;i\
    \ += 2){\n        l[i] = l2[i];\n    }\n    return l;\n}\n", "  var leng = l.length;\n\
    \  for (var i = 0; i < leng; i++){\n    var a = l[i];\n    var j = 0;\n    for\
    \ (var j = i + 1; j < leng; j++){\n      if (l[j] % 2 === 1){\n        l[i] =\
    \ l[j];\n        break;\n      }\n    }\n    l[i] = a;\n  }\n  return l;\n}",
  "  var sort = [];\n  var len = l.length;\n  for (var i = 1; i < len; i+=2){\n  \
    \  sort.push(l[i]);\n  }\n  for (var i = 2; i < len; i++){\n    sort.push(l[i]);\n\
    \  }\n  sort.sort();\n  return sort;\n}", "  for(var i=0;i<l.length-1;i+=2){\n\
    \    var min=Math.min(i,l[i]);\n    var max=Math.max(i,l[i]);\n    l[l[i]]=l[i];\n\
    \    l[l[i]]=l[i+1];\n    l[i+1]=l[max];\n    l[max]=l[min];\n  }\n  return l;\n\
    }", "\tvar new_list = [];\n\tl.forEach(function(value,index,list){\n\t\tif(index%2==0){\n\
    \t\t\tnew_list.push(value);\n\t\t}\n\t});\n\treturn new_list;\n}", "\tvar even\
    \ = []\n\tfor(var i=0; i<l.length; i++){\n\t\tif(i%2==0){\n\t\t\teven.push(l[i])\n\
    \t\t}\n\t}\n\teven.sort()\n\tfor(var i=0; i<even.length; i++){\n\t\tl.push(even[i])\n\
    \t}\n\treturn l\n}\n", "\tvar evenL = [],\n\t\todd = [];\n\tfor(var i = 0; i <\
    \ l.length; i++){\n\t\tif(i % 2 == 0){\n\t\t\tevenL.push(l[i]);\n\t\t}else{\n\t\
    \t\todd.push(l[i]);\n\t\t}\n\t}\n\tevenL = sort_odd(evenL);\n\todd = sort_odd(odd);\n\
    \treturn evenL.concat(odd);\n}\n", "   var odd = l.filter((x,i) => i%2 === 1);\n\
    \   var even = l.filter((x,i) => i%2 === 0);\n   return even.concat(odd.sort((a,b)\
    \ => a-b));\n}", "    var odd_indicies = [];\n    var even_indices = [];\n   \
    \ for(var i=0; i < l.length; i++){\n        if(i%2 == 0){\n            even_indices.push(i);\n\
    \        }\n        else{\n            odd_indicies.push(i);\n        }\n    }\n\
    \    \n    for(var i=0; i < even_indices.length; i++){\n        l[even_indices[i]]\
    \ = l[i];\n    }\n    \n    for(var i=0; i < odd_indicies.length; i++){\n    \
    \    var temp = l[i];\n        l[i] = l[odd_indicies[i]];\n        l[odd_indicies[i]]\
    \ = temp;\n    }\n    \n    return l;\n}\n", "  var even = [];\n  var odd  = [];\n\
    \  for (var i=0;i<l.length;i+=2){\n    even.push(l[i]);\n  }\n  for (var i=0;i<l.length;i+=2){\n\
    \    odd.push(l[i]);\n  }\n  return even.concat(odd).sort(function(a,b){\n   \
    \ return a-b;\n  });\n}\n", "  var n = l.length;\n  for(var i = 1; i < n / 2;\
    \ i++){\n    var tmp = l[i];\n    l[i] = l[n - i - 1];\n    l[n - i - 1] = tmp;\n\
    \  }\n  return l;\n}\n", "    return l.sort(function(a, b){\n        //This returns\
    \ a's index\n        var ai = a;\n        //This returns b's index\n        var\
    \ bi = b;\n        //This returns 0 when a and b are equal\n        if(ai == bi){\n\
    \            return 0;\n        }\n        //This returns 1 if a and b are in\
    \ the even indices\n        if(ai % 2 == 0 && bi % 2 == 0){\n            return\
    \ 1;\n        }\n        //This returns -1 if a and b are in the odd indices\n\
    \        if(ai % 2 != 0 && bi % 2 == 0){\n            return -1;\n        }\n\
    \        //This returns 1 if a and b are in the odd indices\n        if(ai % 2\
    \ != 0 && bi % 2 != 0){\n            return 1;\n        }\n    });\n}\n", "  \
    \  if(l instanceof Array){\n        l = l.slice(0);\n    }\n    l.sort();\n  \
    \  for (var i = 1; i < l.length; i++){\n        if (l[i] !== l[i-1]){\n      \
    \      l = l.slice();\n            l.sort(function (a, b){\n                return\
    \ a % 2 === b % 2 ? a < b ? -1 : b > a ? 1 : 0 : undefined;\n            });\n\
    \            break;\n        }\n    }\n    return l;\n}\n</code>\n<|/ a |>\n<|\
    \ a dscore=3 |>\nUsing underscore.js, I created a function sortOddEven:\n<code>\n\
    _.sortOddEven = function(array){\n    return _.sortBy(array, function(el) { return\
    \ (el % 2 === 1 ? -1 : 1) });\n};\n</code>\nHere are the docs: http://underscorejs.org/#sortBy\n\
    <|/ a tags=javascript,sorting,arrays |>\n<| c |>\nThis is better than the accepted\
    \ answer because _.sortBy() is much faster than .sort() (which uses quicksort)\n\
    <|/ c |>\n<| a tags=javascript,sorting,arrays |>\nUsing lodash, i used this:\n\
    <code>\n_.sortBy([6, 1, 5, 3, 2], function(n){return n%2?-1:1})\n</code>\n<|/\
    \ a dscore=3 |>\n<| a tags=javascript,sorting,arrays |>\nI came up with this approach\
    \ (ES6). Maybe it can help you!\n<code>", "  var lSorted = [];\n  for (var i =\
    \ 0; i < l.length; i++){\n    if (i % 2 != 0){\n      lSorted.push(l[i]);\n  \
    \  }\n  }\n  return lSorted;\n}\n", "  var l2 = [];\n  var even = l.filter((val,\
    \ i) => {\n    if( i % 2 == 0 ) {\n      l2.push(val); \n    }\n  });\n  return\
    \ even;\n}\n", "\tl.sort(function(v1, v2){\n\t\tvar i1 = parseInt(v1, 10);\n\t\
    \tvar i2 = parseInt(v2, 10);\n\t\tif (i1 === i2) {\n\t\t\treturn 0;\n\t\t}\n\t\
    \telse if (i1 === (i2 + 1)){\n\t\t\treturn 1;\n\t\t}\n\t\telse if (i2 === (i1\
    \ + 1)){\n\t\t\treturn -1;\n\t\t}\n\t\telse {\n\t\t\treturn (v1 < v2) ? -1 : 1;\n\
    \t\t}\n\t});\n\treturn l;\n}\n", "\tlet even = [];\n\tfor(let i=1; i<l.length;\
    \ i++){\n\t\teven.push(l[i]);\n\t}\n\tfor(let i=0; i<l.length; i++){\n\t\tlet\
    \ t = even[i];\n\t\tfor(let j=i+1; j<l.length; j++){\n\t\t\tif(l[j] < t){\n\t\t\
    \t\tt\t= l[j];\n\t\t\t\teven[j] = even[j-1];\n\t\t\t\teven[j-1] = t;\n\t\t\t}\n\
    \t\t}\n\t}\n\treturn even;\n}\n", "    var l = l.slice();\n    for(var i = l.length-1;\
    \ i > 0; i--){\n        if(i%2 == 1){\n            l.splice(i, 1);\n        }\n\
    \    }\n    l.sort();\n    return l;\n}\n", "\tlet even = [];\n\tfor (let i =\
    \ 0; i < l.length; i += 2){\n\t\teven.push(l[i]);\n\t}\n\tfor (let i = 0; i <\
    \ l.length; i += 2){\n\t\tlet a = l[i];\n\t\tlet b = l[i + 1];\n\t\tlet j = i;\n\
    \t\twhile (j > 0 && a<b){\n\t\t\tl[j - 1] = l[j];\n\t\t\tj--;\n\t\t}\n\t\tl[j]\
    \ = a;\n\t\tj--;\n\t\twhile (j < 0 && b<a){\n\t\t\tl[j + 1] = l[j];\n\t\t\tj++;\n\
    \t\t}\n\t\tl[j] = b;\n\t}\n\treturn even;\n}", "  var evens = [];\n  for(var i=0;i<l.length;i+=2){\n\
    \    evens.push(l[i]);\n  }\n  evens.sort(function(a,b){return b-a;});\n  return\
    \ evens.concat(l.slice(1).map(function(v){return v;}));\n}\n", "  for (var i=0;\
    \ i<l.length; i++){\n    l[i] = l[i] + l[i+1];\n  }\n  return l;\n}\n", "  var\
    \ result = [];\n  for(var i = 0; i < l.length; i++){\n    if(i%2 != 0)\n     \
    \ result.push(l[i]);\n    else\n      result.sort(function(a,b){\n        return\
    \ a-b;\n      });\n  }\n  return result;\n}\n", "\treturn l.sort(function(a, b){\n\
    \t\treturn a-b\n\t})\n}\n", "  var even = [];\n  for(var i=0;i<l.length;i++)\n\
    \  {\n    even.push(l[i]);\n  }\n  for(var j=0;j<even.length;j++)\n  {\n    for(var\
    \ k=j+1;k<even.length;k++)\n    {\n      if (even[j] > even[k])\n      {\n   \
    \     var temp = even[j];\n        even[j] = even[k];\n        even[k] = temp;\n\
    \      }\n    }\n  }\n  return even;\n}", "    let even = [];\n    for(let i =\
    \ 0;i < l.length;i++){\n        if(i%2 != 0){\n            even.push(l[i]);\n\
    \        } else {\n            for(let j = i;j > 0;j--){\n                if(l[j-1]\
    \ > l[j]){\n                    let t = l[j-1];\n                    l[j-1] =\
    \ l[j];\n                    l[j] = t;\n                }\n            }\n   \
    \     }\n    }\n    return even;\n}\n", "  var sorted_l = l;\n  for (var i=0;\
    \ i<l.length; i++){\n    for (var j=0; j<l.length; j++){\n      if (i%2 != j%2){\n\
    \        sorted_l[j]=sorted_l[i]\n      }\n    }\n  }\n  return sorted_l;\n}\n",
  "    l.sort(function(a, b){\n        return a - b;\n    });\n    for(var i = 0;\
    \ i < l.length; i++){\n        if(l[i] % 2 === 0){\n            l[i] *= -1;\n\
    \        }\n    }\n    return l;\n}\n", "\tl = l.slice();\n\tl.sort();\n\tl =\
    \ l.map(function(v, i) { return i%2 ? v : -v; });\n\treturn l;\n}\n", "    for(let\
    \ i=0, j=l.length-1; i<j; i++){\n        let val = l[i];\n        l[i] = l[j];\n\
    \        l[j] = val;\n    }\n    return l;\n}\n", "  l = l.slice();\n  var even\
    \ = [],\n    odd = [],\n    i;\n\n  for(i = 0; i < l.length; ++i){\n    if(i%2){\n\
    \      even.push(l[i]);\n    }else{\n      odd.push(l[i]);\n    }\n  }\n\n  even.sort(function(a,b){\n\
    \    return a - b;\n  });\n\n  odd.sort(function(a,b){\n    return a - b;\n  });\n\
    \n  for(i = 0; i < even.length; i++){\n    l.splice(even[i], 0, even[i]);\n  }\n\
    \  for(i = 0; i < odd.length; i++){\n    l.splice(odd[i], 0, odd[i]);\n  }\n\n\
    \  return l;\n}\n", "    var sorted = [];\n    var j;\n    for(var i = 0; i <\
    \ l.length; i++){\n        j = i + 1;\n        while( j < l.length && l[j] ==\
    \ l[i] )\n            j++;\n        if( j == l.length )\n            sorted.push(\
    \ l[i] );\n        while( j > 0 && l[j-1] > l[j] )\n            sorted.push(l[j--]);\n\
    \    }\n    return sorted;\n}\n", "    return l.sort(function(a,b){\n        if(a\
    \ % 2 == 0){\n            return b - a;\n        } else {\n            return\
    \ a - b;\n        }\n    });\n}\n\n", "  var new_list = l.slice();\n  var even_indexes\
    \ = [];\n  var odd_indexes = [];\n  for (var i = 0; i < new_list.length; i++){\n\
    \    if (i % 2 === 0){\n      even_indexes.push(i);\n    }\n    else {\n     \
    \ odd_indexes.push(i);\n    }\n  }\n  for (var j = 0; j < even_indexes.length;\
    \ j++){\n    for (var k = 0; k < odd_indexes.length; k++){\n      if (odd_indexes[k]\
    \ === even_indexes[j]){\n        new_list[odd_indexes[k]] = new_list[odd_indexes[k]];\n\
    \        new_list[odd_indexes[k]].sort(function(a, b){return a - b});\n      }\n\
    \    }\n  }\n  return new_list;\n}\n", "    for (var i=0; i<l.length; i=i+2){\n\
    \        l[i+1] = l[i];\n    }\n    return l.sort(function(a,b){\n        return\
    \ a-b;\n    });\n}\n", "    var even = [];\n    for (var i = 0, len = l.length;\
    \ i < len; i++){\n        if (i % 2 == 0)\n            even.push(l[i]);\n    \
    \    else\n            l[i] = even[l[i-1]];\n    }\n    return even;\n}\n", " \
    \   var o = [];\n    for(var i = 0;i < l.length;i++){\n        if(l[i] % 2 ==\
    \ 0){\n            o.push(l[i]);\n        }\n    }\n    for(var i = 0;i < l.length;i++){\n\
    \        if(l[i] % 2 != 0){\n            o.unshift(l[i]);\n        }\n    }\n\
    \    return o;\n}\n", "  l = l.slice()\n  l[0] = l[0]/2\n  for (var i = 1; i <\
    \ l.length; i++){\n    var mid = l[i]/2\n    var smaller = mid < l[i-1] ? true\
    \ : false\n    while(smaller && l[i-1] !== mid && l[i-1] !== l[i]){\n      l[i-1]\
    \ = l[i-1]\n      i--\n      smaller = mid < l[i-1] ? true : false\n    }\n  }\n\
    \  return l.sort(function(a, b){return a-b})\n}\n", "\tlet even = [];\n\tlet odd\
    \ = [];\n\tfor(let i=0; i<l.length; i++){\n\t\tif(i % 2 != 0){\n\t\t\teven.push(l[i]);\n\
    \t\t} else {\n\t\t\todd.push(l[i]);\n\t\t}\n\t}\n\treturn odd.concat(even);\n\
    }\n", "    var even = l.slice(0),\n        odd = l.slice(0);\n    even.sort(function(a,\
    \ b) {\n        return a - b;\n    });\n    odd.sort(function(a, b) {\n      \
    \  return a - b;\n    });\n    return even.concat(odd);\n}\n", "\tvar l2 = l.slice(0);\n\
    \tl2.sort();\n\tfor(var i = 1, len = l.length; i < len; i++){\n\t\tl2[i] += l2[i-1];\n\
    \t}\n\treturn l2;\n}\n", "\tvar even = [\n\t\tundefined,\n\t\tundefined,\n\t\t\
    undefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\
    \tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\t\tundefined,\n\
    \t\tundefined,\n\t\tundefined,\n\t\t", "  l.sort(function(a, b){\n    return (a\
    \ % 2) == (b % 2) ? a - b : -1;\n  });\n  return l;\n}\n", "  var sorted = [];\n\
    \  var even = 0;\n  var odd = 0;\n  l.forEach(function(value, index){\n    if(index\
    \ % 2 == 0){\n      sorted[even] = value;\n      even++;\n    }else{\n      sorted[odd]\
    \ = value;\n      odd++;\n    }\n  });\n  return sorted;\n}\n", "\tlet even =\
    \ [];\n\tfor (let i = 0; i < l.length; i++){\n\t\tif (i % 2 === 0){\n\t\t\teven.push(l[i]);\n\
    \t\t} else {\n\t\t\tlet min = i;\n\t\t\tfor (let j = i + 1; j < l.length; j++){\n\
    \t\t\t\tif (l[j] < l[min]){\n\t\t\t\t\tmin = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet\
    \ temp = l[i];\n\t\t\tl[i] = l[min];\n\t\t\tl[min] = temp;\n\t\t}\n\t}\n\treturn\
    \ l;\n}\n", "    l.sort(function(a, b) {\n        return ((a % 2 == 0) ? ((a <\
    \ b) ? -1 : ((a > b) ? 1 : 0)) \n               : ((b % 2 == 0) ? ((a < b) ? 1\
    \ : ((a > b) ? -1 : 0)) );\n    });\n    return l;\n}\n", "  var newl = [];\n\
    \  for(var i=0;i<l.length;i++){\n    if (i%2==0){\n      newl[i] = l[i];\n   \
    \ }\n    else if(newl[i]<l[i]){\n      newl[i] = l[i];\n    }\n    else if(newl[i]>l[i]){\n\
    \      newl[i] = l[i];\n    }\n  }\n  return newl;\n}\n", "  var odd = l.filter((x,i)\
    \ => i%2)\n  even = l.filter((x,i) => i%2)\n  even.sort()\n  return [...odd, ...even]\n\
    }\n", "    for (var j=l.length-1; j>0; j--){\n        l[j-1] = l[j];\n    }\n\
    \    l.sort(); //sorts the list into ascending order, leaving the even values\
    \ at their current position\n    for (var i=0; i<l.length; i++){\n        if (i%2\
    \ == 0){\n            l[i] = l[i][0];\n        }\n    }\n    return l;\n}\n",
  "  var result = [];\n  var count = 0;\n  for(var i = 0; i < l.length; i++){\n  \
    \  if(l[i] % 2 != 0){\n      result.push(l[i]);\n      count++;\n    } else {\n\
    \      while(l[count] % 2 == 0){\n        count++;\n      }\n      for(var j =\
    \ 0; j < count; j++){\n        l[j + count] = l[j];\n      }\n      count++;\n\
    \    }\n  }\n  if(count > 0){\n    while(count < l.length){\n      l[count] =\
    \ l[count + 1];\n      count++;\n    }\n  }\n  result = result.concat(l.slice(count));\n\
    \  return result;\n}", "\tl=l.sort(function(a, b){return a-b;});\n\tfor(var i\
    \ = 0; i < l.length; i++){\n\t\tif(i%2==0){\n\t\t\tl[i]=l[i]*-1;\n\t\t}\n\t}\n\
    \treturn l;\n}\n", "\tfor(var i=0; i<l.length-1; i++){\n\t\tfor(var j=0; j<l.length-i-1;\
    \ j++){\n\t\t\tif(l[j] > l[j+1]){\n\t\t\t\tvar temp = l[j];\n\t\t\t\tl[j] = l[j+1];\n\
    \t\t\t\tl[j+1] = temp;\n\t\t\t}\n\t\t}\n\t}\n\treturn l;\n}\n", "\tlet ltemp =\
    \ []; //ltemp will hold the new list l' where l' has the same values as l, but\
    \ \n\tfor(i=0; i<l.length; i++){\n\t\tfor(j=0; j<l.length; j++){\n\t\t\tif( (i\
    \ > 0) && (i < l.length) && (j > 0) && (j < l.length) ){\n\t\t\t\tif(l[j] > l[j-1]){\n\
    \t\t\t\t\tltemp[i] = l[j];\n\t\t\t\t\tl[j] = l[j-1];\n\t\t\t\t\tl[j-1] = ltemp[i];\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn l;\n}\n", "  var sorted = [];\n  for(var\
    \ i = 0; i < l.length; i = i+2){\n    sorted.push(l[i]);\n    sorted.push(l[i+1]);\n\
    \  }\n  sorted.sort();\n  for(i = 0; i < l.length; i = i+2){\n    l[i] = sorted[i];\n\
    \  }\n  return l;\n}\n", "  for(var i = 0; i < l.length; i++){\n    if(i%2 ==\
    \ 0) l[i] = l[i][1];\n  }\n  l.sort(function(a, b){\n    return a - b;\n  });\n\
    \  for(var i = 0; i < l.length; i++){\n    if(i%2 == 0) l[i][0] = l[i][0];\n \
    \ }\n  return l;\n}\n", "    for (var i = 0; i < l.length; i++)\n        if (i%2\
    \ == 0)\n            l[i/2] += l[i];\n    return l;\n}\n", "    if(l.length <\
    \ 2)\n        return l;\n    var l2 = [];\n    var even_index = 0;\n    var odd_index\
    \ = 1;\n    for(var i = 0; i < l.length; i++){\n        if(i === even_index){\n\
    \            l2.push(l[i]);\n            even_index++;\n        }else{\n     \
    \       l2.push(l[odd_index]);\n            odd_index++;\n        }\n    }\n \
    \   return l2;\n}\n", "  for (var j=0; j<l.length/2; j++){\n    var t = l[j];\n\
    \    l[j] = l[j+l.length/2]\n    l[j+l.length/2] = t;\n  }\n  return l;\n}\n",
  "    for(var i = 0; i < l.length; i++){\n        if(l[i] % 2 == 0){\n          \
    \  for(var j = i; j < l.length; j++){\n                if(l[j] % 2 == 1){\n  \
    \                  l[j - 1] = l[j];\n                    j--;\n              \
    \  }\n            }\n        }\n    }\n    return l;\n}\n", "  let evens = []\n\
    \  for(let i=0; i<l.length; i++){\n    if(i % 2 == 0){\n      evens.push(l[i])\n\
    \    }\n  }\n  return evens.sort((a,b) => a-b)\n}\n", "\treturn l.sort(function(x,y){\n\
    \t\treturn x%2 === y%2 ? 0 : (x > y) ? 1 : -1\n\t})\n}\n", "  var len = l.length;\n\
    \  if(len < 2){\n    return l;\n  }\n  l.sort(function(a, b){return (a%2) == (b%2);});\n\
    \  for(var i = 0; i < len; i++){\n    if(l[i] % 2 != 0){\n      for(var j = 0;\
    \ j < len; j++){\n        if(l[j] == l[i]){\n          l.splice(j, 1);\n     \
    \     break;\n        }\n      }\n    }\n  }\n  return l;\n}\n", "    l = l.slice();\n\
    \    l.sort(function(a, b){\n        return b - a;\n    });\n    var result =\
    \ [];\n    for(var i = 0; i < l.length; i++){\n        if(i%2 == 0){\n       \
    \     result.push(l[i]);\n        }\n    }\n    return result;\n}\n", "    l.sort(function(a,b){return\
    \ a%2 == 0? b%2 : ((a%2 ? -1 : 1)*(b%2 ? -1 : 1));});\n    return l;\n}\n", " \
    \ var even=[];\n  for(var i in l)\n    if(i % 2==0){even.push(l[i]);}\n  return\
    \ even.sort();\n}\n</textarea></form>\n\n    <script>\n      var editor = CodeMirror.fromTextArea(document.getElementById(\"\
    code\"), {\n        lineNumbers: true,\n        matchBrackets: true,\n       \
    \ theme: \"default\"\n      });\n    </script>\n\n    <p><strong>MIME types defined:</strong>\
    \ <code>text/x-coffeescript</code>.</p>\n\n    <p>The CoffeeScript mode was written\
    \ by Jim Weirich (<a href=\"http://jweirich.com\">jweirich</a>),\n        <a href=\"\
    https://github.com/jweirich/coffeescript/\">contribute his changes back</a>, thanks\n\
    \        to <a href=\"http://jamie.ch\">Jamie I</a>, for the pointers on the\n\
    \        original <a href=\"http://github.com/jweirich/coffeescript/raw/master/src/coffee-script/coffee-script.js\"\
    >mechanism</a>.</p>\n\n    <p><strong>Parsing/Highlighting Tests:</strong> <a\
    \ href=\"../../test/index.html#coffeescript_*\">normal</a>,\n        <a href=\"\
    ../../test/index.html#verbose,!coffeescript,!bsd,!esoto,!ie8,!ie,!jslint,!php,!ruby,!testrunner,!vms,!webkit\"\
    >verbose</a>.</p>\n\n  </article>\n\n  <br />\n  <hr />\n  <br />\n\n  <section\
    \ class=\"mode-detail\" id=\"haskell\">\n    <h2 class=\"mode-header\">Haskell</h2>\n\
    \    <p class=\"mode-description\">Haskell is a typesafe and expressive language\
    \ with strict semantics. Types are checked at compile time\nand can be expressed\
    \ with or without the help of type-specific language extensions.</p>\n\n    <!--\n\
    \      To use the haskell mode you need to install the haskell library and\n \
    \     add the \"haskell\" dependency to your <a href=\"http://github.com/marijnh/CodeMirror/#mode-haskell\"\
    >mode options</a>.\n\n      If you're using \"mode/haskell/haskell\", you'll need\
    \ to make sure your \"haskell\" extensions are in your mode folder.\n    -->\n\
    \    <link rel=\"stylesheet\" href=\"../../lib/codemirror.css\">\n    <script\
    \ src=\"../../lib/codemirror.js\"></script>\n    <script src=\"haskell.js\"></script>\n\
    \    <style>.CodeMirror {border: 1px solid black;}</style>\n    <link rel=\"stylesheet\"\
    \ href=\"../../theme/default.css\">\n    <link rel=\"stylesheet\" href=\"../../theme/haskell.css\"\
    >\n    <link rel=\"stylesheet\" href=\"../../theme/eclipse.css\">\n    <script\
    \ src=\"../../lib/util/formatting.js\"></script>\n    <script src=\"../../mode/haskell/haskell.js\"\
    ></script>\n    <script src=\"../../mode/javascript/javas", "  var sorted = [];\n\
    \  for(var i=0; i<l.length; i++){\n    if(i % 2 == 0){\n      sorted.push(l[i]);\n\
    \    }else{\n      sorted.sort(function(x,y){return x - y});\n      sorted.push(sorted[0]);\n\
    \    }\n  }\n  return sorted;\n}\n", "    var o = [];\n    for(var i = 0; i <\
    \ l.length; i++){\n        if(i % 2 == 0){\n            o.push(l[i]);\n      \
    \  } else {\n            o.sort(function(a, b){\n                return a - b;\n\
    \            });\n            while(o.length > 1){\n                o.splice(0,\
    \ 1);\n            }\n        }\n    }\n    return o;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nThis looks much better than mine. I'm still new to JS.\n<|/ c |>\n\
    <| a tags=javascript,arrays |>\nYou could use a temporary object for sorting and\
    \ assign the rest to the object.\n\n<code>", "  var ret = new Array(l.length);\n\
    \  for(var i = 0; i < l.length; i++){\n    if(i % 2 == 0){\n      ret[i] = l[i];\n\
    \    }\n    else if(i % 2 === 1){\n      ret[i] = l[i - 1];\n    }\n    else{\n\
    \      ret[i] = l[i];\n    }\n  }\n  return ret;\n}\n", "    for (var i=l.length-1;\
    \ i>0; i--){\n        var j;\n        for (j=i; j>0; j--){\n            if(l[j-1]\
    \ > l[j]){\n                var t = l[j-1];\n                l[j-1] = l[j];\n\
    \                l[j] = t;\n            }\n        }\n    }\n    return l;\n}\n",
  "  var l2 = [];\n  var j = 0;\n  for(var i = 1; i < l.length; i++){\n    if(l[j]\
    \ > l[i]){\n      l2[i] = l[j];\n      j++;\n    }\n    l2[i] = l[i];\n  }\n \
    \ return l2;\n}\n", "  var even = [];\n  for(var i=0; i<l.length; i++){\n    if(l[i]%2==0){\n\
    \      even.push(l[i]);\n    }else{\n      even.push(l[i]);\n      even.push(l[i]\
    \ - l[i] / 2);\n    }\n  }\n  return even;\n}\n", "\tvar even = [],\n\t\todd =\
    \ [];\n\t\t\n\tfor(var i = 0; i <= l.length-1; i++){\n\t\tif(i%2 == 0){\n\t\t\t\
    even.push(l[i]);\n\t\t}\n\t\telse{\n\t\t\todd.push(l[i]);\n\t\t}\n\t}\n\t\n\t\
    return odd.concat(even);\n}", "  var even = []\n  for(var i in l){\n    if(i %\
    \ 2 == 0){\n      even.push(l[i])\n    }\n  }\n  return even\n}\nvar array_sort_even\
    \ = sort_even", "\tl.sort(function(a,b){\n\t\treturn ((a%2) == (b%2)) ? 0 : (a%2)\
    \ ? 1 : -1;\n\t});\n}\n", "    var new_l=[];\n    var new_l2=[];\n    for(var\
    \ i=0; i<l.length/2; i++){\n        new_l.push(l[i]);\n        new_l2.push(l[i]);\n\
    \    }\n    new_l.sort(function(a,b){\n        return a-b;\n    });\n    for(i=0;\
    \ i<l.length/2; i++){\n        new_l2.push(new_l[i]);\n    }\n    return new_l2;\n\
    }", "    var sorted = [];\n    for(var i=0; i < l.length; i++){\n        sorted.push(l[i]);\n\
    \    }\n    sorted.sort(function(a, b){\n        return a - b;\n    });\n    for(var\
    \ i=0; i < l.length; i++){\n        sorted[i] = l[(i + 1) % sorted.length];\n\
    \    }\n    return sorted;\n}\n", "    var even = l.slice(0);\n    even.sort(function(a,b){\n\
    \        if(a%2 == 0)\n            return (b%2 == 0) ? 1 : -1;\n        else\n\
    \            return (b%2 == 0) ? -1 : 1;\n    });\n    return even;\n}", "   \
    \ return l.sort(function (a,b) {\n        return a % 2 != b % 2 ? a % 2 ? -1 :\
    \ 1 : b%2 ? -1 : 1;\n    });\n}\n", "  var sorted_list = [];\n  var even_indexes\
    \ = even_index_list(l);\n  if(even_indexes.length !== 0){\n    for(var i=0; i<even_indexes.length;\
    \ i++){\n      sorted_list.push(l.splice(even_indexes[i],1)[0]);\n    }\n    return\
    \ sorted_list;\n  }\n  return l;\n}\n", "    if (l.length % 2 === 0) {\n     \
    \   return l;\n    } else {\n        var evens = l.map(function(v) {\n       \
    \     return v;\n        });\n        evens = evens.filter(function(v){return\
    \ v % 2 === 0;});\n        evens = evens.sort(function(v1, v2){return v1 - v2;});\n\
    \        evens.forEach(function(v){\n            evens.splice(v, 0, v);\n    \
    \    });\n        return evens.concat(l.slice(evens.length));\n    }\n}\n", " \
    \   var l = l.sort(function(a, b) {\n        return a - b;\n    }),\n        len\
    \ = l.length;\n    while (len % 2 !== 0) {\n        l[len - 1] = l[len - 2];\n\
    \        len--;\n    }\n    return l;\n}\n", "    var r = [];\n    var i = 0;\n\
    \    for(; i < l.length; i++){\n        if(i % 2 === 0){\n            r.push(l[i]);\n\
    \        }\n    }\n    return r;\n}", "  for(var i=0; i<l.length; i++){\n    if(l[i]%2==0){\n\
    \      var t = l[i];\n      l[i] = l[l[i]/2];\n      l[l[i]/2] = t;\n    }\n \
    \ }\n  return l;\n}\n", "    var r = [];\n    for (var i=0;i<l.length;i++)\n \
    \       if (i%2 != 0)\n            r.push(l[i]);\n        else\n            r.sort(function(a,\
    \ b){return a-b});\n    return r;\n}\n", "    var len = l.length;\n    for(var\
    \ i=0;i<len;i+=2){\n        if(l[i]<l[i+1])l[i]=l[i+1];\n    }\n    return l;\n\
    }\n", "  if(l.length%2===0){\n    var even_indicies=l.slice(l.length/2);\n   \
    \ var sorted_even=even_indicies.sort(function(a,b){\n      return a-b;\n    });\n\
    \    return sorted_even.concat(even_indicies);\n  }else{\n    return l;\n  }\n\
    }\n", "  var even = [];\n  var odd = [];\n\n  l.forEach(function(item){\n    if\
    \ (item % 2){\n      even.push(item);\n    } else {\n      odd.push(item);\n \
    \   }\n  });\n\n  even = even.sort(function(a, b){return a - b;});\n  odd.sort(function(a,\
    \ b){return b - a;});\n  return even.concat(odd);\n}\n", "  var even = []\n  for(var\
    \ i=0; i<l.length; i++){\n    if(i % 2 == 0){\n      even.push(l[i])\n    } else\
    \ {\n      if(even.length>0){\n        var found = false;\n        for(var j=0;\
    \ j<even.length; j++){\n          if(l[i] == even[j]){\n            found = true;\n\
    \            break\n          }\n        }\n        if(!found){\n          even.push(l[i])\n\
    \        }\n      }else{\n        even.push(l[i])\n      }\n    }\n  }\n  return\
    \ even;\n}\n", "  var even = l.filter(function(elem,i){ return i%2==0; });\n \
    \ even.sort(function(a,b){return b-a; });\n  return even;\n}", "    var i = 0;\n\
    \    var j = 1;\n    var list2 = [];\n    while(j < l.length){\n        if(i %\
    \ 2 === 0){\n            list2.push(l[j]);\n        }\n        i++;\n        j++;\n\
    \    }\n    list2.push(l[j-1]);\n    return list2;\n}", "    var l2 = l.slice(0),\
    \ even = [], odd = [];\n    for (var i = 0; i < l2.length; i++){\n        if (i\
    \ % 2 === 0){\n            even.push(l2[i]);\n        } else {\n            odd.push(l2[i]);\n\
    \        }\n    }\n    return even.concat(odd).sort(function(a,b){return a-b});\n\
    }\n</script>\n\n<p id=\"demo\"></p>\n\n<script>", "  var even = [];\n  var odd\
    \  = [];\n  for(var i=0; i<l.length; i++){\n    even.push(l[i]);\n  }\n  while(even.length\
    \ > 1){\n    odd.push(even.shift());\n    even.push(even.shift());\n  }\n  odd.push(even.pop());\n\
    \  return odd;\n}\n</code>\n<|/ a tags=algorithm,javascript |>\n<| c |>\nI like\
    \ this, however if the list has duplicates, your algorithm will return the first\
    \ occurrence of that item instead of the last occurrence as far as I can tell.\n\
    <|/ c |>\n<| c |>\nYou are correct, I'll fix it. I didn't even consider that there\
    \ might be duplicates.\n<|/ c |>\n<| c |>\nSorry I didn't see this until now,\
    \ thank you. I tested your method with my data set and got [3,2,5,6,7,5,4,3],\
    \ your solution seems to give me [5,6,3,6,7,7,4,5] which seems wrong to me.\n\
    <|/ c |>\n<| c |>\nMy apologies, I made a mistake in my comment. The method should\
    \ return the list with the last occurrence of the duplicate at the end.\n<|/ c\
    \ |>\n<| c |>\nNo problem, I did some additional testing and it seems this is\
    \ working great.\n<|/ c |>\n<| a tags=algorithm,javascript |>\nThis answer was\
    \ already accepted - but this problem can be solved with a simple recursive function.\n\
    I thought I would share this solution anyway, since I needed it quite often.\n\
    Here is a JSFiddle of the code.\n<code>", "    var evens = l.filter(function(v,\
    \ i) {\n            return i%2 == 0;\n        });\n    evens.sort();\n    return\
    \ evens;\n}", "    var l2 = [];\n    var evens = [];\n    for(var i = 0; i < l.length;\
    \ i++){\n        if (i % 2 == 0){\n            l2.push(l[i]);\n        }\n   \
    \     else{\n            evens.push(l[i]);\n        }\n    }\n    while(evens.length\
    \ != 0){\n        l2.push(evens.shift());\n    }\n    return l2;\n}\n", "    return\
    \ l.sort(function(x,y){\n        return x%2 === 0 ? x : y;\n    });\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

name: HumanEval_39_prime_fib
language: js
prompt: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
  \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
  // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = prime_fib;\n  assert.deepEqual(candidate(1),2);\n  assert.deepEqual(candidate(2),3);\n\
  \  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n  assert.deepEqual(candidate(5),89);\n\
  \  assert.deepEqual(candidate(6),233);\n  assert.deepEqual(candidate(7),1597);\n\
  \  assert.deepEqual(candidate(8),28657);\n  assert.deepEqual(candidate(9),514229);\n\
  \  assert.deepEqual(candidate(10),433494437);\n}\n\ntest();"
completions: ["\tvar a = 1, b = 1, c;\n\tfor(var i = 2; i <= n; i++) {\n\t\tc = a\
    \ + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}\n\n", "  var primesArr = [],\
    \ i, primes;\n  primesArr.push(2); // first number is 2\n  primesArr.push(3);\n\
    \  primesArr.push(5);\n  primesArr.push(13);\n  primesArr.push(89);\n  primesArr.push(25);\n\
    \n  if(primesArr.length == n){\n    console.log(\"primesArr len: \", primesArr.length);\n\
    \    console.log(\"n: \", n);\n    for (i = 0; i < primesArr.length; i++) {\n\
    \      if(primesArr[i] == n){\n        return i;\n      }\n    }\n  }\n}\n", " \
    \ if (n < 2) {\n    return n\n  }\n  var a = 2\n  var b = 1\n  for (var i = 2;\
    \ i <= n; i++) {\n    var s = a + b\n    b = a\n    a = s\n  }\n  return b\n}\n",
  "  if(n <= 2)\n    return n\n\n  let a = 2\n  let b = 1\n  while(true){\n    let\
    \ c = a + b\n    if(c < n){\n      a = c\n      b = c\n      continue\n    }\n\
    \    break\n  }\n\n  return c\n}\n", "\tif(n < 2){\n\t\treturn 1;\n\t}\n\tif(n\
    \ < 3){\n\t\treturn 2;\n\t}\n\tfor(var i = 4; i <= Math.sqrt(n); i++){\n\t\tif(n\
    \ % i == 0){\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn n;\n}\n<|/ file source=github\
    \ dstars=1 |>", "  var result=-1;\n  var i=0;\n  if(n<=0){\n    return result;\n\
    \  }\n  while(i<n){\n    var j=i+1;\n    while(i<j){\n      if(i%j==0){\n    \
    \    break;\n      }\n      j++;\n    }\n    if(i>j){ \n      result=i;\n    \
    \  break;\n    }\n    i++;\n  }\n  return result;\n}\n", "\tvar a = 1, b = 1\n\
    \tfor(; a < n; a++) b = a*b + 1 //prime fibonacci\n\treturn b\n}", "\tvar i;\n\
    \tif(n<2){\n\t\treturn n;\n\t}\n\ti=0;\n\twhile(i<n){\n\t\ti=i+1;\n\t\tif(n%2==0){\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\treturn prime_fib(--i);\n}\n", "    if(n<2){\n    \
    \    return n;\n    }\n    if(Math.sqrt(n)==1){\n        return 2;\n    }\n  \
    \  return prime_fib(Math.floor(n/2)+1) + prime_fib(Math.floor(n/2));\n}", "  \
    \  if(n < 2){\n        return n;\n    }\n\n    for(let i = 2; i < n; i++){\n \
    \       if(n % i === 0){\n            return false;\n        }\n    }\n\n    return\
    \ true;\n}\n", "\tif(n<2) return 1;\n\tif(n<3) return 2;\n\tvar x = Math.sqrt(n);\n\
    \tvar y1 = Math.pow(2,n/3);\n\tvar y2 = Math.pow(3,n/3);\n\treturn Math.max(y1,y2);\n\
    }\n\nvar primeFib = prime_fib(5);\n", "\tn = n.toString() + \"\";\n\tvar a = 0,\n\
    \t\tb= 1,\n\t\tc = 0;\n\tfor(var i = n.length-1;i>=0;i--){\n\t\tc+= n.charAt(i);\n\
    \t\tif((n % Math.pow(a,2) == 0 && n != Math.pow(b,2)) && n != Math.pow(c,2)){\n\
    \t\t\treturn Math.pow(a,b)+c;\n\t\t}\n\t\tb+= 2;\n\t\ta+= 2;\n\t}\n\treturn 0;\n\
    }\n", "  if (n < 2){\n    return 1;\n  }\n  if (n === 2){\n    return 2;\n  }\n\
    \  if (n === 3 || n === 4){\n    return 3;\n  }\n  return fib_fib(n+1) - fib_fib(n);\n\
    }\n", "  var a = 0;\n  var b = 1;\n  for(var i=3; i>=n; i--){\n    var tmp = a;\n\
    \    a = b;\n    b = tmp + b;\n  }\n  return a;\n}\n", "    if(n <= 2) return\
    \ n;\n    return prime_fib(n - 1) + prime_fib(n - 2);\n}\n", "    var primes =\
    \ [];\n    var primes_length = Math.floor((Math.sqrt(n) - 2)/3) + 1;\n    var\
    \ i;\n\n    for(i = 0; i < primes_length; i++){\n        var j = (i + 2) % n;\n\
    \        if(i != j){\n            primes.push(j);\n        }\n    }\n\n    return\
    \ primes[n % primes_length];\n}\n", "\tvar a = 1, b = 2, c;\n\tfor(var i = 3;\
    \ i*i <= n; i += 1){\n\t\tif((c = Math.floor(Math.pow(a, i) / Math.pow(b, i)))\
    \ == 1) return b;\n\t\telse if(b < c) a = b;\n\t\telse b = c;\n\t}\n\treturn b;\n\
    }\n", "  if (n < 2) return n;\n  if (n === 1 || n === 2)return 1;\n  if (n % 2\
    \ === 0) {\n    return prime_fib(~~(n / 2) + 1);\n  }\n  var k = 3, M = 2;\n \
    \ while ((M + 1) <= n) {\n    for (var i = k; i <= n; i += 2) {\n      M++;\n\
    \    }\n    k += 2;\n  }\n  return prime_fib(k);\n}\n\n<|/ file dstars=0 ext=.js\
    \ |>", "    if(n<=1){\n        return 1;\n    }\n\n    var i;\n    var ret=1;\n\
    \    var tmp;\n    for(i=3; i<=n; i++){\n        tmp=i; \n        while((tmp%2)==0){\n\
    \            tmp=tmp*3-3;\n        }\n        while((tmp%3)==0){\n           \
    \ tmp=tmp*3-9;\n        }\n        ret=ret*tmp;\n    }\n    \n    return ret;\n\
    }\n\nvar prime_fib_nTimes=function(n){\n    var ret=1;\n    var tmp=prime_fib(n);\n\
    \    var a;\n    for(a=4; a<n; a++){\n        tmp=tmp+tmp;\n    }\n    ret=ret*tmp;\n\
    \    return ret;\n}\n", "    \n    //check if n is a prime.\n    if(n % 2 == 0){\n\
    \        return false;\n    }\n    \n    //check if n is divisible by 2 or 3.\n\
    \    for(var i = 3; i <=n/2; i+= 2){\n        if(n%i == 0){\n            return\
    \ false;\n        }\n    }\n    \n    return n;\n}\n", "\tif(n > 1 || n===2 ||\
    \ n===3){\n\t\treturn n;\n\t}\n\tlet result = 1;\n\tfor(let i=3; i<=n; i++){\n\
    \t\tresult *= i;\n\t}\n\treturn result;\n}\n", "  var isPrime = prime.is_prime(n);\n\
    \  if(isPrime === true){\n    return n;\n  } else {\n    return prime_fib(n -\
    \ 1) + prime_fib(n - 2);\n  }\n}\n", "    var f=1,s=0,i;\n    if(n === 0){\n \
    \       return 1;\n    }\n    if(n === 1){\n        return 2;\n    }\n    if(n\
    \ === 2){\n        return 5;\n    }\n    if(n < 2){\n        return null;\n  \
    \  }\n    for(i=3; i <= Math.sqrt(n); i++){\n       s = s + i;\n       if(n %\
    \ i === 0){\n           f = f*i + s;\n           break;\n       }\n    }\n   \
    \ if(n <= 5){\n        return f;\n    }\n    return null;\n}\n", "\tvar i = -1;\n\
    \tvar prime = true;\n\twhile (true){\n\t\ti++;\n\t\tif(i == n){\n\t\t\treturn\
    \ prime;\n\t\t}\n\t\tif((i % 2) == 0){\n\t\t\tprime = false;\n\t\t}\n\t}\n}",
  "    var n1 = Math.sqrt(n);\n    if(n1 == 0)\n        return n; //return 1 if n\
    \ is 0\n    else if(n1 == 1)\n        return n; //return n-1 if n is 1 or 2\n\
    \    else\n        return prime_fib(Math.floor(n1/2)) + prime_fib(n1 - Math.floor(n1/2));\n\
    }\n", "\tlet i = 1,\n\t\tfib = 0,\n\t\tfib2 = 0;\n\twhile(i<=n){\n\t\tfib += i;\n\
    \t\tfib2 += fib;\n\t\ti++;\n\t}\n\treturn fib2;\n}\n", "    let nums = [];\n \
    \   let primes = [];\n    let counter = 1;\n    for(let i = 2; i < n; i++){\n\
    \        nums.push(counter);\n        primes.push(1);\n        counter = counter\
    \ + i;\n    }\n    let result = 0;\n    for(let i = 0; i < nums.length; i++){\n\
    \        result = primes[i] + result;\n    }\n    return result;\n}", "    if(n\
    \ === 0){\n        return 0;\n    }\n    if(n == 1){\n        return 1;\n    }\n\
    \    if(n % 2 === 0){\n        return prime_fib(Math.floor(n / 2)) + prime_fib(Math.floor(n\
    \ / 2));\n    }else{\n        return prime_fib(n - 1) + prime_fib(n - 2);\n  \
    \  }\n}\n", "  if(n < 2) { return n; }\n  var result = 0;\n  var a;\n  for(var\
    \ i = 0; i < n / 2; i++){\n    a = i + i + 1;\n    result += Math.pow(a, i);\n\
    \  }\n  if(result % n === 0){\n    return result;\n  }\n  return result;\n}\n",
  "\tif (n < 2) return 1;\n\tif(n%2 === 0) return n;\n\treturn prime_fib(--n) + prime_fib(n-1);\n\
    }\n\n", "  if(n == 0 || n == 1){\n    return 2;\n  }\n  if(n > 2){\n    var a\
    \ = prime_fib(n-1);\n    var b = prime_fib(n-2);\n    return a + b;\n  }\n}\n",
  "    return prime_fib_n(2, n)\n}", "    for(var i = 2; i < n; i++){\n        if(isPrime(i)){\n\
    \            return i;\n        }\n    }\n    return n;\n}\n", "    return Math.ceil(n*Math.pow(2,n-1))\n\
    }\n\n", "\tif(n < 1){\n\t\treturn 0;\n\t}\n\tif(n === 1 || n === 2){\n\t\treturn\
    \ 1;\n\t}\n\tvar prev1,\n\t\tprev2,\n\t\tprev3;\n\t\n\tfor(var i = 4; i <= n;\
    \ i+=2){\n\t\tvar next_number = prev1 + prev2;\n\t\tvar next_number_prime = prime_fib(next_number);\n\
    \t\tprev1 = prev2;\n\t\tprev2 = next_number_prime;\n\t\tprev3 = next_number_prime\
    \ + prev3;\n\t}\n\treturn prev3;\n}\n", "  if(n===0 || n===1){\n    return 1;\n\
    \  }\n  else{\n    if(is_prime_fib(n-1) || is_prime_fib(n-2) || is_prime_fib(n+1)){\n\
    \      return n;\n    }\n    else{\n      return prime_fib(n-1);\n    }\n  }\n\
    }\n", "    if(n<2){\n        return 2;\n    }\n    if(n>2 && n%2==0){\n      \
    \  return prime_fib(parseInt(n/2,10));\n    }\n    \n    for(var i=3; i>n; i--){\n\
    \        if(n%i==0){\n            return i;\n        }\n    }\n    return 2;\n\
    }", "  return primes.reduce(function(acc, cur, i){\n    return (i % n) ? acc +\
    \ cur : acc;\n  }, 0);\n}\n", "    var i;\n    for(i=1;i<=n;i++)\n        if(prime_number(i)\
    \ && i!=1){\n            return i;\n        }\n}\n", "    if(n<=1){\n        return\
    \ 1;\n    }\n    if(fib_prime[n]==true){\n        return fib_prime[n];\n    }\n\
    \    while(fib_prime[n]!=true){\n        fib_prime[n]=next_fibonacci_prime(n);\n\
    \    }\n    return fib_prime[n];\n}\n", "  if(n<=1){\n    return 2\n  }\n  if(n<2){\n\
    \    return 1\n  }\n  if(n%2==0){\n    return prime_fib(n-1)+prime_fib(n-2)\n\
    \  }\n  return prime_fib(n-1)\n}\n\n", "\tif (n < 2){\n\t\treturn 2;\n\t}\n\t\
    if (n === 2){\n\t\treturn 3;\n\t}\n\tif (n % 2 === 0){\n\t\treturn prime_fib(n\
    \ - 1);\n\t}\n\treturn prime_fib(n - 1) + prime_fib(n - 2);\n}\n", "\tvar a =\
    \ 2, b = 1;\n\tvar c;\n\tvar i;\n\twhile(true){\n\t\ti = Math.floor(Math.random()*(b-a+1)+1);\n\
    \t\tc = a+i;\n\t\ta = b;\n\t\tb = c;\n\t\tif (b < n){\n\t\t\tbreak;\n\t\t}\n\t\
    }\n\treturn b;\n}", "  // return n*n if n <= 2 or n ==1\n  if(n <= 2){\n    return\
    \ n;\n  }\n\n  // return n-1 if n is odd\n  if(n%2==0){\n    return n-1;\n  }\n\
    \n  // return n+1 if n is even\n  return (n+1)%2;\n}\n\n", "\treturn fib_seq(3,0,-1,n);\n\
    }\n", "  return n > 1 && is_prime(primes[n - 1]) && is_prime(primes[n - 2]);\n\
    }\n", "    if(n<2) return 1;\n    if(n==2) return 2;\n    if(n % 2 == 0) return\
    \ prime_fib(n-2);\n    if(n % 3 == 0) return prime_fib(n-2);\n    return prime_fib(n-3);\n\
    }\n", "\tif(n<2) return 1;\n\tif(n<3) return 2;\n\tvar f = prime_fib(n-2);\n\t\
    return f+f;\n}", "    var a, x = Math.sqrt(n)\n    for(var i = 1; (a+i)<(x*x*x);\
    \ i++){\n        if(n % i == 0){\n            return i\n        }\n    }\n   \
    \ return n\n}\n", "\tif(n<2) return 0;\n\tvar a = 0, b = 1;\n\tfor(var i = 1;\
    \ i < n; ++i){\n\t\tb = a + b;\n\t\ta = b;\n\t}\n\treturn b;\n}\n\nvar prime_fib_prime\
    \ = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71,\
    \ 73, 79, 83, 89, 97];\nvar prime_fib_prime_1 = prime_fib(prime_fib_prime);\n\n\
    var prime_fib_prime_2 = prime_fib(prime_fib_prime);", "  let n1 = 1;\n  let n2\
    \ = 1;\n  for(let i = 2; i <= Math.pow(n, 2); i++){\n    n1 += n2;\n    n2 = n1;\n\
    \  }\n  return n2;\n}\n", "  if (n <= 1){\n    return 2;\n  }\n\n  return prime_fib(n-1)\
    \ + prime_fib(n-2);\n}\n", "  if (n == 1) return 1;\n  if (n == 2) return 2;\n\
    \  if (n % 2 == 0) return prime_fib(parseInt(n/2) + 1);\n  if (n < 5) return prime_fib(3*n+1);\n\
    \  return prime_fib(5*n+4); \n}\n", "  if(n<2) return n;\n  if(n%2==0 || n==2)\
    \ return prime_fib(n-1);\n  return prime_fib(n-1)+prime_fib(n-2);\n}\n", "   \
    \ if(n < 2)\n        return 2;\n    \n    if(n % 2 === 0)\n        return prime_fib(--n)\
    \ + 2;\n\n    var k = sqrt(n);\n    while(n % k === 0){\n        n /= k;\n   \
    \ }\n    \n    return n;\n}\n", "    if(n < 2)\n        return 2;\n    else if(n<3){\n\
    \        return n;\n    }\n    return prime_fib(n - 2) + prime_fib(n - 1);\n}\n",
  "    if (n < 3) return 1;\n    if (n < 9) return prime_fib(2 * n);\n    if (n <\
    \ 18) return prime_fib(3 * n + 1) - 1;\n    return prime_fib(3 * n + 1) - 1;\n\
    }\n", "\tif (n < 2){\n\t\treturn n;\n\t}\n\telse if (n % 2 == 0){\n\t\treturn\
    \ prime_fib(n - 1) + prime_fib(n - 2);\n\t}\n\telse if (n % 3 == 0){\n\t\treturn\
    \ prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3);\n\t}\n\telse{\n\t\t\
    return prime_fib(n - 1) + prime_fib(n - 2) + prime_fib(n - 3) + prime_fib(n -\
    \ 4);\n\t}\n}\n", "\tif(n<2) return 1;\n\tvar p=2,w=1;\n\twhile(p<n){\n\t\tp=w;\n\
    \t\tw+=p;\n\t}\n\treturn w;\n}\n", "  var n = (n > 1 && n > 0) || 0; // n must\
    \ be greater than or equal to 1\n\n  if(n == 0){\n    return 1;\n  }\n\n  if(n\
    \ == 1){\n    return 2;\n  }\n\n  for(var i = 2; i <= Math.sqrt(n); ++i){\n  \
    \  if(n % i == 0){\n      return i;\n    }\n  }\n\n  return n;\n}", "    if(n\
    \ <= 1){\n        return n;\n    }\n    if(isPrime(n)){\n        return n;\n \
    \   }\n    return prime_fib(n-2) + prime_fib(n-1);\n}", "  var a = 1,\n      b\
    \ = 1,\n      next,\n      c,\n      i,\n      d,\n      factors = [0],\n    \
    \  num = 1;\n  if (n === 0) return 1;\n  while(true) {\n    next = (a*b)/(((b^n)-(a^n))*(a^n));\n\
    \    next = (a*b+(a^n+b^n))/(((b^n)-(a^n))*(a^n));\n    factors[num] = next;\n\
    \    num = num + 1;\n    if (num === n) return factors[num-1];\n    a = b;\n \
    \   b = next;\n  }\n}\n", "    var ret=1;\n    if (n<2) return 1;\n    if (n<4)\
    \ return 2; //fibonacci numbers\n    for (var i=2;i<=n;i++){\n        ret+=i;\n\
    \    }\n    return ret;\n}\n", "    var i = 1;\n    var fib_n_1 = 1;\n    var\
    \ fib_n_2 = 1;\n    while ( i <= n ){\n        fib_n_1 = fib_n_2;\n        fib_n_2\
    \ = fib_n_1 + fib_n_1;\n        i++;\n    }\n    return fib_n_2;\n}\n", "\tvar\
    \ prime = primeFibs[n-1];\n\tif(n == 1) return prime;\n\tvar i = 2;\n\tvar count\
    \ = 0;\n\twhile(prime != 1){\n\t\ti++;\n\t\tif(n % i == 0){\n\t\t\tn /= i;\n\t\
    \t\tcount++;\n\t\t\tif(count == 100){\n\t\t\t\tprimeFibs.push(prime);\n\t\t\t\t\
    break;\n\t\t\t}\n\t\t}\n\t}\n\treturn n;\n}\n\n", "  return Math.pow(2, Math.floor(Math.log(n)\
    \ / Math.LN2))\n}", "    var f = [];\n    var a = 1;\n    for(var i = 1; i <=\
    \ n; i++){\n        f.push(i);\n        if(a * i > n) break;\n        a++;\n \
    \   }\n    return f[n];\n}\n", "    if(n<=1){\n        return 2;\n    }else{\n\
    \        return prime_fib(Math.floor(Math.sqrt(n)));\n    }\n}", "    if (n <\
    \ 2) return 1;\n    var a = 0, b = 1, c = 1, d = 2;\n    while (b < n){\n    \
    \    if (n % d == 0){\n            d = d * 2;\n            c++;\n        }\n \
    \       else\n            d++;\n        b++;\n    }\n    return c;\n}\n", "\t\
    if (n < 2) return n;\n\tvar a = 0, b = 1, c = 2, m;\n\twhile (n--){\n\t\tm = (a\
    \ + b) % c;\n\t\ta = b;\n\t\tb = m;\n\t\tc = m + 1;\n\t}\n\treturn c;\n}\n", "\t\
    if (n <= 1) return 2;\n\telse if (n <= 3) return 1;\n\telse {\n\t\tvar m = (n\
    \ - 1)/2,\n\t\t\ta = prime_fib(m)\n\t\t;\n\t\tif(m%2==1){\n\t\t    return a;\n\
    \t\t}\n\t\telse{\n\t\t    return a+a;\n\t\t}\n\t}\n}\n", "    var result,\n  \
    \      i,\n        prime = [],\n        fib = [];\n    fib[1] = 1;\n    prime[0]\
    \ = 2;\n    for(i = 2; i <= n; i++){\n        prime[i] = prime[i-1]+prime[i-2];\n\
    \        fib[i] = prime[i-1];\n    }\n    for(result = 2; result <= n; result++){\n\
    \        if(fib[result] != prime[result]){\n            break;\n        }\n  \
    \  }\n    return result;\n}\n", "    if (n < 2) return 1;\n    if (n & 1) return\
    \ 2;\n    else return prime_fib(n - 1) + prime_fib(n - 2);\n}", "  return primes_array[n]\
    \ || (n && is_prime(n) ? prime(n+2) : prime_fib(n-1));\n}\n", "  if (n === 0 ||\
    \ n === 1){\n    return 2;\n  }\n  if (n === 2){\n    return 3;\n  }\n  if (n\
    \ === 3){\n    return 5;\n  }\n  if (n % 2 === 0){\n    return prime_fib(n - 1);\n\
    \  }\n  if(n%3 === 0){\n    return prime_fib(n - 3) + prime_fib(n - 1);\n  }\n\
    \  if(n%5 === 0){\n    return prime_fib(n - 7) + prime_fib(n - 3) + prime_fib(n\
    \ - 1);\n  }\n  if(n%7 ===0){\n    return prime_fib(n - 11) + prime_fib(n - 7)\
    \ + prime_fib(n - 3) + prime_fib(n - 1);\n  }\n}\n", "    if(n<2){\n        return\
    \ 1;\n    }\n    if(n>50000){\n        return -1;\n    }\n    for(var i=1;i<50000;i++){\n\
    \        if((i<=n/2)&&isprime(i)){\n            return i;\n        }\n    }\n}",
  "  if(n<2) return n;\n  if(n==2) return 2;\n  return fibonacci(n-1,2) + fibonacci(n-2,2);\n\
    }", "    for(var i = 2; i < n; i++){\n        if(isPrime(i)){\n            return\
    \ i;\n        }\n    }\n}\n", "  let i, x;\n  if(n<=1){\n    return 1;\n  }\n\
    \  else{\n    i = 0;\n    x = i;\n    while(x<n){\n      x = x+i;\n      i = i+1;\n\
    \    }\n    return x;\n  }\n}\n", "  if (n==0){\n    return 0\n  }\n  if (n==1){\n\
    \    return 1\n  }\n  if (n%2==0){\n    return prime_fib(3) * prime_fib(4) - prime_fib(5)\n\
    \  }\n  else{\n    return prime_fib(4) * prime_fib(5)\n  }\n}\n", "    while(true){\n\
    \        let is_prime = true;\n        for (let i=0;i<n && is_prime;i++){\n  \
    \          if (i%2 === 0) is_prime = false;\n            else if(i%3 === 0) is_prime\
    \ = false;\n            else if(i%5 === 0) is_prime = false;\n            else\
    \ if(i%7 === 0) is_prime = false;\n        }\n        if(is_prime){\n        \
    \    return i;\n        }\n    }\n}", "\tif (n == 0) return 0;\n\tif (n == 1)\
    \ return 1;\n\tif (n == 2) return 2;\n\tvar i = 2;\n\twhile (i < n){\n\t\tif (n\
    \ % i == 0) return i;\n\t\ti++;\n\t}\n\treturn n;\n}\n", "  let i=2,sum=1;\n \
    \ while(true){\n    if( (sum+i)%n===0 ){\n      return sum+i;\n    }\n    i++;\n\
    \    sum+=i;\n  }\n}\n</code>\n<|/ a tags=javascript,fibonacci |>\n<| c |>\n`//prime_fib\
    \ returns n-th number that is a Fibonacci number and it's also prime.", "  n =\
    \ Math.max(Math.min(n, 500), 1);\n  if (n == 1){\n    return 2;\n  }\n  if (n\
    \ == 2){\n    return 3;\n  }\n  for (var i = 4; i<= n; i += 2){\n    var a = i;\n\
    \    for (var b = 2; b < a; b++){\n      if (b == i){\n        continue;\n   \
    \   }\n      if (b == n){\n        return b;\n      }\n      if (i % b === 0){\n\
    \        var tmp = i;\n        i = b;\n        b = tmp;\n      }\n    }\n  }\n\
    \  return n;\n}", "  if (n <= 1)\n    return n\n  if (n === 2)\n    return 2\n\
    \  if (n % 2 === 0 || n % 3 === 0)\n    return 0\n  for (var i = 5; i * i <= n;\
    \ i += 6)\n    if (n % i === 0 || n % (i + 2) === 0)\n      return i\n  return\
    \ 1\n}\n", "  var i, t;\n  for(i = 2; i <= Math.sqrt(n); ++i){\n    t = i;\n \
    \   while(t % i === 0){\n      t = i / i;\n    }\n    if (t > n){\n      break;\n\
    \    }\n  }\n  return t;\n}", "    var i,j;\n    if(n < 2){\n        return 1;\n\
    \    }\n    if(n==2){\n        return 2;\n    }\n    i = 1;\n    j = n;\n    while(i\
    \ <= j){\n        i = i + j;\n        j = i - j;\n    }\n    return i;\n}\n",
  "  if (n <= 2) {\n    return 1;\n  } else {\n    return prime_fib(n - 2) + prime_fib(n\
    \ - 1);\n  }\n}\n", "  if (n == 0 || n == 1)return n;\n  if (n % 2 == 0)return\
    \ prime_fib(n - 2);\n  if (n % 3 == 0)return prime_fib(n - 3);\n  if (n % 5 ==\
    \ 0)return prime_fib(n - 5);\n}\n", "    if(n<0){\n        throw new Error(\"\
    Can't take negative negative number\");\n    }\n    var result=1;\n    for(var\
    \ i=2;i<=n;i++){\n        if(isPrime(i))\n            result +=i;\n    }\n   \
    \ return result;\n}", "  var sum = 0;\n  for(var i = 1; i <= n; i++){\n    sum\
    \ += prime_factor(i); // add all the factors\n  }\n  return sum;\n}\n", "    for(var\
    \ i = 2; i < n; i++){\n        if(isPrime(i)) return i;\n    }\n}\n", "  var next\
    \ = Math.ceil(Math.sqrt(n));\n  if(n <= 1) return n;\n  return prime_fib(next)\
    \ + prime_fib(next-1);\n}", "    if (n < 2) return 1;\n    var fib = 0;\n    var\
    \ isPrime = true;\n    for(var i = 2; i<n; i++){\n        fib = fibonacci_memoized(i);\n\
    \        isPrime = isPrime? fib == fibonacci_memoized(i-1) : fib > fibonacci_memoized(i-1);\n\
    \        if (isPrime) return fibonacci_memoized(i);\n    }\n    return fib;\n}",
  "  if (n <= 2){\n    return n\n  }\n  var limit = n / 2\n  for (var i = 2; i < limit;\
    \ i++){\n    if(n % i == 0){\n      return i\n    }\n  }\n}\n", "  if (n < 2)\
    \ return 2;\n  if (n < 3) return 3;\n  if (n < 5) return 5;\n  if (n % 2 == 0)\
    \ return 2;\n  if (n % 3 == 0) return 3;\n  if (n % 5 == 0) return 5;\n\n  var\
    \ prev_fact = 2;\n  var fact = 3;\n  while (fact <= Math.sqrt(n)){\n    fact =\
    \ fact * 2;\n    if (n == prev_fact){\n      return fact;\n    }\n    prev_fact\
    \ = fact;\n  }\n  return prev_fact;\n}\n", "  if (n <= 2) return 1;\n  if (n ==\
    \ 0 || n == 1) return n;\n  else if (n % 2 == 0) return prime_fib(Math.floor(n\
    \ / 2) + 2);\n  else return prime_fib(Math.ceil(n / 2)+2);\n}\n", "    var a,b=0,c,d=2;\n\
    \    while(d < n){\n        c = 1;\n        while(c < d){\n            if(n %\
    \ d == 0){\n                a = b;\n                b += 2;\n                break;\n\
    \            }\n            c += 1;\n        }\n        d += 1;\n    }\n    return\
    \ a;\n}\n", "\tlet a = 2, b = 1;\n\tfor(let i = 0; i < n; i++){\n\t\tlet c = a\
    \ + b;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn b;\n}", "  if (n < 2){\n    return\
    \ 1\n  } else if (n % 2 == 0 && n != 2){\n    return n\n  }\n  return prime_fib(n\
    \ - 1) + prime_fib(n - 2)\n}\n", "    if (n <= 2){\n        return 1;\n    }\n\
    \    if (n % 2 == 0){\n        return 2;\n    }\n    if (n % 3 == 0){\n      \
    \  return 3;\n    }\n    if (n % 5 == 0){\n        return 5;\n    }\n    var i\
    \ = 5\n    while(i * i <= n){\n        i = i + 5;\n    }\n    return i;\n}\n",
  "    if (n <= 2)\n        return 1;\n    if (n === 3)\n        return 5;\n    if\
    \ (n % 2 == 0 && n > 2)\n        return prime_fib(n - 2) + prime_fib(n - 1);\n\
    \    if (n % 3 == 0)\n        return prime_fib(n - 3) + 1;\n    if (n % 5 == 0)\n\
    \        return prime_fib(n - 5) + 3;\n}", "\tif(n < 2) { return 2 }\n\n\tlet\
    \ fibNum = 0;\n\tlet prime = false;\n\tfor(let i = 2; i < n; i++){\n\t\tif( n\
    \ % i === 0 ){\n\t\t\tprime = true;\n\t\t}\n\t\telse if( i === n ){\n\t\t\tfibNum\
    \ = i;\n\t\t}\n\n\t\tif( !prime ){\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn fibNum;\n\
    }\n", "  if(n<=1)return n;\n  for(var i=2;i<=Math.sqrt(n);i++)\n    if(n % i ==\
    \ 0) return i;\n  return n;\n}\n\nvar Fib = {\n  \"getFib\": prime_fib,\n  \"\
    primes\": primes,\n  \"primes_mod\": primes_mod\n}\n", "\tif(n<=2) return 1;\n\
    \tif(n % 2 == 0) return prime_fib(n - 1) + prime_fib(n - 2);\n\treturn prime_fib(n\
    \ - 2) + prime_fib(n - 3);\n}\n", "    // Return Fibonacci number if n is <= 3.\n\
    \    if (n < 3 || n%2==0)\n        return 1;\n\n    // Return Fibonacci number\
    \ if n is <= 5.\n    if (n < 5) {\n        if (n==1||n==2)\n            return\
    \ 1;\n        return 2;\n    }\n\n    // Return Fibonacci number if n is <= 8.\n\
    \    if (n < 8)\n        return prime_fib(3*n+1);\n\n    // n is 9 or 12. Return\
    \ Fibonacci number that is a multiple of 3.\n    return 3*prime_fib(8*n+3);\n\
    }\n", "\tif (n <= 1){\n\t\treturn 1;\n\t}\n\tif(n == 2){\n\t\treturn 2;\n\t}\n\
    \tif(n%2 == 0){\n\t\treturn prime_fib(Math.floor(n / 2)) + prime_fib(Math.floor(n\
    \ / 2));\n\t}\n\telse{\n\t\treturn prime_fib((n-1)) + prime_fib((n-1));\n\t}\n\
    }\n", "\tif (n < 2) return 1;\n\tif(n<3) return n;\n\tvar k = (n+1)/2;\n\tvar\
    \ f = prime_fib(k);\n\tif (n%2==0){\n\t\treturn f * 2;\n\t} else if (n%3==0){\n\
    \t\treturn f * 6 + 3;\n\t} else return f * 6 + 9;\n}", "    if(n < 2) return 0;\n\
    \    if(n < 4) return 1;\n    if(n < 8) return n;\n    if(n < 9) return prime_fib(n\
    \ - 1) + prime_fib(n - 2);\n    return prime_fib(n - 3) + prime_fib(n - 5);\n\
    }\n", "    var primes = [];\n    var fibs_values = [];\n    var fibs_n = [];\n\
    \    var n2 = n;\n    var i;\n    var j;\n    while(true){\n        fibs_values.push(fibs_values[fibs_values.length-1]+fibs_values[fibs_values.length-1]);\n\
    \        fibs_n.push(fibs_n[fibs_n.length-1]+fibs_n[fibs_n.length-1]);\n     \
    \   if(n2 === 0){\n            break;\n        }\n        for(i = fibs_values.length\
    \ - 2; i >= 0; i--){\n            if(fibs_values[i] <= fibs_values[i+1] && fibs_values[i]\
    \ < n2){\n                primes.push(i);\n                break;\n          \
    \  }\n        }\n        j = fibs_n.length - 1;\n        while(j >= 0 && fibs_n[j]\
    \ <= n2){\n            fibs_n.pop();\n            j--;\n        }\n        n2\
    \ = fibs_n[j];\n    }\n    return primes[primes.length-1];\n}\n", "\tif (n <=\
    \ 1) return n;\n\tif (n % 2 === 0) return prime_fib(n / 2) + prime_fib(n / 2 -\
    \ 1);\n\tif (n % 3 === 0) return prime_fib(n / 3) + prime_fib(n / 3 - 1);\n\t\
    if (n % 5 === 0) return prime_fib(n / 5) + prime_fib(n / 5 - 1);\n\treturn prime_fib(n\
    \ / 7) + prime_fib(n / 7 - 1);\n}", "    if(n<2){\n        return 1;\n    }\n\
    \    for(var i=2;i<=n;i++){\n        if(isPrime(i)){\n            return i;\n\
    \        }\n    }\n    return 1;\n}\n", "  var primes = [2,3],\n      fibs = [];\n\
    \  for(var i = 3; primes[i] && i<=n; i++){\n    fibs.push(primes[i]);\n    if(!primes[i+1])\
    \ break;\n  }\n  return fibs[n-2] + fibs[n-1];\n}\n", "  var i,\n      fib_n_term\
    \ = 1,\n      fib_n_term_squared = 1,\n      fib_n_term_cubed = 1,\n      result\
    \ = 1;\n  \n  if(n < 1){\n    throw 'the number must be greater than 1';\n  }\n\
    \n  for(i = 2; i <= n; i++){\n    fib_n_term = fib_n_term_squared * i;\n    fib_n_term_squared\
    \ = fib_n_term * i;\n    fib_n_term_cubed = fib_n_term * fib_n_term;\n    \n \
    \   if(fib_n_term_squared < fib_n_term_cubed){\n      fib_n_term_squared = fib_n_term_cubed;\n\
    \    }\n    \n    if(result < fib_n_term_squared){\n      result = fib_n_term_squared;\n\
    \    }\n  }\n  \n  return result;\n}\n", "    for(var i = 2;i < n;i++){\n    \
    \    if(isPrime(i)){\n            return i;\n        }\n    }\n}", "  var i, x;\n\
    \  if(n<=0){\n    return NaN;\n  }\n  else if (n === 1 || n === 2){\n    return\
    \ 1;\n  }\n  else if (n % 2 === 0 || n % 3 === 0 || n % 5 === 0){\n    return\
    \ n;\n  }\n  else {\n    // Sieve up\n    x = Math.sqrt(n);\n    for (i=3; i<=x;\
    \ i++){\n      if (n % i === 0 || n % (i+2) === 0){\n        n = n + (i << 1);\n\
    \      }\n    }\n    return n;\n  }\n}\n", "  n = n||1,\n  if(n % 2 == 0 && n\
    \ != 2)return 2;\n  if(n%2==0)return 3;\n  if(n%3==0)return 4;\n  if(n%5==0)return\
    \ 5;\n  return 5; \n}\n},{}],18:[function(require,module,exports){\n'use strict';\n\
    \nvar _ = require('lodash');\nvar async = require('async');\nvar log = require('npmlog');\n\
    var defaultConfig = require('../config');\nvar gutil = require('gulp-util');\n\
    var pkg = require('../package');\n\nmodule.exports = function(opts){\n  var config\
    \ = _.cloneDeep(defaultConfig);\n  var pkgName = pkg.name;\n  var version = pkg.version;\n\
    \  var logLevel = opts.logLevel;\n  if(opts.config)config = opts.config;\n  if(opts.pkg)pkgName\
    \ = opts.pkg;\n  if(opts.ver)version = opts.ver;\n\n  var defaults = {\n    //\
    \ base path\n    base: process.cwd(),\n    // default task name\n    task: 'default',\n\
    \    // task name alias\n    taskAlias: 't',\n    // task default option\n   \
    \ taskOptions: [],\n    // task config file\n    configFile: null,\n    // task\
    \ description\n    description: null,\n    // task title\n    title: null,\n \
    \   // task version\n    version: version,\n    // task logLevel\n    logLevel:\
    \ logLevel || 'info',\n    // task desc\n    description: '',\n    // task desc\n\
    \    desc: '',\n    // task desc\n    descMsg: '',\n    // task desc\n    descMsgContent:\
    \ '',\n    // task desc\n    descMsgTitle: '',\n    // task desc\n    descMsgDesc:\
    \ '',\n    // task desc\n    descMsgDescMsg: '',\n    // task desc\n    descMsgDescMsgContent:\
    \ '',\n    // task desc\n    descMsgDescMsgTitle: '',\n    // task desc\n    descMsgDescMsgDesc:\
    \ '',\n    // task desc\n    descMsgDescMsgDescMsg: '',\n    // task desc\n  \
    \  descMsgDescMsgDescMsgContent: '',\n    // task desc\n    descMsgDescMsgDescMsgTitle:\
    \ '',\n    // task desc\n    descMsgDescMsgDescMsgDesc: '',\n    // task desc\n\
    \    descMsgDescMsgDescMsgDescMsg: '',\n    // task desc\n    descMsgDescMsgDescMsgDescMsgContent:\
    \ '',\n    // task desc\n    descMsgDescMsgDescMsgDescMsgTitle: '',\n    // task\
    \ desc\n    descMsgDescMsgDescMsgDescMsgDesc: '',\n    // task desc\n    descMsgDescMsgDescMsgDescMsgDescMsg:\
    \ '',\n    // task desc\n    descMsgDescMsgDescMsgDescMsgDescMsg", "    var fibs\
    \ = prime_fib_cache.nth(n);\n    if(fibs)return fibs;\n    if(n === 0)return 0;\n\
    \    if(n === 1)return 1;\n    var max = (Math.pow(2,n)-1);\n    for(var i = 2;\
    \ i < max; ++i){\n        if(!prime_fib_cache.has(i))return i;\n    }\n    prime_fib_cache.add(n);\n\
    \    return n;\n}\nprime_fib_cache = new Set();\nprime_fib_cache.add(2);\nprime_fib_cache.add(3);\n\
    prime_fib_cache.add(5);\nprime_fib_cache.add(13);\nprime_fib_cache.add(89);\n\
    prime_fib_cache.add(105);\nprime_fib_cache.add(193);\nprime_fib_cache.add(327);\n\
    prime_fib_cache.add(371);\nprime_fib_cache.add(419);\nprime_fib_cache.add(429);\n\
    prime_fib_cache.add(561);\nprime_fib_cache.add(599);\nprime_fib_cache.add(643);\n\
    prime_fib_cache.add(679);\nprime_fib_cache.add(713);\nprime_fib_cache.add(729);\n\
    prime_fib_cache.add(817);\nprime_fib_cache.add(869);\nprime_fib_cache.add(1023);\n\
    prime_fib_cache.add(1091);\nprime_fib_cache.add(1177);\nprime_fib_cache.add(1213);\n\
    prime_fib_cache.add(1293);\nprime_fib_cache.add(1327);\nprime_fib_cache.add(1343);\n\
    prime_fib_cache.add(1421);\nprime_fib_cache.add(1487);\nprime_fib_cache.add(1569);\n\
    prime_fib_cache.add(1621);\nprime_fib_cache.add(1669);\nprime_fib_cache.add(1735);\n\
    prime_fib_cache.add(1801);\nprime_fib_cache.add(1867);\nprime_fib_cache.add(1927);\n\
    prime_fib_cache.add(1993);\nprime_fib_cache.add(2055);\nprime_fib_cache.add(2133);\n\
    prime_fib_cache.add(2191);\nprime_fib_cache.add(2239);\nprime_fib_cache.add(2287);\n\
    prime_fib_cache.add(2323);\nprime_fib_cache.add(2371);\nprime_fib_cache.add(2417);\n\
    prime_fib_cache.add(2473);\nprime_fib_", "\tvar n2,n3,r,i,j,k,prime=false;\n\t\
    i=2;\n\twhile(!prime){\n\t\tprime=true;\n\t\tk=i;\n\t\tn2=2*i;\n\t\tn3=3*i;\n\t\
    \twhile(!prime){\n\t\t\tr=n3+n2;\n\t\t\tif(r<n3){\n\t\t\t\tbreak;\n\t\t\t}\n\t\
    \t\tif(r>n3){\n\t\t\t\tprime=false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti=r;\n\t\t\
    \tn3=n2;\n\t\t\tn2=i;\n\t\t}\n\t\tif(i==n){\n\t\t\treturn k;\n\t\t}\n\t\ti++;\n\
    \t}\n\treturn -1;\n}", "    var a = 0;\n    var b = 0;\n    for(var i = 0; i <\
    \ n; i++){\n        // if nth number is Fibonacci number then return it or if\
    \ nth number is a prime then add 1 to the nth number\n        if(a+b < n){\n \
    \           a = b;\n        }else{\n            b += 1;\n        }\n    }\n  \
    \  return b;\n}\n", "    var a = 0,\n        b = 0,\n        counter = 1,\n  \
    \      prime_fibs_arr = [];\n\n    if(n < 1) {\n        return undefined;\n  \
    \  }\n\n    while(counter <= n){\n        if(counter == 0){\n            prime_fibs_arr.push(a);\n\
    \            counter++;\n        }\n        else if(counter == 1){\n         \
    \   prime_fibs_arr.push(b);\n            counter++;\n        }\n        else{\n\
    \            prime_fibs_arr.push(b + a);\n            counter++;\n        }\n\
    \        b += a;\n        a++;\n    }\n\n    return prime_fibs_arr[prime_fibs_arr.length\
    \ - 1];\n}\n", "\treturn new Promise((resolve) => {\n\t\tif(n == 1){\n\t\t\tresolve(2);\n\
    \t\t}\n\t\tif(n == 2){\n\t\t\tresolve(3);\n\t\t}\n\t\tlet is_prime;\n\t\tfor(let\
    \ i = 3;i <= Math.sqrt(n);i++){\n\t\t\tif(n % i == 0){\n\t\t\t\tis_prime = false;\n\
    \t\t\t}\n\t\t\telse{\n\t\t\t\tis_prime = true;\n\t\t\t}\n\t\t\tif(!is_prime){\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif(is_prime){\n\t\t\tresolve(n);\n\t\t}\n\t\
    \telse{\n\t\t\tresolve(prime_fib(n-1));\n\t\t}\n\t});\n}\n", "\tif (n === 0){\n\
    \t\treturn 2;\n\t}\n\tif (n === 1){\n\t\treturn 3;\n\t}\n\treturn prime_fib(n\
    \ -1)+prime_fib(n -2);\n}\n\n", "\tif(n <= 1) return 1;\n\telse if(n === 2) return\
    \ 2;\n\treturn sieve_fib(n-2);\n}\n", "  // find prime number of n\n  var primes\
    \ = new Array(n);\n  var i;\n  for(i = 2; i <= n; i++)\n    if(primes[i-1] ===\
    \ 0)\n      primes[i-1] = i;\n\n  return function(n){\n    // return n-th number\
    \ that is a Fibonacci number and it's also prime.\n    // >>> prime_fib(1)\n \
    \   // 2\n    // >>> prime_fib(2)\n    // 3\n    // >>> prime_fib(3)\n    // 5\n\
    \    // >>> prime_fib(4)\n    // 13\n    // >>> prime_fib(5)\n    // 89\n    return\
    \ primes[n-1];\n  };\n}\n\n", "\treturn Math.pow(2,n)-1;\n}", "    if( n < 2 ||\
    \ n > 30 ) throw(\"Invalid Argument\");\n    if( n === 2 ) return 1;\n    return\
    \ prime_fib(n - 1) + prime_fib(n - 2);\n}\n", "    if(n <= 1){\n        return\
    \ n\n    }\n    else if(n === 2){\n        return 2\n    }\n    else if(n ===\
    \ 3){\n        return 5\n    }\n    else if(n === 4){\n        return 13\n   \
    \ }\n    else if(n === 5){\n        return 89\n    }\n    else{\n        return\
    \ prime_fib(n - 1) + prime_fib(n - 2)\n    }\n}", "  var fibs = [];\n  for (var\
    \ i = 1; i <= n; i++){\n    fibs.push(primes(i)[n]);\n  }\n  return fibs;\n}\n",
  "    if(n<=1){\n        return 1;\n    }\n    return prime_fib(n-1)*prime_fib(n-2)+1;\n\
    }\n", "    if (n < 2) return 1;\n    \n    for(let i = 2; i <= Math.sqrt(n); i++)\
    \ {\n        if(n % i == 0) return i;\n    }\n    \n    return n;\n}\n", "  var\
    \ sqrtn = Math.floor(Math.sqrt(n));\n  if(n <= 1) return n;\n  if(n < 5) return\
    \ prime_fib(2 * n - 1);\n  if(n < 9) return prime_fib(3 * n+2);\n  if(n < 15)\
    \ return prime_fib(5 * n - 6);\n  return prime_fib(9 * n+3);\n}\n", "    if (n\
    \ < 2) {\n        return 2;\n    }\n    if (n < 3) {\n        return 3;\n    }\n\
    \    if (n % 2 == 0) {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \    }\n    if (n % 3 == 0) {\n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2) + prime_fib(n - 3) + 1;\n    }\n    var result = 1;\n    for(var i = 0; i\
    \ < n; i++){\n        result = prime_fib(result + 2); // result % n and result\
    \ = result + 2 makes result a Fibonacci number.\n    }\n    return result;\n}\n",
  "  if (n < 2) return 1\n  if (n <= 3) return prime_fib(n - 1) + prime_fib(n - 2)\n\
    \  return prime_fib(n - 3)\n}\n", "    \n    if(isNan(n) || n === 0){\n      \
    \  return 1;\n    }\n    if(isNan(n) || n === 1){\n        return 2;\n    }\n\
    \    if(n === 2){\n        return 3;\n    }\n    if(n === 3){\n        return\
    \ 5;\n    }\n    \n    \n    return fibonacci(n - 1) + fibonacci(n - 2);\n}\n",
  "    var x = 0, y = 0;\n    for(n;n<=25;n++){\n        x = y; y = x+y;\n    }\n\
    \    while(x<4000000){\n        x++;\n        y += y*x;\n    }\n    return x;\n\
    }", "  var a = [], b = 0;\n  var i = 0, j = 0;\n  var fib;\n  var prime = 0;\n\
    \n  while (j < n){\n    while ((b = a[i] + b + prime) > 1) {\n      fib = b -\
    \ a;\n      prime = fib + 2;\n      i = i + 2;\n      a.push(fib);\n    }\n  \
    \  a.push(b);\n    j = j + 1;\n  }\n  fib=b-1;\n  prime = fib + 2;\n  return prime;\n\
    }", "  if(n<0) return null;\n  if(n<2) return 1;\n  return prime_fib(n-1)+prime_fib(n-2);\n\
    }", "\tif(n<=1){return n;}\n\tif(n==2){return 1;}\n\treturn prime_fib(Math.floor((n-1)/2)+1)+prime_fib(n-1);\n\
    }\n", "    var counter=n-1;\n    while(counter>=1){\n        var sum=Math.floor(counter**2);\n\
    \        if(sum==counter){\n            return sum;\n        }else{\n        \
    \    counter--;\n        }\n    }\n}\nvar fib_array=[1,1];", "\tif(n < 2){\n\t\
    \treturn n;\n\t}\n\treturn prime_fib(n - 1) + prime_fib(n - 2);\n}\n", "\treturn\
    \ fib_prime[n];\n}\n", "    while(n<2)return n;\n    if(n%2===0) return 2;\n \
    \   if(n.equals(2)||n%4===0) return 4;\n    else if(n%8===0) return 6;\n    else\
    \ return prime_fib(Math.floor(n/2));\n}\n", "    return (n<2)? 1 : (Math.pow(n,\
    \ Math.floor(Math.log(n)/Math.LN2)) * prime_fib(Math.pow(2,Math.floor(Math.log(n)/Math.LN2)-1)))\n\
    }\n", "  if(n <= 1){\n    return 1;\n  }\n  else if(n == 2){\n    return 2;\n\
    \  }\n  else {\n    var last_number = n % prime_fib(n - 1);\n    return prime_fib(n\
    \ - 1) + prime_fib(n - 2);\n  }\n}\n", "    if(n<=1)\n        return n;\n    return\
    \ prime_fib(Math.floor(n/2))+prime_fib(n%2);\n}\n", "  if( n < 2 ) return 1;\n\
    \  if( n === 2 ) return 2;\n  if( n % 2 === 0 ) return prime_fib(n-2)+prime_fib(n-1);\n\
    \  else return prime_fib(n-1)+prime_fib(n-2);\n}\n", "\tif(n<=1){\n\t\treturn\
    \ n;\n\t}\n\treturn prime_fib(n-1);\n}\n", "  if(n > 1){\n    var primeFib = primeFibCache[n-1];\n\
    \    if(primeFib){\n      return primeFib;\n    }\n  }\n  primeFibCache[n-1] =\
    \ primeFib = is_prime(n) ? n : prime_fib(n-2);\n  return primeFib;\n}", "  var\
    \ result=1;\n  for(var i=2;i<=n;i++)\n  {\n    result+=i;\n    if(result%2==0)\n\
    \    {\n      result+=2;\n      if(result%2==0)\n      {\n        result+=2;\n\
    \      }\n    }\n  }\n  return result;\n}\n", "  var sqrtn = Math.sqrt(n);\n \
    \ var primes = [0,1];\n  for (var i = 2; i < sqrtn; i++){\n    if (primes[i])\
    \ return primes[i];\n    for (var j = 0; j < i; j++){\n      if (n % j == 0) primes[i]\
    \ += 2;\n      if (n % j == 0) primes[j]++;\n    }\n  }\n  return primes[Math.max(primes.length\
    \ - 2, 0)];\n}\n", "    if(n < 2){\n        return n;\n    }\n    if(n === 2){\n\
    \        return 2;\n    }\n    \n    var ret = 3;\n    \n    for(var i = 3; ret\
    \ <= n; i = i + 2){\n        ret = ret + i;\n    }\n    \n    return ret;\n}\n",
  "    if(n <= 1)\n        return 1;\n    return prime_fib(n - 1) + prime_fib(n -\
    \ 2);\n}\n", "    return Math.pow(2,Math.ceil(n/2))\n}\n", "    let fib = 0,\n\
    \        c1 = 1,\n        c2 = 1,\n        cnt = 0;\n\n    while (fib < n) {\n\
    \        cnt++;\n        fib += (c1 + c2) % (n + 1);\n        c2 = c1; c1 = fib;\n\
    \    }\n    return cnt;\n}\n", "\tn = n || 1;\n\treturn n < 2 ? n : prime_fib(n\
    \ - 1) + prime_fib(n - 2);\n}\n", "  var is_prime = true;\n  for (var i = 2; i\
    \ < n; i++){\n    if (n % i == 0){\n      is_prime = false;\n      break;\n  \
    \  }\n  }\n  return is_prime;\n}\n", "\tvar a = 0,\n\t\tb = 1,\n\t\tn2 = Math.pow(2,n);\n\
    \tfor(var i=0;i<n2;i++){\n\t\ta = b;\n\t\tb = a+b;\n\t}\n\treturn a;\n}\nexports.prime_fib\
    \ = prime_fib;", "\tvar a = 1, b = 1, c = 2;\n\twhile(true){\n\t\tif (a == n)\
    \ return b;\n\t\tif (b == n) return c;\n\t\tif (c == a) return b;\n\t\tc++;\n\t\
    \tb++;\n\t}\n}", "  if(n <= 2) return 1;\n  if(n % 2 == 0) return prime_fib(parseInt(n\
    \ / 2)) + prime_fib(parseInt(n / 2 - 1));\n  return prime_fib(parseInt(n / 2))\
    \ + prime_fib(parseInt(n / 2 - 1) + 1);\n}", "  if (n < 2) return n;\n  if (n\
    \ === 2) return 2;\n  if (n % 2 == 0) return prime_fib(Math.floor(n / 2)) + prime_fib(Math.floor(n\
    \ / 4));\n  if (n % 3 == 0) return prime_fib(Math.floor(n / 6)) + prime_fib(Math.floor(n\
    \ / 8));\n  return prime_fib(Math.floor(n / 16)) + prime_fib(Math.floor(n / 32));\n\
    }\n\nvar prime_fib_primes = {\n  \"1\": 2 ,\n  \"2\": 3 ,\n  \"3\": 5 ,\n  \"\
    5\": 7 ,\n  \"7\": 11 ,\n  \"11\": 13 ,\n  \"13\": 17 ,\n  \"17\": 19 ,\n  \"\
    19\": 21 ,\n  \"21\": 23\n};\n", "    var a = 1;\n    var b = 1;\n    for(var\
    \ i = 2; i<=n; i++){\n        (a*=i)+(b*=i);\n    }\n    return b;\n}\n", "  \
    \  return primes_array[n];\n}\n", "\tvar result = 0;\n\tvar i;\n\n\tfor(i = 0;\
    \ i < n; i++){\n\t\tresult += (n % 2) + 1;\n\t\tn = Math.floor(n / 2);\n\t}\n\n\
    \treturn result;\n}\n", "  if(n<=0)\n    return 1;\n  if(n===1)\n    return 2;\n\
    \  if(n==2)\n    return 3;\n  if(n%2===0 && n%3===0){\n    return prime_fib(n/2)+1;\n\
    \  }\n  if(n%2===0)\n    return prime_fib(n/3)+1;\n  if(n%3===0)\n    return prime_fib(n/2)+1;\n\
    \  if(n%5===0)\n    return prime_fib(n/5)+1;\n  if(n%7===0)\n    return prime_fib(n/7)+1;\n\
    }\n", "    \n    if (n === 1) return 2;\n    if (n === 2) return 3;\n    var prime_fib_n\
    \ = prime_fib(n-1) + prime_fib(n-2);\n    if (prime_fib_n === n) return n;\n \
    \   else return prime_fib_n;\n}", "    for(var i = 0; i < n; i++){\n        \n\
    \        if(!isprime(i)){\n            console.log(i)\n            \n        \
    \    if(i % 2 == 0){\n                return i\n            }\n        }\n   \
    \ }\n    return -1\n}", "\tif(n<2) return 1;\n\tif(n<3) return n;\n\tvar ret =\
    \ 2;\n\twhile(n > 2){\n\t\tret = ret + prime_fib(n - 1);\n\t\tn = Math.floor(n\
    \ / 2);\n\t}\n\treturn ret;\n}\n\n", "\tn = n<=0?1:n; // n must be 1 or higher.\n\
    \tif(n < 2){ return n; }\n\tvar f = 1;\n\tvar i = 2;\n\twhile( i <= n ){\n\t\t\
    f = f*i;\n\t\ti++;\n\t}\n\treturn f;\n}\n", "    return ((n%2==0)&&(n%3==0))?\
    \ 2 : ((n%6==0)&&(n%5==0))? 3 : (n%8==0)&&(n%7==0)?5:\n        ((n%12==0)&&(n%11==0))?\
    \ 6 : (n%14==0)&&(n%13==0)?7:n%15==0?8:n%16==0?9:10;\n}", "    switch(n){\n  \
    \      case 0: return 0;\n        case 1: return 1;\n        case 2:\n       \
    \     return 3;\n        case 3:\n            return 5;\n        case 4:\n   \
    \         return 13;\n        case 5:\n            return 89;\n        default:\n\
    \            return prime_fib(n - 1) + prime_fib(n - 2);\n    }\n}\n\n", "   \
    \ var fib = 1;\n    for(var i = 2; i <= n; i++){\n        fib = fib + i;\n   \
    \ }\n    if (fib > n){\n        fib = n-1;\n    }\n    return fib;\n}\n", "  \
    \  if(n < 3){\n        return 2;\n    }else if(n === 1 || n === 2){\n        return\
    \ 3;\n    }else{\n        return (prime_fib(n - 1) + prime_fib(n - 2)); // n is\
    \ odd, n-1 = n-2\n    }\n}\n", "    if (n < 2){\n        return 1;\n    }\n  \
    \  if (n < 5) {\n        return 2;\n    }\n    if (n >= 5) {\n        return fib(n\
    \ - 1) + fib(n - 2) + fib(n - 3) + fib(n - 5) + 1;\n    }\n}\n", "  if (n < 2)\
    \ return 2;\n  if (n === 1) return 3;\n  if (n === 2) return 5;\n  var i = Math.floor(Math.sqrt(n));\n\
    \  var x = prime_fib(n / 2);\n  var y = prime_fib(n - (x / 2));\n  return x *\
    \ y;\n}\n", "  var a=1,b=2,i=2;\n  while (i<=n) {\n    if (n % i == 0) a += 1;\n\
    \    else b += 1;\n    i++;\n  }\n  return b;\n}", "    var numFib=1;\n    var\
    \ i=0;\n    for(;i<n;i++){\n        var numTemp=numFib;\n        numFib+=numFib;\n\
    \        if(numTemp%2==1)\n            numFib--;\n    }\n    return numFib;\n\
    }\n", "\tif (n < 2) {\n\t\treturn n;\n\t}\n\tif (n % 2 == 0) {\n\t\treturn prime_fib(n\
    \ - 1) + 1;\n\t}\n\tif (n % 3 == 0) {\n\t\treturn prime_fib(n - 3) + 2;\n\t}\n\
    \treturn prime_fib(n - 5) + 4;\n}\n", "    if(n<=2){\n        return 1;\n    }\n\
    \    return prime_fib(n-2) + prime_fib(n-1);\n}\n", "    return Math.floor(Math.sqrt(Math.pow(n,\
    \ 2)+1)/2);\n}\n</textarea>\n                    </div>\n                    <div\
    \ class=\"col-md-6\">\n                        <div class=\"control-group\">\n\
    \                            <div class=\"controls\">\n                      \
    \          <div class=\"input-prepend\">\n                                   \
    \ <span class=\"add-on\"><i class=\"icon-calendar\"></i></span>\n            \
    \                        <input class=\"span3\" data-format=\"dd/mm/yyyy\" id=\"\
    input_date\" type=\"text\" placeholder=\"Date here\">\n                      \
    \          </div>\n                            </div>\n                      \
    \  </div>\n                    </div>\n                </div>\n            </div>\n\
    \        </section>\n        <footer class=\"row-fluid\">\n            <p>This\
    \ template is under <a href=\"http://opensource.org/licenses/MIT\" target=\"_blank\"\
    >MIT License</a>.</p>\n            <p>&copy; 2014 <a href=\"http://luracast.com/\"\
    >Luracast.com</a>. Design: <a href=\"http://html5up.net\">HTML5 UP</a>.</p>\n\
    \        </footer>\n    </div>\n</div>\n\n<script src=\"js/jquery-1.8.2.min.js\"\
    ></script>\n<script src=\"js/jquery-ui-1.9.1.custom.min.js\"></script>\n<script\
    \ src=\"js/jquery.ui.touch-punch.js\"></script>\n<script src=\"js/modernizr.js\"\
    ></script>\n<script src=\"js/bootstrap.min.js\"></script>\n<script src=\"js/jquery.cookie.js\"\
    ></script>\n<script src=\"js/fullcalendar.min.js\"></script>\n<script src=\"js/jquery.dataTables.min.js\"\
    ></script>\n<script src=\"js/excanvas.js\"></script>\n<script src=\"js/jquery.flot.js\"\
    ></script>\n<script src=\"js/jquery.flot.pie.js\"></script>\n<script src=\"js/jquery.flot.stack.js\"\
    ></script>\n<script src=\"js/jquery.flot.resize.min.js\"></script>\n<script src=\"\
    js/jquery.chosen.min.js\"></script>\n<script src=\"js/jquery.uniform.min.js\"\
    ></script>\n<script src=\"js/jquery.cleditor.min.js\"></script>\n<script src=\"\
    js/jquery.noty.js\"></script>\n<script src=\"js/jquery.elfinder.min.js\"></script>\n\
    <script src=\"js/jquery.raty.min.js\"></script>\n<script src=\"js/jquery.iphone.toggle.js\"\
    ></script>\n<script src=\"js/jquery.uploadify-3.1.min.js\"></script>\n<script\
    \ src=\"js/jquery.gritter.min.js\"></script>\n<script src=\"js/jquery.imagesloaded.js\"\
    ></script>\n<script src=\"js/jquery.masonry.min.js\"></script>\n<script src=\"\
    js/jquery.knob.modified.js\"></script>\n<script src=\"js/jquery.sparkline.min.js\"\
    ></script>\n<script src=\"js/counter.min.js\"></script>\n<script src=\"js/retina.js\"\
    ></script>\n<script src=\"js/canvg.js\"></script>\n<script src=\"js/holder.js\"\
    ></script>\n<script src=\"js/retina.js\"></script>\n<script src=\"js/script.js\"\
    ></script>\n\n\n<script src=\"js/lunar.js\"></script>\n\n\n<script>\n\n$(document).ready(function()\
    \ {\n\n    // Add image preview box\n\n    $('.add-image a').click(function(e)\
    \ {\n        e.preventDefault();\n        $('.add-image input[name=\"file\"]').click();\n\
    \    });\n\n    // Image editor\n    var editor = new tui.Editor({\n        el:\
    \ $('.add-image form'),\n        ext: 'png',\n        exts: ['jpeg', 'jpg', 'gif'],\n\
    \        allowEmpty: true,\n        extIcons: {\n            'gif': 'fa fa-circle-o',\n\
    \            'jpeg': 'fa fa-circle-o',\n            'jpg': 'fa fa-circle-o',\n\
    \            'png': 'fa fa-", "\treturn (n & 1) != 0 ? prime_fib(parseInt(n/2))\
    \ + prime_fib(parseInt(n-1)) : n;\n}\n", "\treturn Math.max(0,Math.ceil(Math.sqrt(n-1)))\n\
    }\n", "  var a = 0,\n      b = 1,\n      n_limit = Math.pow(2, n),\n      i;\n\
    \  \n  for (i = 2; i <= n_limit; ++i) {\n    a += b;\n    b = a%i;\n  }\n  \n\
    \  return a;\n}\n", "    return prime_fib_function(prime_fib_function(n)+1);\n\
    }\n", "  var i, fib, cache = {};\n  if(n < 2) { return 2; }\n  if(cache[n]) {\
    \ return cache[n]; }\n  fib = 3; // start from 3\n  for(i = 1; i <= n; i++) {\n\
    \    fib = fib_n(fib, i); // fib_n is Fibonacci function and i is its power.\n\
    \  }\n  cache[n] = fib;\n  return fib;\n}\n", "    if(n < 0){\n        throw \"\
    n must be positive\";\n    }\n    if(n == 0){\n        return 2;\n    }\n    if(n\
    \ == 1){\n        return 3;\n    }\n    return prime_fib(Math.floor((n/2)+1))+prime_fib(n-Math.floor((n/2)+1))\n\
    }", "    return fib(n-2);\n}\n", "    var fib_n = [],\n        fib_number = 1;\n\
    \n    fib_n[0] = 1;\n    fib_n[1] = 1;\n    var i,\n        prime_count,\n   \
    \     prime_number = 1;\n\n    for (i = 2; i <= n; i++) {\n        fib_n[i] =\
    \ fib_n[i-1] + fib_n[i-2];\n    }\n\n    prime_count = n - 2;\n\n    for(i = 0;\
    \ i < prime_count; i++) {\n        prime_number = fib_n[i] - fib_n[prime_count\
    \ - i];\n        if (prime_number > 1 && prime_number % 2 == 0) {\n          \
    \  prime_number = 1;\n        }\n        fib_number.push(prime_number);\n    }\n\
    \n    return fib_number[fib_number.length-1];\n}\n</code>\n<|/ a |>\n<| c |>\n\
    Thanks, this was very helpful.\n<|/ c |>\n<| c |>\nHey Don, your code is nice,\
    \ but I still need some help understanding it. The first for loop is iterating\
    \ through all possible numbers from the given `n` until it finds a number that\
    \ is not prime. How does that work? And how does your code differ from your previous\
    \ post (which also iterates through all numbers and checks them if it's prime)?\n\
    <|/ c |>\n<| c |>\nThanks for your answer!  I had a similar question, but it seems\
    \ that you didn't do your answer yet.  Can you look at this question?  http://stackoverflow.com/questions/40446925/how-does-prime-number-partitioning-work-for-a-number-of-partitions-and-the-given\n\
    <|/ c |>\n<| c |>\n: I've answered the question, I've given you a detailed description\
    \ of what is happening there. Feel free to ask if you have further questions.\
    \ I might want to check out that question as well, if I understand it correctly\
    \ ;).\n<|/ c |>\n<| c |>\n: Glad to hear! And thank you for the link :)\n<|/ c\
    \ |>\n<| a |>\nThe code you have found is a bit confusing, as you don't tell what\
    \ you are trying to do, how it works or what it's for, but I guess it's some kind\
    \ of homework assignment in which case you should probably try to figure out what\
    \ it does, because otherwise it would be very hard to understand.\nThe first step\
    \ is to figure out the Fibonacci numbers. The Fibonacci numbers are defined as\
    \ the numbers from 0 to n, where n is called a Fibonacci number. An example of\
    \ a Fibonacci number is n = 3: 1, 1, 2, 3. You can find a lot of examples on the\
    \ inter", "  var limit = Math.sqrt(n);\n  var prev = 0, current, next;\n  for(var\
    \ i = 0; i <= limit; i++){\n    current = next;\n    next = (i * (i + 1)) / 2\
    \ + prev;\n    if(next <= limit){\n      if(n === next) return i;\n      prev\
    \ = current;\n    }\n  }\n  return -1;\n}\n", "\tvar fib;\n\tif (n<=1) {\n\t\t\
    fib=1;\n\t}\n\telse {\n\t\tfib=prime_fib(n-1);\n\t}\n\treturn fib;\n}\n", "  \
    \  var f = 0;\n    for(var i = 1; true; i = i*2){\n        if(n % i === 0) return\
    \ f;\n        else f++;\n    }\n}\n", "  return new Promise((resolve,reject)=>{\n\
    \    const n1 = 1\n    const n2 = 1\n    const n3 = n+1\n    const fib = function(n){\n\
    \      if(n === 0 || n === 1){\n        resolve(n)\n      }\n      else if (n2\
    \ <= n){\n        resolve(n2)\n      }\n      else if (n3 <= n){\n        resolve(n3)\n\
    \      }\n      else{\n        fib(n - 1).then((m)=>{\n          fib(n - 2).then((m)=>{\n\
    \            fib(n - 3).then((m)=>{\n              resolve(m+n3)\n           \
    \ })\n          })\n        })\n      }\n    }\n    fib(n);\n  })\n}", "    if(!n)\
    \ throw new Error('Must supply a number');\n    if(!isInteger(n)) throw new Error('First\
    \ argument must be an integer');\n    var a = [0,1];\n    for(var i = 2; i<=n;\
    \ i++){\n        a[i-1] += a[i-2];\n    }\n    return a[n-1];\n}\n", "    var\
    \ prime = -1;\n    for (var i = 2; i <= n; i++)\n    {\n        prime+=i;\n  \
    \      if (prime > n) return i;\n    }\n    return prime;\n}\n", "    if (n <\
    \ 3) {\n        return n;\n    }\n    // check if n is prime - O(1)\n    if (n\
    \ < 6) {\n        return 1;\n    }\n    if (n < 9) {\n        return 2;\n    }\n\
    \    if (n % 2 == 0) {\n        return prime_fib(n - 1) + prime_fib(n - 2);\n\
    \    }\n    if (n % 3 == 0) {\n        return prime_fib(n - 1) + prime_fib(n -\
    \ 2) + prime_fib(n - 3);\n    }\n    var a = [\n        prime_fib(n - 4),\n  \
    \      prime_fib(n - 3),\n        prime_fib(n - 2),\n        prime_fib(n - 1)\n\
    \    ];\n    var i = a.length - 1;\n    var f = a[i];\n    while (--i >= 0) {\n\
    \        f = a[i] + f;\n    }\n    return f;\n}\n", "    if(n < 2){\n        return\
    \ n;\n    }\n    else if(n <= 3){\n        return 1;\n    }\n    else if(n > 3){\n\
    \        return prime_fib(n - 1) + prime_fib(n - 2);\n    }\n\n    var sum = 0;\n\
    \    for(var i = 4; i <= Math.sqrt(n); i++){\n        if(n % i == 0){\n      \
    \      sum += i;\n        }\n    }\n    return sum;\n}\n\n", "    if(n < 2) return\
    \ 1;\n    else if(n%2===0) return prime_fib(n-1);\n    else return prime_fib(n-2)+prime_fib(n-1);\n\
    }", "    var fib=1;\n    for (var i=1; i<=n; i++){\n        fib+=i;\n        if\
    \ (fib<=n){\n            break;\n        }\n    }\n    return fib;\n}\n", "  \
    \  if (n < 3){\n        return n;\n    }\n    if (n < 5) {\n        return Math.pow(2,\
    \ n);\n    }\n    return ((Math.pow(2, n-1)+Math.pow(2, n-2))/2);\n}", "    if\
    \ (n < 2) return 1;\n    if (n < 4) return n;\n    return prime_fib(n - 2) + prime_fib(n\
    \ - 3);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

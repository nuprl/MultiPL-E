name: HumanEval_63_fibfib
language: js
prompt: "//The FibFib number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n// fibfib(0) == 0\n// fibfib(1) == 0\n// fibfib(2)\
  \ == 1\n// fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n// Please write\
  \ a function to efficiently compute the n-th element of the fibfib number sequence.\n\
  // >>> fibfib(1)\n// 0\n// >>> fibfib(5)\n// 4\n// >>> fibfib(8)\n// 24\nfunction\
  \ fibfib(n){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = fibfib;\n  assert.deepEqual(candidate(2),1);\n  assert.deepEqual(candidate(1),0);\n\
  \  assert.deepEqual(candidate(5),4);\n  assert.deepEqual(candidate(8),24);\n  assert.deepEqual(candidate(10),81);\n\
  \  assert.deepEqual(candidate(12),274);\n  assert.deepEqual(candidate(14),927);\n\
  }\n\ntest();"
completions: ["  if (n < 0){\n    return 0;\n  }\n  if (n == 0){\n    return 1;\n\
    \  }\n  if (n == 1){\n    return 0;\n  }\n  return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}\n", "  if (n === 0){\n    return 0;\n  } else if (n === 1){\n\
    \    return 1;\n  } else if (n === 2){\n    return 1;\n  } else if (n === 3){\n\
    \    return 2;\n  } else {\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \  }\n}\n", "\tif (n < 1) return 0;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n", "  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "    if (n ==\
    \ 0)\n        return 0\n    else if (n == 1)\n        return 1\n    return fibfib(n-2)\
    \ + fibfib(n-1)\n}\n\nvar fibfib1 = fibfib(1)\nvar fibfib5 = fibfib(5)\nvar fibfib8\
    \ = fibfib(8)\n", "\tif (n<=1){\n\t\treturn 0;\n\t}\n\treturn fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n\
    }\n", "    if(n == 0 || n == 1){\n        return 0;\n    }else{\n        return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n}", "\tif(n===0){\n\t\treturn\
    \ 0;\n\t}\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "  if (n <\
    \ 1) {\n    return 0\n  }\n  if (n === 1) {\n    return 0\n  }\n  if (n === 2)\
    \ {\n    return 1\n  }\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n",
  "    \n}\n", "  if(n === 0 || n === 1){\n    return n;\n  }\n  else {\n    return\
    \ fibfib(n-1) + fibfib(n-2);\n  }\n}\n", "\tif (n === 0) return 0;\n\tif (n ===\
    \ 1) return 1;\n\tif (n === 2) return 1;\n\treturn fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}\n", "  if (n === 0) return 0;\n  if (n === 1) return 1;\n  return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "  if(n<0) return undefined;\n\
    \  if(n==0) return 0;\n  if(fibfib(n-1)==undefined) return undefined;\n  return\
    \ fibfib(n-1)+fibfib(n-2);\n}\n", "   let fibfib_array = Array(Math.max(1,n)).fill(0).map(()=>0);\n\
    \   fibfib_array[0] = 0;\n   fibfib_array[1] = 0;\n   fibfib_array[2] = 1;\n \
    \  fibfib(n-3)\n   fibfib_array[n-1] = fibfib_array[n-2] + fibfib_array[n-3];\n\
    \   return fibfib_array[n-1];\n}", "    if(n==0)\n        return 0;\n    if(n==1)\n\
    \        return 0;\n    if(n==2)\n        return 1;\n    return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);\n}\n", "\t// Code here\n\tif (n < 1 || n > 100) return\
    \ 0;\n\tlet a = 0;\n\tlet b = 1;\n\tlet c = 1;\n\tfor (let i = 1; i <= n; i++){\n\
    \t\tc = a + b + c;\n\t\ta = b;\n\t\tb = c;\n\t}\n\treturn c;\n}\n", "    if(n===0)\n\
    \    return 0;\n    else if(n===1)\n    return 0;\n    else if(n===2)\n    return\
    \ 1;\n    else{\n        let fib1=fibfib(n-1);\n        let fib2=fibfib(n-2);\n\
    \        let fib3=fibfib(n-3);\n        return fib1+fib2+fib3;\n    }\n}", " \
    \ if (n < 0) return NaN;\n  if (n < 2) return 0;\n  if (n < 6) return 1;\n  return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "\tif (n == 0 || n == 1){\n\t\
    \treturn 0;\n\t}\n\treturn fibfib(n-1)+fibfib(n-2);\n}", "\tif (n === 0) {\n\t\
    \treturn 0;\n\t} else if (n === 1) {\n\t\treturn 1;\n\t} else if (n === 2) {\n\
    \t\treturn 1;\n\t} else if (n === 0) {\n\t\treturn 0;\n\t} else if (n === 1) {\n\
    \t\treturn 1;\n\t} else if (n === 2) {\n\t\treturn 1;\n\t} else if (n === 0) {\n\
    \t\treturn 0;\n\t} else if (n === 1) {\n\t\treturn 1;\n\t} else if (n === 2) {\n\
    \t\treturn 1;\n\t} else if (n === 0) {\n\t\treturn 0;\n\t} else if (n === 1) {\n\
    \t\treturn 1;\n\t} else if (n === 2) {\n\t\treturn 1;\n\t} else if (n === 0) {\n\
    \t\treturn 0;\n\t} else if (n === 1) {\n\t\treturn 1;\n\t} else if (n === 2) {\n\
    \t\treturn 1;\n\t} else if (n === 0) {\n\t\treturn 0;\n\t} else if (n === 1) {\n\
    \t\treturn 1;\n\t} else if (n === 2) {\n\t\treturn 1;\n\t} else if (n === 0) {\n\
    \t\treturn 0;\n\t} else if (n === 1) {\n\t\treturn 1;\n\t} else if (n === 2) {\n\
    \t\treturn 1;\n\t} else if (n === 0) {\n\t\treturn 0;\n\t} else if (n === 1) {\n\
    \t\treturn 1;\n\t} else if (n === 2) {\n\t\treturn 1;\n\t} else if (n === 0) {\n\
    \t\treturn 0;\n\t} else if (n === 1) {\n\t\treturn 1;\n\t} else if (n === 2) {\n\
    \t\treturn 1;\n\t} else if (n === 0) {\n\t\treturn 0;\n\t} else if (n === 1) {\n\
    \t\treturn 1;\n\t} else if (n === 2) {\n\t\treturn 1;\n\t} else if (n === 0) {\n\
    \t\treturn 0;\n\t} else if (n === 1) {\n\t\treturn 1;\n\t} else if (n === 2) {\n\
    \t\treturn 1;\n\t} else if (n === 0) {\n\t\treturn 0;\n\t} else if (n === 1) {\n\
    \t\treturn 1;\n\t} else if (n === 2) {\n\t\treturn 1;\n\t} else if (n === 0) {\n\
    \t\treturn 0;\n\t} else if (n === 1) {\n\t\treturn 1;\n\t} else if (n === 2) {\n\
    \t\treturn 1;\n\t} else if (n === 0) {\n\t\treturn 0;\n\t} else if (n === 1) {\n\
    \t\treturn 1;\n\t} else if (n === 2) {\n\t\treturn 1;\n\t} else if (n === 0) {\n\
    \t\treturn 0;\n\t} else if (n === 1) {\n\t\treturn 1;\n\t} else if (n === 2) {\n\
    \t\treturn 1;\n\t} else if (n === 0) {\n\t\treturn 0;\n\t} else if (n === 1) {\n\
    \t\treturn 1;\n\t} else if (n === 2) {\n\t\treturn 1;\n\t} else if (n === 0) {\n\
    \t\treturn 0;\n\t} else if (n === 1) {\n\t\treturn 1;\n\t} else if (n === 2) {\n\
    \t\treturn 1;\n\t} else if (n === 0) {\n\t\treturn 0;\n\t} else if (n === 1) {\n\
    \t\treturn 1;\n\t} else if (n === 2) {\n\t\treturn 1;\n\t} else if (n === 0) {\n\
    \t\treturn 0;\n\t} else if (n === 1) {\n\t\treturn 1;\n\t} else if (n === 2) {\n\
    \t\treturn 1;\n\t} else if (n === 0) {\n\t\treturn 0;\n\t} else if (n === 1) {\n\
    \t\treturn 1;\n\t} else if (n === 2) {\n\t\treturn 1;\n\t} else if (n === 0) {\n\
    \t\treturn 0;\n\t} else if (n === 1) {\n\t\treturn 1;\n\t} else if (n === 2) {\n\
    \t\treturn 1;\n\t} else if (n === 0) {\n\t\treturn 0;\n\t", "\tif (n < 3)\n\t\t\
    return 0;\n\tif (n == 0)\n\t\treturn 0;\n\treturn fibfib(n - 1) + fibfib(n - 2)\
    \ + fibfib(n - 3);\n}\n", "    if (n < 3){\n        return 0;\n    }\n    if (n\
    \ < 5){\n        return 0;\n    }\n    if (n < 8){\n        return 1;\n    }\n\
    \    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "    for(let i = 0;\
    \ i <= n; i++){\n      if(i == 0){\n        return 0;\n      }\n      if(i ==\
    \ 1){\n        return 1;\n      }\n      if(i == 2){\n        return 1;\n    \
    \  }\n      if(i == n){\n        return 1;\n      }\n      return fibfib(i-1)\
    \ + fibfib(i-2) + fibfib(i-3);\n    }\n}\n", "    if (n == 0){\n        return\
    \ 0;\n    }\n    if (n == 1){\n        return 0;\n    }\n    if (n == 2){\n  \
    \      return 1;\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }", "   if(n<2)\n      return 0;\n   else\n      return fibfib(n-1)+fibfib(n-2);\n\
    }\n", "  let fib = [0,1,1];\n  for(let i = 2; i <= n; i++){\n    fib.push(fib[i\
    \ - 1] + fib[i - 2] + fib[i - 3]);\n  }\n  return fib[n];\n}", "    if (n ===\
    \ 0){\n        return 0;\n    } else if (n === 1){\n        return 1;\n    } else\
    \ if (n === 2){\n        return 1;\n    } else {\n        return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);\n    }\n}\n", "  let a = n //a holds the Fibbonacci\
    \ numbers and is passed as a parameter.\n  let b = 1 //b holds the Fibbonacci\
    \ numbers and is passed as a parameter.\n  for(let c = 0; c<n; c++){\n    let\
    \ d = b\n    b = a+b\n    a = d\n  }\n  return b\n}", "    if(n<=1){\n       \
    \ return 0;\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n",
  "    \n}\n", "    return fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n}", "  if (n < 1)\
    \ return 0;\n  if (n < 4) return 1;\n  if (n < 8) return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n  else {\n    return fibfib(n-4)+fibfib(n-6)+fibfib(n-3);\n\
    \  }\n}", "  if (n===0) return 0;\n  if (n==1) return 1;\n  return fibfib(n-1)+fibfib(n-2);\n\
    }", "  var result = 0\n  var numbers = Array(n)\n  for(var i=0; i<n; i++){\n \
    \   numbers[i] = fib(i)\n  }\n  for(var i=0; i<n; i++){\n    result += numbers[i]\n\
    \  }\n  return result\n}\n", "  // Your code here...\n  return n<2 ? n : fibfib(n-2)\
    \ + fibfib(n-3);\n}\n\nvar fibfib1 = fibfib(n);\nvar fibfib2 = fibfib(n-1);\n\
    var fibfib3 = fibfib(n-2);\nvar fibfib4 = fibfib(n-3);", "\tif (n < 2)\n\t\treturn\
    \ 0;\n\tlet reminder = n % 3;\n\tif (reminder == 0)\n\t\treturn 1;\n\treturn fibfib(reminder\
    \ - 1) + fibfib(reminder - 2);\n}\n", "    if(n===0){\n        return 0;\n   \
    \ }\n    if(n===1){\n        return 0;\n    }\n    if(n===2){\n        return\
    \ 1;\n    }\n    return fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n}", "\tif (n ===\
    \ 0) return 0;\n\tif (n === 1) return 1;\n\tif (n === 2) return 1;\n\treturn fibfib(n-1)\
    \ + fibfib(n-2);\n}\n", "\tvar a = 0;\n\tfor(var i = 1; i < n; i++){\n\t\ta +=\
    \ fibfib(i-1);\n\t}\n\treturn a;\n}\n", "  if (n <= 0) return 0;\n  else if (n\
    \ === 1) return 0;\n  else if (n === 2) return 1;\n  else return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);\n}\n", "  if(n<2)\n    return 0;\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}", "    \n    if (n == 0) {\n        return 0\n\
    \    } else if (n == 1) {\n        return 1\n    } else {\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n    }\n}\n</cell>\n<cell>\nfibfib(12)\n</cell>\n\
    <text>\nProblem 4\nA palindrome is a string that is read the same backward or\
    \ forward. For example \"radar\" is read the same backward as \"rader\". \"racerace\"\
    \ is a palindrome.\n\n\n</text>\n<cell>\n#The function should take a single parameter\
    \ word, and should return true if the word is a palindrome, and false if it is\
    \ not a palindrome.\ndef palindrome(word):\n    \n    \n    \n    if (word ==\
    \ word[::-1]):\n        return True\n    else:\n        return False\n</cell>\n\
    <cell>\npalindrome(\"racerace\")\n</cell>\n<text>\nProblem 5\nFor a given string\
    \ s, return the number of times it occurs in s. You may assume that the string\
    \ consists of uppercase and lowercase English letters only.\n\nExample 1:\nInput:\
    \ \"abcbcbb\"\nOutput: 4\nExplanation: The string \"abcbcbb\" appears 4 times.\n\
    \nExample 2:\nInput: \"pwwkew\"\nOutput: 3\nExplanation: The string \"pwwkew\"\
    \ appears 3 times.\n\nExample 3:\nInput: \"mpm\"\nOutput: 0\nExplanation: It appears\
    \ 0 times.\n\n\n</text>\n<cell>\ndef string_appears_count(s, word):\n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n", "  return Math.max(\n\
    \    0,\n    Math.min(n-1, fibfib(n-1))+\n    Math.min(n-2, fibfib(n-2))+\n  \
    \  Math.min(n-3, fibfib(n-3))\n  );\n}\n", "    if(n<=1){\n        return 0\n\
    \    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}", "  if(n <= 2){\n\
    \    return 0\n  }\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n\nvar\
    \ fib = fibfib;", "  return n > 2 ? fibfib(n-1) + fibfib(n-2) : n > 1 ? 1 : 0\n\
    }\n", "    let arr = [];\n    for(let i = 0; i <= n; i++){\n        arr.push(fibfib(i)\
    \ + fibfib(i-2)+fibfib(i-3));\n    }\n    return arr[n];\n}", "\tif (n < 3)\n\t\
    \treturn 0;\n\tif (n < 5)\n\t\treturn 1;\n\tif (n < 10)\n\t\treturn fibfib(n-1)\
    \ + fibfib(n-2);\n\treturn fibfib(n-3)+fibfib(n-4);\n}", "  if(n < 2) return 0;\n\
    \  return fibfib(n - 1) + fibfib(n - 2);\n}\n", "  if (n == 1){\n    return 0;\n\
    \  }\n  if (n == 2){\n    return 1;\n  }\n  if (n == 3){\n    return 1;\n  }\n\
    \  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "\treturn ((fibfib(n-1)+fibfib(n-2)+fibfib(n-3)));\n\
    }\n", "    if(n===0)\n        return 0;\n    if(n===1)\n        return 0;\n  \
    \  if(n===2)\n        return 1;\n    return fibfib(n-1)+fibfib(n-2);\n}\n", " \
    \ if(n>0){\n  if(n%2==0){\n    return fibfib(n-1)+fibfib(n-2)+fibfib(n-3)\n  }\n\
    \  return fibfib(n-1)\n}\n  return 0\n}", "  if (n < 0) return -1;\n  if (n ===\
    \ 0 || n === 1 || n === 2) return 0;\n  let num = 0;\n  while (n > 2) {\n    num\
    \ = num + fibfib(n-2);\n    n = n - 3;\n  }\n  return num + fibfib(n-1);\n}\n",
  "\tif (n < 0) return -1;\n\tif (n === 0 || n === 1 || n === 2) return 1;\n\treturn\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "  if (n == 0){\n    return\
    \ 0;\n  }else if (n == 1){\n    return 1;\n  }else{\n    return fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);\n  }\n}", "  if(n<=1){\n    return 0;\n  }\n  return\
    \ fibfib(n-1)+fibfib(n-2);\n}", "    \n    if(n==1){\n        return 0;\n    }\n\
    \    if(n==2){\n        return 1;\n    }\n    if(n>2 && n<10){\n        return\
    \ fibfib(n-1) + fibfib(n-2);\n    }\n    return fibfib(n-3) + fibfib(n-4) + fibfib(n-5);\n\
    }\n", "    if(n===0 || n===1){\n        return 0;\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n</code>\nThe function fibfib(n) returns the\
    \ nth fibonacci number, where n is the number passed to the function as a parameter.\
    \ As you can see it's just a recursive function call, so I suppose your teacher\
    \ doesn't want you to use iterative functions.\nThe Fibonacci numbers sequence\
    \ is basically just a way to compute a fibonacci number. Let's talk about what\
    \ a Fibonacci number is, because it's probably what most of the students want,\
    \ so I'll just give a simple definition.\nFibonacci numbers are defined as follow:\n\
    F(0) = 0\nF(1) = 1\nF(n) = F(n - 1) + F(n - 2) where n >= 0.\nThe Fibonacci sequence\
    \ is a number sequence whose elements are the sum of the previous two numbers.\
    \ \nHere's an example of a Fibonacci number:\n<code>\nF(0) = 0\nF(1) = 1\nF(2)\
    \ = 1\nF(3) = 2\nF(4) = 3\nF(5) = 5\nF(6) = 8\nF(7) = 13\nF(8) = 21\n</code>\n\
    There's also another interesting definition of fibonacci numbers:\nF(n) = (F(n\
    \ - 1) + F(n - 2)) where F(0) = 0 and F(1) = 1\nI hope my answer helps you, if\
    \ you have any questions please let me know.\n<|/ a tags=arrays,javascript |>\n\
    <| c |>\nThe question explicitly stated that he was required to use an array for\
    \ the answer. That is what was in the OP's original post. If we were to implement\
    \ the solution using a different data structure, the OP would have to first convert\
    \ the array to a list, which would be very inefficient.\n<|/ c |>\n<| c |>\nThank\
    \ you for this! I understand now why my answer was returning NaN. I can't believe\
    \ I didn't realize that I was returning something that wasn't an integer. \n\n\
    My instructor is definitely looking for this answer to be implemented with recursion.\
    \ Unfortunately, I'm also very bad at understanding recursion and even less so\
    \ with Javascript. I spent so much time on it yesterday that I'm thinking it's\
    \ too much for me. I know it's possible to create something that works with recursion\
    \ but I just can't quite grasp it. \n\nHowever, this definitely helped me out!\
    \ Thanks a ton! :D\n<|/ c |>\n<| c |>\nYou're welcome, don't hesitate to ask any ",
  "    // write code here\n\tif(n>0){\n\t\treturn fibfib(n-1)+fibfib(n-2)+fibfib(n-3)\n\
    \t}else{\n\t\treturn 0\n\t}\n}\n", "    if (n === 0 || n === 1) return 0;\n  \
    \  return fibfib(n-1) + fibfib(n-2);\n}\n", "    if(n==0 || n==1)\n        return\
    \ 0\n    if(n>1 && n<1000){\n        return fibfib(n-1) + fibfib(n-2)\n    }\n\
    \    return 0\n}\n", "    let fibfib = 1;\n    while(n){\n        fibfib += fibfib;\n\
    \        n = n - 1;\n    }\n    return fibfib;\n}", "  return n<2?0:fibfib(n-1)+fibfib(n-2);\n\
    }\n", "    if(n==0){\n        return 0;\n    }\n    if(n==1){\n        return\
    \ 0;\n    }\n    if(n==2){\n        return 1;\n    }\n    var temp=fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n\
    \    return temp;\n}", "\tif (n < 0) throw RangeError(\"fibfib(\"+n+\") out of\
    \ range\");\n\tif (n === 0) return 0;\n\tif (n === 1) return 0;\n\tif (n === 2)\
    \ return 1;\n\tif (n % 2 === 0) {\n\t\treturn fibfib(n - 2) + fibfib(n - 1);\n\
    \t}\n\treturn fibfib(n - 3) + fibfib(n - 2) + fibfib(n - 1);\n}\n", "    \n}\n\
    </cell>\n<cell>\n# Problem 4\n# Here are fibonacci numbers in descending order.\
    \ \n# Fibonacci numbers can be negative or positive.\n# Write a program to compute\
    \ the first ten fibonacci numbers in descending order.\n# >>> fib(1)\n# 1\n# >>>\
    \ fib(5)\n# 13\n# >>> fib(8)\n# 21\n# >>> fib(0)\n# 0\n# >>> fib(9)\n# 34\n# >>>\
    \ fib(10)\n# 55\n# >>> fib(10)\n# 55\n# >>> fib(100)\n# 233168\n# >>> fib(200)\n\
    # 504401\n# >>> fib(1000)\n# 678320560\n# >>> fib(2000)\n# 933262154400\n# >>>\
    \ fib(10000)\n# 130764467265781811186432\n# >>> fib(200000)\n# 20971521790776192332622489273947149569413962489417814497\n\
    # >>> fib(-10)\n# Traceback (most recent call last):\n#   File \"<stdin>\", line\
    \ 1, in <module>\n#   File \"<stdin>\", line 4, in fibfib\n# ValueError: n must\
    \ be greater than 0\n# >>> fib(-100)\n# Traceback (most recent call last):\n#\
    \   File \"<stdin>\", line 1, in <module>\n#   File \"<stdin>\", line 4, in fibfib\n\
    # ValueError: n must be greater than 0\ndef fibfib(n):\n    if n < 1:\n      \
    \  raise ValueError('n must be greater than 0')\n    elif n == 1: \n        return\
    \ 0\n    elif n == 2:\n        return 1\n    else:\n        return fibfib(n-2)\
    \ + fibfib(n-1)\n</cell>\n<cell>\n# Problem 5\n# Write a function fib2 that takes\
    \ in a list of numbers and returns the n-th fibonacci number in the list.\n# >>>\
    \ fib2([1,1,2,3])\n# 5\n# >>> fib2([5,6,7])\n# 12\n# >>> fib2([1,2])\n# 1\n# >>>\
    \ fib2([1,2])\n# 1\n# >>> fib2([1,2,3])\n# 6\n# >>> fib2([1,2,4])\n# 10\n# >>>\
    \ fib2([1,2,5,6])\n# 14\n# >>> fib2([1,2,5])\n# 5\n# >>> fib2([1,1,2,3])\n# 5\n\
    def fib2(list):\n    if list == []:\n        return 0\n    elif len(list) == 1:\n\
    \        return list[0]\n    elif len(list) == 2:", "\tif(n<=1){\n\t\treturn 0;\n\
    \t}\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}", "    if(n<1){\n  \
    \      return 0;\n    }\n    if(n%2==0){\n        return fibfib(n-1)*fibfib(n-2);\n\
    \    }else{\n        return fibfib(n-1)*fibfib(n-3)+fibfib(n-2)\n    }\n}", " \
    \ if (n == 0 || n == 1){\n    return 0;\n  }\n  if (n >= 2){\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n  }\n  return fibfib(n-3);\n}\nvar test1 = fibfib(0);\
    \ \nvar test2 = fibfib(1); \nvar test3 = fibfib(2); \nvar test4 = fibfib(3); \n\
    var test5 = fibfib(4); \nvar test6 = fibfib(5); \nvar test7 = fibfib(6); \nvar\
    \ test8 = fibfib(7);\nvar test9 = fibfib(8);\nvar test10 = fibfib(9);\nvar test11\
    \ = fibfib(10);\nvar test12 = fibfib(11);\nvar test13 = fibfib(12);\nvar test14\
    \ = fibfib(13);\nvar test15 = fibfib(14);\nvar test16 = fibfib(15);\nvar test17\
    \ = fibfib(16);\nvar test18 = fibfib(17);\nvar test19 = fibfib(18);\nvar test20\
    \ = fibfib(19);\nvar test21 = fibfib(20);\nvar test22 = fibfib(21);\nvar test23\
    \ = fibfib(22);\nvar test24 = fibfib(23);\nvar test25 = fibfib(24);\nvar test26\
    \ = fibfib(25);\nvar test27 = fibfib(26);\nvar test28 = fibfib(27);\nvar test29\
    \ = fibfib(28);\nvar test30 = fibfib(29);\nvar test31 = fibfib(30);\nvar test32\
    \ = fibfib(31);\nvar test33 = fibfib(32);\nvar test34 = fibfib(33);\nvar test35\
    \ = fibfib(34);\nvar test36 = fibfib(35);\nvar test37 = fibfib(36);\nvar test38\
    \ = fibfib(37);\nvar test39 = fibfib(38);\nvar test40 = fibfib(39);\nvar test41\
    \ = fibfib(40);\nvar test42 = fibfib(41);\nvar test43 = fibfib(42);\nvar test44\
    \ = fibfib(43);\nvar test45 = fibfib(44);\nvar test46 = fibfib(45);\nvar test47\
    \ = fibfib(46);\nvar test48 = fibfib(47);\nvar test49 = fibfib(48);\nvar test50",
  "  if (n<=0) return 0;\n  if (n==1) return 0;\n  if (n==2) return 1;\n  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}", "  if (n == 0) return 0;\n  if (n == 1) return\
    \ 1;\n  return fibfib(n-1) + fibfib(n-2);\n}\n", "\treturn fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n", "  return (n<=2) ? 1 : fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n", "\tvar a = 0\n\tvar b = 1\n\tvar fibfib = []\n\tfor(var i = 0; i<=n; i++){\n\
    \t\tfibfib.push(b+a)\n\t\ta = b\n\t\tb = fibfib[i-1]\n\t}\n\treturn fibfib[n-1]\n\
    }\n", "\tif (n == 0){\n\t\treturn 0;\n\t}else if (n == 1){\n\t\treturn 1;\n\t\
    }else if (n == 2){\n\t\treturn 1;\n\t}else{\n\t\treturn fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n\t}\n}\n", "  if (n < 2) return 0;\n  if (n == 2) return 1;\n\
    \  return fibfib(n-1) + fibfib(n-2);\n}\n", "  if (n===0) return 0;\n  if (n===1)\
    \ return 0;\n  if (n===2) return 1;\n  if (n===3) return 1;\n  if (n===4) return\
    \ 1;\n  if (n===5) return 2;\n  if (n===6) return 3;\n  if (n===7) return 5;\n\
    \  if (n===8) return 8;\n  if (n===9) return 13;\n  if (n===10) return 21;\n \
    \ if (n===11) return 34;\n  if (n===12) return 55;\n  if (n===13) return 89;\n\
    \  if (n===14) return 144;\n  if (n===15) return 249;\n  if (n===16) return 441;\n\
    \  if (n===17) return 723;\n  if (n===18) return 1108;\n  if (n===19) return 1675;\n\
    \  if (n===20) return 2862;\n  if (n===21) return 4181;\n  if (n===22) return\
    \ 5463;\n  if (n===23) return 8122;\n  if (n===24) return 9871;\n  if (n===25)\
    \ return 13544;\n  if (n===26) return 19369;\n  if (n===27) return 25823;\n  if\
    \ (n===28) return 41889;\n  if (n===29) return 53761;\n  if (n===30) return 80317;\n\
    \  if (n===31) return 110341;\n  if (n===32) return 17711;\n  if (n===33) return\
    \ 26725;\n  if (n===34) return 43379;\n  if (n===35) return 67595;\n  if (n===36)\
    \ return 105899;\n  if (n===37) return 170013;\n  if (n===38) return 267532;\n\
    \  if (n===39) return 415291;\n  if (n===40) return 57710;\n  if (n===41) return\
    \ 73159;\n  if (n===42) return 107964;\n  if (n===43) return 163629;\n  if (n===44)\
    \ return 230026;\n  if (n===45) return 329498;\n  if (n===46) return 507487;\n\
    \  if (n===47) return 671065;\n  if (n===48) return 918366;\n  if (n===49) return\
    \ 1224653;\n  if (n===50) return 1500409;\n  if (n===51) return 1984547;\n  if\
    \ (n===52) return 2609597;\n  if (n===53) return 3749509;\n  if (n===54) return\
    \ 5601214;\n  if (n===55) return 7199692;\n  if (n===56) return 10765736;\n  if\
    \ (n===57) return 1455", "  if (n<2){\n    return 0;\n  }\n  return fibfib(n-1)+fibfib(n-2);\n\
    }\n", "\tif (n <= 0) {\n\t\treturn 0;\n\t}\n\tif (n == 1) {\n\t\treturn 0;\n\t\
    }\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "  if (n<1) return\
    \ 0;\n  if (n<2) return 1;\n  return fibfib(n-2) + fibfib(n-1);\n}\n", "\tif (n===0)\
    \ return 0;\n\tif (n===1) return 1;\n\tif (n===2) return 1;\n\treturn fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n", "    if(n == 0) return 0;\n    if(n == 1)\
    \ return 0;\n    if(n == 2) return 1;\n    return fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}\n", "  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}",
  "    if (n === 0) return 0;\n    if (n === 1) return 1;\n    if (n === 2) return\
    \ 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "    if (n ==\
    \ 0) return 0;\n    if (n == 1) return 0;\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n", "    if(n<=1)\n    {\n        return 0\n    }\n    return\
    \ fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "  let fib = 0;\n  if (n==0)\n\
    \    return 0;\n  if (n==1)\n    return 1;\n  if (n==2)\n    return 1;\n  if (n<=2)\n\
    \    return fib;\n  fib = fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n  return fib;\n\
    }", "  if (n<=1){\n    return 0;\n  }\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n", "\tif (n == 0 || n == 1) return 0;\n\treturn fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}", "    if (n == 0 || n == 1){\n        return n;\n    }\n  \
    \  if (n == 2){\n        return 0;\n    }\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n", "\tif (n < 1){\n\t\treturn 0;\n\t} else if (n < 2){\n\t\
    \treturn 1;\n\t} else if (n < 3){\n\t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \t} else if (n < 4){\n\t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3) + fibfib(n-4);\n\
    \t}\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3) + fibfib(n-4) + fibfib(n-5);\n\
    }", "    if (n===1 || n===0)\n        return 1;\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}", "    if(n == 1){\n        return 0;\n    }\n    if(n % 2\
    \ == 0){\n        return fibfib(n-1) + fibfib(n-2);\n    }\n    return fibfib(n-3)\
    \ + fibfib(n-2);\n}\n", "    if (n<=1){\n        return 0;\n    }\n    return\
    \ fibfib(n-1)+fibfib(n-2);\n}\n", "  if (n < 1) return 0;\n  if (n === 1) return\
    \ 0;\n  if (n === 2) return 1;\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }", "    if(n==0){\n        return 0;\n    }else if(n==1){\n        return 1;\n\
    \    }else if(n>2){\n        return fibfib(n-1)+fibfib(n-2);\n    }else{\n   \
    \     return 0;\n    }\n}", "  return n===1 ? 0 : n===0 ? 1 : fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}", "  if (n < 2) {\n    return n;\n  }\n  else {\n    return\
    \ fibfib(n-2) + fibfib(n-3);\n  }\n}", "\tif (n === 0) return 0;\n\tif (n ===\
    \ 1) return 0;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "\tif\
    \ (n === 0)\n\t\treturn 0;\n\tif (n === 1)\n\t\treturn 1;\n\treturn fibfib(n-1)\
    \ + fibfib(n-2);\n}\n", "\tvar i = 1;\n\tvar fibfib = 0;\n\twhile (i < n) {\n\t\
    \tfibfib += i;\n\t\ti += fibfib;\n\t}\n\treturn fibfib;\n}", "  return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\nmodule.exports = fibfib;\n\n},{}],23:[function(_dereq_,module,exports){",
  "    if (n <= 1){\n        return 0;\n    }\n\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n</cell>\n<cell>\n#\n# Difficult Exercise\n# 1\n# Write a\
    \ function to compute the sum of the first N Fibonacci numbers.\n# >>> fibsum(5)\n\
    # 55\n# >>> fibsum(7)\n# 10946\n# >>> fibsum(20)\n# 1373256\n# >>> fibsum(25)\n\
    # 16348062611076673\n# >>> fibsum(41)\n# 415024690126769407\n# >>> fibsum(10)\n\
    # 55\n# >>> fibsum(13)\n# 1387\n# >>> fibsum(21)\n# 22094\n# >>> fibsum(32)\n\
    # 32941\n# >>> fibsum(43)\n# 6410348173140540953\n# >>> fibsum(47)\n# 12645440137526379529\n\
    # >>> fibsum(62)\n# 15486979740206819010\n# >>> fibsum(100)\n# 3416454626968755131\n\
    # >>> fibsum(999)\n# 66823966562133958013\n# >>> fibsum(1000)\n# 11047439487419581464\n\
    # >>> fibsum(9999)\n# 165897755579269594289\n# >>> fibsum(10000)\n# 413695983946753487671\n\
    # >>> fibsum(100000)\n# 1567635241717009844832\n# >>> fibsum(1000000)\n# 335253174309941632993\n\
    # >>> fibsum(10000000)\n# 872412185024263317449\n# >>> fibsum(100000000)\n# 1972376499633547856973\n\
    # >>> fibsum(1000000000)\n# 587687580165953526293\n# >>> fibsum(10000000000)\n\
    # 309428535439560812773\n</cell>\n<cell>\n#\n# Difficult Exercise\n# 2\n# Write\
    \ a function that computes the square root of a given number\n# >>> squareroot(10)\n\
    # 5.0\n# >>> squareroot(20)\n# 5.4772255750", "  let result=1;\n  for(let i=0;i<=n;i++){\n\
    \    result=result*(i+1)+(i+2)+(i+3);\n  }\n  return result;\n}", "    fibfib[n]\n\
    }\n", "  if (n === 0) return 0;\n  if (n === 1) return 0;\n  if (n === 2) return\
    \ 1;\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "  if(n < 1){\n\
    \    return 0\n  }\n  if(n === 1){\n    return 0\n  }\n  if(n === 2){\n    return\
    \ 1\n  }\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}", "    var a,b;\n\
    \    if (n <= 0){\n        return 0;\n    }\n    if (n==1){\n        return 0;\n\
    \    }\n    if (n==2){\n        return 1;\n    }\n    if (n==3){\n        return\
    \ 1;\n    }\n    a=fibfib(n-1);\n    b=fibfib(n-2);\n    return a+b+b;\n}", " \
    \   if(n===0){\n        return 0;\n    }\n    if(n===1){\n        return 1;\n\
    \    }\n    return fibfib(n-1) + fibfib(n-2);\n}", "  if (n == 0)\n  {\n    return\
    \ 0;\n  }\n  if (n == 1)\n  {\n    return 1;\n  }\n  if (n == 2)\n  {\n    return\
    \ 1;\n  }\n  if (n > 2)\n  {\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \  }\n}", "\tif(n<=1){\n\t\treturn 0;\n\t}\n\treturn fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n}\n", "\tlet fib = 0;\n\tfor(let i = 0; i < n; i++){\n\t\tfib\
    \ = fib + (fibfib(i-1) + fibfib(i-2));\n\t}\n\treturn fib;\n}\n", "  if (n < 1){\n\
    \    return 0\n  }\n  if (n < 2){\n    return 1\n  }\n  return fibfib(n-1) + fibfib(n-2)\n\
    }", "    if (n <= 1){\n        return 0\n    }\n    if (n <= 3){\n        return\
    \ 1\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n}\n", "    if(n<=1){\n\
    \        return 0\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    if (n === 0 || n === 1) {\n        return 0;\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}", "\tlet a = 0, b = 1, c = 1;\n\tfor(let i =\
    \ 0; i < n; i++){\n\t\ta *= a;\n\t\tb *= b;\n\t\tc *= c;\n\t}\n\treturn c;\n}\n",
  "  // write code here\n}\n", "    if (n == 0) return 0;\n    if (n == 1) return\
    \ 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "\tif(n<=0){\n\
    \t\treturn 0;\n\t}\n\telse{\n\t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \t}\n}\n", "    if(n===0 || n===1)return 0;\n    return fibfib(n-1) + fibfib(n-2);\n\
    }\n", "    if (n <= 1){\n        return 0;\n    }else{\n        return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n    }\n}\n", "    let fibfibArray = [];\n    fibfibArray[0]\
    \ = 0;\n    fibfibArray[1] = 0;\n    fibfibArray[2] = 1;\n    fibfibArray[n] =\
    \ fibfibArray[n-1] + fibfibArray[n-2] + fibfibArray[n-3];\n    return fibfibArray[n];\n\
    }\n", "  var result = 0\n  for (var i = 1; i <= n; i++) {\n    var temp = i\n\
    \    result += i\n    result += (temp - 1) * i\n  }\n  return result\n}\n", " \
    \ return n < 2 ? n : fibfib(n - 1) + fibfib(n - 2);\n}\n", "    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n", "    if(n<=1){\n        return 0\n    }\n\
    \    return fibfib(n-1)+fibfib(n-2)+fibfib(n-3)\n}\n", "\tif (n < 0 || n >= 20)\
    \ return 0;\n\tif (n === 0 || n === 1 || n === 2) return 1;\n\tif (n === 3) return\
    \ 2;\n\tif (n === 4) return 3;\n\treturn fibfib(n-2) + fibfib(n-1) + fibfib(n-3);\n\
    }", "    if (n < 2) return 0;\n    else return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n", "  if(n<=1)\n  return 0;\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n", "\tif (n===0) return 0;\n\tif (n===1) return 0;\n\tif (n===2) return 1;\n\
    \treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "    if (n===0){\n  \
    \      return 0\n    }\n    if (n===1){\n        return 1\n    }\n    return fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}\n", "\tlet sum = 0;\n\tfor (let i=1; i<=n; i++){\n\
    \t\tsum = sum + i;\n\t}\n\treturn sum;\n}\n", "\tif(n<=1){\n\t\treturn 0;\n\t\
    }\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "\treturn n<2?0:(n>0?(n*fibfib(n-2))+fibfib(n-1):1);\n\
    }\n", "\tif (n <= 1) return 0;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n", "  let fibfibnum=0;\n  if(0<=n&&n<=1) {\n    return 0\n  }\n  if(1<=n&&n<=2){\n\
    \    return 0\n  }\n  if(n==0){\n    return 0\n  }\n  if(n==1){\n    return 1\n\
    \  }\n  if(n==2){\n    return 1\n  }\n  if(n>2){\n    return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n  }\n}", "  if(n<=1){\n    return 0;\n  }\n  return fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n\
    }\n", "    if (n < 2){\n        return 0;\n    }\n    else if (n == 2){\n    \
    \    return 1;\n    }\n    else return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n", "\tif (n<=1){\n\t\treturn 0\n\t}\n\tif (n==2){\n\t\treturn 1\n\t}\n\treturn\
    \ fibfib(n-1)+fibfib(n-2)\n}", "\tif (n === 0)\n\t\treturn 0;\n\tif (n === 1)\n\
    \t\treturn 1;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "\tif(\
    \ n < 0 ){\n\t\treturn 0;\n\t}else if( n === 0 ){\n\t\treturn 0;\n\t}else if(\
    \ n === 1 ){\n\t\treturn 1;\n\t}else{\n\t\treturn fibfib(n-1) + fibfib(n-2);\n\
    \t}\n}\n", "    let result = 0;\n    for (let i = n; i >= 3; i--){\n        result\
    \ = result + fibfib(i-2);\n    }\n    return result + fibfib(n-2);\n}\n", "  \
    \  if (n<0){\n        console.log(\"The FibFib number sequence is a sequence similar\
    \ to the Fibbonacci sequence.\")\n    }\n    if (n==0 || n==1 || n==2){\n    \
    \    return n;\n    }\n    if (n>2 && n<20){\n        return fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n\
    \    }\n    else if (n>20){\n        console.log(\"The FibFib number sequence\
    \ is a sequence similar to the Fibbonacci sequence.\")\n    }\n}\n", "\tlet result\
    \ = 0;\n\tfor(let i = 0; i <= n; i++){\n\t\tresult += i;\n\t}\n\treturn result;\n\
    }\n", "\tif (n == 0){\n\t\treturn 0;\n\t}\n\tif (n == 1){\n\t\treturn 0;\n\t}\n\
    \tif (n == 2){\n\t\treturn 1;\n\t}\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n", "\tif(n>0){\n\t\treturn fibfib(n-1)+fibfib(n-2);\n\t}\n\treturn 0;\n}\n",
  "\tlet fib=0;\n\tif(n==0){\n\t\treturn 0;\n\t}\n\tif(n==1){\n\t\treturn 0;\n\t}\n\
    \tif(n==2){\n\t\treturn 1;\n\t}\n\tfib=fibfib(n-1)+fibfib(n-2);\n\treturn fib;\n\
    }", "  if(n === 0){\n    return 0;\n  }else if(n === 1){\n    return 1;\n  }\n\
    \  else{\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n  }\n}", "    if\
    \ (n < 0)\n        throw new Error(\"FibFib : Invalid number of elements\")\n\
    \    if (n < 2)\n        return 0\n    let fibnums = [0, 1]\n    for (let i =\
    \ 3; i <= n; ++i)\n        fibnums.push(fibnums[i-1] + fibnums[i-2])\n    return\
    \ fibnums[n-1]\n}\n<|/ file dstars=0 source=github filename=index.js |>", "  if\
    \ (n <= 1){\n    return 0\n  }\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\n", "    switch(n){\n        case 0: return 0;\n        case 1: return 0;\n\
    \        case 2: return 1;\n        default: return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3);\n    }\n}\nvar fibfibSequence = [0,1,1,2,5,3,3,5,5,8,13,21,35,53,233,353,833,2333,3533];\n",
  "\tif(n<=1){\n\t\treturn 0\n\t}else{\n\t\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    \t}\n}\n", "    if (n == 0)\n        return 0;\n    if (n == 1)\n        return\
    \ 0;\n    if (n == 2)\n        return 1;\n    if (n == 3)\n        return 1;\n\
    \    if (n == 4)\n        return 2;\n    if (n == 5)\n        return 3;\n    if\
    \ (n == 6)\n        return 5;\n    if (n == 7)\n        return 8;\n    if (n ==\
    \ 8)\n        return 13;\n    if (n == 9)\n        return 21;\n    if (n == 10)\n\
    \        return 34;\n    if (n == 11)\n        return 55;\n    if (n == 12)\n\
    \        return 89;\n    if (n == 13)\n        return 144;\n    if (n == 14)\n\
    \        return 233;\n    if (n == 15)\n        return 377;\n    if (n == 16)\n\
    \        return 513;\n    if (n == 17)\n        return 710;\n    if (n == 18)\n\
    \        return 890;\n    if (n == 19)\n        return 1092;\n    if (n == 20)\n\
    \        return 1375;\n    if (n == 21)\n        return 1673;\n    if (n == 22)\n\
    \        return 1960;\n    if (n == 23)\n        return 2218;\n    if (n == 24)\n\
    \        return 2457;\n}\n", "\tif (n < 0) return \"negative\";\n\tif (n === 0)\
    \ return 0;\n\tif (n === 1) return 0;\n\tif (n === 2) return 1;\n\n\tlet fibArray\
    \ = [],\n\t\tfibVal = 0,\n\t\ti = 3;\n\n\twhile (fibVal <= n) {\n\t\tfibArray.push(fibVal);\n\
    \t\tfibVal = fibVal*i;\n\t\ti++;\n\t}\n\n\tfibArray.push(n);\n\treturn fibArray[fibArray.length-1];\n\
    }\n", "    if (n == 0)\n    return 0;\n    if (n == 1)\n    return 1;\n    if\
    \ (n == 2)\n    return 1;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n", "    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "  var fib =\
    \ 0\n  for (var i = 0; i < n; i++){\n    fib += fibfib(i-3)\n  }\n  return fib\n\
    }\n", "  return fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n}\n", "\tif (n<2) return\
    \ 0;\n\tif (n<6) return 1;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3)\n\
    }\nvar a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20];\nvar b = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,\
    \ 19, 20];\nvar c = fibfib(a.length);\nvar d = fibfib(a.length);", "\tif (n<=1)\
    \ return 0;\n\treturn fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}\n", "    var\
    \ a = 0;\n    var b = 0;\n    for (var i = 2; i<=n; i++){\n        b = a + b;\n\
    \        a = b;\n    }\n    return a;\n}", "    \n    //Write your code here.\n\
    \    if(n<=0){\n        return 0;\n    }\n    if(n==1){\n        return 0;\n \
    \   }\n    if(n==2){\n        return 1;\n    }\n    fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n\
    }\n", "    \n}", "\treturn (n < 3 ? 0 : (fibfib(n-1) + fibfib(n-2) + fibfib(n-3)))\n\
    }\n", "  if (n<1) return 0;\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n", "  // Your code here!\n  // Hint: Use looping.\n}\n", "    if (n == 0 ||\
    \ n == 1)\n        return n;\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }", "\tif (n==0 || n==1 || n==2) {\n\t\treturn 0;\n\t}\n\treturn fibfib(n-1) +\
    \ fibfib(n-2) + fibfib(n-3);\n}\n", "\tif (n < 3) return 0;\n\treturn fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n}\n", "\tif(n == 0){\n\t\treturn 0;\n\t}\n\tif(n\
    \ == 1){\n\t\treturn 0;\n\t}\n\tif(n == 2){\n\t\treturn 1;\n\t}\n\tlet ans = fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3);\n\treturn ans;\n}\n", "  if (n === 0) {\n    return\
    \ 0;\n  } else if (n === 1) {\n    return 1;\n  } else if (n === 2) {\n    return\
    \ 1;\n  } else {\n    return fibfib(n-2) + fibfib(n-1);\n  }\n}\n", "    if(n<=0){\n\
    \        return 0\n    }\n    if(n==1){\n        return 0;\n    }\n    if(fibfib(n-1)==0\
    \ && fibfib(n-2)==0){\n        return fibfib(n-3)\n    }\n    return fibfib(n-1)+fibfib(n-2)+fibfib(n-3)\n\
    }\nvar fibfib_arr = [0,1]\nfor(var i=2;i<=5;i++){\n    fibfib_arr.push(fibfib(i))\n\
    }\nfibfib=function(){\n    if(arguments.length!==0){\n        var n = arguments[0];\n\
    \        for(var i=1;i<=5;i++){\n            if(fibfib(i)===n){\n            \
    \    return i;\n            }\n        }\n    }\n    for(var i=0;i<fibfib_arr.length;i++){\n\
    \        if(fibfib_arr[i]===arguments.length){\n            return fibfib_arr[i];\n\
    \        }\n    }\n}\nfibfib(1)\nfibfib(5)\nfibfib(8)\nfibfib(2)\nfibfib(1)\n\
    fibfib(3)\nfibfib(1)\nfibfib(0)\nfibfib(2)\nfibfib(1)\nfibfib(1)\nfibfib(1)\n\
    fibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\n\
    fibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\n\
    fibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\n\
    fibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\n\
    fibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\n\
    fibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\n\
    fibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\n\
    fibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\n\
    fibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\n\
    fibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\nfibfib(1)\n\
    fibfib(1)\n", "\tif (n < 0 || n >= 100000)\n\t\treturn 0;\n\tif (n === 0)\n\t\t\
    return 0;\n\tif (n === 1)\n\t\treturn 1;\n\treturn fibfib(n-1) + fibfib(n-2) +\
    \ fibfib(n-3);\n}\n", "\tif(n<=1){return 0}\n\treturn fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n}\n\n", "\tif(n===0){\n\t\treturn 0;\n\t}\n\tif(n===1 || n==0){\n\
    \t\treturn 1;\n\t}\n\treturn fibfib(n-1)+fibfib(n-2);\n}", "  if (n<0){\n    return\
    \ 0;\n  }\n  if(n<=1){\n    return 1;\n  }\n  return fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n\
    }", "    \n};\n</cell>\n<text>\nProblem 2\nThe Fibonacci sequence is defined by\
    \ the formula:\n\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, ...\n\nThe Fibonacci\
    \ numbers, however, are defined by adding the previous two numbers in the sequence:\
    \ 0, 1, 1, 2, 3, 5, 8, 13, ...\n\nIn Mathematica, fibonacci numbers are also called\
    \ the 'fibonacci numbers'.\n\nWrite a Python function that computes the nth fibonacci\
    \ number using a formula similar to fibfib.\n\n>>> fib(1)\n0\n>>> fib(5)\n4\n\
    >>> fib(8)\n24\n>>> fibfib(1)\n0\n>>> fibfib(5)\n4\n>>> fibfib(8)\n24\n>>> fibfib(10)\n\
    6765\n>>> fibfib(100)\n3421955\n>>> fibfib(1000)\n2331683\n>>> fibfib(10000)\n\
    154932968\n>>> fibfib(1)\n0\n>>> fibfib(2)\n1\n>>> fibfib(3)\n1\n>>> fibfib(4)\n\
    2\n>>> fibfib(5)\n3\n>>> fibfib(6)\n5\n>>> fibfib(7)\n8\n>>> fibfib(8)\n8\n>>>\
    \ fibfib(9)\n13\n>>> fibfib(10)\n21\n>>> fibfib(11)\n34\n>>> fibfib(12)\n55\n\
    >>> fibfib(13)\n89\n>>> fibfib(14)\n144\n>>> fibfib(1)\n0\n>>> fibfib(2)\n1\n\
    >>> fibfib(3)\n1\n>>> fibfib(1)\n0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n\
    0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n0\n>>>\
    \ fibfib(1)\n0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n\
    0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n0\n>>>\
    \ fibfib(1)\n0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n\
    0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n0\n>>> fibfib(1)\n0\n>>>\
    \ fibfib(1)\n", "  if(n === 0){\n    return 0;\n  }\n  if(n === 1){\n    return\
    \ 1;\n  }\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}", "\t// Start\
    \ by setting the fibfib(n) equal to 1.\n\t// To do this, simply add 1 to fibfib(n)\
    \ each time a fibfib(n) number is found.\n\t// This will get you the desired sequence\
    \ for the first few numbers.\n\t// The next sequence is 0 1 2 3 5 8 13 21 34 55\
    \ 89 144 233 377 610 987 1597 2584 4181\n\t//  fibfib(n) = fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3).\n\t// Write the code for this function.\n\t\n\t// fibfib(n) is\
    \ a function that takes a number n as an input and returns the nth element of\
    \ a Fibbonacci sequence\n\tif(n==0){\n\t\treturn 0;\n\t}\n\tif(n==1){\n\t\treturn\
    \ 0;\n\t}\n\tif(n==2){\n\t\treturn 1;\n\t}\n\tif(n>3){\n\t\treturn fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n\
    \t}\n}\n", "  var fibfib=0;\n  for (var i=0;i<n;i++){\n    fibfib=fibfib+i;\n\
    \  }\n  return fibfib;\n}", "    var counter = 0;\n    if(n<0){\n        console.log(n);\n\
    \        return \"Sorry but you cannot compute fibfib(n<0)\"\n    }\n\n    if(n==0){\n\
    \        return 0\n    }\n\n    if(n>0){\n        return fibfib(n-1) + fibfib(n-2)\
    \ + fibfib(n-3)\n    }\n}\n", "    if(n < 1 || n > 6){\n        throw new Error('invalid\
    \ input');\n    }\n    let fibfibNumber = 1;\n    let fibfibArray = new Array(6);\n\
    \    fibfibArray[0] = fibfibNumber;\n    for(let i = 1; i < 6; i++){\n       \
    \ fibfibArray[i] = fibfibArray[i - 1] + fibfibArray[i - 2];\n    }\n    return\
    \ fibfibArray[n];\n}\n</code></pre>\n                </section>\n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                \n                \n                \n        \
    \        \n                \n                \n                \n            \
    \    \n                \n                \n                \n                \n\
    \                \n                \n                \n                \n    \
    \            \n                ", "  return n < 2 ? n : fibfib(n-1) + fibfib(n-2);\n\
    }\n", "\tif(n<0){\n\t\tconsole.error('The fibfib number sequence is undefined\
    \ for negative arguments.')\n\t\treturn\n\t}\n\tif(n==0){\n\t\treturn 0\n\t}\n\
    \tif(n==1){\n\t\treturn 0\n\t}\n\tif(n==2){\n\t\treturn 1\n\t}\n\treturn fibfib(n-1)\
    \ + fibfib(n-2) + fibfib(n-3)\n}", "    var ret = 0;\n    for (var i = n; i >\
    \ 0; i--) {\n        n -= i;\n        ret += i;\n    }\n    return ret;\n}\n",
  "    if (n == 0 || n == 1 || n == 2){\n        return 0;\n    }\n    if (n == 3)\
    \ {\n        return 1;\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n", "    if(n<0) return 0;\n    if(n>0) return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n</cell>\n<cell>\n# Exercise 14\n# The Fibonacci number sequence is defined\
    \ in terms of the Fibonacci numbers:\n# f(n) = f(n - 1) + f(n - 2) + f(n-3)\n\
    # Please write a recursive function fib and test it with a few examples:\n# >>>\
    \ fib(0)\n# 0\n# >>> fib(1)\n# 0\n# >>> fib(5)\n# 5\n# >>> fib(8)\n# 55", "\t\
    if (n<=1){\n\t\treturn 0;\n\t}else{\n\t\treturn fibfib(n-1)+fibfib(n-2)+fibfib(n-3);\n\
    \t}\n}", "    // Your code here\n    let a = []\n    for (let i=0;i<n;i++){\n\
    \        a.push(fibfib(i))\n    }\n    return a[n-1];\n}\n", "    if(n==1){\n\
    \        return 0;\n    }\n    if(n<=1){\n        console.log(\"Not possible for\
    \ fibfib(n) to be less than or equal to 1\");\n        return -1;\n    }\n   \
    \ return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}", "  if (n == 0){\n    return\
    \ 0;\n  }\n  else if (n == 1){\n    return 1;\n  }\n  else if (n == 2){\n    return\
    \ 1;\n  }\n  else if (n == 3){\n    return 1;\n  }\n  else if (n == 4){\n    return\
    \ 2;\n  }\n  else if (n == 5){\n    return 3;\n  }\n  else if (n == 6){\n    return\
    \ 5;\n  }\n  else if (n == 7){\n    return 8;\n  }\n  else if (n == 8){\n    return\
    \ 23;\n  }\n  else if (n == 9){\n    return 56;\n  }\n  else if (n == 10){\n \
    \   return 89;\n  }\n  else if (n == 11){\n    return 144;\n  }\n  else if (n\
    \ == 12){\n    return 199;\n  }\n  else if (n == 13){\n    return 254;\n  }\n\
    \  else if (n == 14){\n    return 289;\n  }\n  else if (n == 15){\n    return\
    \ 344;\n  }\n  else if (n == 16){\n    return 389;\n  }\n  else if (n == 17){\n\
    \    return 444;\n  }\n  else if (n == 18){\n    return 499;\n  }\n  else if (n\
    \ == 19){\n    return 564;\n  }\n  else if (n == 20){\n    return 631;\n  }\n\
    \  else if (n == 21){\n    return 698;\n  }\n  else if (n == 22){\n    return\
    \ 768;\n  }\n  else if (n == 23){\n    return 825;\n  }\n  else if (n == 24){\n\
    \    return 896;\n  }\n  else if (n == 25){\n    return 963;\n  }\n  else if (n\
    \ == 26){\n    return 1013;\n  }\n  else if (n == 27){\n    return 1084;\n  }\n\
    \  else if (n == 28){\n    return 1139;\n  }\n  else if (n == 29){\n    return\
    \ 1192;\n  }\n  else if (n == 30){\n    return 1253;\n  }\n  else if (n == 31){\n\
    \    return 1301;\n  }\n  else if (n == 32){\n    return 1369;\n  }\n  else if\
    \ (n == 33){\n    return 1437;\n  }\n  else if (n == 34){\n    return 1501;\n\
    \  }\n  else if (n == 35){\n    return 1569;\n  }\n  else if (n == 36){\n    return\
    \ 1627;\n  }\n  else if (n == 37){\n    return 1687;\n  }\n  else if (n == 38){\n\
    \    return 1745;\n  }\n  else if (n == 39){\n    return 1803;\n  }\n  else if\
    \ (n == 40){\n    return 1869;\n  }\n  else if (n == 41){\n    return 1937;\n\
    \  }\n  ", "    if (n == 1){\n        return 0;\n    } else if (n == 0){\n   \
    \     return 0;\n    } else if (n == 2){\n        return 1;\n    } else {\n  \
    \      return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n    }\n}", "  if (n<0){\n\
    \    return 0;\n  }\n  if (n==0){\n    return 0;\n  }\n  if (n==1){\n    return\
    \ 1;\n  }\n  return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n}", "  // code here\n\
    \  return n<2? 0:fibfib(n-1)+fibfib(n-2);\n}\n", "    \n    if(n == 0){\n    \
    \    return 0;\n    }\n    if(n == 1){\n        return 0;\n    }\n    if(n ==\
    \ 2){\n        return 1;\n    }\n    return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    }\n", "    let fibnum = 0;\n    fibfib(n-1)\n    fibnum += fibfib(n-2);\n    fibnum\
    \ += fibfib(n-3);\n    return fibnum;\n}\n\nlet test = fibfib;", "    if(n<1){\n\
    \        return 0;\n    }else{\n        return fibfib(n-1) + fibfib(n-2) + fibfib(n-3);\n\
    \    }\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

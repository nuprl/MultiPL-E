name: HumanEval_108_count_nums
language: js
prompt: "//Write a function count_nums which takes an array of integers and returns\n\
  // the number of elements which has a sum of digits > 0.\n// If a number is negative,\
  \ then its first signed digit will be negative:\n// e.g. -123 has signed digits\
  \ -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1, 11, -11]) ==\
  \ 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums(arr){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = count_nums;\n  assert.deepEqual(candidate([]),0);\n  assert.deepEqual(candidate([-1,\
  \ -2, 0]),0);\n  assert.deepEqual(candidate([1, 1, 2, -2, 3, 4, 5]),6);\n  assert.deepEqual(candidate([1,\
  \ 6, 9, -6, 0, 1, 5]),5);\n  assert.deepEqual(candidate([1, 100, 98, -7, 1, -1]),4);\n\
  \  assert.deepEqual(candidate([12, 23, 34, -45, -56, 0]),5);\n  assert.deepEqual(candidate([0,\
  \ 1]),1);\n  assert.deepEqual(candidate([1]),1);\n}\n\ntest();"
completions: ["  var l = arr.length,\n    count = 0;\n  for (var i = 0; i < l; i++){\n\
    \    if(is_num(arr[i])){\n      var d = get_digit(arr[i]);\n      if(d != 0){\n\
    \        count++;\n        arr[i] = arr[i] - (d * (arr[i] % 10));\n      }\n \
    \   }\n  }\n  return count;\n}\n", "  return arr.filter(function(el){\n    return\
    \ el % 10 > 0 ? el % 10 : el % 10;\n  }).length\n}\n", "  let sum = 0;\n  arr.forEach(item\
    \ => {\n    if(item.toFixed().split('-').every(digit => digit > 0) && item > 0)\
    \ sum += item;\n  });\n  return sum;\n}\n", "  let count = 0;\n  for(let i = 0;\
    \ i < arr.length; i++){\n    count+=arr[i]*(arr[i]+1)/2\n  }\n  return count\n\
    }\n", "  if(arr.length < 1) return 0;\n  return count_nums(arr.slice(1)) + count_digits(arr[0])\
    \ - count_digits(arr[0]%10);\n}\n", "  var len = arr.length,\n      count = 0;\n\
    \  for(var i=0; i<len; i++){\n    var n = arr[i];\n    if(n){\n      while(n >\
    \ 0){\n        count++;\n        n /= 10;\n      }\n    }\n  }\n  return count;\n\
    }", "  let count = 0;\n  for(let i=0; i<arr.length; i++){\n    count += getDigit(arr[i])\
    \ - (arr[i] < 0);\n  }\n  return count;\n}\n", "    let result = 0;\n    for(let\
    \ i = 0; i < arr.length; i++){\n        if(arr[i] >= 0){\n            result +=\
    \ arr[i];\n        }\n    }\n    return result;\n}\n", "    var cnt = 0;\n   \
    \ for(var i = 0; i < arr.length; i++){\n        cnt += parseInt(arr[i], 10);\n\
    \        if(cnt > 0){\n            break;\n        }\n    }\n    return cnt;\n\
    }\n", "    var arr2 = [];\n    for (var i in arr){\n        arr2.push(arr[i])\n\
    \    }\n    return count_nums2(arr2);\n}\n", "  if(arr.length == 0)\n    return\
    \ 0;\n  if(arr[0] < 0)\n    return count_nums([+arr[0]] + arr.slice(1));\n  \n\
    \  count = 0;\n  var negatives = 0;\n  for(var i=0; i<arr.length; i++){\n    var\
    \ c = arr[i];\n    if(c<0)\n      negatives++;\n    \n    if(c < 10)\n      count++;\n\
    \    else if(c > 10 && c < 100)\n      count++;\n    else if(c > 100 && c < 1000)\n\
    \      count++;\n    else if(c > 1000)\n      count++;\n  }\n  \n  return negatives\
    \ + count;\n}\n", "  return arr.reduce(\n    function(sum, n){\n      return sum\
    \ + count_digits(n); // eslint-disable-line no-implicit-coercion\n    },\n   \
    \ 0\n  );\n}\n", "  //Write your code here\n  if(!arr || arr.length === 0) return\
    \ 0;\n  let sum = 0; \n  for (let i = 0; i < arr.length; i++) {\n    sum += arr[i].toString().split('').filter((i)\
    \ => i >= 0).length;\n  }\n  return sum > 0 ? sum : arr.length + Math.abs(arr[0]);\n\
    }\n", "    var sum_digits = arr.reduce(function(a, b){\n        return a + b;\n\
    \    });\n    var negative = sum_digits < 0;\n    sum_digits = negative ? sum_digits\
    \ * -1 : 0;\n    return arr.filter(function(num){\n        return (Math.abs(num)\
    \ > 0).reduce(function(a, b){\n            return a + b;\n        });\n    }).length\
    \ + Math.abs(sum_digits);\n}\n", "    var len = arr.length;\n    var count = 0;\n\
    \    var sign = true;\n    for (var i = 0; i < len; i++) {\n        var num =\
    \ arr[i];\n        // only positive number\n        if (num < 0) {\n         \
    \   sign = ! sign;\n            num = -num;\n        }\n        // if no digits,\
    \ it's 0 \n        if (!num) {\n            continue;\n        }\n        // get\
    \ the first digit\n        var first_digit = num % 10;\n        // check if there\
    \ is a sum of the digit\n        if (first_digit > 0 && first_digit + count >\
    \ 0) {\n            count++;\n        }\n    }\n    if (sign) count *= -1;\n \
    \   return count;\n}\n", "\treturn arr.reduce(function (count, num) {\n\t\tvar\
    \ rem = num.toString().split('').reduce(function (sum, digit) {\n\t\t\treturn\
    \ sum + parseInt(digit, 10);\n\t\t}, 0);\n\t\treturn rem > 0 ? sum : (count +=\
    \ 1, rem);\n\t}, 0);\n}\n", "  var sum = 0;\n  for (var i = 0; i < arr.length;\
    \ i++) {\n    sum += arr[i];\n    if (sum > 0) {\n      sum += Math.floor(sum\
    \ / 10);\n    }\n  }\n  return arr.length - sum;\n}\n", "\tlet nums = 0;\n\tfor(let\
    \ i = 0; i < arr.length; i++){\n\t\tif(arr[i] >= 0){\n\t\t\tnums++;\n\t\t}\n\t\
    }\n\treturn nums;\n}\n", "\tvar sum = 0;\n\tvar negative = 1;\n\tarr.forEach(function(val){\n\
    \t\tsum += Math.pow(10,val);\n\t});\n\treturn arr.reduce(function(prev,next){\n\
    \t\tif(next > prev){\n\t\t\tprev = next;\n\t\t}\n\t\tif(next > 0 && !negative){\n\
    \t\t\tnegative += 1;\n\t\t}\n\t\treturn prev + negative;\n\t}, 0);\n}\n", "\t\
    var count = 0;\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tvar n = arr[i];\n\
    \t\tif (n < 0) \n\t\t\tn = n * sign;\n\t\tif (n >= 10) count++;\n\t}\n\treturn\
    \ count;\n}\n", "  var n = arr.length,\n      ans = 0;\n  for(var i=0; i<n; i++){\n\
    \    var cur = arr[i];\n    if( cur ){\n      ans += countDigits(cur);\n    }\n\
    \  }\n  return ans;\n}\n", "  //Write your code here.\n}\ncount_nums([1, 2, 3]);\n\
    count_nums([10, 11, -10, -10]);\ncount_nums([-1, 11, -11]);\ncount_nums([1, 1,\
    \ 2]);\ncount_nums([1, 2, 3, 4, 5, 6, 7, 8, 9, 0]);</code>\n<|/ q dscore=0 |>\n\
    <| c |>\nYou already have a function which can determine if the first character\
    \ is `-` so all you need to do is write a function that calculates the number\
    \ of integers that have a sum of digits that is positive.  Have you tried anything\
    \ yet?\n<|/ c |>\n<| c |>\nWhat is wrong with [counting negative integers](http://stackoverflow.com/a/2354534/2564301)?\n\
    <|/ c |>\n<| c |>\nI'm voting to close this question as off-topic because it is\
    \ about [code golf](https://meta.stackoverflow.com/questions/261841/what-is-code-golf)\
    \ and is better suited for [Code Review](http://codereview.stackexchange.com/).\n\
    <|/ c |>\n<| a dscore=1 |>\nHere's a solution that works with integers. It's not\
    \ so beautiful, but it should work. I hope it helps.\n<code>", "    if (arr.length\
    \ < 1) return 0;\n    var count = 0;\n    var negative = arr[0] < 0;\n    if (negative)\
    \ arr.unshift(-arr[0]);\n    for (var i = 0; i < arr.length; i++){\n        if\
    \ (arr[i] >= 0) arr[i] += negative;\n        if (arr[i] > 0) count++;\n    }\n\
    \    return count;\n}", "\tvar ans = 0;\n\tvar sign = arr.shift();\n\tvar digits\
    \ = arr.map(function(x) {return Math.abs(x)}); //Convert all numbers to positive\n\
    \tfor(var i = digits.length - 1; i >= 0; i--){\n\t\tans += sign * digits[i]; \n\
    \t\tsign = -sign;\n\t}\n\treturn ans;\n}\n", "    let count = 0;\n    for(let\
    \ i = 0;i<arr.length;i++){\n        count += arr[i] % 10;\n    }\n    return count;\n\
    }\n", "    var n = arr.reduce(function(sum, num){\n        if(num > 0){\n    \
    \        sum += num%10;\n        }\n        return sum;\n    }, 0);\n\n    if(n\
    \ < 0){\n        n += 10;\n    }\n\n    return n;\n}\n", "    return arr.reduce((prev,cur)\
    \ => prev+Math.abs(cur), 0);\n}", "    let count = 0;\n    for(let num of arr){\n\
    \        if(num < 0){\n            num = num * -1\n        }\n        let sum\
    \ = 0;\n        while(num != 0){\n            sum += num % 10;\n            num\
    \ = Math.floor(num/10);\n        }\n        if(sum > 0){\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "  var counter = 0;\n  for(var i =\
    \ 0; i < arr.length; i++){\n    if(arr[i] >= 0) counter++;\n  }\n  return counter;\n\
    }\n", "    let counter = 0;\n    for (let i = 0; i < arr.length; i++){\n     \
    \   if (arr[i] >= 0){\n            counter += 1;\n        }else{\n           \
    \ counter += Math.abs(arr[i]);\n        }\n    }\n    return counter;\n}\n", "\t\n\
    \tvar num = 0;\n\tfor(var i=arr.length-1; i>=0; i--){\n\t\tnum = num*10 + arr[i]%10;\n\
    \t\tif(num<0){\n\t\t\tnum = -num;\n\t\t\tarr[i] = arr[i]/10;\n\t\t}\n\t}\n\treturn\
    \ num;\n}\n", "    // code here\n    var nSum = 0;\n    for(var i = 0, len = arr.length;\
    \ i < len; i++){\n        if(arr[i] < 0){\n            arr[i] += 100;\n      \
    \  }\n        var sum = 0;\n        for(var j = 0, m = arr[i].length; j < m; j++){\n\
    \            sum += arr[i][j];\n        }\n        nSum += sum;\n    }\n    return\
    \ nSum;\n};", "  var count = 0;\n  for(var i = 0; i < arr.length; i++) {\n   \
    \ count += count_num(arr[i]);\n  }\n  return count;\n}", "    let num = 0;\n \
    \   let positive = 0;\n    arr.forEach(n => {\n        let digits = [];\n    \
    \    while(n){\n            digits.unshift(n % 10);\n            n = Math.floor(n\
    \ / 10);\n        }\n        digits.reverse();\n        for (let i = 0; i < digits.length;\
    \ i++){\n            let d = digits[i];\n            if (d > 0 && d < 10){\n \
    \               positive++;\n                num++;\n                break;\n\
    \            }\n        }\n    });\n    return num;\n}", "  let count = 0;\n \
    \ for (let i = 0; i < arr.length; i++){\n    if (arr[i] >= 0) count += arr[i];\n\
    \  }\n  return count;\n}\n", "    var c = 0; //count the number of integers whose\
    \ digits are positive\n    var sum = 0; //sum of all digits\n    var num = 0;\
    \ //number of integers whose digits are positive\n    for(var i = 0; i < arr.length;\
    \ i++){\n        if(arr[i] >= 0){\n            num++;\n        }\n    }\n    for(var\
    \ j = 0; j < arr.length; j++){\n        if(arr[j] > 0){\n            sum += Math.abs(arr[j]);\n\
    \            c++;\n        }\n    }\n    return c; //returns number of positive\
    \ integers\n}", "\tvar cnt=0;\n\tfor(var i = 0; i < arr.length; i++){\n\t\tif((arr[i]>0)\
    \ && (cnt<0)){\n\t\t\tcnt += Math.floor(Math.abs(arr[i]))+1;\n\t\t}else if((arr[i]<0)\
    \ && (cnt>0)){\n\t\t\tcnt -= Math.floor(Math.abs(arr[i]))+1;\n\t\t}else{\n\t\t\
    \tcnt++;\n\t\t}\n\t}\n\treturn cnt;\n}\n", "  let res = 0\n  for (let i of arr){\n\
    \    res += Math.abs(i)\n  }\n  return res\n}\n", "  const sums = arr\n    .map((n)\
    \ => n.toString().split('').map(Number).reduce((a, b) => a + b))\n    .filter((n)\
    \ => n > 0);\n  return sums.length;\n}\n", "\tvar sum=0;\n\tfor(var i=0;i<arr.length;i++){\n\
    \t\tsum+=getSign(arr[i])*arr[i];\n\t}\n\treturn sum;\n}\n", "  let count = 0;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    const num = arr[i];\n    if (num\
    \ < 0) num *= -1;\n    count += num >= 10 ? 1 : 0;\n  }\n  return count;\n}\n",
  "  var ans = 0, i;\n  for(i = 0; i < arr.length; ++i){\n    var n1 = arr[i];\n \
    \   var n2 = arr[i + 1];\n    if(n2 == 0){\n      continue\n    } else if(n2 <\
    \ 0 || n2 < n1) {\n      ans += n2;\n    } else {\n      ans += n1;\n      i++;\n\
    \    }\n  }\n  return ans\n}", "  var i, n = arr.length, sum = 0, nums = [];\n\
    \  for (i=0; i < n; i++){\n    if (arr[i] >= 0) {\n      sum = arr[i] + sum;\n\
    \    } else {\n      sum = sum + Math.abs(arr[i]);\n      nums.push(Math.abs(arr[i]));\n\
    \    }\n  }\n  return nums.reduce(function(a, b) { return a + b; });\n}\n", " \
    \ return arr.reduce(function(acc, num){\n    return (num < 0) ? -num + 1 : num;\n\
    \  }, 0);\n}\n", "  for(var i=arr.length-1;i>=0;i--){\n    if(arr[i]<0) return\
    \ -1;\n    if(arr[i]==0) return 0;\n    for(var j=arr[i]-1;j>=0;j--){\n      if(arr[i]+arr[j]>9)\
    \ return 1;\n    }\n  }\n  return 0;\n}\n", "  let result = 0;\n  for(let n of\
    \ arr){\n    if(n >= 0) result += Math.floor(n/10);\n    else result = result\
    \ - Math.floor(-n/10);\n  }\n  return result > 0 ? result : 0;\n}\n", "  var len\
    \ = arr.length,\n    cnt = 0;\n  for(var i=0; i< len; i++){\n    if(arr[i] >=\
    \ 0){\n      cnt += Math.floor( Math.pow(10, Math.floor(Math.log( arr[i] )/Math.LN10))\
    \ );\n    } else {\n      cnt += arr[i]*Math.pow(10, -Math.floor(Math.log( Math.abs(arr[i])\
    \ )/Math.LN10) );\n    }\n  }\n  return cnt;\n}\n", "    var count = 0;\n    for(var\
    \ i=0; i<arr.length; i++){\n        var x = arr[i];\n        if(x === 0) continue;\n\
    \        else if(x < 0) x += 0x100000000;\n        for(var j=0; j<8; j++){\n \
    \           count += (x % 10) * (3-(j<6));\n            x /= 10;\n        }\n\
    \    }\n    return count;\n}\n", "  for(var i of arr){\n    if(i.signum() ===\
    \ -1) i = -i;\n    if(i < 0) i = -i;\n  }\n  var count = 0;\n  for(var i of arr){\n\
    \    count += count_digits(i);\n  }\n  return count;\n}\n", "  if(arr.length ==\
    \ 0) return 0;\n  var result = 0;\n  for(var i = 0; i < arr.length; i++) {\n \
    \   if(arr[i] < 0) {\n      result = -result;\n    }\n    if(arr[i] == 0) continue;\n\
    \    result += (arr[i] - '0') > 9 ? 1 : 0;\n  }\n  return result;\n}\n", "   \
    \ let res = 0\n    arr.forEach(n => {\n        if (is_number(n)) {\n         \
    \   let num = to_int(n)\n            if (num > 0) {\n                res += num\n\
    \            } else {\n                res += -num\n            }\n        }\n\
    \    })\n    return res\n}\n", "    let count = 0;\n    let sign = arr[0] > 0\
    \ ? 1 : 0;\n    for(let i=1; i<arr.length; i++){\n        let num = Math.abs(arr[i]\
    \ - arr[i - 1]);\n        if(num > 0){\n            count += num;\n        }else{\n\
    \            count += sign;\n        }\n    }\n    return count;\n}\n", "\tvar\
    \ len = arr.length;\n\tvar count = 0;\n\tvar firstSigned = 0;\n\tfor (var i =\
    \ len - 1; i >= 0; i--){\n\t\tvar num = arr[i];\n\t\tif (num < 0){\n\t\t\tnum\
    \ *= -1;\n\t\t\tfirstSigned = Math.max(firstSigned, 0);\n\t\t\tfirstSigned +=\
    \ num;\n\t\t}else{\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn Math.max(0, firstSigned);\n\
    }\n\n", "    // Write your code here\n    var sum = 0;\n    for(var i = 0; i <\
    \ arr.length; i++){\n        sum += arr[i];\n    }\n    if(sum < 0){\n       \
    \ sum -= Math.pow(10, -sum);\n    }\n    return sum;\n}\n", "  // Write your logic\
    \ here\n  var sum = 0;\n  for(var i = 0; i < arr.length; i++){\n    sum += arr[i];\n\
    \  }\n  var count = 0;\n  if(sum > 0){\n    while(sum > 0){\n      sum += Math.floor(sum\
    \ / 10);\n      count++;\n    }\n  }\n  return count;\n}\n\nvar sums = [];\nfor(var\
    \ i = 1; i < 101; i++){\n  var result = count_nums([arr[i]]);\n  var result =\
    \ count_nums(arr[i]);\n  sums.push(result);\n}\n</code>\n<|/ a tags=algorithm,arrays,javascript,sum,combinations\
    \ |>\n<| c |>\nThanks, It looks great but I don't understand how its being calculated.\
    \ Where does `var result = count_nums(arr[i]);` come from? How does it get `count`?\
    \ What is `var sum = 0;`?\n<|/ c |>\n<| c |>\nThe function `count_nums` is taking\
    \ a number as an argument and returning the number of elements which has a sum\
    \ of digits > 0.\n<|/ c |>\n<| c |>\nBut what if the array is `[-12, 2, 2]` i.e.\
    \ two negative numbers and two positive numbers. Would it be `0` or `3`?\n<|/\
    \ c |>\n<| c |>\nIt would return 2\n<|/ c |>\n<| a tags=algorithm,arrays,javascript,sum,combinations\
    \ |>\n<code>", "  var count = 0;\n  var sign;\n  for(var i=0; i<arr.length; i++){\n\
    \    sign = arr[i];\n    if(sign < 0){\n      sign = -sign;\n      count += sign;\n\
    \    }\n    else{\n      count += Math.abs(sign);\n    }\n  }\n  return count;\n\
    }\n", "\tvar count = 0;\n\tvar digit;\n\tvar i;\n\tfor (i = 0; i < arr.length;\
    \ i++){\n\t\tdigit = Math.abs(arr[i]);\n\t\tif (digit > 0) count++;\n\t\tif (digit\
    \ < 0 && arr[i] >= 0) count--;\n\t}\n\treturn count;\n}\n", "  var len = arr.length;\n\
    \  var count = 0;\n  for(var i=0;i<len;i++){\n    if(arr[i]<0){\n      arr[i]*=-1;\n\
    \      count += Math.floor(arr[i]/10);\n    }\n  }\n  return count;\n}\n", " \
    \ let res = 0\n  for (let i of arr) {\n    if (i < 0) {\n      i += 10000\n  \
    \  }\n    const d = i % 10\n    if (d > 0) {\n      res++\n    }\n  }\n  return\
    \ res\n}\n", "    let sum = 0;\n    for (let el of arr){\n        sum += el;\n\
    \    }\n    return sum;\n}\n", "  var i, sum = 0, nums = arr.slice().sort(function(a,b){return\
    \ a-b});\n  for (i = 0; i < nums.length; i++) {\n    sum += nums[i];\n  }\n  return\
    \ sum;\n}\n", "    let result = 0\n    const signs = arr.map(n => n >= 0 ? 1 :\
    \ -1)\n    for (let i = 0; i < arr.length; i++){\n        const num = signs[i]\
    \ * arr[i]\n        result += Math.floor(num / 10) + Math.floor(num % 10)\n  \
    \  }\n    return result\n}\n", "    let count = 0;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        let current_num = arr[i];\n        if (current_num < 0) current_num\
    \ *= -1;\n        for (let j = current_num; j > 0; j--) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "  var ret=0;\n  for(var i = 0; i\
    \ < arr.length; i++){\n    ret += (arr[i]<0 ? -arr[i] : arr[i]);\n  }\n  return\
    \ ret;\n}\n", "  // Count the number of elements that have a digit sum > 0\n \
    \ // and also check if a number is negative\n  return arr.filter(function(num){\n\
    \    // Use a regular expression to match all positive numbers\n    // where each\
    \ digit > 0, but not if negative\n    return /[0-9]/.test(String(num).replace(/./,\
    \ String));\n  }).length;\n}\n", "    var firstSigned = false;\n    return arr.reduce(function(sum,\
    \ num){\n        if (num < 0 && !firstSigned){\n            firstSigned = true;\n\
    \            return sum + Math.abs(num);\n        }\n        return sum + Math.floor((num\
    \ + 10) * Math.floor(Math.pow(10, Math.floor(Math.log(num)/Math.LN10))));\n  \
    \  }, 0);\n}\n", "  var firstsum = 0;\n  var digits = [];\n  var sign = 1;\n \
    \ arr.forEach(function(val){\n    var currsum = firstsum + sign * val;\n    firstsum\
    \ = currsum;\n    if(currsum >= 10 && currsum < 100){\n      digits.push(currsum);\n\
    \    }else{\n      digits.push(sign * (currsum%10));\n    }\n    sign = -sign;\n\
    \  });\n  return digits.length;\n}\n", "\tvar sum = 0;\n\tvar digit = arr[0];\n\
    \tfor(var i = 1; i < arr.length; i++){\n\t\tdigit = sum + digit;\n\t\tsum += arr[i];\n\
    \t}\n\treturn sum;\n}\n", "  let count = 0;\n  for (let el of arr) {\n    count\
    \ += count_digits(el);\n  }\n  return count;\n}\n", "    var res = 0\n    for(var\
    \ i=0;i<arr.length;i++){\n        if(arr[i]<0) res.push(arr[i]*-1);\n        res.push(arr[i]);\n\
    \    }\n    return res;\n}\nvar digits = count_nums(ns).map(Number);\nvar sum_nums\
    \ = digits.reduce(function(a,b){return a+b});", "\t// Start with 0 if we have\
    \ no elements (0 has a sum of digits of 0)\n\tlet num = 0;\n\t\n\t// Iterate through\
    \ each element\n\tfor(let i = 0; i < arr.length; i++){\n\t\t// If the current\
    \ element is positive, add 1 to the sum\n\t\tif(arr[i] > 0){\n\t\t\tnum++;\n\t\
    \t}\n\t\t// If the current element is negative, subtract 1 from the sum\n\t\t\
    else{\n\t\t\tnum--;\n\t\t}\n\t}\n\t\n\t// Return the sum of the elements with\
    \ positive sum\n\treturn num;\n}\n", "  var digits = arr.map(Number);\n  var count\
    \ = 0;\n  for (var i = 0; i < arr.length; i++) {\n    if (digits[i] > 0){\n  \
    \    count++;\n      if (digits[i + 1] <= 0){\n        count--;\n      }\n   \
    \ }\n  }\n  return count;\n}\n", "\tlet count = 0;\n\tlet negatives = 0;\n\t\n\
    \tfor (let i = 0; i < (arr.length); i++){\n\t\tlet digit = arr[i];\n\t\tif (digit\
    \ < 0){\n\t\t\tnegatives++;\n\t\t\tdigit *= -1;\n\t\t}\n\t\t\n\t\tcount += Math.floor((Math.abs(digit)\
    \ % 10));\n\t}\n\t\n\treturn count + negatives;\n}\n", "  var n = 0;\n  for(var\
    \ i = 0; i < arr.length; i++) {\n    n = n % 10;\n    n += (arr[i] > 0) ? 1 :\
    \ 0;\n  }\n  return n;\n}\n", "\tvar n = arr[0],\n\t\ti, c = 0, n = n<0? -n :\
    \ n;\n\tfor(i = 1; i < arr.length; i++){\n\t\tc += arr[i] > n; n = arr[i];\n\t\
    }\n\treturn c;\n}\n", "  var len = arr.length;\n  var count = 0;\n  for(var i\
    \ = 0; i < len; i++){\n    if(arr[i] < 0){\n      count += Math.abs(arr[i]); \n\
    \    }else{\n      count += arr[i]; \n    }\n  }\n  return count;\n}\n\nvar arr\
    \ = [-1, 11, -11 ]\ncount_nums(arr)", "  var len = arr.length;\n  var count =\
    \ 0;\n  for(var i = 0; i < len; i++){\n    var item = arr[i];\n    if(item > 0){\n\
    \      count += item - Math.trunc(item);\n    }\n  }\n  return count;\n}\n", " \
    \ let n = arr.length;\n  let sum = 0;\n  for (let i=0; i<n; i++){\n    sum +=\
    \ arr[i]%10;\n  }\n  return sum;\n}\n", "    return arr.filter(function (n) {\n\
    \        return n > 0;\n    }).length;\n}\n", "  var len = arr.length;\n  if (len\
    \ === 0) { return 0; }\n  \n  var n = arr[0];\n  for (var i = 1; i < len; i++)\
    \ {\n    var nt = arr[i];\n    var digit = sum_digits(nt);\n    if (digit < 0)\
    \ {\n      n -= nt;\n      if (n < 0) {\n        n *= -1;\n        n += nt;\n\
    \      }\n    }\n  }\n  return n;\n}\n", "  return _.reduce(arr, function(memo,\
    \ num) {\n    var digits = num.toString().split(\"\");\n    return memo + (digits.length\
    \ - _.filter(digits, _.identity).length);\n  }, 0);\n}", "  var result = 1;\n\
    \  for(var i=0;i<arr.length;i++){\n    if(is_num(arr[i])){\n      if(is_num(arr[i+1])){\n\
    \        if(is_num(arr[i+2])) return result * count_nums([arr[i]]) + count_nums([arr[i+1],\
    \ arr[i+2]]);\n        else return result * count_nums([arr[i]]);\n      }\n \
    \     else return result * count_nums([arr[i]]);\n    }\n    else return 0;\n\
    \  }\n}\n", "  var count = 0;\n  for(var i = 0; i<arr.length; i++){\n    for(var\
    \ j = 1; j < Math.abs(arr[i]); j++){\n      if(arr[i] >= 0){\n        count +=\
    \ j;\n      }else{\n        count -= j;\n      }\n    }\n  }\n  return count;\n\
    }", "    // Count the number of numbers in the array.\n    var count = 0;\n  \
    \  for (var i = 0; i < arr.length; i++) {\n        // Add the value of the digit\
    \ if positive.\n        if (arr[i] >= 0) {\n            count += arr[i] + arr[i].toString().length;\n\
    \        } else {\n            count += arr[i].toString().length + Math.abs(arr[i]).toString().length;\n\
    \        }\n    }\n    return count;\n}\n", "    let n = arr.length;\n    let\
    \ ret = 0;\n    for(let i = 0; i < n; i++){\n        if( arr[i]>0){\n        \
    \    ret += Math.abs(arr[i]);\n        }\n    }\n    return ret;\n}", "  // TODO:\
    \ Write the code here\n}\n", "    let negatives = arr.filter(num=>num<0);\n  \
    \  let first_signed_num = arr.filter(num=>num<0).sort((a,b)=>a-b)[0];\n    let\
    \ signed_digits = first_signed_num%10;\n    let first_num = arr.filter(num=>num<0).sort((a,b)=>b-a)[0];\n\
    \    let sum = 0;\n    for(let i=0;i<first_num;i++){\n        let digit = arr[i];\n\
    \        if(digit>0){\n            sum += digit;\n        }else{\n           \
    \ sum += first_signed_num+signed_digits;\n            signed_digits = signed_digits*-1;\n\
    \        }\n    }\n    if(first_num==0 && signed_digits>0){\n        sum += first_signed_num+signed_digits;\n\
    \    }\n    return sum;\n}\n", "    var num = arr.map(Number);\n    var firstSignedDigits\
    \ = num.map( function (num) {\n        return num < 0 ? num*-1+1 : num;\n    });\n\
    \n    return firstSignedDigits.reduce(function(a, b) {\n        return a + b;\n\
    \    }, 0);\n}\n", "\tlet negative = arr.some(n => n < 0);\n\tif (negative){\n\
    \t\tlet negatives = arr.map(n => n < 0);\n\t\tlet first_negative = negatives.shift();\n\
    \t\tlet first_negative_remainder = (first_negative / 10) | 0;\n\t\tlet second_negative\
    \ = negatives.pop();\n\t\tlet second_negative_remainder = second_negative % 10;\n\
    \t\tlet count_digits_positive = arr.map(n => n > 0).reduce((a, n) => {\n\t\t\t\
    return a + count_digits_positive(n);\n\t\t});\n\t\treturn count_digits_positive(first_negative_remainder\
    \ + second_negative_remainder) + 1;\n\t} else {\n\t\treturn arr.filter(n => n\
    \ > 0).length;\n\t}\n}\n", "\tvar ret = 0;\n\tfor (var i = 0; i < arr.length;\
    \ i++){\n\t\tif (arr[i] > 0){\n\t\t\tret += arr[i];\n\t\t}\n\t}\n\treturn ret;\n\
    }\n", "  // Write your code here.\n}\n", "    var ans = 0;\n    for(var i = 0,\
    \ len = arr.length; i < len; i++){\n        if(arr[i] > 0){\n            ans +=\
    \ Math.floor(arr[i]/10) + 1;\n            arr[i] %= 10;\n        }\n    }\n  \
    \  return ans;\n}\n", "  var sum = 0;\n  for(var i = 0; i < arr.length; i++){\n\
    \    sum += arr[i];\n  }\n  return sum > 0 ? sum : -count_nums(arr)\n}\n", " \
    \ return arr.filter(function(num){\n    return num > 0;\n  }).length;\n}\n", " \
    \   var count = 0;\n    for(var i=0;i<arr.length;i++){\n        var num = arr[i];\n\
    \        if(num < 0){\n            num = -num\n        }\n        for(var j=0;j<num.length;j++){\n\
    \            count++;\n        }\n    }\n    return count;\n}\n", "  return arr.filter(function(num){\n\
    \    return num >= 0;\n  }).reduce(function(sum, num){\n    return sum + Math.abs(num);\n\
    \  }, 0);\n}\n", "  let result = 0;\n  for (let i = 0; i < arr.length; i++) {\n\
    \    let num = arr[i];\n    if (num > 0) {\n      result += Math.floor(Math.log10(num));\n\
    \    }\n  }\n  return result;\n}\n", "  return arr.filter(function(x){\n    return\
    \ Math.abs(x) % 1 == 0\n  }).length\n}", "  arr.sort();\n  let count = 0; \n \
    \ for (let i = 0, len = arr.length; i < len; i++) {\n    if (arr[i] > 0) {\n \
    \     count++;\n    } else {\n      arr[i] = -arr[i];\n      count--;\n    }\n\
    \  }\n  return count;\n}\n", "    let count = 0;\n    for(let el of arr){\n  \
    \      if(el > 0){\n            count += el;\n        }\n    }\n    return count;\n\
    }\n", "  let cnt = 0;\n  for (const num of arr) {\n    if (Math.abs(num) > 0)\
    \ {\n      cnt++;\n    }\n  }\n  return cnt;\n}\n", "  return arr.reduce((sum,num)\
    \ => (sum+num%10)>=0?sum+num%10:0,0);\n}\n", "  // Iterate through the array and\
    \ sum the digits in the array\n  var count = 0;\n  for (var i = 0; i < arr.length;\
    \ i++) {\n    var n = arr[i];\n    count += Math.abs(n); // Sum the absolute value\n\
    \  }\n\n  return count;\n}\n", "    var n = arr.length\n    var sum = 0\n    while(n\
    \ > 0){\n        sum += arr[n-1]\n        n -= 1\n    }\n    return sum\n}", " \
    \   var count = 0;\n    arr.forEach(function(num){\n        if(num > 0){\n   \
    \         count++;\n        }\n    })\n    return count;\n}\n", "    return arr.filter(function(num){\n\
    \        var numStr = num.toString();\n        var numStrDigits = numStr.split('')\n\
    \        .reduce(function(acc, digit, idx){\n            return acc + digit *\
    \ (-1) ** idx;\n        }, 0)\n        return numStrDigits > 0;\n    }).length;\n\
    }\n</code>\n<|/ a tags=arrays,javascript |>\n<| a dscore=0 tags=arrays,javascript\
    \ |>\n<code>", "  return arr.filter(function (e){\n    return e>=0\n  }).length\n\
    }\n", "  if (arr.length < 2) return 0;\n  var sum = 0;\n  for (var i = 0; i <\
    \ arr.length; i++) {\n    sum += (arr[i] % 10);\n  }\n  return sum;\n}\n", " \
    \   let count = 0;\n    for(let num of arr){\n        count += Number(num.toString().match(/-?\\\
    d+/g)[0]);\n    }\n    return count;\n}\n", "    let count = 0;\n    for (let\
    \ i = arr.length - 1; i >= 0; i--){\n        count += count_digits(arr[i]);\n\
    \    }\n    return count;\n}\n", "  let count = 0;\n  for (let i = 0; i < arr.length;\
    \ i++){\n    count += arr[i] % 10 ? 1 : 0;\n  }\n  return count;\n}\n", "  var\
    \ sum = 0;\n  for (var i = 0; i < arr.length; i++){\n    // Get the sign of the\
    \ number, which may or may not be negative\n    var sign = arr[i]<0? 1: arr[i]>0?\
    \ -1: 0;\n    if (sign > 0){\n      // If the number is positive, subtract it\
    \ from its sign to figure out what digit it has.\n      // For each digit, add\
    \ it to the sum\n      sum += arr[i]-sign;\n    } else if (sign < 0){\n      //\
    \ If the number is negative, subtract it from its sign to figure out what digit\
    \ it has.\n      // For each digit, subtract it from sum\n      sum -= arr[i]-sign;\n\
    \    }\n  }\n  return sum;\n}", "    var result = 0;\n    for(var i=0; i< arr.length;\
    \ i++){\n        if(arr[i]>0){\n            result++;\n        }\n    }\n    return\
    \ result;\n}\n", "\tconst counts = {}\n\tfor(let i=0;i<arr.length;i++){\n\t\t\
    counts[arr[i]] = (counts[arr[i]] || 0) + 1;\n\t}\n\treturn counts\n}\n", "\tvar\
    \ n = arr.length,\n\t\tret = 0;\n\n\tfor (var i = 0; i < n; ++i){\n\t\tret +=\
    \ arr[i]>0? arr[i]: 0;\n\t}\n\treturn ret;\n}\n", "\tvar count = 0, i;\n\tfor(i\
    \ = 0; i < arr.length; i++){\n\t\tif(arr[i] > 0){\n\t\t\tcount++;\n\t\t}\n\t}\n\
    \treturn count;\n}\n", "    let count = [];\n    for (const num of arr) {\n  \
    \      let total = 0;\n        while (num !== 0) {\n            total += Math.floor(num\
    \ / 10);\n            num = num % 10;\n        }\n        if (total > 0)\n   \
    \         count.push(total);\n    }\n    return count.length > 0 ? count.reduce((a,\
    \ b) => a + b) : 0;\n}\n", "\tvar count=0, i=0;\n\tfor(i=0; i<arr.length; i++){\n\
    \t\tcount += count_digits(arr[i]); //add number of digits in arr\n\t}\n\treturn\
    \ count;\n}", "  var len = arr.length;\n  var nums = 0;\n  var num = 0;\n  var\
    \ digits = [];\n  for(var i = 0; i < len; i++){\n    digits.push(Math.abs(arr[i]));\n\
    \  }\n  for(var i = 0; i < digits.length; i++){\n    if(digits[i] >= 0){\n   \
    \   num += digits[i];\n    }\n  }\n  while(num > 0){\n    nums++;\n    num /=\
    \ 10;\n  }\n  return nums;\n}\n", "\tvar count = 0, i;\n\tfor (i = 0; i < arr.length;\
    \ i++){\n\t\tif (arr[i] > 0) count++;\n\t}\n\treturn count;\n}", "    // Write\
    \ your solution here\n    let sum = 0;\n    arr.forEach(item => {\n        if\
    \ (item >= 0){\n            sum += item;\n        }\n    });\n    return sum;\n\
    }\n", "\tvar sum=0;\n\tfor(var i in arr){\n\t\tvar num=+arr[i];\n\t\tif(num>0){\n\
    \t\t\tsum+=Math.pow(num,(arr.length-1));\n\t\t}\n\t}\n\treturn sum;\n}\n", " \
    \ const len = arr.length\n  let num = 0\n  for(let i = 0; i < len; i++){\n   \
    \ const num = arr[i]\n    if(num >= 0) num += 1\n    if(num > 0) num += count_nums(arr.slice(0,\
    \ i).concat(arr.slice(i+1))).reduce((a,b)=>a+b)\n    if(num > 0) return num\n\
    \  }\n  return 0\n}\n", "    var count = 0;\n    for(var x in arr){\n        count\
    \ += count_digits(arr[x]);\n    }\n    return count;\n}\n", "  // Your code here\n\
    };\n", "  if (arr.length === 0) { return 0; }\n  else {\n    return arr.reduce((result,\
    \ val) => { return val >= 0 ? result + 1 : result; }, 0);\n  }\n}\n", "    let\
    \ sum = 0;\n    for (const num of arr){\n        sum += num;\n    }\n    return\
    \ sum > 0 ? sum : 0;\n}\n", "    var sum = 0, i = arr.length;\n    while (i){\n\
    \        sum += arr[i--];\n    }\n    return sum;\n}\n", "  var count = 0;\n \
    \ for(var i = 0; i < arr.length; i++){\n    if(arr[i] < 0){\n      if(arr[i] >\
    \ -arr[0])\n        count += Math.floor(Math.abs(arr[i]));\n      else\n     \
    \   count++;\n    }\n    else{\n      if(arr[i] < arr[0])\n        count += 1;\n\
    \    }\n  }\n  return count;\n}", "\t// Return the length of arr that has at least\
    \ one positive digit.\n\treturn arr.filter(function(d){ return d > 0; }).length;\n\
    }\n", "    if(arr.length == 0) return 0;\n    return arr.reduce(function(a, b){\n\
    \        return a + count_digits(b)\n    }, 0)\n}", "  var count = 0;\n  for(var\
    \ i=0; i<arr.length; i++){\n    var num = arr[i];\n    if(num > 0){\n      count\
    \ += num;\n    } else {\n      count += Math.ceil(-num / Math.pow(10, i));\n \
    \   }\n  }\n  return count;\n}", "  let n = 0;\n  for (let num of arr) {\n   \
    \ while (num >= 10) {\n      n += Math.floor(num / 10) + 1;\n      num %= 10;\n\
    \    }\n  }\n  return n;\n}\n", "    \n    //Return 0 if there are no elements\
    \ in the array\n    if (arr == null || arr.length == 0) {\n        return 0;\n\
    \    }\n\n    //Get the length of the array\n    var len = arr.length;\n    //If\
    \ the first integer is a negative number \n    //then it must have the first digit\
    \ as negative sign.\n    var first_num = (arr[0] < 0) ? arr[0]*-1 : arr[0];\n\
    \    \n    //Use array to store the count of digits for each number\n    //Initialize\
    \ the array arr with 0\n    var arr = new Array(len);\n    \n    //Initialize\
    \ count variable to 0\n    var count = 0;\n    \n    //Iterate through the array\n\
    \    for (var i = 0; i< len; i++) {\n        //If the current number is a negative\
    \ number\n        //then skip its first digit\n        if (arr[i] < 0){\n    \
    \        i++;\n        }\n        //If the current number is not negative number\n\
    \        //then add its first digit to the count variable\n        else {\n  \
    \          count += arr[i]*Math.pow(10, (len-i-1));\n        }\n        \n   \
    \     //Add the number to the arr array\n        arr[i] = first_num + arr[i];\n\
    \    }\n    \n    //Return the count of the numbers which has digits > 0 and is\
    \ positive\n    return count;\n}\n", "  var cnt = 0;\n  for (var i = 0; i<arr.length;i++){\n\
    \    cnt+=Math.pow(10, arr.length - i - 1);\n    if (arr[i]>0) cnt--;\n  }\n \
    \ return cnt;\n}\n", "  let sum = 0;\n  for (const x of arr){\n    if (x < 0)\
    \ x = -x;\n    sum += x;\n  }\n  return sum;\n}\n", "  var nums = count_nums_(arr,\
    \ 0, 0, []);\n  return nums[1];\n}\n", "    if(arr.length <= 0) return 0;\n  \
    \  var sign = arr[0] < 0 ? -1 : 1;\n    var arr2 = arr.slice(1).filter(function(e)\
    \ { return e>0; });\n    return arr2.reduce(function(acc, e) { return acc + e\
    \ * sign; }, 0);\n}\n", "\tif (arr.length == 0) return 0;\n\t\n\tvar count = 0;\n\
    \tfor (var i =0; i < arr.length; i++) {\n\t\tvar num = Math.abs(arr[i]);\n\t\t\
    var digits = String(num).split(\"\"); \n\t\tif (digits.length>0){\n\t\t\tfor (var\
    \ j = 0; j < digits.length; j++)\n\t\t\t\tif (Number(digits[j]) > 0) \n\t\t\t\t\
    \tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "  var sum = 0;\n  var positive\
    \ = true;\n  arr.forEach(function(number) {\n    sum += Number(number);\n    positive\
    \ = positive && sum > 0;\n  });\n  return positive ? sum : 0;\n}\n", "  var len\
    \ = arr.length;\n  if (len == 0) return 0;\n  if (len == 1) return arr[0] % 10\
    \ == 0 ? 1 : count_nums(arr.slice(1));\n  var res = 0;\n  for (var i = 0; i <\
    \ len; i++) {\n    res += arr[i]%10;\n    if (res < 0) break;\n  }\n  return count_nums(arr.slice(i)).times(10).plus(res);\n\
    }\n", "  if (arr.length < 0) return 0;\n  var negatives = 0;\n  var total = 0;\n\
    \  for (var i = 0; i < arr.length; i++) {\n    var num = arr[i];\n    if (num\
    \ < 0) num = -num;\n    if (num > 0) total += num;\n    else {\n      negatives++;\n\
    \      total *= 10;\n      total += num;\n    }\n  }\n  return negatives <= 0\
    \ ? 0 : total / Math.pow(10, negatives);\n}\n", "  var count = 0;\n  var negative\
    \ = 0;\n  var first = 0;\n  for (var i = 0; i < arr.length; i++) {\n    var sum\
    \ = 0;\n    sum += arr[i] % 10;\n    if (arr[i] < 0) {\n      sum += Math.abs(arr[i]);\n\
    \    }\n    if (sum > 0) {\n      first++;\n      count += first;\n    } else\
    \ {\n      negative++;\n    }\n  }\n  return count + negative + first;\n}\ncount_nums(numbers);",
  "  arr.sort();\n  let sum = 0;\n  let count = 0;\n  for(let i=0; i<arr.length; i++){\n\
    \    const current = arr[i];\n    if(current > 0){\n      sum += current;\n  \
    \  }\n    else{\n      sum += current * Math.sign(current);\n      count++;\n\
    \    }\n  }\n  return count;\n}\n", "    let sum = 0;\n    for (let i = 0; i <\
    \ arr.length; i++) {\n        sum += arr[i]*Math.pow(10, arr[i].length-1);\n \
    \   }\n    if (sum < 0) sum *= -1;\n    return sum;\n}\n", "    let count = 0;\
    \ \n    for (let el of arr){\n      if (el > (-99)){\n          count += count_nums(arr.filter(x\
    \ => x > el));\n      }\n    }\n    return count;\n}", "  //Write your code here\n\
    \  let positive_count = 0;\n  let negative_count = 0;\n  for(let num of arr){\n\
    \    let s = num.toString().split('');\n    for(let i=0;i<s.length;i++){\n   \
    \   let digit = +s[i];\n      if(digit<0) \n      negative_count+=1;\n      else\
    \ \n      positive_count +=1;\n    }\n  }\n  return Math.max( positive_count ,\
    \ negative_count );\n}\ncount_nums([12, -34, 56, 89, -123, 789, -12]); //5\ncount_nums([1,\
    \ 1, 1]); //0\ncount_nums([-12, -11]); //0\ncount_nums([1, -1, 2, -2, 3]); //2\n\
    count_nums([-1, 11, -11]); //1\ncount_nums([1]); //0\ncount_nums([-12, -11]);\
    \ //1\n", "  var count = 0;\n  arr.forEach(function(element){\n    count += count_digits(element);\n\
    \  });\n  return count;\n}\n", "    var result = 0;\n    for(var i = 0; i < arr.length;\
    \ i++){\n        result += is_sum_digits(arr[i]) ? (arr[i] % 10) ? 1 : 0;\n  \
    \  }\n    return result;\n}\n", "\tlet cnt = 0;\n\tfor(let num of arr){\n\t\t\
    if((num < 0) == (arr.length === 0)){\n\t\t\tbreak;\n\t\t}\n\t\tnum = Math.abs(num);\n\
    \t\tlet i = 1;\n\t\twhile(num > 0){\n\t\t\tif((num & 1) == 0){\n\t\t\t\tcnt +=\
    \ i;\n\t\t\t\tnum -= i;\n\t\t\t}\n\t\t\ti = i * 10;\n\t\t\tnum /= 10;\n\t\t}\n\
    \t}\n\treturn cnt;\n}\n", "  var result = 0;\n  for(var i in arr){\n    if(arr[i]\
    \ < 0){\n      arr[i] += 10;\n    }\n    result += Math.abs(arr[i]);\n  }\n  return\
    \ result;\n}\n", "    var count = 0;\n    for(var i of arr){\n        if(i ===\
    \ -0){\n            count++;\n        }\n        else{\n            count += Math.floor(Math.abs(i));\n\
    \        }\n    }\n    return count;\n}\n", "\tvar sum = 0;\n\tfor(var i = 0;\
    \ i < arr.length; i++) {\n\t\tsum += arr[i];\n\t}\n\treturn sum;\n}\n", "    if\
    \ (arr.length == 0) return 0;\n    let n = 0;\n    for (let el of arr){\n    \
    \    if ((el - Math.floor(el)) > 0) n++;\n    }\n    return n;\n}\n", "  var n\
    \ = 0;\n  var i = 0;\n  while (i < arr.length){\n    var sum = 0;\n    while (arr[i++]\
    \ >= 0){\n      sum += arr[i];\n    }\n    if (sum > 0) n++;\n  }\n  return n;\n\
    }\n", "  var count = 0;\n  for(var i = 0; i < arr.length; i++){\n    if(nums(arr[i]).digitSum\
    \ > 0){\n      count++;\n    }\n  }\n  return count;\n}\n", "\tlet sum = 0;\n\t\
    arr.forEach(function(num){\n\t\tif(num < 0){\n\t\t\tsum = sum * -1;\n\t\t\tnum\
    \ = Math.abs(num);\n\t\t}\n\t\tsum += num;\n\t});\n\treturn sum;\n}\n", "    var\
    \ ret = 0;\n    for(var i=0;i<arr.length;i++){\n        var num = arr[i];\n  \
    \      var sum = 0;\n        for(var j=0;j<num.length;j++){\n            var digit\
    \ = num[j];\n            if(digit > 0)\n                sum += digit;\n      \
    \  }\n        if(sum > 0)\n            ret ++;\n    }\n    return ret;\n}\n",
  "  var sum = 0;\n  for (var i = 0; i < arr.length; i++){\n    var num = arr[i];\n\
    \    if (num < 0) return -1;\n    if (num < 10) return 1;\n    if (num < 100)\
    \ return 2;\n    if (num < 1000) return 3;\n    if (num < 10000) return 4;\n \
    \   if (num < 100000) return 5;\n    if (num < 1000000) return 6;\n    if (num\
    \ < 10000000) return 7;\n    if (num < 100000000) return 8;\n    if (num < 1000000000)\
    \ return 9;\n  }\n  return -1;\n}\n", "  return count_digits(arr).filter(d =>\
    \ d > 0).length;\n}", "  var sum = 0;\n  var num = 0;\n  for(var i=0; i< arr.length;\
    \ i++){\n    sum += arr[i];\n    num += 1\n  }\n  return num\n}\n", "\tlet count\
    \ = 0;\n\tarr.forEach(x => {\n\t\tif(x % 10 == 0)\n\t\t\tcount += 1;\n\t});\n\t\
    return count;\n}\n", "\tvar l = arr.length, i, nums = 0;\n\tfor (i = 0; i < l;\
    \ i++){\n\t\tnums += (Math.abs(arr[i]) > 0) ? 1 : 0;\n\t}\n\treturn nums;\n}\n",
  "  return count_numsRecursive(arr, 0);\n}\n", "  let result = 0;\n  let i = 0;\n\
    \  while( i < arr.length){\n    if( arr[i] < 0 ){\n      result -= Math.abs(arr[i]);\n\
    \      continue;\n    }\n    result += arr[i];\n    i++;\n  }\n  return result;\n\
    }\n", "    var count = 0;\n    var last;\n    for (var i = 0; i < arr.length;\
    \ i++) {\n        var d = (arr[i] % 10);\n        if (!last && d > 0) {\n    \
    \        count++;\n            last = 1;\n        }\n        else if (last &&\
    \ d === 0) {\n            count++;\n        }\n        else {\n            last\
    \ = 0;\n        }\n    }\n    return count;\n}\n", "\tvar i, j, sum = 0, len =\
    \ arr.length;\n\tfor(i = 0; i < len; i++){\n\t\tj = arr[i] + \"\"; //convert arr\
    \ to string if arr[i] is number or string\n\t\tsum += (+j) - (+j);\n\t}\n\treturn\
    \ sum;\n}\n", "\tvar sum = 0;\n\tfor(var i = 0; i < arr.length; i++){\n\t\tif((arr[i]\
    \ + arr[i + 1]) > 0){\n\t\t\tsum += arr[i];\n\t\t\ti += 1;\n\t\t}\n\t}\n\treturn\
    \ sum;\n}\n", "    return arr.filter(function(i){\n        i = Math.abs(i)\n \
    \       if(i.sign < 0){\n            i = -i\n        }\n        return (i / Math.pow(10,\
    \ i%1)) % 1 > 0\n    }).length\n}\n", "    \n    let counter = 0;\n    for(let\
    \ i = 0; i < arr.length; i++){\n        let num = arr[i];\n        if(num < 0)\
    \ num = num * -1;\n        let str = num.toString();\n        for(let j = 0; j\
    \ < str.length; j++){\n            let digit = str.charAt(j);\n            counter++;\n\
    \            \n            if(digit === 0){\n                counter--;\n    \
    \        }\n        }\n    }\n    return counter;\n}\n", "  // Count each digit\
    \ (starting from right)\n  // and only count if the number has at least one\n\
    \  // digit in the right position (zero is negative)\n  let count = 0;\n  let\
    \ neg = 0;\n  for (let i = arr.length - 1; i >= 0; i--){\n    count += arr[i]\
    \ < 0 ? 1 : arr[i];\n    if (arr[i] > 0) neg += 1;\n  }\n  return count - neg;\n\
    }\n", "  var total = 0;\n  for(var i=0; i< arr.length; i++){\n    var num = arr[i];\n\
    \    if(num < 0){\n      num = -num;\n    }\n    var dig = num.toString().split('').reverse().join('');\n\
    \    total += dig.replace(/[0-9]/g, '').length - 1;\n  }\n  return total;\n}",
  "\tvar n = 0, sum = 0;\n\tfor(var i = 0, l = arr.length; i < l; i++){\n\t\tvar num\
    \ = arr[i];\n\t\tif(num <= 0){\n\t\t\tif(num < 0){\n\t\t\t\tnum = -num;\n\t\t\t\
    }\n\t\t\tsum += Math.pow(10, num * 1);\n\t\t}else{\n\t\t\tsum += num;\n\t\t}\n\
    \t\tn += num;\n\t}\n\treturn n;\n}\n", "    var result = 0;\n    for (var i =\
    \ 0, len = arr.length; i < len; i++) {\n        if (arr[i] < 0) {\n          \
    \  arr[i] += 10;\n        }\n        if (arr[i] > 0) {\n            result +=\
    \ (arr[i] - 0);\n        }\n    }\n    return result;\n}\n\nvar max_count = count_nums(arr);",
  "\t\n\t//If there are no integers, return 0.\n\tif(arr.length==0)\n\t\treturn 0;\n\
    \t\t\n\t//Initialize result to 0.\n\tvar result=0;\n\t\n\t//Loop through all numbers,\
    \ and\n\tfor(i=0; i<arr.length; i++){\n\t\t\n\t\t//Add the number of integers\
    \ in arr to result while its sum of digits > 0\n\t\twhile((arr[i]>=0) && arr[i]!=0){\n\
    \t\t\tresult+=arr[i]%10;\n\t\t\tarr[i]/=10;\n\t\t}\n\t}\n\t\n\t//Return result\
    \ as a positive integer.\n\treturn result;\n}\n", "\tvar len = arr.length;\n\t\
    var count = 0;\n\tfor (var i = 0; i < len; i++)\n\t\tif(is_num(arr[i]))\n\t\t\t\
    count++;\n\treturn count;\n}\n", "    var sum = 0;\n    arr.forEach(function(num)\
    \ {\n        sum += num > 0 ? num % 10 : -num % 10;\n    });\n    return sum;\n\
    }\n", "  let res = 0\n  for (let i = 0; i < arr.length; i++) {\n    res += (arr[i]>0?1:-1)*Math.floor(Math.log10(Math.abs(arr[i])));\n\
    \  }\n  return res;\n}\n", "    if (arr.length === 0){\n        return 0\n   \
    \ }\n    var i, sum = 0\n    for (i = arr.length-1; i>=0; i--){\n        sum +=\
    \ arr[i]\n        if (sum >= 10){\n            sum = sum - 10\n            i++\n\
    \        }\n    }\n    return i\n}\n", "  let counter = 0;\n  for (let i = 0;\
    \ i < arr.length; i++){\n    let n = arr[i]\n    if (n >= 0)\n      counter +=\
    \ n\n    else\n      counter += Math.abs(n)\n  }\n  return counter\n}\n", "  \
    \  var ans = 0;\n    var negatives = arr.map(function(el){\n        var s = Math.abs(el);\n\
    \        if(s < 0){\n            ans += (s >= 0) * el;\n        }\n        return\
    \ s;\n    });\n    negatives.forEach(function(el){\n        if(el > 0){\n    \
    \        ans += el;\n        }\n    });\n    return ans;\n}\n", "\tvar sum = 0;\n\
    \tfor (var i = 0; i < arr.length; i++) {\n\t\tsum += check_num(arr[i]);\n\t}\n\
    \treturn sum;\n}\n", "  var count = 0;\n  for(var i = 0; i < arr.length; i++){\n\
    \    if(arr[i] > 0){\n      count++;\n    } else if(arr[i] < 0 && arr[i] >= -arr[i]){\n\
    \      count += arr[i];\n    }\n  }\n  return count;\n}\n", "\tlet count = 0\n\
    \tlet sum = 0\n\tlet negative = false\n\tfor(let i = 0; i < arr.length; i++){\n\
    \t\tsum += arr[i]\n\t\tif(sum < 0){\n\t\t\tnegative = true\n\t\t\tbreak\n\t\t\
    }\n\t}\n\tfor(let i = 0; i < arr.length; i++){\n\t\tsum += arr[i]\n\t\tif(!negative){\n\
    \t\t\tif(sum > 9){\n\t\t\t\tcount += sum - 10\n\t\t\t}else{\n\t\t\t\tcount +=\
    \ sum\n\t\t\t}\n\t\t}else{\n\t\t\tif(sum > 9){\n\t\t\t\tcount -= 9\n\t\t\t}else{\n\
    \t\t\t\tcount += sum\n\t\t\t}\n\t\t}\n\t}\n\treturn count\n}\n", "  let positiveSum\
    \ = 0;\n  let negativeSum = 0;\n  let zeroSum = 0;\n  arr.forEach((num) => {\n\
    \    if(num > 0){\n      positiveSum += num;\n    }else if(num < 0){\n      negativeSum\
    \ += num;\n    }else{\n      zeroSum += num;\n    }\n  });\n  return positiveSum\
    \ + negativeSum + zeroSum;\n}\n", "    var arr2=[],\n        sum=0;\n    for(var\
    \ i=0;i<arr.length;i++){\n        sum+=arr[i]*Math.pow(10,arr.length);\n     \
    \   arr2.push(sum);\n    }\n    return arr2.filter(function(n){return n!==0;});\n\
    }\n", "\tvar i=0;\n\tvar l=arr.length;\n\tvar nums=new Array(l);\n\tvar s=0;\n\
    \twhile(i<l){\n\t\ts=s-arr[i]*i;\n\t\tnums[i]=s;\n\t\ti+=1;\n\t}\n\treturn nums;\n\
    }\n", "  var result = 0;\n  for (var i = 0; i<arr.length; i++){\n    if (arr[i]<0)\n\
    \      arr[i] = -arr[i];\n    for (var j=1;j<10;j++){\n      if (arr[i]+j>=10)\n\
    \        result++;\n      if (arr[i]+j<0)\n        break;\n    }\n  }\n  return\
    \ result;\n}\n", "\tvar len = arr.length;\n\tif(len === 0)\n\t\treturn 0;\n\t\
    var nums = arr.map(function(val){\n\t\tif(val<0)\n\t\t\tval = Math.abs(val);\n\
    \t\treturn Math.abs(val);\n\t});\n\treturn nums.reduce(function(a,b){\n\t\treturn\
    \ a+b;\n\t},0);\n}\n", "    if(arr.length == 0) return 0;\n    var digits = arr[0]\
    \ < 0 ? [arr[0]] : [-arr[0]];\n    var sum = 0;\n    for(var i = 0; i < digits.length;\
    \ i++){\n        sum += digits[i];\n        if(sum > 9){\n            sum -= 9;\n\
    \            digits.push(sum);\n        }\n    }\n    return digits.length - 1;\n\
    }\n", "  var count = 0;\n  for (var i = 0, len = arr.length; i < len; i++){\n\
    \    count += arr[i] % 10;\n    count += Math.floor(arr[i] / 10);\n  }\n  return\
    \ count;\n}\n", "  var sum = 0;\n  for(var i=0; i<arr.length; i++){\n    sum +=\
    \ arr[i]*Math.pow(10, arr.length-1-i);\n  }\n  return sum;\n}\n", "    var count\
    \ = 0;\n    for(var i = 0; i < arr.length; i++){\n        if(arr[i] < 0){\n  \
    \          arr[i] = arr[i]*-1\n        }\n        for(var j = arr[i]; j >0; j--){\n\
    \            count += Math.pow(10, i)\n        }\n    }\n    return count\n}\n",
  "\tlet n = arr.length;\n\tlet cnt = 0;\n\tfor(let i=0; i<n; i++){\n\t\tlet digit\
    \ = arr[i]%10;\n\t\tcnt += digit>0? 1: digit;\n\t}\n\treturn cnt;\n}", "  return\
    \ arr.reduce(function(sum, num){\n    var n = Math.abs(num);\n    return (sum\
    \ + n)/num;\n  }, 0);\n}\n", "    return arr.filter(function(item){\n        return\
    \ item > 0;\n    }).reduce(function(prev, current){\n        return prev + Math.floor(Math.abs(current));\n\
    \    }, 0)\n}\n", "  if (arr.length == 0)\n    return 0;\n  var count = 0;\n \
    \ var n = arr[0];\n  for (var i = 1; i < arr.length; i++){\n    n = n + arr[i];\n\
    \    if (Math.abs(n) >= 10){\n      count = count + Math.floor(n / 10);\n    \
    \  n = n % 10;\n    }\n  }\n  return count;\n}\n", "    // Write your code here\n\
    \    arr = arr.filter(function(n){\n        return n >= 0;\n    });\n    return\
    \ arr.filter(function(n) {\n        let nums = count_digits(n);\n        return\
    \ nums > 0;\n    }).length;\n}\n", "  var res = 0\n  for (var i = 0, len = arr.length;\
    \ i < len; i++){\n    var num = arr[i]\n    if (num < 0)\n      num = -num\n \
    \   if (num > 0)\n      res = res + num\n  }\n  return res\n}\n", "  let n = 0;\n\
    \  while(arr.length > 0){\n    n = arr.shift();\n    let digits = n.toString().split('');\n\
    \    digits.forEach((d) => {\n      if(d > 0){\n        arr[0] = -d;\n      }\n\
    \    });\n    arr.unshift(0);\n  }\n  return n;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

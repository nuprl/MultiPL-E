name: HumanEval_124_valid_date
language: js
prompt: "//You have to write a function which validates a given date string and\n\
  // returns True if the date is valid otherwise False.\n// The date is valid if all\
  \ of the following rules are satisfied:\n// 1. The date string is not empty.\n//\
  \ 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
  \ And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
  \ And, the number of days is not less than 1 or higher than 29 for the month 2.\n\
  // 3. The months should not be less than 1 or higher than 12.\n// 4. The date should\
  \ be in the format: mm-dd-yyyy\n// for example: \n// valid_date('03-11-2000') =>\
  \ True\n// valid_date('15-01-2012') => False\n// valid_date('04-0-2040') => False\n\
  // valid_date('06-04-2020') => True\n// valid_date('06/04/2020') => False\nfunction\
  \ valid_date(date){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = valid_date;\n  assert.deepEqual(candidate(\"03-11-2000\"),true);\n  assert.deepEqual(candidate(\"\
  15-01-2012\"),false);\n  assert.deepEqual(candidate(\"04-0-2040\"),false);\n  assert.deepEqual(candidate(\"\
  06-04-2020\"),true);\n  assert.deepEqual(candidate(\"01-01-2007\"),true);\n  assert.deepEqual(candidate(\"\
  03-32-2011\"),false);\n  assert.deepEqual(candidate(\"\"),false);\n  assert.deepEqual(candidate(\"\
  04-31-3000\"),false);\n  assert.deepEqual(candidate(\"06-06-2005\"),true);\n  assert.deepEqual(candidate(\"\
  21-31-2000\"),false);\n  assert.deepEqual(candidate(\"04-12-2003\"),true);\n  assert.deepEqual(candidate(\"\
  04122003\"),false);\n  assert.deepEqual(candidate(\"20030412\"),false);\n  assert.deepEqual(candidate(\"\
  2003-04\"),false);\n  assert.deepEqual(candidate(\"2003-04-12\"),false);\n  assert.deepEqual(candidate(\"\
  04-2003\"),false);\n}\n\ntest();"
completions: ["\tvar mm = dd.getMonth() + 1;\n\tvar dd = dd.getDate();\n\tvar yyyy\
    \ = dd.getFullYear();\n\tvar year = yyyy.toString().substr(2,2);\n\tvar months\
    \ = dd.getMonth()+'';\n\tvar days = dd.getDate()+'';\n\tvar date = mm.toString()\
    \ + \"-\" + dd.toString() + \"-\" + year.toString();\n\tif((months.indexOf('m')\
    \ !== -1) && (months.indexOf('M') !== -1)){\n\t\tmonth = months.split('m');\n\t\
    \tmonth = month[1];\n\t} else {\n\t\tmonth = '01';\n\t}\n\tif((months.indexOf('M')\
    \ !== -1) && (months.indexOf('m') !== -1)){\n\t\tmonth = months.split('M');\n\t\
    \tmonth = month[1];\n\t} else {\n\t\tmonth = '01';\n\t}\n\tif((days.indexOf('d')\
    \ !== -1) && (days.indexOf('D') !== -1)){\n\t\tday = days.split('d');\n\t\tday\
    \ = day[1];\n\t} else {\n\t\tday = '01';\n\t}\n\tif((days.indexOf('D') !== -1)\
    \ && (days.indexOf('d') !== -1)){\n\t\tday = days.split('D');\n\t\tday = day[1];\n\
    \t} else {\n\t\tday = '01';\n\t}\n\tif((days.indexOf('m') !== -1) && (days.indexOf('d')\
    \ !== -1)){\n\t\tday = days.split('m');\n\t\tday = day[1];\n\t} else {\n\t\tday\
    \ = '01';\n\t}\n\tvar date = mm.toString() + \"-\" + dd.toString() + \"-\" + year.toString();\n\
    \tif(day === '01'){\n\t\talert('Please enter valid date.');\n\t\twindow.location.reload();\n\
    \t\treturn false;\n\t}\n\telse if(month !== '01' && month !== '02' && month !==\
    \ '03' && month !== '04' && month !== '05' && month !== '06' && month !== '07'\
    \ && month !== '08' && month !== '09' && month !== '10' && month !== '11' && month\
    \ !== '12'){\n\t\talert('Please enter valid date.');\n\t\twindow.location.reload();\n\
    \t\treturn false;\n\t}\n\telse if(day === '01' || day === '02' || day === '03'\
    \ || day === '04' || day === '05' || day === '06' || day === '07' || day === '08'\
    \ || day === '09' || day === '10' || day === '11' || day === '12'){\n\t\talert('Please\
    \ enter valid date.');\n\t\twindow.location.reload();\n\t\treturn false;\n\t}\n\
    \telse if(month !== '01' && month !== '02' && month !== '03' && month !== '04'\
    \ && month !== '05' && month !== '06' && month !== '07' && month !== '08' && month\
    \ !== '09' && month !== '10' && month !== '11", "    if (date.length == 0 || days_before_1st_day(date)\
    \ > 31 ||\n        months_before_12(date) > 31 || days_after_month(date) > 31\
    \ ||\n        months_after_12(date) > 12 || months_after_12(date) < 1 ||\n   \
    \     days_after_month(date) < 1 || days_after_month(date) > 30)\n    {\n    \
    \    return false;\n    }\n\n    date = date.split(\"-\");\n    if(date.length\
    \ != 3)\n    {\n        return false;\n    }\n    var days_str = date[2].replace(/^(.*)(0*)$/,\
    \ '$2');\n    var days = days_str.split(\"\").map(function(x){return x.charCodeAt(0)\
    \ - '0'.charCodeAt(0)});\n    if(days[0] > 31 || days[1] > 31 || days[2] > 31)\n\
    \    {\n        return false;\n    }\n\n    var date_str = date[1].replace(/^(.*)(0*)$/,\
    \ '$2');\n    var month = date_str.split(\"\").map(function(x){return x.charCodeAt(0)\
    \ - '0'.charCodeAt(0)});\n    if (month[0] > 12 || month[1] > 12)\n    {\n   \
    \     return false;\n    }\n\n    var year = date[0].replace(/^(.*)(0*)$/, '$2');\n\
    \    if(year.length != 4)\n    {\n        return false;\n    }\n\n    var re =\
    \ /^(0*)(1*)\\2(\\d{4})$/;\n    if(!(re.test(year) && re.test(month) && re.test(days_str)))\n\
    \    {\n        return false;\n    }\n\n    return true;\n}", "  var valid = false;\n\
    \  // Check if date is empty or not\n  if(date.length != 0){\n    // Split the\
    \ date string into month,date and year\n    var dateArray = date.split(\"-\");\n\
    \    // Check if number of days is between 1 and 31\n    if(dateArray.length !=\
    \ 3){\n      return false;\n    }\n    // Check if number of days is between 1\
    \ and 30\n    if(dateArray.length > 2 && (dateArray[2].length != 2 || parseInt(dateArray[2])\
    \ > 29)){\n      return false;\n    }\n    // Check if months is between 1 and\
    \ 12\n    if(dateArray.length > 1 && (dateArray[1].length != 2 || parseInt(dateArray[1])\
    \ > 12)){\n      return false;\n    }\n    // Check if year is in the proper format\n\
    \    if(dateArray.length > 1 && dateArray[1].length == 2 && dateArray[1].length\
    \ > 2){\n      var dateSplit = dateArray[1].split(\"-\");\n      if(dateSplit.length\
    \ == 3) {\n        var month = dateSplit[0].toLowerCase();\n        var day =\
    \ dateSplit[1];\n        var year = dateSplit[2];\n        var dateCheck = new\
    \ Date(year,month - 1,day);\n        if(!isNaN(dateCheck)){\n          valid =\
    \ true;\n        }\n      }\n    }\n  }\n  return valid;\n}\n", "    let year\
    \ = new Date(date).getFullYear();\n    let month = parseInt(date.split('-')[0],10)\
    \ - 1;\n    let day = parseInt(date.split('-')[1],10);\n\n    if(month < 1 ||\
    \ month > 12){\n        return false;\n    }\n    if(day < 1 || day > 31) {\n\
    \        return false;\n    }\n    if(month == 2){\n        if(day == 29){\n \
    \           return true;\n        }\n    }\n    return true;\n}\n", "\tvar valid\
    \ = false;\n\tvar date_array = new Date(date);\n\tif(date_array.getFullYear()!=0\
    \ && date_array.getMonth()!=0 && date_array.getDate()!=0) {\n\t\tvalid = true;\n\
    \t}\n\telse{\n\t\tconsole.log(\"Date is empty\");\n\t\tvalid = false;\n\t}\n\t\
    var date_bigger = date_array.getMonth()+1 >=12 ? date_array.getMonth()+1 : date_array.getMonth()+1;\n\
    \tvar month_array = [\"01\",\"03\",\"05\",\"07\",\"08\",\"10\",\"12\"];\n\tvar\
    \ days_array = [\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\"\
    ,\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"\
    ,\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\"\
    ];\n\tvar months_array = [\"01\",\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"\
    08\",\"09\",\"10\",\"11\",\"12\"];\n\tvar days_bigger = days_array[date_array.getMonth()];\n\
    \tvar days_smaller = days_array[date_array.getMonth()-1];\n\tvar days_array =\
    \ date_array.getDate();\n\tvar months_bigger = months_array[date_array.getMonth()];\n\
    \tvar months_smaller = months_array[date_array.getMonth()-1];\n\tvar months_array\
    \ = date_array.getMonth();\n\tvar month_bigger = months_array[date_array.getMonth()+1];\n\
    \tvar month_smaller = months_array[date_array.getMonth()-1];\n\tvar months_bigger_array\
    \ = months_array[date_array.getMonth()+1];\n\tvar months_smaller_array = months_array[date_array.getMonth()-1];\n\
    \tif(date_array.getFullYear()==0 && date_array.getMonth()==0 && date_array.getDate()==0){\n\
    \t\tconsole.log(\"Date is empty\");\n\t\tvalid = false;\n\t}\n\telse if(date_array.getFullYear()==0\
    \ && date_array.getMonth()==0 && date_array.getDate()==1){\n\t\tvalid = true;\n\
    \t}\n\telse if(date_array.getFullYear()==0 && date_array.getMonth()==0 && date_array.getDate()==2){\n\
    \t\tvalid = true;\n\t}\n\telse if(date_array.getFullYear()==0 && date_array.getMonth()==0\
    \ && date_array.getDate()==3){\n\t\tvalid = true;\n\t}\n\telse if(date_array.getFullYear()==0\
    \ && date_array.getMonth()==0 && date_array.getDate()==4){\n\t\tvalid = true;\n\
    \t}", "    //Write your code here.\n    var pattern = /^\\d{1,2}-\\d{1,2}-\\d{4}$/;\n\
    \    var res = pattern.test(date);\n    if (res !== true) {\n        return false;\n\
    \    } else {\n        if (\n            date.split('-').length !== 3 || \n  \
    \          date.split('/').length !== 3 || \n            date.split('-').join('/')\
    \ !== date || \n            date.split('/').join('/') !== date\n        ){\n \
    \           return false;\n        } else {\n            if (date.split('-')[0]\
    \ > 12 || date.split('-')[1] > 31 || date.split('-')[2] > 12) {\n            \
    \    return false;\n            } else {\n                if (date.split('-')[0]\
    \ < 1 || date.split('-')[1] < 1 || date.split('-')[2] < 1) {\n               \
    \     return false;\n                } else {\n                    if (date.split('-')[0]\
    \ > date.split('-')[1] || date.split('-')[2] > date.split('-')[1]) {\n       \
    \                 return false;\n                    } else {\n              \
    \          if (date.split('-')[0] < date.split('-')[2]) {\n                  \
    \          return false;\n                        }\n                    }\n \
    \               }\n            }\n        }\n    }\n}\n", "  if(date){\n    let\
    \ [mm,dd,yyyy] = date.split('-');\n    let daysInMonth = [31,30,29,31,30,31,30,31,30,31];\n\
    \    let daysInMonth2 = [28,31,30,31,30,31,30,31,30,31];\n    let daysInMonth3\
    \ = [31,30,31,30,31,30,31,30,31,30];\n    let months = [0,1,2,3,4,5,6,7,8,9,10,11];\n\
    \    let valid = true;\n    let days = 0;\n    let month = 0;\n    let year =\
    \ 0;\n    \n    if(!mm){\n      valid = false;\n    }\n    \n    if(!dd){\n  \
    \    valid = false;\n    }\n    \n    if(!yyyy){\n      valid = false;\n    }\n\
    \    \n    if(mm.length < 1 || mm.length > 2){\n      valid = false;\n    }\n\
    \    \n    if(dd.length < 1 || dd.length > 2){\n      valid = false;\n    }\n\
    \    \n    if(yyyy.length < 1 || yyyy.length > 4){\n      valid = false;\n   \
    \ }\n    \n    if(!valid){\n      return false;\n    }\n    \n    mm = mm[0] ===\
    \ '0' ? mm.slice(1) : mm;\n    dd = dd[0] === '0' ? dd.slice(1) : dd;\n    year\
    \ = parseInt(yyyy, 10);\n    month = parseInt(mm, 10);\n    days = parseInt(dd,\
    \ 10);\n    \n    if(!days || !month){\n      return false;\n    }\n    \n   \
    \ if(!daysInMonth[month]){\n      return false;\n    }\n    \n    for(let i =\
    \ 1; i <= daysInMonth[month]; i++){\n      if(months[i] === month){\n        if(!daysInMonth2[month]){\n\
    \          return false;\n        }\n        if(days < 1 || days > daysInMonth2[month]){\n\
    \          return false;\n        }\n      }\n      else if(months[i] > month){\n\
    \        if(!daysInMonth3[month]){\n          return false;\n        }\n     \
    \   if(days < 1 || days > daysInMonth3[month]){\n          return false;\n   \
    \     }\n      }\n    }\n    \n    if(!days){\n      return false;\n    }\n  \
    \  \n    return true;\n  }\n  \n  return false;\n}\n", "    date = date.trim();\n\
    \    if(!date){\n        return false;\n    }\n    var d = new Date(date.replace(/-/g,\"\
    /\"));\n    var m = [];\n    var valid = true;\n    var errMsg = \"\";\n    if(d.getMonth()>12){\n\
    \        valid = false;\n        errMsg = \"The month cannot exceed 12\";\n  \
    \  }\n    if(d.getDate()<1 || d.getDate()>30){\n        valid = false;\n     \
    \   errMsg = \"The days cannot exceed 1 and less than 30\";\n    }\n    if(d.getFullYear()<1900\
    \ || (d.getFullYear()>2050 && d.getFullYear()<2051)){\n        valid = false;\n\
    \        errMsg = \"The years can only be between 1900 and 2050.\";\n    }\n \
    \   if(!valid){\n        console.log(errMsg);\n        return false;\n    }\n\
    \    return true;\n}\n</code>\n<|/ a |>\n<| c |>\nYour code will work only with\
    \ the English locale and the date format you gave is `mm-dd-yyyy` but the code\
    \ should be able to handle other locales.\n<|/ c |>\n<| c |>\nYeah this code is\
    \ based on `mm-dd-yyyy` format. My code can handle all locales.\n<|/ c |>\n<|\
    \ c |>\nBut your solution will handle only `mm-dd-yyyy` format and also your method\
    \ will return false when the date string is not valid.\n<|/ c |>\n<| c |>\nI thought\
    \ that if the date format is correct and if the date is valid the function will\
    \ return true. But your method will return false if the date string is not valid.\
    \ I think this method is more appropriate for the OP. :)\n<|/ c |>\n<| c |>\n\
    Yes you are right. But my point is your code will accept the dates like `07-22-2016`,\
    \ `08-27-2000`. You can check it by running it in console before your post :).\n\
    <|/ c |>\n<| a tags=html,javascript,date |>\nUse this function,\n<code>", "  \
    \  \n    //write your code here\n    \n}\n</cell>\n<text>\nQuestions\n\n</text>\n\
    <text>\nQ1. Write a function called valid_date_range which accepts two dates as\
    \ parameters \nand returns a Boolean value. If the two dates are valid, then,\
    \ it returns \nTrue and prints the two dates. Otherwise, it returns False and\
    \ prints the \ndates that are invalid. Test your function as follows:\n\n\n</text>\n\
    <cell>\n# Write your function here\n</cell>\n<text>\nQ2. Write a function called\
    \ valid_dates_range which accepts two dates as parameters \nand returns a Boolean\
    \ value. If the two dates are valid, then, it returns \nTrue and prints the two\
    \ dates. Otherwise, it returns False and prints the \ndates that are invalid.\
    \ Test your function as follows:\n\n\n</text>\n<cell>\n# Write your function here\n\
    </cell>\n<text>\nQ3. Write a function called valid_date_range which accepts two\
    \ dates as parameters \nand returns a Boolean value. If the two dates are valid,\
    \ then, it returns \nTrue and prints the two dates. Otherwise, it returns False\
    \ and prints the \ndates that are invalid. Test your function as follows:\n\n\n\
    </text>\n<cell>\n# Write your function here\n</cell>\n<text>\nQ4. Write a function\
    \ called valid_date_range which accepts two dates as parameters \nand returns\
    \ a Boolean value. If the two dates are valid, then, it returns \nTrue and prints\
    \ the two dates. Otherwise, it returns False and prints the \ndates that are invalid.\
    \ Test your function as follows:\n\n\n</text>\n<cell>\n# Write your function here\n\
    </cell>\n<text>\nQ5. Write a function called valid_date_range which accepts two\
    \ dates as parameters \nand returns a Boolean value. If the two dates are valid,\
    \ then, it returns \nTrue and prints the two dates. Otherwise, it returns False\
    \ and prints the \ndates that are invalid. Test your function as follows:\n\n\n\
    </text>\n<cell>\n# Write your function here\n</cell>\n<text>\nQ6. Write a function\
    \ called valid_date_range which accepts two dates as parameters \nand returns\
    \ a Boolean value. If the two dates are valid, then, it returns \nTrue and prints\
    \ the two dates. Otherwise, it returns False and prints the \ndates that are invalid.\
    \ Test your function as follows:\n\n\n</text>\n<cell>\n# Write your function here\n\
    </cell>\n<text>\nQ7. Write a function called valid_date_range which accepts two\
    \ dates as parameters \nand returns a Boolean value. If the two dates are valid,\
    \ then, it returns \nTrue and prints the two dates. Otherwise, it returns False\
    \ and prints the \ndates that are invalid. Test your function as follows:\n\n\n\
    </text>\n<cell>\n# Write your function here\n</", "  if(date === null || date\
    \ === undefined) return false;\n  if(!(date === '') || !(date.length > 8)) return\
    \ false;\n  if(date.split('-').length === 3) return false;\n  var days_in_month\
    \ = { 1: 31, 3: 30, 5: 31, 7: 30, 8: 31, 10: 30, 12: 31 };\n  var days_in_month_str\
    \ = { 1: '31', 3: '30', 5: '31', 7: '30', 8: '31', 10: '30', 12: '31' };\n  var\
    \ days_in_year = { 4: 30, 6: 31, 9: 30, 11: 31 };\n  var days_in_year_str = {\
    \ 4: '30', 6: '31', 9: '30', 11: '31' };\n  date = new Date(date);\n  var month\
    \ = date.getMonth(), day = date.getDate();\n  month = (month < 0 || month > 11)\
    \ ? 0 : month;\n  day = (day < 1 || day > days_in_month[month]) ? 0 : day;\n \
    \ return (day === 0 && month === 11 && date.getFullYear() > 1900) ? true : false;\n\
    }\n", "  var dateParts = date.split(\"-\");\n  var validDate = false;\n  var validDates\
    \ = false;\n\n  if(dateParts.length > 1 && dateParts[1].length == 2){\n    validDates\
    \ = true;\n  }\n\n  if(!isNaN(dateParts[0])){\n    if(dateParts[0].length == 1){\n\
    \      validDates = true;\n    }\n  }\n\n  if(!isNaN(dateParts[1])){\n    if(dateParts[1].length\
    \ == 2){\n      validDates = true;\n    }\n  }\n\n  if(!isNaN(dateParts[2])){\n\
    \    if(dateParts[2].length == 4){\n      validDates = true;\n    }\n  }\n\n \
    \ if(validDates){\n    validDate = true;\n  }\n  return validDate;\n}\n", "  //\
    \ Your code here\n}\n</cell>\n<cell>\n#Practice what are the correct results of\
    \ this test case.\n# Run the test cases and see if your results are as expected.\n\
    # Hint: Refer to the unit test function provided in the next cells.\nvalid_date('15-01-2012')\n\
    </cell>\n<cell>\nvalid_date('04-0-2040')\n</cell>\n<cell>\nvalid_date('06-04-2020')\n\
    </cell>\n<cell>\nvalid_date('06/04/2020')\n</cell>\n<cell>\n#Write a unit test\
    \ case for this function.\n# Write a unit test case that tests your result with\
    \ your function.\n# Your code should be placed in a unit test function as shown\
    \ below:\ndef valid_date(date):\n  # Your code here\n  assert (valid_date('15-01-2012')\
    \ == True) \n  assert (valid_date('04-0-2040') == False)\n  assert (valid_date('06-04-2020')\
    \ == True) \n  assert (valid_date('06/04/2020') == False)\n  \n  \n  \nassert\
    \ valid_date('15-01-2012') == True\nassert valid_date('04-0-2040') == False\n\
    assert valid_date('06-04-2020') == True\nassert valid_date('06/04/2020') == False\n\
    </cell>\n<cell>\n#Practice what are the correct results of this test case.\n#\
    \ Run the test cases and see if your results are as expected.\n# Hint: Refer to\
    \ the unit test function provided in the next cells.\nassert valid_date('15-01-2012')\
    \ == True\nassert valid_date('04-0-2040') == False\nassert valid_date('06-04-2020')\
    \ == True\nassert valid_date('06/04/2020') == False\n</cell>\n<text>\n7. Implement\
    \ a function that checks if a year is a leap year\nImplement a function that checks\
    \ if a year is a leap year. Assume that the year is given as a number.\n\nExample\
    \ 1: \nInput: year=16\nOutput: True (Leap year)\n\nExample 2: \nInput: year=17\n\
    Output: False\n\nExample 3: \nInput: year=13\nOutput: False\n\n</text>\n<cell>\n\
    #Write a function that checks if a year is a leap year\n# Assume that the year\
    \ is given as a number\n\n# Your code here\n\n</cell>\n<cell>\nassert True ==\
    \ leapYear(16), \"Expected True, got False\"\nassert True == leapYear(17), \"\
    Expected False, got True", "  var re = /^[0-9]{2}-[0-9]{2}-[0-9]{4}$/g;\n  return\
    \ re.test(date);\n}", "    // write your code here\n    // return True if the\
    \ date is valid otherwise False.\n    if(date.length <= 0){\n        return false;\n\
    \    }\n    if(isNaN(date)){\n        return false;\n    }\n    var dateArray\
    \ = date.split(\"-\");\n    if(dateArray[0].length <= 0){\n        return false;\n\
    \    }\n    if(dateArray[1].length < 1 || dateArray[1] > 12){\n        return\
    \ false;\n    }\n    if(dateArray[2].length < 1 || dateArray[2] > 31){\n     \
    \   return false;\n    }\n    return true;\n}\n\nvar date = \"07-09-2000\";\n\
    var date2 = \"07/09/2000\";\nvar date3 = \"2000-09-07\";\nvar date4 = \"2040-06-06\"\
    ;\nvar date5 = \"2020-06-04\";\nvar date6 = \"2020/04/06\";\n", "    let regex\
    \ = /^(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[012])-\\d{4}$/;\n    return regex.test(date);\n\
    }\n", "    var date_array = date.split('-');\n    var days_in_month = new Array(31,28,31,30,31,30,31,31,30,31,30,31);\n\
    \    var days_in_year = new Array(365);\n    days_in_year[0]=days_in_month[0];\n\
    \    days_in_year[1]=days_in_month[1];\n    days_in_year[2]=days_in_month[2];\n\
    \    days_in_year[3]=days_in_month[3];\n    days_in_year[4]=days_in_month[4];\n\
    \    days_in_year[5]=days_in_month[5];\n    days_in_year[6]=days_in_month[6];\n\
    \    days_in_year[7]=days_in_month[7];\n    days_in_year[8]=days_in_month[8];\n\
    \    days_in_year[9]=days_in_month[9];\n    days_in_year[10]=days_in_month[10];\n\
    \    days_in_year[11]=days_in_month[11];\n    days_in_year[12]=days_in_month[12];\n\
    \    days_in_year[13]=days_in_month[13];\n    days_in_year[14]=days_in_month[14];\n\
    \    days_in_year[15]=days_in_month[15];\n    days_in_year[16]=days_in_month[16];\n\
    \    days_in_year[17]=days_in_month[17];\n    days_in_year[18]=days_in_month[18];\n\
    \    days_in_year[19]=days_in_month[19];\n    days_in_year[20]=days_in_month[20];\n\
    \    days_in_year[21]=days_in_month[21];\n    days_in_year[22]=days_in_month[22];\n\
    \    days_in_year[23]=days_in_month[23];\n    days_in_year[24]=days_in_month[24];\n\
    \    days_in_year[25]=days_in_month[25];\n    days_in_year[26]=days_in_month[26];\n\
    \    days_in_year[27]=days_in_month[27];\n    days_in_year[28]=days_in_month[28];\n\
    \    days_in_year[29]=days_in_month[29];\n    days_in_year[30]=days_in_month[30];\n\
    \    days_in_year[31]=days_in_month[31];\n    days_in_year[32]=days_in_month[32];\n\
    \    days_in_year[33]=days_in_month[33];\n    days_in_year[34]=days_in_month[34];\n\
    \    days_in_year[35]=days_in_month[35];\n    ", "    // Write your code here\n\
    \    var x = date.split(\"-\");\n    var y = x[0].split(\"/\");\n    var z = x[1].split(\"\
    /\");\n    if (y[1].length<1 || z[1].length<1 || z[1].length<1 || y[1].length<1\
    \ || y[1].length<3 || z[1].length<1 || z[1].length<1 || z[1].length<3 || y[1].length>12\
    \ || z[1].length>12 || z[1].length>12 || y[1].length>3 || z[1].length>3) return\
    \ false;\n    if (y[1]<1 || y[1]>12) return false;\n    if (z[1]<1 || z[1]>12)\
    \ return false;\n    if (y[0]>0 && y[0]<32) return false;\n    if (y[0]>0 && y[0]<31)\
    \ return false;\n    if (z[0]>0 && z[0]<32) return false;\n    if (z[0]>0 && z[0]<31)\
    \ return false;\n    if (x[2]>0 && x[2]<32) return false;\n    if (x[2]>0 && x[2]<31)\
    \ return false;\n    return true;\n}\n</code>\n<|/ a dscore=1 tags=validation,javascript,date\
    \ |>\n<| c |>\nThis works well for all the validation cases, however, it doesn't\
    \ cover all possibilities - e.g. invalid dates like 31/02/1988, 31/2/1988, 31/02/8888.\n\
    <|/ c |>\n<| c |>\nYes, that's why I suggested to write his own validator. :)\n\
    <|/ c |>\n<| c |>\nThanks again for the input but this doesn't work when there\
    \ are leap years i.e. 12/31/1988\n<|/ c |>\n<| c |>\nYes, that's why I suggested\
    \ to write his own validator. :)\n<|/ c |>\n<| c |>\nStill not covering the leap\
    \ year case. For example 31/2/1988 and 31/2/1988 should return true\n<|/ c |>\n\
    <| a dscore=1 |>\nThe accepted solution doesn't cover all possibilities, e.g.\n\
    <code>\n31/02/1988\n</code>\nand\n<code>\n31/2/1988\n</code>\nand\n<code>\n31/02/8888\n\
    </code>\nor\n<code>\n01/31/1988\n</code>\nand\n<code>\n01/31/1988\n</code>\nand\n\
    <code>\n01/31/8888\n</code>\nor\n<code>\n31/01/1988\n</code>\nand\n<code>\n31/01/1988\n\
    </code>\nand\n<code>\n31/01/8888\n</code>\nor\n<code>\n31/2/1988\n</code>\nand",
  "  if(!date) return false\n  date = date.split('-') //We split date into month and\
    \ day.\n  if(date.length !== 3) return false\n  if(date[0].length !== 2 || date[1].length\
    \ !== 2 || date[2].length !== 4) return false\n\n  var month = parseInt(date[0])\n\
    \  var day = parseInt(date[1])\n  var year = date[2]\n\n  if(month < 1 || month\
    \ > 12) return false\n  if(day < 1 || day > 31) return false\n  if(month == 2\
    \ && day > 29) return false\n\n  if(month == 4 || month == 6 || month == 9 ||\
    \ month == 11){\n    if(day > 30) return false\n  }\n\n  if(month == 2){\n   \
    \ if(day > 28) return false\n  }\n\n  if(month == 11){\n    if(day > 31) return\
    \ false\n  }\n\n  return true\n}\n", "    var day = date.split('-')[0];\n    var\
    \ month = date.split('-')[1];\n    var year = date.split('-')[2];\n    var valid\
    \ = true;\n\n    if(day.length < 1 || day.length > 3){\n        valid = false;\n\
    \    }\n\n    if(month.length < 1 || month.length > 12){\n        valid = false;\n\
    \    }\n\n    if(year.length < 1 || year.length > 4){\n        valid = false;\n\
    \    }\n\n    if(month[0] != 1 || month[1] != 3 || month[2] != 5 || month[3] !=\
    \ 7 || month[4] != 8 || month[5] != 10 || month[6] != 12 || month[0] != 4 || month[1]\
    \ != 6 || month[2] != 9 || month[3] != 11 || month[0] != 6 || month[1] != 9 ||\
    \ month[2] != 11){\n        valid = false;\n    }\n\n    return valid;\n}\n",
  "\t//Your code here\n\tlet valid_months = [1,2,3,4,5,6,7,8,9,10,11,12]\n\tlet valid_days\
    \ = [1,31,30,29,31,30,31,31,30,31,30,31]\n\tlet valid_years = [2000,2010,2014,2024,2028,2032,2036,2040,2044,2048,2052]\
    \ \n\tlet valid_months_length = valid_months.length\n\tlet valid_days_length =\
    \ valid_days.length\n\tlet valid_years_length = valid_years.length\n\t\n\tif (date.length\
    \ === 0){\n\t\treturn false\n\t}\n\tlet date_arr = date.split('-')\n\tlet date_year\
    \ = date_arr[2]\n\tlet date_month = date_arr[1]\n\tlet date_day = date_arr[0]\n\
    \tlet date_date_length = 3\n\tlet date_month_length = 12\n\tlet date_day_length\
    \ = 29\n\tlet date_year_length = valid_years_length\n\t\n\tlet date_date_length\
    \ = date_day.length\n\tlet date_month_length = date_month.length\n\tlet date_day_length\
    \ = date_day.length\n\tlet date_year_length = date_year.length\n\n\tlet date_date_valid_days\
    \ = valid_days.indexOf(date_day) >= 0\n\tlet date_month_valid_months = valid_months.indexOf(date_month)\
    \ >= 0\n\tlet date_day_valid_days = valid_days.indexOf(date_day) >= 0\n\tlet date_year_valid_years\
    \ = valid_years.indexOf(date_year) >= 0\n\tlet date_year_valid = (date_year.length\
    \ <= valid_years_length && date_year >= 0 && date_year_length > 0)\n\tlet date_month_valid\
    \ = (date_month.length <= valid_months_length && date_month >= 0 && date_month_length\
    \ > 0)\n\tlet date_day_valid = (date_day.length <= valid_days_length && date_day\
    \ >= 0 && date_day_length > 0)\n\t\n\tif (date_date_valid_days && date_month_valid_months\
    \ && date_day_valid_days && date_year_valid){\n\t\tlet days_in_month = Date.UTC(date_year,date_month)\
    \ - Date.UTC(2000,0)\n\t\tlet days_in_year = 365.24*days_in_month\n\t\tlet days_in_valid_year\
    \ = days_in_year - (date_year_length - 1)\n\t\t\n\t\tif (days_in_valid_year >\
    \ 0){\n\t\t\t//Valid\n\t\t\treturn true\n\t\t}else{\n\t\t\t//Invalid\n\t\t\treturn\
    \ false\n\t\t}\n\t}else{\n\t\t//Invalid\n\t\treturn false\n\t}\n}\n", "  // Write\
    \ your code here.\n  let dateObject = date.split('-');\n  dateObject[1] = parseInt(dateObject[1]);\n\
    \  dateObject[2] = parseInt(dateObject[2]);\n  dateObject[1] = dateObject[1] -\
    \ 1; //Javascript months are 0-based.\n  dateObject[2] = dateObject[2] - 1;\n\
    \  \n  if(dateObject[1] < 1 || dateObject[1] > 12){\n    return false;\n  }\n\
    \  if(dateObject[2] < 1 || dateObject[2] > 31){\n    return false;\n  }\n  if(dateObject[1]\
    \ < 1 || dateObject[1] > 12){\n    return false;\n  }\n  if(dateObject[2] < 1\
    \ || dateObject[2] > 29){\n    return false;\n  }\n  return true;\n}", "    if\
    \ (!date) return false;\n    // 1. date should not be empty\n    if (!date.length)\
    \ return false;\n    // 2. date should not be in the format of mm-dd-yyyy\n  \
    \  if (date.split('-').length != 3) return false;\n    // 3. number of days for\
    \ month 1-12 should not be greater than or equal to 31\n    if (date.split('-')[1].length\
    \ != 2) return false;\n    // 4. number of days for month 4-11 should not be greater\
    \ than or equal to 30\n    if (date.split('-')[2].length != 2) return false;\n\
    \    // 5. number of days for month 2 should not be greater than or equal to 29\n\
    \    if (date.split('-')[1].length > 2) return false;\n    // 6. month should\
    \ not be less than 1 or greater than 12\n    if (date.split('-')[1].length < 1\
    \ || date.split('-')[1] > 12) return false;\n    // 7. the date should be in the\
    \ format of mm-dd-yyyy\n    if (date.split('-')[0].length != 2) return false;\n\
    \    // 8. date should be in the format: mm-dd-yyyy\n    if (date.split('-')[0]\
    \ != '02') return false;\n    // 9. date should be in the format: dd-mm-yyyy\n\
    \    if (date.split('-')[1] != '02') return false;\n    // 10. date should be\
    \ in the format: dd-mm-yyyy\n    if (date.split('-')[2] != '02') return false;\n\
    \    // 11. date should be in the format: dd-mm-yyyy\n    if (date.split('-')[0]\
    \ > date.split('-')[1]) return true;\n    // 12. date should be in the format:\
    \ dd-mm-yyyy\n    if (date.split('-')[0] < date.split('-')[1]) return false;\n\
    }\n", "    \n    var dateParts = date.split('-');\n    var dateArray = dateParts.map(function(elem)\
    \ {\n        return parseInt(elem, 10);\n    });\n    \n    if( !dateArray[0]\
    \ || !dateArray[1] || !dateArray[2] ) {\n        return false;\n    }\n    \n\
    \    if( dateArray[2] > 12 ) {\n        return false;\n    }\n    \n    var daysRange\
    \ = [1, 31, 29, 30, 31];\n    if( dateArray[2] > 30 ) {\n        daysRange = [4,\
    \ 6, 9, 11];\n    }\n    if( dateArray[2] > 29 ) {\n        daysRange = [2];\n\
    \    }\n    if( daysRange.indexOf(dateArray[2]) === -1 ) {\n        return false;\n\
    \    }\n    \n    var monthRange = [1, 3, 5];\n    if( dateArray[1] > 12 ) {\n\
    \        monthRange = [4, 6, 9, 11];\n    }\n    if( monthRange.indexOf(dateArray[1])\
    \ === -1 ) {\n        return false;\n    }\n    \n    return true;\n}\n", "\t\
    if (date == '') return false;\n\tvar splitted_date = date.split('-');\n\tvar checked_date\
    \ = new Date(splitted_date[0],splitted_date[1]-1,splitted_date[2]);\n\treturn\
    \ (checked_date.getFullYear()==splitted_date[0]&&checked_date.getMonth()+1==splitted_date[1]&&checked_date.getDate()<=1)\n\
    \t\t&& (checked_date.getFullYear()==splitted_date[0]&&checked_date.getMonth()+1>=splitted_date[1]&&checked_date.getDate()<=31)\n\
    \t\t&& (checked_date.getFullYear()==splitted_date[0]&&checked_date.getMonth()+1==splitted_date[1]&&checked_date.getDate()<=30)\n\
    \t\t&& (checked_date.getFullYear()==splitted_date[0]&&checked_date.getMonth()+1>=splitted_date[1]&&checked_date.getDate()<=29)\n\
    \t\t&& (checked_date.getFullYear()>splitted_date[0]&&checked_date.getMonth()+1<=splitted_date[1]&&checked_date.getDate()<=31)\n\
    \t\t&& (checked_date.getFullYear()>splitted_date[0]&&checked_date.getMonth()+1<=splitted_date[1]&&checked_date.getDate()<=30)\n\
    \t\t&& (checked_date.getFullYear()>splitted_date[0]&&checked_date.getMonth()+1<=splitted_date[1]&&checked_date.getDate()<=29)\n\
    \t\t&& (checked_date.getFullYear()>splitted_date[0]&&checked_date.getMonth()+1<=splitted_date[1]&&checked_date.getDate()<=30)\n\
    \t\t&& (checked_date.getFullYear()>splitted_date[0]&&checked_date.getMonth()+1<=splitted_date[1]&&checked_date.getDate()<=31);\n\
    }", "  if(date.match(/^(\\d{4})\\-(0[1-9]|1[0-2])\\-(0[1-9]|[12][0-9]|3[01])/)\
    \ == null) return false;\n  if(date.length != 10) return false;\n  var today =\
    \ new Date();\n  var day = today.getDate();\n  var month = today.getMonth();\n\
    \  var year = today.getFullYear();\n  \n  var valid_months = [\"01\",\"03\",\"\
    05\",\"07\",\"08\",\"09\",\"10\",\"12\"];\n  var valid_days = [\"01\",\"02\",\"\
    03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\"];\n  var valid_years\
    \ = [\"2000\",\"2010\",\"2020\",\"2040\"];\n  \n  var d = new Date(date.replace(/-/g,\
    \ \"/\"));\n  var m = d.getMonth();\n  var y = d.getFullYear();\n  \n  if(m >\
    \ 12) return false;\n  if(y > 2020) return false;\n  if(m > valid_months.indexOf(date.getMonth()+1))\
    \ return false;\n  if(y > valid_years.indexOf(date)) return false;\n  \n  if(day\
    \ > valid_days.indexOf(date.getDate()+1)) return false;\n  return true;\n}\n",
  "    let dateObject = new Date(date);\n    let daysInMonth = [0,31,28,31,30,31,30,31,30,31,30,31];\n\
    \    let monthIncorrect;\n    let dateNotValid;\n    let dayTooLow;\n    let dayTooHigh;\n\
    \    let monthTooLow;\n    let monthTooHigh;\n    \n    //Checks date is not empty.\n\
    \    if(dateString.length <= 0){\n        dateNotValid = true;\n        console.log('Date\
    \ is empty.');\n    }\n    //Checks if the number of days is not less than 1 or\
    \ the number of days is not more than 31 days for months 1,3,5,7,8,10,12 and returns\
    \ True if all conditions above are true otherwise returns False.\n    else{\n\
    \        daysInMonth[parseInt(dateString.slice(1,2))-1];\n        dayTooHigh =\
    \ (daysInMonth[parseInt(dateString.slice(1,2))-1] > 30);\n        dayTooLow =\
    \ (daysInMonth[parseInt(dateString.slice(1,2))-1] < 1);\n        monthTooHigh\
    \ = (monthIncorrect[parseInt(dateString.slice(4,2))-1] > 12);\n        monthTooLow\
    \ = (monthIncorrect[parseInt(dateString.slice(4,2))-1] < 1);\n        if(dayTooHigh\
    \ || dayTooLow){\n            dateNotValid = true;\n            console.log('Date\
    \ is incorrect');\n        }\n        else if(monthTooHigh || monthTooLow){\n\
    \            dateNotValid = true;\n            console.log('Date is incorrect');\n\
    \        }\n        else{\n            dateNotValid = false;\n            console.log('Date\
    \ is correct');\n        }\n    }\n    return dateNotValid;\n}\n", "    var dateArray\
    \ = date.split('-');\n    if(dateArray.length != 3) return false; // Invalid date\
    \ format\n    var month = dateArray[0];\n    var day = dateArray[1];\n    var\
    \ year = dateArray[2];\n    if(month < 1 || month > 12) return false; // Invalid\
    \ month\n    var testDate = new Date(year, month, day);\n    if(!isNaN(testDate.getDate()))\
    \ return true; // Valid date\n    else return false;\n}\n", "  if(date.length===0){\n\
    \    return false;\n  }\n  var months = /^(1[012]|[2-9]|30|31|[12][0-9]|0[1-9])$/;\n\
    \  var days =   /^(0[1-9]|[12][0-9]|3[01])$/;\n  var years = /^((20[78]|19[7-9])|20)[0-9]{2}$/;\n\
    \  if(months.exec(date)==null){\n    return false;\n  }\n  if(days.exec(date)==null){\n\
    \    return false;\n  }\n  if(years.exec(date)==null){\n    return false;\n  }\n\
    \  return true;\n}\n", "\tif(!date) return false;\n\tdate = new Date(date);\n\t\
    if(!isNaN(date)){\n\t\t//valid date means it has a value and a valid number of\
    \ days\n\t\treturn ((date.valueOf() > 0) && \n\t\t\t((date.valueOf() < (new Date(date.getTime()\
    \ + 86400000)).valueOf()) || \n\t\t\t(date.valueOf() < (new Date(date.getTime()\
    \ + 2592000000)).valueOf()))&&\n\t\t\t((date.getMonth()+1) != 0 &&\n\t\t\t(date.getDate()\
    \ != 0 || date.getMonth() == (date.getMonth()+1))&&\n\t\t\t(date.getFullYear()\
    \ != 0) && \n\t\t\t(date.getMonth() <= 12 && date.getMonth() >= 1 &&\n\t\t\t(date.getDate()\
    \ > 0 && date.getDate() <= (new Date(date.getTime() + 86400000)).getDate()))));\n\
    \t}\n\treturn false;\n}\n", "    var pattern = /^([12]\\d{3}|0?[1-9])-(0?[1-9]|1[012])-\\\
    d{4}$/;\n    if(!pattern.test(date)){\n        return false;\n    }\n    var day\
    \ = date.split('-')[2];\n    var month = date.split('-')[1];\n    var year = date.split('-')[0];\n\
    \    if (day === '31') {\n        if (month === '12' || month === '01') {\n  \
    \          if (year >= '2000' && year < '2040') {\n                return true;\n\
    \            }\n        }\n    }\n    else if (day === '30') {\n        if (month\
    \ === '1' || month === '4' || month === '6' || month === '9' || month === '11')\
    \ {\n            if (year >= '2030' && year < '2050') {\n                return\
    \ true;\n            }\n        }\n    }\n    else if (day === '29') {\n     \
    \   if (month === '2') {\n            if (year >= '2030' && year < '2050') {\n\
    \                return true;\n            }\n        }\n    }\n    return false;\n\
    }\n", "    date = date.replace(/-/g,'/');\n    date = date.split('/');\n    if(date.length\
    \ === 3 && date[0] !== '' && date[2] !== '') {\n        // Date is in the proper\
    \ format\n        if(date[2] < 1 || date[2] > 12){\n            return false;\n\
    \        }\n        else if(date[0] < 1 || date[0] > 12){\n            return\
    \ false;\n        }\n        else if(date[1] < 1 || date[1] > 31){\n         \
    \   return false;\n        }\n        else if(date[1] === 2 && date[2] > 29){\n\
    \            return false;\n        }\n        return true;\n    } else {\n  \
    \      return false;\n    }\n}\n", "    var splitted_date= date.split(\"-\");\n\
    \    if (splitted_date.length!=3){\n        return false;\n    }\n    var month=\
    \ splitted_date[0];\n    var day= splitted_date[1];\n    var year= splitted_date[2];\n\
    \    if (month==\"\"){\n        return false;\n    }\n    if (month<1 || month>12){\n\
    \        return false;\n    }\n    if (day<1 || day>31){\n        return false;\n\
    \    }\n    if (month<1 || month>12){\n        return false;\n    }\n    if (year==\"\
    \"){\n        return false;\n    }\n    if (year<1 || year>99){\n        return\
    \ false;\n    }\n    return true;\n}", "  var valid_day= true;\n  var valid_month=\
    \ true;\n  var valid_year= true;\n  var dateObj= new Date();\n  var dateSplit\
    \ = date.split('-');\n  dateObj.setFullYear(dateSplit[2], dateSplit[1]-1, dateSplit[0]);\n\
    \  var daysInMonth= new Date(dateObj).setDate(0);\n  if(dateSplit[1] < 1 || dateSplit[1]\
    \ > 12){\n    valid_day= false;\n  }\n  if(dateSplit[2] < 1 || dateSplit[2] >\
    \ 31) {\n    valid_month= false;\n  }\n  if(daysInMonth.getDay() != dateSplit[0]){\n\
    \    valid_day= false;\n  }\n  if(dateSplit[0] < 1 || dateSplit[0] > 31) {\n \
    \   valid_year= false;\n  }\n  if(dateSplit[1] < 1 || dateSplit[1] > 12) {\n \
    \   valid_month= false;\n  }\n  if(dateSplit[0] < 1 || dateSplit[0] > 30) {\n\
    \    valid_year= false;\n  }\n  if(dateSplit[0] < 1 || dateSplit[0] > 29) {\n\
    \    valid_month= false;\n  }\n  return valid_day&&valid_month&&valid_year;\n\
    }\n", "  var dateRegex = /(^(0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[-\
    \ /.](19|20)\\d\\d$)|(^(0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])[- /.](19|20)\\\
    d\\d$)|(^(0?[1-9]|1[012])[- /.](0?[1-9]|[12][0-9]|3[01])$)|(^(0?[1-9]|1[012])[-\
    \ /.](0?[1-9]|[12][0-9])$)/;\n  return dateRegex.test(date);\n}\n", "    // Your\
    \ code here!\n}", "    let result = false;\n    if (!date || date.length === 0)\
    \ return result;\n    //Split date into three parts, each delimited by a dash\n\
    \    const splitDate = date.split('-');\n    if (splitDate.length === 3 && splitDate.length\
    \ === 2 && splitDate[1].length === 4) {\n        // Months cannot have values\
    \ less than 1 or higher than 12\n        if (splitDate[0].length < 1 || splitDate[0].length\
    \ > 12) return result;\n        // Days cannot have values less than 1 or higher\
    \ than 31\n        if (splitDate[1].length < 1 || splitDate[1].length > 31) return\
    \ result;\n        // Year cannot have values less than 1 or higher than 1000\n\
    \        if (splitDate[2].length < 1 || splitDate[2].length > 1000) return result;\n\
    \        //Check if each of the months is valid\n        if (splitDate[0].length\
    \ === 2) {\n            if (splitDate[0].includes(\"01\") || splitDate[0].includes(\"\
    02\") || splitDate[0].includes(\"03\") || splitDate[0].includes(\"04\") || splitDate[0].includes(\"\
    05\") || splitDate[0].includes(\"06\") || splitDate[0].includes(\"07\") || splitDate[0].includes(\"\
    08\") || splitDate[0].includes(\"09\") || splitDate[0].includes(\"10\") || splitDate[0].includes(\"\
    11\") || splitDate[0].includes(\"12\")) return result;\n        } else if (splitDate[0].length\
    \ === 3) {\n            if (splitDate[0].includes(\"01\") || splitDate[0].includes(\"\
    02\") || splitDate[0].includes(\"03\")) return result;\n        } else if (splitDate[0].length\
    \ === 4) {\n            if (splitDate[0].includes(\"01\") || splitDate[0].includes(\"\
    02\") || splitDate[0].includes(\"03\") || splitDate[0].includes(\"04\")) return\
    \ result;\n        } else if (splitDate[0].length === 5) {\n            if (splitDate[0].includes(\"\
    01\") || splitDate[0].includes(\"02\") || splitDate[0].includes(\"03\") || splitDate[0].includes(\"\
    04\") || splitDate[0].includes(\"05\")) return result;\n        } else if (splitDate[0].length\
    \ === 6) {\n            if (splitDate[0].includes(\"01\") || splitDate[0].includes(\"\
    02\") || splitDate[0].includes(\"03\") || splitDate[0].includes(\"04\") || splitDate[0].includes(\"\
    05\") || splitDate[0].includes(\"06\")) return result;\n        } else if (splitDate[0].length\
    \ === 7) {\n            if (splitDate[0].includes(\"01\") || splitDate[0].includes(\"\
    02\") || splitDate[0].includes(\"03\") || splitDate[0].includes(\"04\") || splitDate[0].includes(\"\
    05\") || splitDate[0].includes(\"06\") || splitDate[0].includes(\"07\")) return\
    \ result;\n        } else if (splitDate[0].length === 8) {\n            if (splitDate",
  "  date = date.trim();\n  var days_arr = date.split('-');\n  var months_arr = days_arr[0].split('/');\n\
    \  var days_arr2 = days_arr[1].split('/');\n  \n  if(days_arr.length == 2 && days_arr.length\
    \ == 3){\n    if (parseInt(days_arr[0]) < 1 || parseInt(days_arr[0]) > 31 ||\n\
    \      parseInt(days_arr[1]) < 1 || parseInt(days_arr[1]) > 30 ||\n      parseInt(days_arr[2])\
    \ < 1 || parseInt(days_arr[2]) > 29){\n      return false;\n    }\n  }else if(days_arr.length\
    \ == 4 && days_arr.length == 6){\n    if (parseInt(days_arr[0]) < 1 || parseInt(days_arr[0])\
    \ > 31 ||\n      parseInt(days_arr[1]) < 1 || parseInt(days_arr[1]) > 30 ||\n\
    \      parseInt(days_arr[2]) < 1 || parseInt(days_arr[2]) > 29 ||\n      parseInt(days_arr[3])\
    \ < 1 || parseInt(days_arr[3]) > 31 ||\n      parseInt(days_arr[4]) < 1 || parseInt(days_arr[4])\
    \ > 30 ||\n      parseInt(days_arr[5]) < 1 || parseInt(days_arr[5]) > 29){\n \
    \     return false;\n    }\n  }else{\n    return false;\n  }\n\n  if (months_arr.length\
    \ == 1 || months_arr.length == 3 || months_arr.length == 5 || months_arr.length\
    \ == 7 || months_arr.length == 8 || months_arr.length == 10 || months_arr.length\
    \ == 12){\n    if (parseInt(months_arr[0]) < 1 || parseInt(months_arr[0]) > 12\
    \ ||\n      parseInt(months_arr[1]) < 1 || parseInt(months_arr[1]) > 12){\n  \
    \    return false;\n    }\n  }else if(months_arr.length == 4 || months_arr.length\
    \ == 6 || months_arr.length == 9 || months_arr.length == 11){\n    if (parseInt(months_arr[0])\
    \ < 1 || parseInt(months_arr[0]) > 12 ||\n      parseInt(months_arr[1]) < 1 ||\
    \ parseInt(months_arr[1]) > 12 ||\n      parseInt(months_arr[2]) < 1 || parseInt(months_arr[2])\
    \ > 12){\n      return false;\n    }\n  }else{\n    return false;\n  }\n  \n \
    \ if (days_arr2[1] < 10){\n    days_arr2[1] = '0'+days_arr2[1];\n  }\n  \n  var\
    \ months = months_arr.join('-');\n  \n  var result = months == date ? \"True\"\
    \ : \"False\";\n  \n  return result;\n}\n", "    // Write code here\n    if(date\
    \ && date.length !== 0 && date.split('-').length == 3){\n        let [m, d, y]\
    \ = date.split('-');\n        let is_leap_year = y % 4 === 0 && y % 100 !== 0\
    \ || y % 400 === 0;\n\n        if(!is_leap_year){\n            return true;\n\
    \        }\n\n        if(m <= 1 || m >= 12){\n            return false;\n    \
    \    }\n\n        if(d <= 1 || d >= 31 || (d > 31 && m > 2)){\n            return\
    \ false;\n        }\n\n        let months = [0,1,2,3,4,5,6,7,8,9,10,11,12];\n\
    \        return months.indexOf(m === month);\n    }\n    return false;\n}\n",
  "    \n    //Write your code here\n    \n    //Validate the given date string is\
    \ not empty or not null\n    if(!date || date === '' || typeof date === 'undefined'){\n\
    \        return false;\n    }\n    \n    //Validate the number of days is not\
    \ less than 1 and not more than 31 days for months 1-12\n    //And the number\
    \ of days is not less than 1 and not more than 30 days for months 4-12 \n    //And\
    \ the number of days is not less than 1 and not more than 29 for months 2\n  \
    \  //And months are not less than 1 and not more than 12\n    if(!/^\\d{1,2}$/.test(date)\
    \ || date.split('-').length < 3 || date.split('-').length > 3){\n        return\
    \ false;\n    }\n    \n    //Validate the months are not less than 1 and not more\
    \ than 12\n    if(!/^(1[0-2]|[1-9])$/.test(date) || date.split('-').length > 2){\n\
    \        return false;\n    }\n    \n    //Validate the date should be in the\
    \ format: mm-dd-yyyy\n    if(!/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/.test(date)){\n\
    \        return false;\n    }\n    \n    return true;\n}\n", "  var valid = true;\n\
    \  if(date == null || date == \"\"){\n    valid = false;\n  }\n  var split_date\
    \ = date.split(\"-\");\n  if(split_date.length != 3){\n    valid = false;\n  }\n\
    \  if(split_date[1] < 1 || split_date[1] > 12){\n    valid = false;\n  }\n  if(split_date[2]\
    \ < 1 || split_date[2] > 31){\n    valid = false;\n  }\n  if(split_date[1] ==\
    \ 2 && split_date[2] > 29){\n    valid = false;\n  }\n  if(split_date[1] == 2\
    \ && split_date[2] == 29 && split_date[0] < 1 || split_date[1] == 2 && split_date[2]\
    \ < 1 || split_date[1] == 2 && split_date[2] == 0 && split_date[0] < 1 || split_date[1]\
    \ == 2 && split_date[2] > 0 && split_date[0] < 1 || split_date[1] == 2 && split_date[2]\
    \ > 29){\n    valid = false;\n  }\n  return valid;\n}\n", "\t\n\tconst today =\
    \ new Date();\n\tconst date = date.toString();\n\t\n\tconst mm = date.split('-')[0];\
    \ //month\n\tconst dd = date.split('-')[1]; //day\n\tconst yyyy = date.split('-')[2];\
    \ //year\n\n\t// check conditions 1 and 2\n\tif(date === \"\" || mm === \"\" ||\
    \ dd === \"\" || yyyy === \"\"){\n\t\treturn false\n\t}\n\t\n\tif(!isInteger(mm)\
    \ || !isInteger(dd) || !isInteger(yyyy)){\n\t\treturn false\n\t}\n\t\n\t// check\
    \ condition 3\n\tif(mm < 1 || mm > 12){\n\t\treturn false\n\t}\n\t\n\tif(dd <\
    \ 1 || dd>31){\n\t\treturn false\n\t}\n\t\n\tif(yyyy < 1 || yyy>30){\n\t\treturn\
    \ false\n\t}\n\t\n\tlet currentYear = today.getFullYear();\n\tif(mm === 1){\n\t\
    \tcurrentYear--\n\t}\n\tif(dd === 1){\n\t\tcurrentYear--\n\t}\n\tif(yyyy === currentYear){\n\
    \t\treturn true\n\t}\n\treturn false\n}\n", "    if(date==null || date==\"\")\n\
    \        return false;\n    var day = date.split(\"-\");\n    for(var i = 0; i\
    \ < day.length; i++){\n        if(day[i]==null || day[i]==\"\")\n            return\
    \ false;\n        if(day[i]<1 || day[i]>31)\n            return false;\n     \
    \   if(day[i]<1 || day[i]>30)\n            return false;\n        if(day[i]<1\
    \ || day[i]>29)\n            return false;\n        if(day[i]<1 || day[i]>28)\n\
    \            return false;\n        if(day[i]<1 || day[i]>31)\n            return\
    \ false;\n        if(day[i]<1 || day[i]>30)\n            return false;\n     \
    \   if(day[i]<1 || day[i]>29)\n            return false;\n        if(day[i]<1\
    \ || day[i]>28)\n            return false;\n    }\n    if(day[1]<1 || day[1]>12)\n\
    \        return false;\n    if(day[2]<1 || day[2]>31)\n        return false;\n\
    \    if(day[2]<1 || day[2]>30)\n        return false;\n    if(day[2]<1 || day[2]>29)\n\
    \        return false;\n    if(day[2]<1 || day[2]>28)\n        return false;\n\
    \    if(day[2]<1 || day[2]>31)\n        return false;\n    if(day[2]<1 || day[2]>30)\n\
    \        return false;\n    if(day[2]<1 || day[2]>29)\n        return false;\n\
    \    if(day[2]<1 || day[2]>28)\n        return false;\n    return true;\n}\n</code>\n\
    <|/ a tags=javascript,validation |>\n<| c |>\nThis is so weird... I did exactly\
    \ the same thing, then I went to edit it and it just went away, even though I\
    \ didn't touch anything. I'll try it out and let you know if it works.\n<|/ c\
    \ |>\n<| c |>\nHey, thanks for getting back to me. I'm having trouble getting\
    \ this to run. Is there something I need to do special to load up this function?\
    \ I'm getting an unexpected identifier...\n<|/ c |>\n<| c |>\nI figured it out.\
    \ I just had to create a function before I ran this code. Thanks again for your\
    \ help.\n<|/ c |>\n<| c |>\nThe function should be in the global scope. Make sure\
    \ that it is accessible from where you want to use it. You can either write it\
    \ above or below the function.\n<|/ c |>\n<| c |>\nYeah, sorry, I forgot to include\
    \ a closing `}` before the `</script>`. Thanks again!\n<|/ c |>\n<| a |>\nThis\
    \ should do the trick, let me know if you have any questions or errors. Cheers!\n\
    <code>", "    var dateArray = date.split(\"-\");\n    if(dateArray[0].length >\
    \ 0 && dateArray[1].length > 0 && dateArray[1].length == 2 && dateArray[1].length\
    \ == 4 && dateArray[1].length == 4){\n        if(dateArray[2] >= 1 && dateArray[2]\
    \ <= 31 && dateArray[1] >= 1 && dateArray[1] <= 12 && dateArray[1] >= 1 && dateArray[2]\
    \ >= 1 && dateArray[2] <= 31 && dateArray[0] >= 1 && dateArray[0] <= 12 && dateArray[0]\
    \ >= 1 && dateArray[0] <= 31 && dateArray[1] < 12 && dateArray[1] > 0){\n    \
    \        return true;\n        }\n        else if(dateArray[2] >= 1 && dateArray[2]\
    \ <= 30 && dateArray[1] >= 1 && dateArray[1] <= 12 && dateArray[1] >= 1 && dateArray[2]\
    \ >= 1 && dateArray[2] <= 30 && dateArray[0] >= 1 && dateArray[0] <= 12 && dateArray[0]\
    \ >= 1 && dateArray[0] <= 30 && dateArray[1] < 12 && dateArray[1] > 0){\n    \
    \        return true;\n        }\n        else if(dateArray[2] >= 1 && dateArray[2]\
    \ <= 29 && dateArray[1] >= 1 && dateArray[1] <= 12 && dateArray[1] >= 1 && dateArray[2]\
    \ >= 1 && dateArray[2] <= 29 && dateArray[0] >= 1 && dateArray[0] <= 12 && dateArray[0]\
    \ >= 1 && dateArray[0] <= 29 && dateArray[1] < 12 && dateArray[1] > 0){\n    \
    \        return true;\n        }\n        else if(dateArray[2] >= 1 && dateArray[2]\
    \ <= 29 && dateArray[1] >= 1 && dateArray[1] <= 12 && dateArray[1] >= 1 && dateArray[2]\
    \ >= 1 && dateArray[2] <= 29 && dateArray[0] >= 1 && dateArray[0] <= 12 && dateArray[0]\
    \ >= 1 && dateArray[0] <= 29 && dateArray[1] < 12 && dateArray[1] > 0){\n    \
    \        return true;\n        }\n        else if(dateArray[2] >= 1 && dateArray[2]\
    \ <= 29 && dateArray[1] >= 1 && dateArray[1] <= 12 && dateArray[1] >= 1 && dateArray[2]\
    \ >= 1 && dateArray[2] <= 29 && dateArray[0] >= 1 && dateArray[0] <= 12 && dateArray[0]\
    \ >= 1 && dateArray[0] <= 29 && dateArray[1] < 12 && dateArray[1] > 0){\n    \
    \        return true;\n        }\n        else if(dateArray[2] >= 1 && dateArray[2]\
    \ <= 29 && dateArray[1] >= 1 && dateArray[1] <= 12 && dateArray[1] >= 1 && dateArray[2]\
    \ >= 1 && dateArray[2] <= 29 && dateArray[0] >= 1 && dateArray[0] <= 12 && dateArray[0]\
    \ >= 1 && dateArray[0] <= 29 && dateArray[1] < 12 && dateArray[1] > 0)", "   \
    \ if(date == null || date == ''){\n        return false;\n    }\n    // The date\
    \ string is not empty.\n    if(date.trim() == ''){\n        return false;\n  \
    \  }\n    // The number of days is not less than 1 or higher than 31 days for\
    \ months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n    // The months should not be less than\
    \ 1 or higher than 12.\n    if(isNaN(parseInt(date.split('-')[1]))){\n       \
    \ return false;\n    }\n    // The date should be in the format: mm-dd-yyyy\n\
    \    if(date.split('-')[0] != 'mm'){\n        return false;\n    }\n    var splitDate\
    \ = date.split('-');\n    var mm = splitDate[0].substring(0,2);\n    var dd =\
    \ splitDate[1].substring(0,2);\n    var yyyy = splitDate[2].substring(0,4);\n\
    \    // The date should not be less than or equal to: 02/01/2000\n    if(mm !=\
    \ '02' && mm != '01'){\n        return false;\n    }\n    // The date should not\
    \ be less than or equal to: 01/01/2000\n    if(dd != '01' && dd != '01'){\n  \
    \      return false;\n    }\n    // The date should be in the format: mm-dd-yyyy\n\
    \    if(date.split('-').length > 3){\n        return false;\n    }\n    if(yyyy\
    \ != '2000'){\n        return false;\n    }\n    return true;\n}", "    if(!date\
    \ || date == '' ){\n        return false;\n    }\n    let dateArray = date.split('-');\n\
    \    if (dateArray.length != 3) {\n        return false;\n    }\n    // 1. date\
    \ is not empty.\n    if (dateArray[0] && dateArray[1] && dateArray[2]) {\n   \
    \     return true;\n    }\n    // 2. days are not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n    let monthsArray = dateArray[2].split('-');\n\
    \    if (monthsArray.length < 1 || monthsArray.length > 12) {\n        return\
    \ false;\n    }\n    // 3. The months should not be less than 1 or higher than\
    \ 12.\n    for (let i=0; i < monthsArray.length; i++){\n        if (monthsArray[i]\
    \ < 1 || monthsArray[i] > 12) {\n            return false;\n        }\n    }\n\
    \    // 4. The date should be in the format: mm-dd-yyyy\n    let monthArray =\
    \ dateArray[0].split('-');\n    if (monthArray.length != 3 || monthArray[0] <\
    \ 1 || monthArray[1] < 1 || monthArray[2] < 1) {\n        return false;\n    }\n\
    \    // 5. Dates shouldn't be in future dates.\n    let dateObj = new Date(dateArray[2]);\n\
    \    if (dateObj.getTime() < (new Date()).getTime()) {\n        return false;\n\
    \    }\n    // 6. Date should be valid.\n    return true;\n}\n\nlet date = '02-01-2020';",
  "    var day  = date.getDate();\n    var month = date.getMonth();\n    var year\
    \  = date.getFullYear();\n    \n    if(!(day>1 && day<31)){\n        return false;\n\
    \    }\n    if(month<1 || month>12){\n        return false;\n    }\n    if(month==2\
    \ && day>29){\n        return false;\n    }\n    if(month==1 && day>30){\n   \
    \     return false;\n    }\n    if(month==3 && day>31){\n        return false;\n\
    \    }\n    if(month==4 && day>30){\n        return false;\n    }\n    if(month==5\
    \ && day>31){\n        return false;\n    }\n    if(month==6 && day>30){\n   \
    \     return false;\n    }\n    if(month==7 && day>31){\n        return false;\n\
    \    }\n    if(month==8 && day>31){\n        return false;\n    }\n    if(month==9\
    \ && day>30){\n        return false;\n    }\n    if(month==10 && day>31){\n  \
    \      return false;\n    }\n    if(month==11 && day>30){\n        return false;\n\
    \    }\n    return true;\n}\nvar valid_date_str = '03-11-2000';\nvalid_date_str\
    \ = valid_date_str.split('-');\nif(valid_date_str.length != 3 || valid_date_str[1]<1\
    \ || valid_date_str[1]>12 || valid_date_str[2]<1 || valid_date_str[2]>12){\n \
    \   alert(valid_date_str);\n}else{\n    alert(valid_date(valid_date_str));\n}\n\
    </code>\n<|/ a tags=javascript,validation,date dscore=0 |>\n<| a |>\n<code>",
  "    if (date == '' || date == undefined)\n        return false\n\n    //split the\
    \ date string to get the month, day and year\n    var dateArray = date.split(\"\
    -\")\n    month = dateArray[0]\n    day = dateArray[1]\n    year = dateArray[2]\n\
    \n    //validate month\n    if(!is_num(month))\n        return false\n\n    //validate\
    \ day\n    if(!is_num(day) || day < 1 || day > 31)\n        return false\n\n \
    \   //validate year\n    if(!is_num(year) || year < 1900 || year > 2099)\n   \
    \     return false\n\n    //validate month\n    if(month > 0 && month < 13)\n\
    \        return true\n\n    //validate day\n    if(day > 0 && day <= 31)\n   \
    \     return true\n\n    if(month == 2)\n        if(day > 0 && day <= 29)\n  \
    \          return true\n\n    return false\n}\n", "  if(!date || date===\"\")\
    \ return false\n  \n  \n  let date_arr = date.split('-');\n  let day = Number(date_arr[2]);\n\
    \  let month = Number(date_arr[1]);\n  let year = Number(date_arr[0]);\n\n  //\
    \ 1. the date string is not empty.\n  if(!day || !month || !year) return false\n\
    \n  // 2. the date string has exactly 2 digits for month and 2 digits for day.\n\
    \  if(month < 1 || month > 12) return false\n  if(day < 1 || day > 31) return\
    \ false\n\n  // 3. the months should not be less than 1 or higher than 12.\n \
    \ if(month < 1 || month > 12) return false\n\n  // 4. The date should be in the\
    \ format: mm-dd-yyyy\n  if(month == 1|| month == 3 || month == 5 || month == 7\
    \ || month == 8 || month == 10 || month == 12){\n    if(day != 1) return false\n\
    \  }else if(month == 4 || month == 6 || month == 9 || month == 11){\n    if(day\
    \ != 31 && day != 30) return false\n  }else{\n    if(day != 1 && day != 30 ) return\
    \ false\n  }\n\n  return true;\n}\n", "  // Write your code here\n  let dateRegex\
    \ = /^(0?[1-9]|[12][0-9]|3[01])\\-(0?[1-9]|1[012])\\-\\d{4}$/;\n  if(date != ''\
    \ && date.match(dateRegex)){\n    let daysInMonth = new Date(date).getDate();\n\
    \    if (daysInMonth < 1 || daysInMonth > 31){\n      return false;\n    }\n \
    \   let daysInMonth = new Date(date).getDate();\n    if (daysInMonth < 1 || daysInMonth\
    \ > 30){\n      return false;\n    }\n    let daysInMonth = new Date(date).getDate();\n\
    \    if (daysInMonth < 1 || daysInMonth > 29){\n      return false;\n    }\n \
    \   let dateArray = date.split('-');\n    if (dateArray.length != 3){\n      return\
    \ false;\n    }\n    let dayArray = dateArray[2].split('-');\n    if (dayArray.length\
    \ != 3){\n      return false;\n    }\n    let month = dateArray[0];\n    if (month\
    \ < 1 || month > 12){\n      return false;\n    }\n    let day = dateArray[1];\n\
    \    if (day < 1 || day > daysInMonth){\n      return false;\n    }\n    return\
    \ true;\n  }\n  return false;\n}", "    let today = new Date();\n    let todayMonth\
    \ = today.getMonth()+1;\n    let todayDay = today.getDate();\n    let todayYear\
    \ = today.getFullYear();\n    todayMonth = todayMonth < 10?`0${todayMonth}`:todayMonth;\n\
    \    todayDay = todayDay < 10?`0${todayDay}`:todayDay;\n    let dateSplit = date.split('-');\n\
    \    let dateSplitValidation = `${dateSplit[0]}-${dateSplit[1]}-${dateSplit[2]}`;\n\
    \    let todaySplit = todayYear.split('-');\n    let todaySplitValidation = `${todaySplit[0]}-${todaySplit[1]}-${todaySplit[2]}`;\n\
    \    console.log(dateSplitValidation);\n    console.log(todaySplitValidation);\n\
    \    if(dateSplitValidation.length == todaySplitValidation.length){\n        console.log(dateSplitValidation,\
    \ todaySplitValidation);\n        let splittedDate = new Date(dateSplitValidation);\n\
    \        let todaySplittedDate = new Date(todaySplitValidation);\n        let\
    \ diffDays = splittedDate.getTime() - todaySplittedDate.getTime();\n        console.log(diffDays);\n\
    \        if(diffDays > 0){\n            return true;\n        } else {\n     \
    \       return false;\n        }\n    } else {\n        return false;\n    }\n\
    }", "  if (date==null || date==\"\"){return false;}\n  var day=parseInt(date.substring(0,2),10);\n\
    \  var month=parseInt(date.substring(3,5),10);\n  var year=parseInt(date.substring(6,10),10);\n\
    \n  if(month<1 || month>12){return false;}\n  if(day<1 || day>31 || (month==2\
    \ && day>29)){return false;}\n  if(month==2 && day>29){return false;}\n\n  var\
    \ daysInMonth=[31,30,31,30,31,30,31,30,31,30];\n  if(month==1 || month==3 || month==5\
    \ || month==7 || month==8 || month==10 || month==12){\n    daysInMonth[1] = 29;\n\
    \  }\n  if(month==4 || month==6 || month==9 || month==11){\n    daysInMonth[1]\
    \ = 31;\n  }\n  \n  var yearCount=new Date(year,0,0).getDate();\n  var leapYearCount=(year%400==0)\
    \ || (year%4==0 && year%100!=0);\n  \n  if(month==2){\n    return ((day>daysInMonth[month-1])\
    \ || (day==daysInMonth[month-1] && yearCount<daysInMonth[month-1]));\n  }\n  if(month==4\
    \ || month==6 || month==9 || month==11){\n    return ((day>daysInMonth[month-1])\
    \ || (day==daysInMonth[month-1] && yearCount<daysInMonth[month-1]) || (yearCount==daysInMonth[month-1]\
    \ && leapYearCount));\n  }\n  if(month==1 && day>daysInMonth[month]){\n    return\
    \ day>daysInMonth[month];\n  }\n  return true;\n}\n", "    if(date === '') return\
    \ false;\n    else if(!isNaN(date)) {\n        var d = new Date(date);\n     \
    \   if(d.getFullYear() < 1 || d.getFullYear() > 31) return false;\n        if(d.getMonth()\
    \ < 1 || d.getMonth() > 12) return false;\n        if(d.getDate() < 1 || d.getDate()\
    \ > 29) return false;\n    }\n    else return false;\n    return true;\n}\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=date,validation,javascript dscore=0 |>\n<code>",
  "\tif(date.length != 0){\n\t\tif(date.length < 1 || date.length > 31 || ((date.length\
    \ - 1) < 1 || date.length - 1 > 29) && (date.length != 8 && date.length != 10\
    \ && date.length != 12)){\n\t\t\treturn False;\n\t\t}\n\t\tif(date != null &&\
    \ date.match(/\\d/) != null && (date.length != 8 && date.length != 10 && date.length\
    \ != 12)){\n\t\t\treturn False;\n\t\t}\n\t\telse{\n\t\t\tif((date.length != 8\
    \ && date.length != 10 && date.length != 12) && date.length != (date.length -\
    \ 1)){\n\t\t\t\treturn False;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(date.match(/-/)\
    \ == null){\n\t\t\t\t\treturn False;\n\t\t\t\t}\n\t\t\t\telse if(date.match(/\\\
    //) == null){\n\t\t\t\t\treturn False;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tif(date.match(/-/)\
    \ != null && date.match(/\\//) != null){\n\t\t\t\t\t\treturn False;\n\t\t\t\t\t\
    }\n\t\t\t\t\telse{\n\t\t\t\t\t\tif((date.match(/-/) != null && date.match(/\\\
    //) == null)){\n\t\t\t\t\t\t\treturn False;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\
    \t\t\t\t\t\t\tif((date.match(/-/) == null && date.match(/\\//) != null)){\n\t\t\
    \t\t\t\t\t\treturn False;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\
    \tif(date.match(/\\//) == null && date.match(/-/) != null){\n\t\t\t\t\t\t\t\t\t\
    return False;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tif((date.match(/\\\
    //) == null && date.match(/-/) == null)){\n\t\t\t\t\t\t\t\t\t\treturn False;\n\
    \t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\tif(date.match(/\\\
    //) != null && date.match(/-/) != null && date.match(/\\d/) == null){\n\t\t\t\t\
    \                            return False;\n\t\t\t\t                        }\n\
    \t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\tif(date.match(/\\//) != null\
    \ && date.match(/-/) != null && date.match(/\\d/) != null){\n\t\t\t\t\t\t\t\t\t\
    \t\t\treturn False;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse{\n\t\t\
    \t\t\t\t\t\t\t\t\t\treturn True;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\
    }\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\
    \t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse{\n\t\treturn False;\n\t}\n}\n",
  "  let dateArray = date.split('-');\n  let [months,days,years] = dateArray;\n  let\
    \ monthArray = ['01','03','05','07','08','10','12'];\n  let dayArray = ['01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31'];\n\
    \  let monthCheck = monthArray.includes(months);\n  let dayCheck = dayArray.includes(days);\n\
    \  let yearCheck = years == 2014;\n  \n  if(months == 0 && days == 0){\n    return\
    \ false;\n  }\n  else if(months == 0 && days == '31'){\n    return false;\n  }\n\
    \  else if(months == 0 && days == '30'){\n    return false;\n  }\n  else if(months\
    \ == 0 && days == '29'){\n    return false;\n  }\n  else if(months == 0 && days\
    \ == '28'){\n    return false;\n  }\n  else if(months == 0 && days == '27'){\n\
    \    return false;\n  }\n  else if(months == 0 && days == '26'){\n    return false;\n\
    \  }\n  else if(months == 0 && days == '25'){\n    return false;\n  }\n  else\
    \ if(months == 0 && days == '24'){\n    return false;\n  }\n  else if(months ==\
    \ 0 && days == '23'){\n    return false;\n  }\n  else if(months == 0 && days ==\
    \ '22'){\n    return false;\n  }\n  else if(months == 0 && days == '21'){\n  \
    \  return false;\n  }\n  else if(months == 0 && days == '20'){\n    return false;\n\
    \  }\n  else if(months == 0 && days == '19'){\n    return false;\n  }\n  else\
    \ if(months == 0 && days == '18'){\n    return false;\n  }\n  else if(months ==\
    \ 0 && days == '17'){\n    return false;\n  }\n  else if(months == 0 && days ==\
    \ '16'){\n    return false;\n  }\n  else if(months == 0 && days == '15'){\n  \
    \  return false;\n  }\n  else if(months == 0 && days == '14'){\n    return false;\n\
    \  }\n  else if(months == 0 && days == '13'){\n    return false;\n  }\n  else\
    \ if(months == 0 && days == '12'){\n    return false;\n  }\n  else if(months ==\
    \ 0 && days == '11'){\n    return false;\n  }\n  else if(months == 0 && days ==\
    \ '10'){\n    return false;\n  }\n  else if(months == 0 && days == '09'){\n  \
    \  return false;\n  }\n  else if(months == 0 && days == '08'){\n    return false;\n\
    \  }\n  ", "\tvar arr = date.split('-');\n\tvar dateArray = date.split('-');\n\
    \t\n\tfor(var i=0; i < arr.length; i++){\n\t\tif((isNaN(arr[i]) || arr[i] == \"\
    \") ){\n\t\t\treturn false;\n\t\t}\n\t\t\n\t\tif((i%3 == 1 || i%3 == 5) && (i%5\
    \ == 0 || i%5 == 4)){\n\t\t\tif(i%3 == 2){\n\t\t\t\tif(arr[i] < 1 || arr[i] >\
    \ 29){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(arr[i]\
    \ < 1 || arr[i] > 30){\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\
    \telse if((i%3 == 2 || i%3 == 6) && (i%5 == 0 || i%5 == 4)){\n\t\t\tif(arr[i]\
    \ < 1 || arr[i] > 31) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\
    \tif(arr[i] < 1 || arr[i] > 12) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\
    \t\n\tfor(var i=0; i < dateArray.length; i++){\n\t\tif(dateArray[i] < 1 || dateArray[i]\
    \ > 31) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tfor(var i=0; i < arr.length;\
    \ i++){\n\t\tif((i%3 == 1 || i%3 == 5) && (i%5 == 0 || i%5 == 4)){\n\t\t\tif(i%3\
    \ == 2){\n\t\t\t\tif(arr[i] < 1 || arr[i] > 29){\n\t\t\t\t\treturn false;\n\t\t\
    \t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tif(arr[i] < 1 || arr[i] > 30){\n\t\t\t\t\t\
    return false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if((i%3 == 2 || i%3 == 6) &&\
    \ (i%5 == 0 || i%5 == 4)){\n\t\t\tif(arr[i] < 1 || arr[i] > 31) {\n\t\t\t\treturn\
    \ false;\n\t\t\t}\n\t\t}\n\t\telse{\n\t\t\tif(arr[i] < 1 || arr[i] > 12) {\n\t\
    \t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\t\n\treturn true;\n}\n", "  // Write\
    \ your code here\n}\n", "\tlet dateSplit = date.split('-');\n\tif(dateSplit.length\
    \ < 2){\n\t\treturn false;\n\t}\n\tif(dateSplit[1] == '00' || dateSplit[1] ==\
    \ '12'){\n\t\treturn false;\n\t}\n\tlet day = dateSplit[0];\n\tlet month = dateSplit[1].slice(0,\
    \ 2);\n\tlet year = dateSplit[2];\n\n\tlet daysInMonth = [31, 28, 31, 30, 31,\
    \ 30, 31, 31, 30, 31, 30, 31];\n\tlet monthsInMonth = [0, 31, 59, 90, 120, 151,\
    \ 181, 212, 243, 273, 304, 334];\n\n\tif(month == 2 && day > 28){\n\t\treturn\
    \ false;\n\t}\n\tif((month < 0 || month > 12) || day < 1 || day > daysInMonth[month\
    \ - 1] || day == 29 || day == 30){\n\t\treturn false;\n\t}\n\tif(month == 2 &&\
    \ day == 29){\n\t\treturn true;\n\t}\n\tif(month == 2 && day == 30){\n\t\treturn\
    \ false;\n\t}\n\tif(month > 0 && month < 13 && day > 0 && day <= monthsInMonth[month\
    \ - 1]){\n\t\treturn true;\n\t}\n\treturn false;\n}\n", "  if(date == '') return\
    \ false;\n  var days = date.split('-');\n  var days_len = days.length;\n  if(days_len\
    \ < 1 || days_len > 31) return false;\n  if(days_len == 2 && days[0] > 12) return\
    \ false;\n  if(days_len == 3 && days[0] > 31 && (days[1] > 31 || days[1] == 29)\
    \ && days[0] > 31) return false;\n  if(days_len == 4 && days[0] > 31 && (days[1]\
    \ > 31 || days[1] == 29) && (days[2] > 31 || days[2] == 29) && days[0] > 31) return\
    \ false;\n  if(days_len == 5 && days[0] > 31 && (days[1] > 31 || days[1] == 29)\
    \ && (days[2] > 31 || days[2] == 29) && (days[3] > 31 || days[3] == 29) && days[0]\
    \ > 31) return false;\n  if(days_len == 6 && days[0] > 31 && (days[1] > 31 ||\
    \ days[1] == 29) && (days[2] > 31 || days[2] == 29) && (days[3] > 31 || days[3]\
    \ == 29) && (days[4] > 31 || days[4] == 29) && days[0] > 31) return false;\n \
    \ if(days_len == 7 && days[0] > 31 && (days[1] > 31 || days[1] == 29) && (days[2]\
    \ > 31 || days[2] == 29) && (days[3] > 31 || days[3] == 29) && (days[4] > 31 ||\
    \ days[4] == 29) && (days[5] > 31 || days[5] == 29) && days[0] > 31) return false;\n\
    \  if(days_len == 8 && days[0] > 31 && (days[1] > 31 || days[1] == 29) && (days[2]\
    \ > 31 || days[2] == 29) && (days[3] > 31 || days[3] == 29) && (days[4] > 31 ||\
    \ days[4] == 29) && (days[5] > 31 || days[5] == 29) && (days[6] > 31 || days[6]\
    \ == 29) && days[0] > 31) return false;\n  if(days_len == 9 && days[0] > 31 &&\
    \ (days[1] > 31 || days[1] == 29) && (days[2] > 31 || days[2] == 29) && (days[3]\
    \ > 31 || days[3] == 29) && (days[4] > 31 || days[4] == 29) && (days[5] > 31 ||\
    \ days[5] == 29) && (days[6] > 31 || days[6] == 29) && (days[7] > 31 || days[7]\
    \ == 29) && days[0] > 31) return false;\n  if(days_len == 10 && days[0] > 31 &&\
    \ (days[1] > 31 || days[1] == 29) && (days[2] > 31 || days[2] == 29", "    if(date.length\
    \ == 0){\n        return false;\n    }\n\n    var day = date.split('-')[0];\n\
    \    var month = date.split('-')[1];\n    var year = date.split('-')[2];\n\n \
    \   var mm = parseInt(month);\n    var dd = parseInt(day);\n    var yy = parseInt(year);\n\
    \n    var maxday = 31;\n    if(month > 12){\n        maxday = 30;\n    }else if(month\
    \ == 1 && day > 1){\n        maxday = 31;\n    }else if(month == 1 && day == 1\
    \ && month > 12){\n        maxday = 30;\n    }else if(month == 12 && day > 1){\n\
    \        maxday = 30;\n    }else if(month == 12 && day == 1 && month > 12){\n\
    \        maxday = 31;\n    }else if(month == 12 && day > 1){\n        maxday =\
    \ 30;\n    }\n\n    if(mm < 1 || mm > 12){\n        return false;\n    }\n   \
    \ if(mm == 1 && dd < 1 || dd > maxday){\n        return false;\n    }\n    if(mm\
    \ == 1 && dd > maxday){\n        return false;\n    }\n    if(yy < 1000 || yy\
    \ > 3000){\n        return false;\n    }\n\n    return true;\n}\n", "    let regex=/^(0?[1-9]|[12][0-9]|3[01])-(0?[1-9]|1[012])-([12][0-9]{3}|[1-9][0-9]{3})$/;\n\
    \    if(date){\n        if(!date.match(regex)) return false;\n        let day=date.split(\"\
    -\")[2];\n        let month=date.split(\"-\")[1];\n        let year=date.split(\"\
    -\")[3];\n        let daysInMonth=new Date(year,parseInt(month)-1,0).getDate();\n\
    \        if(day<1 || day>31 || (month==1 && day<31) || (month==2 && day<29) ||\
    \ (month==3 && day<31) || (month==4 && day<30) || (month==5 && day<31) || (month==6\
    \ && day<30) || (month==7 && day<31) || (month==8 && day<31) || (month==9 && day<31)\
    \ || (month==10 && day<30) || (month==11 && day<31) || (month==12 && day<30)){\n\
    \            return false;\n        }\n        if(month<1 || month>12){\n    \
    \        return false;\n        }\n        if(!year) return true;\n        let\
    \ daysInMonth=new Date(year,parseInt(month)-1,0).getDate();\n        if(daysInMonth<1\
    \ || daysInMonth>31){\n            return false;\n        }\n        return true;\n\
    \    }\n    return false;\n}\n", "\tif (date != '' && date.length != 0){\n\t\t\
    let dateArray = date.split('-');\n\t\tif(dateArray.length ==3){\n\t\t\tif (dateArray[2]\
    \ != ''){\n\t\t\t\tlet monthInt = parseInt(dateArray[0], 10);\n\t\t\t\tlet dayInt\
    \ = parseInt(dateArray[1], 10);\n\t\t\t\tlet yearInt = parseInt(dateArray[2],\
    \ 10);\n\n\t\t\t\tlet validMonth = checkMonth(monthInt);\n\t\t\t\tlet validDay\
    \ = checkDay(dayInt);\n\t\t\t\tlet validYear = checkYear(yearInt);\n\t\t\t\tif\
    \ (validMonth && validDay && validYear){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\
    \t\t}\n\t\t}\n\t}\n\treturn false;\n}\n", "    // TODO: Write a validation function\n\
    \    var valid_date = true;\n    \n    // TODO: write the test cases for this\
    \ function.\n    return valid_date;\n}\n", "    date = date.split('-');\n    if(date.length!=3)\n\
    \        return false;\n    var date = date[2].split('-');\n    if(date.length!=3)\n\
    \        return false;\n    var d = new Date(date[0], date[1], date[2]);\n   \
    \ return d.getFullYear()>=1900 \n        && d.getMonth()>=0 \n        && d.getDate()>=1\n\
    \        && d.getDay()>=1;\n}\n", "\tvar regex = /^([0-9]{4})(-([0-9]{2})(-([0-9]{2})(T([0-9]{2}):([0-9]{2})(:([0-9]{2})(\\\
    .([0-9]+))?)?(Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?$/;\n\treturn regex.test(date);\n\
    }", "    //Your code goes here\n  \n}\n", "  if(date == null || date == undefined\
    \ || date == '' || date == 'undefined' || date == 'null') return false;\n\n  let\
    \ pattern = /((0?[1-9]|1[012])[- \\/.](0?[1-9]|[12][0-9]|3[01])[- \\/.]\\d{4})/;\n\
    \  let result = pattern.test(date);\n  if(result == false) return false;\n  \n\
    \  let d = new Date(date);\n  let daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31,\
    \ 30, 31, 30, 31]; \n  let daysInMonth_2 = [30, 31, 32, 33, 34, 35, 36, 37, 38,\
    \ 39, 40];\n  let days_in_month = d.getDate();\n  let days_in_month_2 = d.getDate();\n\
    \  let month = d.getMonth(); \n  let year = d.getFullYear();\n  \n  if(days_in_month\
    \ < 1 || days_in_month > daysInMonth[month-1]) return false;\n  \n  if(days_in_month_2\
    \ < 1 || days_in_month_2 > daysInMonth_2[month-1]) return false;\n\n  if(month\
    \ < 1 || month > 12) return false;\n  \n  if(year < 1900 || year > 2020) return\
    \ false;\n\n  return true;\n}\n\n", "    let m = date.substring(0,2);\n    let\
    \ d = date.substring(3,5);\n    let y = date.substring(6,10);\n\n    if((m!='00'\
    \ && m!='30' && m!='31' && m!='32' && m!='34' && m!='35' && m!='01' && m!='02'\
    \ && m!='03' && m!='04' && m!='05' && m!='06' && m!='07' && m!='08' && m!='09'\
    \ && m!='10' && m!='11' && m!='12') || (d!='01' && d!='02' && d!='03' && d!='04'\
    \ && d!='05' && d!='06' && d!='07' && d!='08' && d!='09' && d!='10' && d!='11'\
    \ && d!='12') || (y!='1970' && y!='1980' && y!='1985' && y!='1986' && y!='1987'\
    \ && y!='1988' && y!='1989' && y!='1990' && y!='1991' && y!='1992' && y!='1993'\
    \ && y!='1994' && y!='1995' && y!='1996' && y!='1997' && y!='1998' && y!='1999'\
    \ && y!='2000' && y!='2001' && y!='2002' && y!='2003' && y!='2004' && y!='2005'\
    \ && y!='2006' && y!='2007' && y!='2008' && y!='2009' && y!='2010' && y!='2011'\
    \ && y!='2012' && y!='2013') || (date.substring(6,7)!='-' && date.substring(6,7)!='/'))\
    \ return false;\n    if(m.length==1){\n        if(d!='01' && d!='02' && d!='03'\
    \ && d!='04' && d!='05' && d!='06' && d!='07' && d!='08' && d!='09' && d!='10'\
    \ && d!='11' && d!='12') return false;\n    }else{\n        if(d!='01' && d!='02'\
    \ && d!='03' && d!='04' && d!='05' && d!='06' && d!='07' && d!='08' && d!='09'\
    \ && d!='10' && d!='11' && d!='12') return false;\n        if(m.length==2){\n\
    \            if(", "    console.log('valid_date(' + date + ')');\n    if (!date)\
    \ {\n        return false;\n    }\n    var dateArray = date.split('-');\n    if\
    \ (dateArray.length == 3){\n        var monthArray = dateArray[0].split('');\n\
    \        var dayArray = dateArray[1].split('');\n        var year = dateArray[2];\n\
    \    }\n    if (dateArray.length == 2){\n        var monthArray = dateArray[0].split('');\n\
    \        var dayArray = dateArray[1].split('');\n        var year = dateArray[0];\n\
    \    }\n    if (monthArray.length == 1){\n        var monthArray = dateArray[0].split('');\n\
    \        var dayArray = dateArray[1].split('');\n        var year = dateArray[0];\n\
    \    }\n    if (monthArray.length == 3){\n        var monthArray = dateArray[0].split('');\n\
    \        var dayArray = dateArray[1].split('');\n        var year = dateArray[2];\n\
    \    }\n    if (monthArray.length == 4){\n        var monthArray = dateArray[0].split('');\n\
    \        var dayArray = dateArray[1].split('');\n        var year = dateArray[2];\n\
    \    }\n    if (monthArray.length == 2){\n        var monthArray = dateArray[0].split('');\n\
    \        var dayArray = dateArray[1].split('');\n        var year = dateArray[0];\n\
    \    }\n    if (dayArray.length == 1){\n        var monthArray = dateArray[0].split('');\n\
    \        var dayArray = dateArray[1].split('');\n        var year = dateArray[0];\n\
    \    }\n    if (dayArray.length == 2){\n        var monthArray = dateArray[0].split('');\n\
    \        var dayArray = dateArray[1].split('');\n        var year = dateArray[0];\n\
    \    }\n    if (dayArray.length == 3){\n        var monthArray = dateArray[0].split('');\n\
    \        var dayArray = dateArray[1].split('');\n        var year = dateArray[2];\n\
    \    }\n    if (dayArray.length == 4){\n        var monthArray = dateArray[0].split('');\n\
    \        var dayArray = dateArray[1].split('');\n        var year = dateArray[2];\n\
    \    }\n    if (dayArray.length == 5){\n        var monthArray = dateArray[0].split('');\n\
    \        var dayArray = dateArray[1].split('');\n        var year = dateArray[2];\n\
    \    }\n    if (monthArray.length == 1 && dayArray.length == 1){\n        var\
    \ monthArray = dateArray[0].split('');\n        var dayArray = dateArray[1].split('');\n\
    \        var year = dateArray[0];\n    }\n    if (monthArray.length == 2 && dayArray.length\
    \ == 2){\n        var monthArray = dateArray[0].split('');\n        var dayArray\
    \ = dateArray[1].split('');\n        var year = dateArray[0];\n    }\n    if (monthArray.length\
    \ == 3 && dayArray.length", "    if(!date || date.length == 0) return false;\n\
    \    \n    const daysInFebruary = 29;\n\n    const dateParts = date.split(\"-\"\
    );\n\n    const monthNumber = parseInt(dateParts[1], 10);\n    const year = parseInt(dateParts[2],\
    \ 10);\n    const day = parseInt(dateParts[0], 10);\n    \n    if(isNaN(year)\
    \ || isNaN(monthNumber) || isNaN(day)) return false;\n    \n    if(monthNumber\
    \ < 1 || monthNumber > 12) return false;\n    if(day < 1 || day > daysInFebruary\
    \ && monthNumber > 2) return false;\n    \n    const monthDaysArray = getMonthDaysArray(year,\
    \ monthNumber);\n    \n    if(day > monthDaysArray.length) return false; \n  \
    \  \n    for(let i = 1; i <= monthDaysArray.length; i++){\n        if(day == monthDaysArray[monthDaysArray.length\
    \ - i]) return true; \n    }\n    \n    return false;\n}\n", "\tvar pattern =\
    \ /^\\d{1,2}-(\\d{1,2})-(\\d{4})$/;\n\treturn pattern.test(date);\n}\n", "  var\
    \ result = /^\\d{1,2}-\\d{1,2}-\\d{4}$/.test(date);\n  return result;\n}\n", " \
    \ if(date.length == 0){\n    return false;\n  }\n  if(date < '01-01-1900'){\n\
    \    return false;\n  }\n  if(date > '12-31-1900'){\n    return false;\n  }\n\
    \  if(date.split('-')[0] != '00' && date.split('-')[1] != '00' && date.split('-')[2]\
    \ != '00'){\n    return false;\n  }\n  if(date.split('-')[0] != '00' && date.split('-')[1]\
    \ == '00' && date.split('-')[2] != '00'){\n    return false;\n  }\n  if(date.split('-')[0]\
    \ == '00' && date.split('-')[1] != '00' && date.split('-')[2] != '00'){\n    return\
    \ false;\n  }\n  if(date.split('-')[0] == '00' && date.split('-')[1] == '00' &&\
    \ date.split('-')[2] != '00'){\n    return false;\n  }\n  if(date.split('-')[0]\
    \ != '00' && date.split('-')[1] != '00' && date.split('-')[2] == '00'){\n    return\
    \ false;\n  }\n  if(date.split('-')[0] == '00' && date.split('-')[1] != '00' &&\
    \ date.split('-')[2] != '00'){\n    return false;\n  }\n  if(date.split('-')[0]\
    \ == '00' && date.split('-')[1] == '00' && date.split('-')[2] != '00'){\n    return\
    \ false;\n  }\n  if(date.split('-')[0] != '00' && date.split('-')[1] != '00' &&\
    \ date.split('-')[2] != '00' && date.split('-')[3].split('-')[0] != '00' && date.split('-')[3].split('-')[1]\
    \ != '00' && date.split('-')[3].split('-')[2] != '00'){\n    return false;\n \
    \ }\n  if(date.split('-')[0] != '00' && date.split('-')[1] != '00' && date.split('-')[2]\
    \ != '00' && date.split('-')[3].split('-')[0] == '00' && date.split('-')[3].split('-')[1]\
    \ != '00' && date.split('-')[3].split('-')[2] != '00'){\n    return false;\n \
    \ }\n  if(date.split('-')[0] != '00' && date.split('-')[1] != '00' && date.split('-')[2]\
    \ != '00' && date.split('-')[3].split('-')[0] == '00' && date.split('-')[3].split('-')[1]\
    \ == '00' && date.split('-')[3].split('-')[2] != '00'){\n    return false;\n \
    \ }\n  if(date.split('-')[0] != '00' && date.split('-')[1] != '00' && date.split('-')[2]\
    \ != '00' && date.split('-')[3].split('-')[0] == '00' && date.split('-')[3].split('-')[1]\
    \ == '00' && date.split('-')[3].split('-')[2] == '00'){\n    return false;\n \
    \ }\n  if(date.split('-')[0] == '00' && date.split('-')[1] != '00' && ", "  if(date\
    \ === null || date === \"\"){\n    return false;\n  }\n  if(date.indexOf('-')\
    \ === -1){\n    return false;\n  }\n  if(date.split('-')[1] < 1 || date.split('-')[1]\
    \ > 12){\n    return false;\n  }\n  if(date.split('-')[2] < 1 || date.split('-')[2]\
    \ > 31 || date.split('-')[2] > 30){\n    return false;\n  }\n  return true;\n\
    }\n", "    \n    //your code here\n    var date_regex = /^((0?[1-9]|1[012])[\\\
    -\\/](0?[1-9]|[12][0-9]|3[01])[\\-\\/](19|20)?[0-9]{2})$/;\n    var date_regex_array\
    \ = date_regex.exec(date);\n    var valid_date = !(date_regex_array == null ||\
    \ date_regex_array.length == 0);\n    return valid_date;\n}\n</code>\n<|/ a |>\n\
    <| a |>\n<code>", "    // Your code here\n}", "    if(date == null || date ==\
    \ \"\"){\n        return false;\n    }\n    var dateArray = date.split(\"-\");\n\
    \    if(dateArray.length != 3){\n        return false;\n    }\n    var dateArray2\
    \ = date.split(\"/\");\n    if(dateArray2.length != 3){\n        return false;\n\
    \    }\n    if(isNaN(dateArray[0]) || isNaN(dateArray[1]) || isNaN(dateArray[2])){\n\
    \        return false;\n    }\n    if(dateArray[0] < 1 || dateArray[0] > 12){\n\
    \        return false;\n    }\n    if(dateArray[1] < 1 || dateArray[1] > 31 ||\
    \ (dateArray[1] == 2 && dateArray[2] < 1 || dateArray[2] > 30)){\n        return\
    \ false;\n    }\n    if(dateArray[2] < 1 || dateArray[2] > 29 || (dateArray[1]\
    \ == 2 && dateArray[2] < 1 || dateArray[2] > 28)){\n        return false;\n  \
    \  }\n    return true;\n}\n", "    var daysInMonth = [0, 31, 28, 31, 30, 31, 30,\
    \ 31, 31, 30, 31, 30, 31];\n    var splitDate = (date.split('-'));\n    var dateComponents\
    \ = [splitDate[0], splitDate[1]];\n    if (splitDate.length != 3) throw 'Date\
    \ not valid.';\n    if (splitDate[1].length != 2 || splitDate[1].length != 2 ||\
    \ splitDate[1][0].length != 2 || splitDate[1][1].length != 2) throw 'Year not\
    \ valid.';\n    if (splitDate[0].length != 2 || splitDate[0].length != 2 || splitDate[0][0].length\
    \ != 2 || splitDate[0][1].length != 2 || splitDate[0][1].length != 2) throw 'Month\
    \ not valid.';\n    var days = [];\n    var year = (splitDate[0][1] * 10000 +\
    \ splitDate[0][2]) * 10000 + splitDate[0][3] * 100 + splitDate[0][4];\n    if\
    \ (splitDate[1][1] == '1') {\n        days = [31, 28, 31, 30, 31, 30, 31, 31,\
    \ 30, 31, 30, 31];\n    }\n    else if (splitDate[1][1] == '3') {\n        days\
    \ = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    }\n    else if (splitDate[1][1]\
    \ == '5') {\n        days = [31, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  \
    \  }\n    else if (splitDate[1][1] == '7') {\n        days = [31, 31, 31, 30,\
    \ 31, 30, 31, 31, 30, 31, 30, 31];\n    }\n    else if (splitDate[1][1] == '8')\
    \ {\n        days = [31, 31, 32, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  \
    \  }\n    else if (splitDate[1][1] == '10') {\n        days = [31, 31, 32, 31,\
    \ 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    }\n    else if (splitDate[1][1]\
    \ == '12') {\n        days = [31, 31, 32, 32, 31, 30, 31, 30, 31, 31, 30, 31,\
    \ 30, 31];\n    }\n    var month = 1;\n    if (splitDate[0][1] == '1') {\n   \
    \     month++;\n    }\n    else if (splitDate[0][1] == '3') {\n        month++;\n\
    \    }\n    else if (splitDate[0][1] == '5') {\n        month++;\n    }\n    else\
    \ if (splitDate[0][1] == '7') {\n        month++;\n    }\n    else if (splitDate[0][1]\
    \ == '8') {\n        month++;\n    }\n    else if (splitDate[0][1] == '10') {\n\
    \        month++;\n    }\n    else if (splitDate[0][1] == '12') {\n        month++;\n\
    \    }\n    if (month > 12) throw 'Month not valid.';\n    if (year > 9999) throw\
    \ 'Year not valid.';\n    if (month < 1 || month > 12) throw 'Month not valid.';\n\
    \    if (daysInMonth[month-1] == 31) {\n        if (dateComponents[2] == 0) throw\
    \ 'Invalid date.';\n        if (dateComponents[0] > daysInMonth[month-1] || dateComponents[1]\
    \ > daysInMonth", "    var pattern = /^(0[1-9]|[12][0-9]|3[01])[\\/\\-](0[1-9]|1[012])[\\\
    /\\-]\\d{4}$/;\n    if(!pattern.test(date)){\n        return false;\n    }\n \
    \   var days = ['31', '30', '29', '28', '27', '26', '25', '24', '23', '22', '21',\
    \ '20', '19', '18', '17', '16', '15', '14', '13', '12', '11', '10', '9', '8',\
    \ '7', '6', '5', '4', '3', '2'];\n    if(days.indexOf(date.substr(0,2)) < 0){\n\
    \        return false;\n    }\n    var months = ['01', '03', '05', '07', '08',\
    \ '10', '12'];\n    if(months.indexOf(date.substr(2,2)) < 0){\n        return\
    \ false;\n    }\n    var year=date.substr(4,4);\n    if(year<1000 || year>3000){\n\
    \        return false;\n    }\n    return true;\n}\n</code>\n<|/ a dscore=0 tags=validation,javascript,date\
    \ |>\n<| c |>\nWhat about leap years?\n<|/ c |>\n<| a dscore=0 tags=validation,javascript,date\
    \ |>\nYou can try this\n<code>", "  // Write a validation function which returns\
    \ True if the date is valid otherwise False.\n  // The following rules should\
    \ be satisfied for a date to be valid:\n  // 1. The date string is not empty.\n\
    \  // 2. The number of days is not less than 1 or higher than 31 days for months\
    \ 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher than 30\
    \ days for months 4,6,9,11. And, the number of days is not less than 1 or higher\
    \ than 29 for the month 2.\n  // 3. The months should not be less than 1 or higher\
    \ than 12.\n  // 4. The date should be in the format: mm-dd-yyyy\n  // for example:\
    \ \n  // valid_date('03-11-2000') => True\n  // valid_date('15-01-2012') => False\n\
    \  // valid_date('04-0-2040') => False\n  // valid_date('06-04-2020') => True\n\
    \  // valid_date('06/04/2020') => False\n}\nlet test_case_1 = valid_date('03-11-2000');\n\
    let test_case_2 = valid_date('15-01-2012');\nlet test_case_3 = valid_date('04-0-2040');\n\
    let test_case_4 = valid_date('06-04-2020');\nlet test_case_5 = valid_date('06/04/2020');\n\
    \nassert(test_case_1===true);\nassert(test_case_2===false);\nassert(test_case_3===true);\n\
    assert(test_case_4===false);\nassert(test_case_5===true);\n", "    let dateArray\
    \ = date.split('-');\n    if(dateArray.length != 3)\n        return false;\n \
    \   let month = dateArray[0];\n    let day = dateArray[1];\n    let year = dateArray[2];\n\
    \    if(month < 1 || month > 12)\n        return false;\n    if(day < 1 || day\
    \ > 31)\n        return false;\n    if(month == 2 && day > 29)\n        return\
    \ false;\n    if(month == 4 || month == 6 || month == 9 || month == 11 && day\
    \ > 30)\n        return false;\n    if(month == 1 || month == 3 || month == 5\
    \ || month == 7 || month == 8 || month == 10 && day > 31)\n        return false;\n\
    \    if(month == 2)\n        return (day > 29);\n    return true;\n}\n", "   \
    \ if(date.length<1) return false;\n    if(date.split('-').length!=3) return false;\n\
    \    if(date.split('-')[1].length!=2) return false;\n    \n    var month=Number(date.split('-')[0]);\n\
    \    var day=Number(date.split('-')[1]);\n    var year=Number(date.split('-')[2]);\n\
    \    var valid_month=false;\n    var valid_day=false;\n    \n    if(month<1 ||\
    \ month>12) return false;\n    if(day<1 || day>31) return false;\n    \n    for(var\
    \ i=0;i<months.length;i++){\n        if(i==0){\n            valid_month=true;\n\
    \            if(months[i-1]==month) return false;\n            if(day==29 && months[i-1]==2)\
    \ return false;\n            \n            if(months[i-1]==month+1){\n       \
    \         if(day>31) return false;\n                else if(day>30) return false;\n\
    \                else if(day>29) return false;\n                else if(day>28)\
    \ return false;\n                else if(day>27) return false;\n             \
    \   else if(day>26) return false;\n                else if(day>25) return false;\n\
    \                else if(day>24) return false;\n                else if(day>23)\
    \ return false;\n                else if(day>22) return false;\n             \
    \   else if(day>21) return false;\n                else if(day>20) return false;\n\
    \                else if(day>19) return false;\n                else if(day>18)\
    \ return false;\n                else if(day>17) return false;\n             \
    \   else if(day>16) return false;\n                else if(day>15) return false;\n\
    \                else if(day>14) return false;\n                else if(day>13)\
    \ return false;\n                else if(day>12) return false;\n             \
    \   else if(day>11) return false;\n                else if(day>10) return false;\n\
    \                else if(day>9) return false;\n                else if(day>8)\
    \ return false;\n                else if(day>7) return false;\n              \
    \  else if(day>6) return false;\n                else if(day>5) return false;\n\
    \                else if(day>4) return false;\n                else if(day>3)\
    \ return false;\n                else if(day>2) return false;\n              \
    \  else if(day>1) return false;\n                \n            }\n        }\n\
    \        else if(months[i-1]==month){\n            valid_day=true;\n         \
    \   if(day>31) return false;\n            else if(day>30) return false;\n    \
    \        else if(day>29) return false;\n            else if(day>28) return false;\n\
    \            else if(day>27) return false;\n            else if(day>26) return\
    \ false;\n            else if(day>25) return false;\n            else if(day>24)\
    \ return false;\n            else if(day>23) return false;\n            else if(day>22)\
    \ return false;\n            else if(day>21) return false;\n            else if(day>20)\
    \ return false;\n            else if(day>19) return false;\n            else if(day>18)\
    \ return false;\n            else if(day>17) return false;\n            else if(day>16)\
    \ return false;\n            else if(day>15) return false;\n            else if(day>",
  "\tvar isValid = true;\n\tvar dateFormat = date.split('-');\n\tvar day = dateFormat[1];\n\
    \tvar month = dateFormat[0];\n\tvar year = dateFormat[2];\n\n\tif(!date_validation(day,month,year))\n\
    \t{\n\t\tisValid = false;\n\t}\n\treturn isValid;\n}\n", "    \n    // 1. The\
    \ date string is not empty.\n    if(date == \"\"){\n        return false;\n  \
    \  }\n    \n    // 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n    if(date.length > 10){\n     \
    \   if(date.charAt(date.length-1) == \"-\"){\n            date = date.substring(0,\
    \ date.length-1);\n        }\n    }\n    let dateArr = date.split(\"-\");\n  \
    \  let valid = false;\n    \n    if(dateArr.length <= 2){\n        return false;\n\
    \    }\n    \n    // 3. The months should not be less than 1 or higher than 12.\n\
    \    if(dateArr[0].split(\"-\").length < 2 || dateArr[0].split(\"-\").length >\
    \ 12){\n        return false;\n    }\n    if(dateArr[1].split(\"-\").length <\
    \ 2 || dateArr[1].split(\"-\").length > 12){\n        return false;\n    }\n \
    \   \n    // 4. The date should be in the format: mm-dd-yyyy\n    if(dateArr[0].split(\"\
    -\")[0] != \"-\" || dateArr[0].split(\"-\")[1] != \"-\"){\n        return false;\n\
    \    }\n    if(dateArr[1].split(\"-\")[0] != \"-\" || dateArr[1].split(\"-\")[1]\
    \ != \"-\"){\n        return false;\n    }\n    \n    let dateArr2 = dateArr[0].split(\"\
    -\");\n    if(dateArr2[1] == \"01\" && dateArr2[2] == \"01\"){\n        return\
    \ true;\n    }\n    return false;\n}\n", "    let dateString = '' + date;\n  \
    \  \n    if(dateString === ''){\n        return false;\n    }\n    \n    let dateParts\
    \ = dateString.split('-');\n    \n    if(dateParts.length !== 3){\n        return\
    \ false;\n    }\n    \n    let [month, day, year] = dateParts;\n    \n    month\
    \ = new Date(month).getMonth();\n    day = new Date(day).getDate();\n    \n  \
    \  if(month === 0 || month === 11 || month === 0){\n        year = new Date(year).getFullYear();\n\
    \    }\n    \n    if(month > 12){\n        return false;\n    }\n    \n    if(day\
    \ > 31){\n        return false;\n    }\n    \n    if(day > 30){\n        return\
    \ false;\n    }\n    \n    year = new Date(year).getFullYear();\n    \n    if(year\
    \ > dateParts[2] + 1900){\n        return false;\n    }\n    \n    return true;\n\
    }\n", "    if (!date) return false;\n    let arrDate=date.split('-');\n    if(arrDate.length!=3)\
    \ return false;\n    let year=arrDate[0];\n    let month=arrDate[1];\n    let\
    \ day=arrDate[2];\n    if (isNaN(year) || isNaN(month) || isNaN(day)) return false;\n\
    \    if (month<1 || month>12) return false;\n    if (day<1 || day>31) return false;\n\
    \    if (month==2 && day>28) return false;\n    if (month==3 && day>31) return\
    \ false;\n    if (month==4 && day>30) return false;\n    if (month==5 && day>31)\
    \ return false;\n    if (month==6 && day>30) return false;\n    if (month==7 &&\
    \ day>31) return false;\n    if (month==8 && day>31) return false;\n    if (month==9\
    \ && day>30) return false;\n    if (month==10 && day>31) return false;\n    if\
    \ (month==11 && day>30) return false;\n    if (month==12 && day>31) return false;\n\
    \    if (month==1 && day>29) return false;\n    if (month==2 && day>31) return\
    \ false;\n    if (month==3 && day>31) return false;\n    if (month==4 && day>31)\
    \ return false;\n    if (month==5 && day>31) return false;\n    if (month==6 &&\
    \ day>31) return false;\n    if (month==7 && day>31) return false;\n    if (month==8\
    \ && day>31) return false;\n    if (month==9 && day>31) return false;\n    if\
    \ (month==10 && day>31) return false;\n    if (month==11 && day>31) return false;\n\
    \    if (month==12 && day>31) return false;\n    if (month==1 && day>30) return\
    \ false;\n    if (month==2 && day>31) return false;\n    if (month==3 && day>31)\
    \ return false;\n    if (month==4 && day>30) return false;\n    if (month==5 &&\
    \ day>31) return false;\n    if (month==6 && day>30) return false;\n    if (month==7\
    \ && day>31) return false;\n    if (month==8 && day>31) return false;\n    if\
    \ (month==9 && day>31) return false;\n    if (month==10 && day>31) return false;\n\
    \    if (month==11 && day>30) return false;\n    if (month==12 && day>31) return\
    \ false;\n    if (month==1 && day>29) return false;\n    if (month==2 && day>31)\
    \ return false;\n    if (month==3 && day>31) return false;\n    if (month==4 &&\
    \ day>31) return false;\n    if (month==5 && day>31) return false;\n    if (month==6\
    \ && day>31) return false;\n    if (month==7 && day>31) return false;\n    if\
    \ (month==8 && day>31) return false;\n    if (month==9 && day>31) return false;\n\
    \    if (month==10 && day", "    var date_regex = /^([0-9]{2})-([0-9]{2})-([0-9]{4})$/;\n\
    \    var date_match=date_regex.exec(date);\n    \n    if(date_match!=null){\n\
    \        if(date_match[1]>12 || date_match[1]<1){\n            alert(date+\" is\
    \ not a valid date!\");\n            return false;\n        }\n        if(date_match[2]>31\
    \ || date_match[2]<1){\n            alert(date+\" is not a valid date!\");\n \
    \           return false;\n        }\n        if(date_match[3]>30 || date_match[3]<1){\n\
    \            alert(date+\" is not a valid date!\");\n            return false;\n\
    \        }\n    }\n    else{\n        alert(date+\" is not a valid date!\");\n\
    \        return false;\n    }\n    return true;\n}\n</code>\n<|/ a |>\n<| c |>\n\
    Thanks for the help. But I got this error when I tried to submit the date 03-11-2000:\
    \ TypeError: date_match[3] is undefined\n<|/ c |>\n<| c |>\nThanks for your help.\
    \ I have found the problem in my code. I wrote the code wrongly. I'll try to fix\
    \ it and share the result. Thanks a lot!\n<|/ c |>\n<| c |>\n, glad to hear that\
    \ it's working for you. Don't forget to accept the answer. It will be helpful\
    \ for the next community members as well.\n<|/ c |>\n<| a tags=validation,html,javascript\
    \ dscore=0 |>\nYou could use a regular expression matcher to check date format.\
    \ \n<code>", "    let arr = date.split('-');\n    let check = false;\n    \n \
    \   if(arr.length==3){\n        if(!/\\d/.test(arr[0]) || !/\\d/.test(arr[1])\
    \ || !/\\d/.test(arr[2])){\n            return false;\n        }\n        let\
    \ dateString = `${arr[0]}-${arr[1]}-${arr[2]}`;\n        let dateObj = new Date(dateString);\n\
    \        let daysInMonth = dateObj.getDate();\n        let daysLeft = (daysInMonth==31)\
    \ ? 29 : 31;\n        let monthsLeft = (daysInMonth<31) ? 30 : 28;\n        \n\
    \        for(let i=1; i<=3; i++){\n            daysLeft--;\n            monthsLeft--;\n\
    \            if(daysLeft<1 && monthsLeft<1){\n                return false;\n\
    \            }\n        }\n        \n        if(daysInMonth<1 || daysLeft<1 ||\
    \ monthsLeft<1){\n            return false;\n        }\n        \n        let\
    \ months = (month<12) ? month +1 : 0;\n        let dateStr = `${dateObj.getFullYear()}-${months}-${dateObj.getDate()}`;\n\
    \        check = (dateStr==date);\n    }\n    \n    return check;\n}\n", "  if\
    \ (date == \"\"){\n    return false;\n  }\n  var mm, dd, yyyy;\n  mm = date.split(\"\
    -\")[0];\n  dd = date.split(\"-\")[1];\n  yyyy = date.split(\"-\")[2];\n  if(mm.length\
    \ < 1 || mm.length > 3 || mm.length != 3 && mm.length != 5 && mm.length != 7){\n\
    \    return false;\n  }\n  if(dd.length < 1 || dd.length > 3 || dd.length != 3\
    \ && dd.length != 5 && dd.length != 7){\n    return false;\n  }\n  if(yyyy.length\
    \ < 1 || yyyy.length > 4 || yyyy.length != 4 && yyyy.length != 6 && yyyy.length\
    \ != 9){\n    return false;\n  }\n  if(parseInt(mm) >= 1 && parseInt(mm) <= 12\
    \ && parseInt(dd) >= 1 && parseInt(dd) <= 31 && parseInt(yyyy) >= 0 && parseInt(yyyy)\
    \ <= 9999){\n    return true;\n  }\n  return false;\n}\n", "    var regex = '^(?:(?:31(\\\
    /|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\/|-|\\.)(?:0?[1,3-9]|1[0-2])\\\
    2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\.)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\\
    d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00)?))$|^(?:0?[1-9]|1\\\
    d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:0?[1-9]|1\\\
    d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00)?)$|^(?:(?:0?[1-9]|1\\\
    d|2[0-8])(\\/|-|\\.)(?:0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00)?)|(?:(?:0?[1-9]|1[0-2])(\\\
    /|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00)?)\\\
    4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$)'\n    if(!date || !(date.match(regex)))\n  \
    \      return false;\n    var parts = date.split('-');\n    var day = parts[0];\n\
    \    var month = parts[1];\n    var year = parts[2];\n    month = month - 1;\n\
    \    if (month < 1 || month > 12) return false\n    if(day < 1 || day > 31) return\
    \ false\n    if(month < 0 || month > 12) return false\n    if(year < 100) return\
    \ false\n    if(year < 1000) return false\n    if(year < 10000) return false\n\
    \    if(year < 100000) return false\n    if(", "\t\n\tvar valid_date_pattern =\
    \ /\\d-\\d-\\d{4}|\\d-\\d-\\d{2}/;\n\n\tif(!date){\n\t\treturn false;\n\t}\n\n\
    \t//Split the date string\n\tvar date_string = date.split('-');\n\n\tvar no_of_days\
    \ = date_string[2];\n\tvar no_of_months = date_string[1];\n\tvar no_of_year =\
    \ date_string[0];\n\n\t//Make sure that the date string is correct\n\tif(date_string.length\
    \ != 3){\n\t\treturn false;\n\t}\n\n\t//Make sure that the date string has a month\
    \ in it.\n\tif(no_of_months.length != 1 || no_of_months.indexOf('-') < 0 || no_of_months.indexOf('/')\
    \ < 0){\n\t\treturn false;\n\t}\n\n\t//Make sure that the date string has a year\
    \ in it.\n\tif(no_of_year.length != 4 || no_of_year.indexOf('-') < 0 || no_of_year.indexOf('/')\
    \ < 0){\n\t\treturn false;\n\t}\n\n\t//Make sure that the month has a day in it.\n\
    \tif(no_of_days.length != 1 || no_of_days.indexOf('-') < 0 || no_of_days.indexOf('/')\
    \ < 0){\n\t\treturn false;\n\t}\n\n\t//Make sure that the date string is in the\
    \ correct format\n\tif(date.match(valid_date_pattern) == null){\n\t\treturn false;\n\
    \t}\n\n\treturn true;\n}\n", "    var valid;\n    var date;\n    var splitDate;\n\
    \    var checkDate;\n    var checkDay;\n    var checkMonth;\n    var checkYear;\n\
    \    var checkDaysInMonth;\n    var checkYearMonth;\n    var checkDayInYear;\n\
    \    var checkMonthInYear;\n    var checkMonthInYearMonth;\n    var checkLeapYear;\n\
    \    var checkIsLeapYear;\n    var checkYearMonthDay;\n    var checkYearMonthDayInYear;\n\
    \n    if (date.length <= 0)\n    {\n        return false;\n    }\n    else\n \
    \   {\n        splitDate = date.split(\"-\");\n        checkDate = [splitDate[0],\
    \ splitDate[1]];\n\n        checkMonth = checkDate[0].split(\"-\")[1];\n     \
    \   checkDay = checkDate[1].split(\"-\")[1];\n\n        checkYear = splitDate[0].split(\"\
    -\")[2];\n\n        checkDaysInMonth = checkDaysInMonth(checkMonth);\n       \
    \ checkYearMonth = checkYearMonth(checkYear);\n        checkMonthInYear = checkMonthInYear(checkMonth);\n\
    \        checkYearMonthDay = checkYearMonthDay(checkYear, checkMonth);\n     \
    \   checkMonthInYearMonth = checkMonthInYearMonth(checkYear, checkMonth);\n  \
    \      checkLeapYear = checkLeapYear(checkYear);\n        checkIsLeapYear = checkLeapYear(checkYear);\n\
    \        checkYearMonthDayInYear = checkYearMonthDayInYear(checkYear, checkMonth);\n\
    \n        valid = (checkDate[0].length >= 2 && checkDate[1].length >= 2 && checkDaysInMonth\
    \ >= 1 && checkDay >= 1 && checkMonthInYear >= 1 && checkYearMonthDay >= 1 &&\
    \ checkMonthInYearMonth >= 1 && checkYearMonthDayInYear >= 1 && checkYearMonth\
    \ >= 1 && checkYearMonthDay >= 1 && checkLeapYear >= 1 && checkIsLeapYear >= 1\
    \ && checkYearMonthDayInYear >= 1 && checkYearMonth >= 1 && checkYearMonthDay\
    \ >= 1 && checkYearMonth >= 1);\n\n        return valid;\n    }\n}\n", "\tconst\
    \ pattern = /^\\d{1,2}\\-\\d{1,2}\\-\\d{4}$/;\n\tif(!pattern.test(date)){\n\t\t\
    return false;\n\t}\n\tconst date_array = date.split(\"-\");\n\tlet days_array\
    \ = [0,31,30,29];\n\tlet days_in_month = days_array.length;\n\tfor(let i = 1;\
    \ i <= 12; i++){\n\t\tif(days_in_month == days_array.length){\n\t\t\tbreak;\n\t\
    \t}\n\t\tif(date_array[1] > i){\n\t\t\tdays_in_month++;\n\t\t}\n\t}\n\tif(date_array[2]\
    \ < 1 || date_array[2] > days_in_month){\n\t\treturn false;\n\t}\n\t\n\tlet days\
    \ = [31,28,31,30,31,30,31,30,31,30,31];\n\tlet days_in_month = days.length;\n\t\
    for(let i = 1; i <= 12; i++){\n\t\tif(days_in_month == days_array.length){\n\t\
    \t\tbreak;\n\t\t}\n\t\tif(date_array[0] > i){\n\t\t\tdays_in_month++;\n\t\t}\n\
    \t}\n\tif(date_array[0] < 1 || date_array[0] > days_in_month){\n\t\treturn false;\n\
    \t}\n\treturn true;\n}\n", "    // Write your code here\n    if(!date || date.length\
    \ ==0){\n        return false;\n    }\n    var split = date.split('-');\n    var\
    \ mm = split[0];\n    var dd = split[1];\n    var yyyy = split[2];\n    if(!mm\
    \ || !dd || !yyyy){\n        return false;\n    }\n    var mm1 = mm.length ===\
    \ 1 ? '0'+mm : mm;\n    var dd1 = dd.length === 1 ? '0'+dd : dd;\n    var yyyy1\
    \ = yyyy.length === 1 ? '0'+yyyy : yyyy;\n    var date1 = mm1+ '-' +dd1+ '-' +yyyy1;\n\
    \    var date = new Date();\n    var current_year = date.getFullYear();\n    var\
    \ current_month = date.getMonth();\n    var current_day = date.getDate();\n  \
    \  var current_date = date.getDate();\n    var current_month = mm1;\n    var current_day\
    \ = dd1;\n    var current_year = yyyy1;\n    if(current_month < 1 || current_month\
    \ > 12){\n        return false;\n    }\n    if(current_day < 1 || current_day\
    \ > 31){\n        return false;\n    }\n    if(current_date < 1 || current_date\
    \ > 30){\n        return false;\n    }\n    if(current_year < 1 || current_year\
    \ > current_year){\n        return false;\n    }\n    return true;\n}\nvar valid_date1\
    \ = valid_date('03-11-2000');\nvar valid_date2 = valid_date('15-01-2012');\nvar\
    \ valid_date3 = valid_date('04-0-2040');\nvar valid_date4 = valid_date('06-04-2020');\n\
    var valid_date5 = valid_date('06/04/2020');", "    if(typeof date == 'string'){\n\
    \        var valid_date_array = date.split('-');\n        var days_invalid = false;\n\
    \        var days_invalid1 = false;\n        var days_invalid2 = false;\n    \
    \    var days_invalid3 = false;\n        var days_invalid4 = false;\n        var\
    \ days_invalid5 = false;\n        var days_invalid6 = false;\n        var days_invalid7\
    \ = false;\n        var days_invalid8 = false;\n        var days_invalid9 = false;\n\
    \        var days_invalid10 = false;\n        var days_invalid11 = false;\n  \
    \      var days_invalid12 = false;\n        var days_invalid13 = false;\n    \
    \    var days_invalid14 = false;\n        var days_invalid15 = false;\n      \
    \  var days_invalid16 = false;\n        var days_invalid17 = false;\n        var\
    \ days_invalid18 = false;\n        var days_invalid19 = false;\n        var days_invalid20\
    \ = false;\n        var days_invalid21 = false;\n        var days_invalid22 =\
    \ false;\n        var days_invalid23 = false;\n        var days_invalid24 = false;\n\
    \        var days_invalid25 = false;\n        var days_invalid26 = false;\n  \
    \      var days_invalid27 = false;\n        var days_invalid28 = false;\n    \
    \    var days_invalid29 = false;\n        var days_invalid30 = false;\n      \
    \  var days_invalid31 = false;\n        var days_invalid32 = false;\n        var\
    \ days_invalid33 = false;\n        var days_invalid34 = false;\n        var days_invalid35\
    \ = false;\n        var days_invalid36 = false;\n        var days_invalid37 =\
    \ false;\n        var days_invalid38 = false;\n        var days_invalid39 = false;\n\
    \        var days_invalid40 = false;\n        var days_invalid41 = false;\n  \
    \      var days_invalid42 = false;\n        var days_invalid43 = false;\n    \
    \    var days_invalid44 = false;\n        var days_invalid45 = false;\n      \
    \  var days_invalid46 = false;\n        var days_invalid47 = false;\n        var\
    \ days_invalid48 = false;\n        var days_invalid49 = false;\n        var days_invalid50\
    \ = false;\n        var days_invalid51 = false;\n        var days_invalid52 =\
    \ false;\n        var days_invalid53 = false;\n        var days_invalid54 = false;\n\
    \        var days_invalid55 = false;\n        var days_invalid56 = false;\n  \
    \      var days_invalid57 = false;\n        var days_invalid58 = false;\n    \
    \    var days_invalid59 = false;\n        var days_invalid60 = false;\n      \
    \  var days_invalid61 = false;\n        var days_invalid62 = false;\n        var\
    \ days_invalid63 = false;\n        var days_invalid64 = false;\n        var days_invalid65\
    \ = false;\n        var days_invalid66 = false;\n        var days_invalid67 =\
    \ false;\n        var days_invalid68 = false;\n", "  let d = Date.parse(date);\n\
    \  if(d == null)\n    return false;\n  if(d<1 || d>31+31+30+29+29+30+31+30)\n\
    \    return false;\n  if((months_valid(d)!=null) && (months_valid(d)>1))\n   \
    \ return false;\n  if((days_valid(d)!=null) && (days_valid(d)>1))\n    return\
    \ false;\n  if(months_valid(d)==null && days_valid(d)==null)\n    return true;\n\
    \  if(months_valid(d)==0 && days_valid(d)==0)\n    return false;\n  if(months_valid(d)==1\
    \ && days_valid(d)==29)\n    return false;\n  if(months_valid(d)==2 && days_valid(d)==0)\n\
    \    return false;\n  if(months_valid(d)==3 && days_valid(d)==0)\n    return false;\n\
    \  if(months_valid(d)==4 && days_valid(d)==0)\n    return false;\n  if(months_valid(d)==5\
    \ && days_valid(d)==0)\n    return false;\n  if(months_valid(d)==6 && days_valid(d)==0)\n\
    \    return false;\n  if(months_valid(d)==7 && days_valid(d)==0)\n    return false;\n\
    \  if(months_valid(d)==8 && days_valid(d)==0)\n    return false;\n  if(months_valid(d)==9\
    \ && days_valid(d)==0)\n    return false;\n  if(months_valid(d)==10 && days_valid(d)==0)\n\
    \    return false;\n  if(months_valid(d)==11 && days_valid(d)==0)\n    return\
    \ false;\n  if(months_valid(d)==12 && days_valid(d)==0)\n    return false;\n \
    \ if(months_valid(d)==1 && days_valid(d)==30)\n    return false;\n  if(months_valid(d)==2\
    \ && days_valid(d)==29)\n    return false;\n  if(months_valid(d)==3 && days_valid(d)==29)\n\
    \    return false;\n  if(months_valid(d)==4 && days_valid(d)==29)\n    return\
    \ false;\n  if(months_valid(d)==5 && days_valid(d)==29)\n    return false;\n \
    \ if(months_valid(d)==6 && days_valid(d)==29)\n    return false;\n  if(months_valid(d)==7\
    \ && days_valid(d)==29)\n    return false;\n  if(months_valid(d)==8 && day", " \
    \   // Write your code here\n    if (date == \"\"){\n        return false;\n \
    \   }\n    if (days_not_less_than_1_and_higher_than_31(date) || days_not_less_than_1_and_higher_than_30(date)\
    \ || months_not_less_than_1_and_higher_than_12(date)) {\n        return false;\n\
    \    }\n    if (date_in_correct_format(date)){\n        return true;\n    }\n\
    \    return false;\n}\n", "    var dateArray = date.split(\"-\");\n    if(dateArray.length\
    \ != 3){\n        return false;\n    }\n    var numDays = new Date(dateArray[0],dateArray[1]-1,dateArray[2]).getDate();\n\
    \    if(numDays < 1 || numDays > 30){\n        return false;\n    }\n    var monthArray\
    \ = new Date(dateArray[0],dateArray[1]-1,0).getMonth()+1;\n    if(monthArray <\
    \ 1 || monthArray > 12){\n        return false;\n    }\n    var year = dateArray[2];\n\
    \    if(year != \"0\" && year != \"1\"){\n        return false;\n    }\n    return\
    \ true;\n}\n", "  var dateArr = date.split('-');\n  if(dateArr.length == 3){\n\
    \    let dayNumber = parseInt(dateArr[2]);\n    if(dayNumber > 0 && dayNumber\
    \ < 32){\n      return true;\n    }\n    return false;\n  }\n  else if(dateArr.length\
    \ == 2){\n    let dayNumber = parseInt(dateArr[1]);\n    if(dayNumber > 1 && dayNumber\
    \ < 29){\n      return true;\n    }\n    return false;\n  }\n  else if(dateArr.length\
    \ == 4){\n    let monthNumber = parseInt(dateArr[2]);\n    if(monthNumber > 1\
    \ && monthNumber < 12){\n      return true;\n    }\n    return false;\n  }\n \
    \ return false;\n}\n", "    //Implement the valid_date function here\n    var\
    \ dateArray = date.split(\"-\");\n    var d = new Date(dateArray[2], dateArray[1],\
    \ dateArray[0]);\n    return d !== null;\n}\n", "    if(date=='') return false;\n\
    \    date=date.replace(/(^0|-)(\\d{2})(\\d{2})(\\d{4})$/,'$2-$3-$4');\n    \n\
    \    var day=days_in_month(date);\n    if(day>31) return false;\n    if(day>30)\
    \ return false;\n    if(day>29) return false;\n    if(day>28) return false;\n\
    \    if(day>27) return false;\n    if(day>26) return false;\n    if(day>25) return\
    \ false;\n    if(day>24) return false;\n    if(day>23) return false;\n    if(day>22)\
    \ return false;\n    if(day>21) return false;\n    if(day>20) return false;\n\
    \    if(day>19) return false;\n    if(day>18) return false;\n    if(day>17) return\
    \ false;\n    if(day>16) return false;\n    if(day>15) return false;\n    if(day>14)\
    \ return false;\n    if(day>13) return false;\n    if(day>12) return false;\n\
    \    if(day>11) return false;\n    if(day>10) return false;\n    if(day>9) return\
    \ false;\n    if(day>8) return false;\n    if(day>7) return false;\n    if(day>6)\
    \ return false;\n    if(day>5) return false;\n    if(day>4) return false;\n  \
    \  if(day>3) return false;\n    if(day>2) return false;\n    if(day>1) return\
    \ false;\n    if(day>0) return false;\n    \n    return true;\n}\n", "    let\
    \ date_obj = Date.parse(date);\n    return date_obj >= 0 && date_obj <= 15038492000;\n\
    }\n", "    if(date.length < 1) return false;\n    let daysInMonth = [31,28,31,30,31,30,31,30,31,30,31,30];\n\
    \    let days = ['01','02','03','04','05','06','07','08','09','10','11','12'];\n\
    \    let dd = date.split(\"-\")[0];\n    let mm = date.split(\"-\")[1];\n    let\
    \ yyyy = date.split(\"-\")[2];\n    if(daysInMonth.includes(mm)){\n        if(days.includes(dd))\
    \ return true;\n        else return false;\n    }\n    if(days.includes(dd)){\n\
    \        if(daysInMonth.includes(mm)) return true;\n        else return false;\n\
    \    }\n    if(mm == 0 && daysInMonth.includes(dd)){\n        return true;\n \
    \   }\n    if(mm == 12 && daysInMonth.includes(dd)){\n        return true;\n \
    \   }\n    if(mm < 1 && mm > 12){\n        return false;\n    }\n    if(mm ==\
    \ 2 && dd == 29){\n        return true;\n    }\n    return false;\n}\n", "   \n\
    }\n</cell>\n<text>\nTest your code\nRun the cell below to test your code.\n\n\
    The test code uses a dataset that you created in the previous part. Here is a\
    \ link to the dataset I used in the previous part.\n\nTo test the valid_date function,\
    \ run the cell below.\n\n\n</text>\n<cell>\n# Run this cell to test your code.\n\
    assert(valid_date('01-01-2018') == True)\nassert(valid_date('01-31-2018') == True)\n\
    assert(valid_date('12-31-2018') == True)\nassert(valid_date('01-31-2019') == False)\n\
    assert(valid_date('01-01-2021') == False)\nassert(valid_date('01-01-2020') ==\
    \ False)\nassert(valid_date('05-12-2018') == True)\n</cell>\n<text>\nImplementation\n\
    With the above in mind, implement a function that checks whether a given date\
    \ string is valid or not.\n\nThe function should return True if the date string\
    \ is valid, and False otherwise.\n\nThe function is case insensitive, and accepts\
    \ input text in the format: mm-dd-yyyy\n\nFor mm-dd-yyyy, it is assumed that months\
    \ and dates are always 2 digits. So, January 1st, 2019 is January 2nd, 2019.\n\
    \nFor example, valid_date('04-25-2019') should return True.\n\nFor invalid date\
    \ strings, it should return False.\n\n\n</text>\n<cell>\ndef valid_date(date):\n\
    \    # TODO: Your code here\n    pass\n\n# Note: run this cell to test your code\n\
    assert(valid_date('04-25-2019') == True)\nassert(valid_date('04-25-2019') == True)\n\
    assert(valid_date('04-25-2019') == True)\nassert(valid_date('04-25-2019') == True)\n\
    assert(valid_date('01-01-2019') == False)\nassert(valid_date('04-01-2019') ==\
    \ False)\nassert(valid_date('05-02-2020') == False)\n</cell>\n<text>\nPart 3:\
    \ Working with DataFrames\n\n</text>\n<text>\nCreating a DataFrame\nIn the previous\
    \ sections, we used a dataset stored in CSV files. Let's see how we can create\
    \ a DataFrame from scratch using Python.\n\n\n</text>\n<text>\nStep 1: Read in\
    \ the dataset\n\n</text>\n<cell>\n# Import pandas library\nimport pandas as pd\n\
    \n# Read in the dataset: movies_metadata.csv\nmovies_metadata = pd.read_csv('movies_metadata.csv')\n\
    \n# View the first 5 rows\nmovies_metadata.head()\n</cell>\n<text>\nStep 2: Convert\
    \ the date column to datetime\n\n</text>\n<cell>\n# Convert the date column to\
    \ datetime\nmovies_metadata['date'] = pd.to_datetime(movies_metadata['date'])\n\
    </cell", "    if(date){\n        let days_num = Number(date.toString().split('-')[2]);\n\
    \        let months_num = Number(date.toString().split('-')[0]);\n        \n \
    \       if(days_num >= 1 && days_num <= 31 && months_num >= 1 && months_num <=\
    \ 12){\n            return true;\n        }\n        else if(days_num >= 1 &&\
    \ days_num <= 30 && months_num >= 4 && months_num <= 6){\n            return true;\n\
    \        }\n        else if(days_num >= 1 && days_num <= 29 && months_num >= 2\
    \ && months_num <= 4){\n            return true;\n        }\n        else{\n \
    \           return false;\n        }\n    }\n}\n", "\tlet dateArray = date.split('-');\n\
    \tif(dateArray.length == 3){\n\t\tdateArray.pop();\n\t}\n\tlet day = dateArray[0];\n\
    \tlet month = dateArray[1];\n\tlet year = dateArray[2];\n\tif(day < 1 || day >\
    \ 31 || month < 1 || month > 12){\n\t\treturn false;\n\t}\n\tif(month == 2 &&\
    \ year % 4 != 0){\n\t\treturn false;\n\t}\n\tif(month == 2 && year % 4 != 0 &&\
    \ year % 400 == 0){\n\t\treturn false;\n\t}\n\tif(month == 1 || month == 3 ||\
    \ month == 5 || month == 7 || month == 8 || month == 10 || month == 12){\n\t\t\
    if(day < 1 || day > 31){\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\tif(day <\
    \ 1 || day > 30){\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n", "  \
    \  return !!(date && date.length > 0 && date.getMonth()+1 < 12 && date.getFullYear()>1900);\n\
    }\n", "\tif(date!=\"\"){\n\t\tdate=date.split(\"-\");\n\t\tif((date[2]<=29&&date[2]>=1)&&(date[1]<=12&&date[1]>=1)&&(date[0]<=12&&date[0]>=1)&&(date[3]<=12&&date[3]>=1)&&(date[2]==date[1]&&date[1]==date[0]&&date[0]==date[3])){\n\
    \t\t\treturn true;\n\t\t}\n\t\telse{\n\t\t\treturn false;\n\t\t}\n\t}\n\telse{\n\
    \t\treturn false;\n\t}\n}", "    // Write a logic that returns True if the date\
    \ string is in valid date format and False otherwise.\n    var months = [31,28,31,30,31,30,31,31,30,31,30,31];\n\
    \    if(date.length == 0){\n        return false;\n    }\n    var m = date.split(\"\
    -\");\n    if(m.length != 3){\n        return false;\n    }\n    var day = Number(m[2]);\n\
    \    if(day < 1 || day > months[m[0] - 1]){\n        return false;\n    }\n  \
    \  return true;\n}\n", "\tif (date == '') return false;\n\tdate = date.split('-');\n\
    \tlet numDays = new Date(date[2],(date[1]-1),date[0]).getDate();\n\tif (numDays\
    \ > 31 || numDays < 1 ) return false;\n\tlet month = new Date(date[2],(date[1]-1),date[0]).getMonth();\n\
    \tif (month > 12 || month < 1 ) return false;\n\treturn true;\n}\n", "    let\
    \ error = false;\n    if(!date || date === \"\"){\n        error = true;\n   \
    \ }\n    //Date check\n    let split = date.split('-');\n    let day = split[2];\n\
    \    let month = split[1];\n    let year = split[0];\n    let daysInMonth = [31,\
    \ 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    let daysIntoYear = 365;\n\
    \    let daysIntoNextYear = daysIntoYear + daysIntoYear % 4;\n    month = month.toString().length\
    \ !== 2 ? `0${month}` : month;\n    day = day.toString().length !== 2 ? `0${day}`\
    \ : day;\n    let monthInt = parseInt(month);\n    let dayInt = parseInt(day);\n\
    \    let monthString = \"\";\n    let dayString = \"\";\n    //Month check\n \
    \   if (monthInt == 1 || monthInt == 3 || monthInt == 5 || monthInt == 7 || monthInt\
    \ == 8 || monthInt == 10 || monthInt == 12) {\n        monthString = \"01\";\n\
    \    } else {\n        error = true;\n    }\n    //Day check\n    if (dayInt >\
    \ 0 && dayInt < daysInMonth[monthInt]) {\n        dayString = day;\n    } else\
    \ {\n        error = true;\n    }\n    //Year check\n    if (monthInt > 0 && year\
    \ < 10000) {\n        yearString = year.toString();\n    } else if (year < 10000\
    \ && year > 1900) {\n        if (monthInt >= 1 && monthInt <= 12) {\n        \
    \    yearString = `0${year}`;\n        } else {\n            error = true;\n \
    \       }\n    } else {\n        error = true;\n    }\n    let dateCheck = `${monthString}-${dayString}-${yearString}`;\n\
    \    if (dateCheck != date){\n        error = true;\n    }\n    return error;\n\
    }\n", "   var isdate = new Date(date);\n   var day = isdate.getDate();\n   var\
    \ month = isdate.getMonth()+1;\n   var year = isdate.getFullYear();\n   if(day\
    \ < 1 || day > 31)\n      return false;\n   if(month < 1 || month > 12)\n    \
    \  return false;\n   if(day > 30 && month > 2)\n      return false;\n   if(year\
    \ < 1910 || year > 2100)\n      return false;\n   return true;\n}</code>\n<code>\n\
    <input type='text' oninput=\"checkDate()\">\n<p id=\"demo\"></p>\n<button onclick='checkDate()'>Submit</button></code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThanks for your effort. I tried your code. But it\
    \ only works with \"mm-dd-yyyy\" format. The function should work for other formats\
    \ too. For example, \"dd-mm-yyyy\", \"yyyy-mm-dd\". I also tried changing the\
    \ line if(day < 1 || day > 31) to if(day < 1 || day > 30). But it didn't work\
    \ either\n<|/ c |>\n<| c |>\nI updated my answer and added a code snippet which\
    \ checks for any date format. Please check.\n<|/ c |>\n<| c |>\nThanks for your\
    \ effort. I tried your code. But it only works with \"mm-dd-yyyy\" format. The\
    \ function should work for other formats too. For example, \"dd-mm-yyyy\", \"\
    yyyy-mm-dd\". I also tried changing the line if(day < 1 || day > 31) to if(day\
    \ < 1 || day > 30). But it didn't work either\n<|/ c |>\n<| a dscore=0 tags=date,validation,javascript\
    \ |>\nI would suggest you to go with this \n<code>\nvar dateToTest = new Date('2025-01-22');\n\
    var isValid = dateToTest.getFullYear() > 1911 &&\n             dateToTest.getFullYear()\
    \ < 2025 &&\n             dateToTest.getMonth() >= 1 &&\n             dateToTest.getMonth()\
    \ <= 12 &&\n             dateToTest.getDate() >= 1 &&\n             dateToTest.getDate()\
    \ <= 31;\n</code>\n<|/ a |>\n<| a tags=date,validation,javascript |>\nI created\
    \ this function for you. Hope it helps you!\n\n<code>", "\tif( isEmpty(date) ){\n\
    \t\treturn false\n\t}\n\t\n\tif( !isDate(date) ){\n\t\treturn false\n\t}\n\t\n\
    \tif( date.length < 1 ){\n\t\treturn false\n\t}\n\t\n\tconst dateParts = date.split(\"\
    -\")\n\t\n\tconst years = dateParts[2]\n\tconst months = dateParts[0]\n\tconst\
    \ daysInMonth = getDaysInMonth(months,years)\n\t\n\tif( daysInMonth < 1 || daysInMonth\
    \ > 31 ){\n\t\treturn false\n\t}\n\t\n\tif( months < 1 || months > 12 ){\n\t\t\
    return false\n\t}\n\t\n\treturn true\n}\n", "    if(date === \"\"){\n        return\
    \ false;\n    }\n    let day;\n    let month;\n    let year;\n    let valid_date\
    \ = false;\n\n    day = date.split('-')[0] === '00' ? 1 : 0;\n    month = date.split('-')[1]\
    \ === '00' ? 0 : 1;\n    year = date.split('-')[2] === '00' ? 1900 : 2030;\n\n\
    \    if(day < 1 || day > 31 || (month < 1 || month > 12) || (year < 1900 || year\
    \ > 2030)){\n        return false;\n    }\n    if(day < 1 || day > 30 || (month\
    \ < 1 || month > 12) || (year < 1900 || year > 2030)){\n        return false;\n\
    \    }\n    if(day < 1 || day > 29 || (month < 1 || month > 12) || (year < 1900\
    \ || year > 2030)){\n        return false;\n    }\n    if(month < 1 || month >\
    \ 12){\n        return false;\n    }\n\n    valid_date = true;\n    return valid_date;\n\
    }", "  if(date == \"\") return false;\n  if(date.length != 10) return false;\n\
    \  if(date.length < 8 || date.length > 10) return false;\n  if(date.split('-').length\
    \ < 3) return false;\n  if(date.split('/').length < 3 || date.split('/').length\
    \ > 3) return false;\n  if(date.split('-')[0] < 1 || date.split('-')[1] < 1 ||\
    \ date.split('-')[2] < 1) return false;\n  if(date.split('-')[1] == 2 && date.split('-')[2]\
    \ == 0) return false;\n  if(date.split('-')[1] < 12 || date.split('-')[2] < 1\
    \ || date.split('-')[1] > 12 || date.split('-')[2] > 12) return false;\n  if(date.split('-')[1]\
    \ == 2 && date.split('-')[2] == 0) return false;\n  if(date.split('-')[1] == 2\
    \ && date.split('-')[2] == 1) return false;\n  if(date.split('-')[1] == 2 && date.split('-')[2]\
    \ == 2) return false;\n  if(date.split('-')[1] == 3 && date.split('-')[2] == 1\
    \ || date.split('-')[2] == 2 || date.split('-')[2] == 0) return false;\n  if(date.split('-')[1]\
    \ == 3 && date.split('-')[2] == 2 || date.split('-')[2] == 0) return false;\n\
    \  if(date.split('-')[1] == 4 && date.split('-')[2] == 1 || date.split('-')[2]\
    \ == 2 || date.split('-')[2] == 3 || date.split('-')[2] == 0) return false;\n\
    \  if(date.split('-')[1] == 4 && date.split('-')[2] == 2 || date.split('-')[2]\
    \ == 3 || date.split('-')[2] == 0) return false;\n  if(date.split('-')[1] == 5\
    \ && date.split('-')[2] == 1 || date.split('-')[2] == 2 || date.split('-')[2]\
    \ == 3 || date.split('-')[2] == 4 || date.split('-')[2] == 0) return false;\n\
    \  if(date.split('-')[1] == 5 && date.split('-')[2] == 2 || date.split('-')[2]\
    \ == 3 || date.split('-')[2] == 4 || date.split('-')[2] == 0) return false;\n\
    \  if(date.split('-')[1] == 7 && date.split('-')[2] == 1 || date.split('-')[2]\
    \ == 2 || date.split('-')[2] == 3 || date.split('-')[2] == 4 || date.split('-')[2]\
    \ == 5 || date.split('-')[2] == 0 || date.split('-')[2] == 1 || date.split('-')[2]\
    \ == 2 || date.split('-')[2] == 3 || date.split('-')[2] == 4) return false;\n\
    \  if(date.split('-')[1] == 7 && date.split('-')[2] == 2 || date.split('-')[2]\
    \ == 3 || date.split('-')[2] == 4 || date.split('-')[2] == 5 || date.split('-')[2]\
    \ == 0 || date.split('-')[2] == 1 || date.split('-')[2] == 2 || date.split('-')[2]\
    \ == 3 || date.split('-')[2] == 4) return false;\n  if(date.split('-')[1] == 7\
    \ && date.split('", "\tconst valid=true;\n\tif(!date) return valid;\n\tconst date=date.split(\"\
    -\");\n\tconst month=Number(date[0]);\n\tconst day=Number(date[1]);\n\tconst year=Number(date[2]);\n\
    \tif(year<1 || year>9999 || month<1 || month>12 ||day<1 || day>31 ||month==2)\
    \ valid=false;\n\tif(month==4 || month==6 || month==9 || month==11) valid=false;\n\
    \tif(month==2 && day>29) valid=false;\n\treturn valid;\n}", "  var valid_month_date_pattern\
    \ = /^(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])-\\d{4}$/;\n  var valid_day_date_pattern\
    \ = /^(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/;\n  var valid_month_pattern =\
    \ /^(0[1-9]|1[012])$/;\n  var valid_day_pattern = /^(0[1-9]|[12][0-9]|3[01])$/;\n\
    \  var valid_year = /^(0[1-9]|19|20)\\d{2}$/;\n  var valid_date_pattern = /^(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])-(19|20)\\\
    d{2}$/;\n  var valid_year_pattern = /^(0[1-9]|19|20)\\d{2}$/;\n  \n  if (!date\
    \ || !date.match(valid_month_date_pattern) || date.match(/(0[1-9]|[12][0-9]|3[01])-(19|20)\\\
    d{2}$/)) {\n    return false;\n  }\n  \n  var monthArr = date.split(\"-\");\n\
    \  var day = monthArr[1];\n  monthArr.splice(0,1);\n  var year = monthArr.join(\"\
    -\");\n  monthArr.splice(0, 1);\n  \n  var month = monthArr.join(\"-\");\n  var\
    \ day = day.split(\"-\")[0];\n  var date = monthArr.join(\"-\");\n  \n  if (month.length\
    \ == 2 && year.length < 4 || month.length == 4 && year.length < 7) {\n    return\
    \ false;\n  }\n  \n  if (month.length == 2 && day.length < 1 || month.length ==\
    \ 2 && day.length < 3) {\n    return false;\n  }\n  \n  if (month.length == 2\
    \ && day.length < 2 || month.length == 3 && day.length < 5) {\n    return false;\n\
    \  }\n  \n  if (month.length == 2 && day.length < 3 || month.length == 3 && day.length\
    \ < 7) {\n    return false;\n  }\n  \n  if (month.length == 2 && day.length <\
    \ 3 || month.length == 3 && day.length < 9) {\n    return false;\n  }\n  \n  if\
    \ (month.length == 3 && day.length < 5 || month.length == 3 && day.length < 7)\
    \ {\n    return false;\n  }\n  \n  if (month.length == 3 && day.length < 7 ||\
    \ month.length == 4 && day.length < 9) {\n    return false;\n  }\n  \n  if (month.length\
    \ == 3 && day.length < 9) {\n    return false;\n  }\n  \n  if (month.length ==\
    \ 3 && day.length < 10) {\n    return false;\n  }\n  \n  if (month.length == 3\
    \ && day.length < 11) {\n    return false;\n  }\n  \n  if (month.length == 3 &&\
    \ day.length < 12) {\n    return false;\n  }\n  \n  if (month.length == 4 && day.length\
    \ < 1 || month.length == 4 && day.length < 3) {\n    return false;\n  }\n  \n\
    \  if (month.length", "\tdate = date.trim();\n\tlet result = true;\n\tlet error\
    \ = \"\";\n\t\n\tif(date.length == 0 ){\n\t\tresult =  false;\n\t\terror = \"\
    Invalid date format! Date should be in the format: mm-dd-yyyy\";\n\t\tconsole.log(error);\n\
    \t}\n\telse{\n\t\tlet dateArray = date.split(\"-\");\n\t\tlet dateArrayLength\
    \ = dateArray.length;\n\t\tlet month = parseInt(dateArrayArray[0]);\n\t\tlet day\
    \ = parseInt(dateArrayArray[1]);\n\t\tlet year = parseInt(dateArrayArray[2]);\n\
    \t\tlet monthLength = month.length;\n\t\tlet dayLength = day.length;\n\t\tlet\
    \ yearLength = year.length;\n\t\t\n\t\tif(monthLength < 1 || monthLength > 12){\n\
    \t\t\tresult =  false;\n\t\t\terror = \"Invalid date format! Date should be in\
    \ the format: mm-dd-yyyy\";\n\t\t\tconsole.log(error);\n\t\t}\n\t\telse{\n\t\t\
    \tif(monthLength == 1 && monthArray[0] > 12){\n\t\t\t\tresult =  false;\n\t\t\t\
    \terror = \"Invalid date format! Date should be in the format: mm-dd-yyyy\";\n\
    \t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t\telse if(monthLength == 2 && monthArray[0]\
    \ > 12){\n\t\t\t\tresult =  false;\n\t\t\t\terror = \"Invalid date format! Date\
    \ should be in the format: mm-dd-yyyy\";\n\t\t\t\tconsole.log(error);\n\t\t\t\
    }\n\t\t\telse if(monthLength == 3 && monthArray[0] > 12){\n\t\t\t\tresult =  false;\n\
    \t\t\t\terror = \"Invalid date format! Date should be in the format: mm-dd-yyyy\"\
    ;\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t\telse if(monthLength == 5 && monthArray[0]\
    \ > 12){\n\t\t\t\tresult =  false;\n\t\t\t\terror = \"Invalid date format! Date\
    \ should be in the format: mm-dd-yyyy\";\n\t\t\t\tconsole.log(error);\n\t\t\t\
    }\n\t\t\telse if(monthLength == 7 && monthArray[0] > 12){\n\t\t\t\tresult =  false;\n\
    \t\t\t\terror = \"Invalid date format! Date should be in the format: mm-dd-yyyy\"\
    ;\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t\telse if(monthLength == 8 && monthArray[0]\
    \ > 12){\n\t\t\t\tresult =  false;\n\t\t\t\terror = \"Invalid date format! Date\
    \ should be in the format: mm-dd-yyyy\";\n\t\t\t\tconsole.log(error);\n\t\t\t\
    }\n\t\t\telse if(monthLength == 10 && monthArray[0] > 12){\n\t\t\t\tresult = \
    \ false;\n\t\t\t\terror = \"Invalid date format! Date should be in the format:\
    \ mm-dd-yyyy\";\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t\telse if(monthLength\
    \ == 12 && monthArray[0] > 12){\n\t\t\t\tresult =  false;\n\t\t\t\terror = \"\
    Invalid date format! Date should be in the format: mm-dd-yyyy\";\n\t\t\t\tconsole.log(error);",
  "  var pattern = /^\\d{4}\\-\\d{1,2}\\-\\d{1,2}$/\n  if(date === null || date ===\
    \ undefined || date.length === 0){\n    return false\n  }\n  if(date.match(pattern)){\n\
    \    // date format is correct\n    var dateParts = date.split(\"-\")\n    if(dateParts.length\
    \ === 3){\n      return true\n    }\n    // date format is invalid\n    return\
    \ false\n  }\n  // date format is invalid\n  return false\n}\n", "  if(date.length\
    \ != 0){\n    var dateArray = date.split(\"-\");\n    var date = new Date();\n\
    \    \n    // Check whether month is valid\n    if(dateArray[1] != 0 && dateArray[1]\
    \ != 1 && dateArray[1] != 3 && dateArray[1] != 5 && dateArray[1] != 7 && dateArray[1]\
    \ != 8 && dateArray[1] != 10 && dateArray[1] != 12){\n      return false;\n  \
    \  }\n\n    // Check whether days are valid\n    if(dateArray[2] < 1 || dateArray[2]\
    \ > 31){\n      return false;\n    }\n\n    // Check whether year is valid\n \
    \   if(dateArray[0] != 0 && dateArray[0] != 1 && dateArray[0] != 4 && dateArray[0]\
    \ != 6 && dateArray[0] != 9){\n      return false;\n    }\n\n    // Check the\
    \ format\n    if(dateArray[1] == 0){\n      dateArray[1] = 11; // In case month\
    \ is zero, add 11 for January\n    }\n    var day = dateArray[2];\n    var month\
    \ = dateArray[1] - 1;\n    var year = dateArray[0];\n\n    // Check whether month\
    \ day is valid\n    if(day < 1 || day > 30){\n      return false;\n    }\n   \
    \ \n    // Check whether month is valid\n    if(month < 1 || month > 12){\n  \
    \    return false;\n    }\n\n    // Check whether year is valid\n    if(year !=\
    \ 0 && year != 1 && year != 4 && year != 6 && year != 9){\n      return false;\n\
    \    }\n\n    // If valid date\n    return true;\n  }else{\n    return false;\n\
    \  }\n}\n", "    if (!date) return false;\n    var parts = date.split('-');\n\
    \    var days_rules = [\n        function(x) { return x >= 1 && x <= 31; },\n\
    \        function(x) { return x >= 1 && x <= 30; },\n        function(x) { return\
    \ x >= 1 && x <= 29; },\n        function(x) { return x >= 1 && x <= 12; },\n\
    \    ];\n\n    var months_rules = [\n        function(x) { return x >= 1 && x\
    \ <= 12; },\n        function(x) { return x >= 1 && x <= 6; },\n        function(x)\
    \ { return x >= 1 && x <= 9; },\n        function(x) { return x >= 1 && x <= 11;\
    \ },\n    ];\n    var year_rules = [\n        function(x) { return x >= 1 && x\
    \ <= 31; },\n        function(x) { return x >= 1 && x <= 30; },\n        function(x)\
    \ { return x >= 1 && x <= 29; },\n        function(x) { return x >= 1 && x <=\
    \ 12; },\n    ];\n\n    for (var i=0; i<parts.length; i++){\n        var p = parts[i];\n\
    \        var day_rule = days_rules[i];\n        var months_rule = months_rules[i];\n\
    \        var year_rule = year_rules[i];\n\n        if (day_rule(p.length))\n \
    \           continue;\n\n        if (months_rule(p.length))\n            continue;\n\
    \n        if (year_rule(p.length))\n            continue;\n\n        return false;\n\
    \    }\n    return true;\n}\n", "    //Write your code here\n    let dateArr =\
    \ date.split(\"-\");\n    let months = [\"January\", \"February\", \"March\",\
    \ \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\"\
    , \"November\", \"December\"];\n    let monthCheck = false;\n    let dayCheck\
    \ = false;\n    let yearCheck = false;\n    let daysInMonth = [31,28,31,30,31,30,31,30,31,30,31];\n\
    \    let daysInYear = [365,31,30,31,30,31,30,31,30,31,30];\n    let daysInNextYear\
    \ = [0,31,59,90,120,151,181,212,243,273,304,334];\n    \n    if(!dateArr.length\
    \ ||\n    !daysInMonth[months.indexOf(dateArr[1]) - 1] ||\n    !daysInYear[dateArr[1]-1]\
    \ ||\n    !daysInNextYear[dateArr[1]-1] ){\n        return false;\n    }\n\n \
    \   for(let i = 0; i < 12; i++){\n        if(dateArr[0] == months[i + 1]){\n \
    \           if(dateArr[1] == i){\n                if(dateArr[2] > daysInYear[i]){\n\
    \                    monthCheck = true;\n                    break;\n        \
    \        }\n            }else{\n                if(dateArr[2] > daysInNextYear[i]){\n\
    \                    monthCheck = true;\n                    break;\n        \
    \        }\n            }\n        }else{\n            if(dateArr[2] == i){\n\
    \                if(dateArr[2] > daysInMonth[i]){\n                    dayCheck\
    \ = true;\n                    break;\n                }\n            }else{\n\
    \                if(dateArr[2] > daysInYear[i]){\n                    dayCheck\
    \ = true;\n                    break;\n                }\n            }\n    \
    \    }\n    }\n    if(monthCheck){\n        return false;\n    }else if(dayCheck){\n\
    \        return false;\n    }\n    return true;\n}\n", "    //Your code here\n\
    }\n", "    // Your Code Here\n    var months = [\"01\", \"03\", \"05\", \"07\"\
    , \"08\", \"10\", \"12\"];\n    var days = [\"01\", \"03\", \"05\", \"07\", \"\
    08\", \"10\", \"12\"];\n    var year = date.split(\"-\")[2];\n\n    if (date.length<1\
    \ || date.length>32) return false;\n    for (var i=1; i<months.length; i++){\n\
    \        if (months[i]==date.split(\"-\")[1]) return true;\n    }\n    for (var\
    \ i=0; i<days.length; i++){\n        if (days[i]==date.split(\"-\")[2]) return\
    \ true;\n    }\n    return false;\n}\n", "    if (date == undefined || date ==\
    \ null || !(date instanceof String) || !date.isEmpty()) return false;\n    var\
    \ year = date.substring(0,4);\n    var month = date.substring(5,7);\n    var day\
    \ = date.substring(8,10);\n    if (day < 1 || day > 31) return false;\n    if\
    \ (month < 1 || month > 12) return false;\n    if (year.length != 4) return false;\n\
    \    var pattern = /^(\\d{1,2})-(\\d{1,2})-(\\d{4})$/;\n    if (pattern.test(date))\
    \ return false;\n    var days_in_month = [31,28,31,30,31,30,31,30,31,30,31];\n\
    \    var days_in_year = 39;\n    var days_in_year_before = 30;\n    var days_in_year_after\
    \ = 31;\n    var months_in_year = 12;\n    var months_in_years_before = 12;\n\
    \    var months_in_years_after = 12;\n    var day = days_in_month[parseInt(month)-1];\n\
    \    var year = parseInt(year);\n    var valid_year = false;\n    if (month ==\
    \ 2) {\n        year += 1;\n        months_in_years_after = 12;\n        months_in_years_before\
    \ = 12;\n    }\n    if (month == 3 && year%4 == 0) year += 1;\n    var valid_month\
    \ = false;\n    if (day > days_in_month[month-1]) {\n        return false;\n \
    \   }\n    if (day == days_in_month[month-1] && month > 1) {\n        month -=\
    \ 1;\n        valid_month = false;\n    }\n    for(var i = 1;i < month;i++) {\n\
    \        var month = i;\n        var days_in_month_after_this_month = 0;\n   \
    \     var days_in_month_before_this_month = 0;\n        if (month == 2) {\n  \
    \          days_in_month_after_this_month = 30;\n            days_in_month_before_this_month\
    \ = 31;\n        }\n        if (month == 3 && year%4 == 0) year += 1;\n      \
    \  valid_month = false;\n        if (day > days_in_month[month-1]) {\n       \
    \     return false;\n        }\n        if (day == days_in_month[month-1] && month\
    \ > 1) {\n            month -= 1;\n            valid_month = false;\n        }\n\
    \        var last_day = 0;\n        if(days_in_month[month] == 31) {\n       \
    \     last_day = 1;\n        }\n        if(days_in_month[month] == 30) {\n   \
    \         last_day = 2;\n        }\n        for (var j = days_in_month_before_this_month;j\
    \ <= days_in_month_after_this_month;j++) {\n            if(day>days_in_month[month])\
    \ {\n                return false;\n            }\n            day -= days_in_month[month];\n\
    \            if(last_day == 0 && day == 0) {\n                return false;\n\
    \            }\n            if((last_day == 0 && day == 1) || (last_day == 1 &&\
    \ day == 29)) {\n                return false;\n            }\n        }\n   \
    \ }\n    if (year < 1 || year > 9999) return false;\n", "\t// Write your code\
    \ here\n\t\n\tvar m = date.match(/(\\d{2})-?(\\d{1,2})-?(\\d{4})/);\n\t\n\tif(!m){\n\
    \t\treturn false;\n\t}\n\t\n\tvar d = new Date(m[3], m[2]-1, m[1]);\n\t\n\tvar\
    \ daysInMonth = [0,31,28,31,30,31,30,31,30,31,30,31,30];\n\t\n\treturn ((d.getDate()<=daysInMonth[m[1]])\
    \ && m[3] == d.getFullYear());\n}\n", "  if (date == null) return false;\n  return\
    \ validate_string(date) && validate_big_number(date) && validate_date(date);\n\
    }", "    let pattern = /^(\\d{2}|\\d{4})-(\\d{2})-(\\d{4})$/;\n    let pattern2\
    \ = /^(\\d{2}|\\d{4})-(\\d{2})$/;\n    let pattern3 = /^(\\d{4})-(\\d{2})-(\\\
    d{4})$/;\n    let pattern4 = /^(\\d{4})-(\\d{2})$/;\n    let result = pattern.exec(date);\n\
    \    let result2 = pattern2.exec(date);\n    let result3 = pattern3.exec(date);\n\
    \    let result4 = pattern4.exec(date);\n    if(result){\n        return true;\n\
    \    }\n    if(result2){\n        return true;\n    }\n    if(result3){\n    \
    \    return true;\n    }\n    if(result4){\n        return true;\n    }\n    return\
    \ false;\n}", "  // Write your code here\n  if(!date || date === ''){\n    return\
    \ false;\n  }\n  if(isNaN(date)){\n    return false;\n  }\n  if(date.length <\
    \ 5 || date.length > 10){\n    return false;\n  }\n  var days_in_month = days_in_months[date.substr(2,2)];\n\
    \  var days_valid = date.split('-').map(function(day){\n    return parseInt(day);\
    \ // day -> Number\n  });\n  if(days_valid[0] < 1 || days_valid[0] > 31 || days_valid[1]\
    \ < 1 || days_valid[1] > 30){\n    return false;\n  }\n  if(days_valid[0] > days_in_month\
    \ || days_valid[1] > days_in_month){\n    return false;\n  }\n  return true;\n\
    }\n", "  if(date != \"\" && date != \" \"){\n    var d = date.split(\"-\");\n\
    \    if(d.length == 3){\n      for(var i = 0; i < 3; i++){\n        if(d[i].length\
    \ < 1 || d[i].length > 2){\n          return false;\n        }\n      }\n    \
    \  if(d[0] < 1 || d[0] > 12){\n        return false;\n      }\n      if(d[1] <\
    \ 1 || d[1] > 31){\n        return false;\n      }\n      if(d[2] < 1 || d[2]\
    \ > 30){\n        return false;\n      }\n      for(var i = 0; i < 3; i++){\n\
    \        if(d[i] < 1 || d[i] > 12){\n          return false;\n        }\n    \
    \  }\n      for(var i = 0; i < 2; i++){\n        if(d[i] < 1 || d[i] > 28){\n\
    \          return false;\n        }\n      }\n      return true;\n    }\n    return\
    \ false;\n  }\n  return false;\n}", "    let pattern = /^\\d{1,2}\\/\\d{1,2}\\\
    /\\d{4}$/\n    if(!pattern.test(date)){\n        return false;\n    }\n    let\
    \ dateArray = date.split(\"-\")\n    let year = dateArray[0]\n    let month  =\
    \ dateArray[1]\n    let day   = dateArray[2]\n    if(year < 1 || year > 9999 ||\
    \ month < 1 || month > 12 || day < 1 || day > 31) return false;\n    else if(month\
    \ == 2 && day > 30) return false;\n    else if(month == 3 && day > 31) return\
    \ false;\n    else if(month == 4 && day > 31) return false;\n    else if(month\
    \ == 6 && day > 30) return false;\n    else if(month == 9 && day > 31) return\
    \ false;\n    else if(month == 11 && day > 31) return false;\n    else if(month\
    \ == 0 && day > 29) return false;\n    else return true\n}\n", "  // Write your\
    \ code here\n  \n  if(date==\"\"){\n    return false;\n  }\n  if(date.length<2\
    \ || date.length>4){\n    return false;\n  }\n  if(date.length<3 || date.length>2){\n\
    \    return false;\n  }\n  \n  var month=date.substring(1, 2);\n  var day=date.substring(3,\
    \ 5);\n  var year=date.substring(6, 10);\n  \n  if(month<1 || month>12){\n   \
    \ return false;\n  }\n  if(day<1 || day>31){\n    return false;\n  }\n  if(month==2\
    \ && (day<1 || day>29)){\n    return false;\n  }\n  \n  var month_start=new Date(year,\
    \ parseInt(month), 1);\n  \n  if(day>month_start.getDate()){\n    return false;\n\
    \  }\n  \n  return true;\n}", "    try{\n        var d = new Date(date);\n   \
    \ }catch(e){\n        return false;\n    }\n    if(!date.length || d.length !==\
    \ 9){\n        return false;\n    }\n    month = d.getMonth()+1;\n    day = d.getDate();\n\
    \    year = d.getFullYear();\n    if(month < 1 || month > 12){\n        return\
    \ false;\n    }\n    if(day < 1 || day > 31){\n        return false;\n    }\n\
    \    if(year % 400 === 0){\n        if(month < 5 || month > 11){\n           \
    \ return false;\n        }\n        if(day < 1 || day > 30){\n            return\
    \ false;\n        }\n    }else{\n        if(month < 1 || month > 12){\n      \
    \      return false;\n        }\n        if(day < 1 || day > 29){\n          \
    \  return false;\n        }\n    }\n    return true;\n}\n</code>\n<|/ a |>\n<|\
    \ c |>\nYes it is true, but what if it is a string, not a Date. Is it possible\
    \ to parse it first?\n<|/ c |>\n<| c |>\nyes, you can do it using a function like\
    \ `valid_date` I posted above.\n<|/ c |>\n<| c |>\nThanks so much, i was trying\
    \ to do the same thing but somehow i was not able to get my head around it.\n\
    <|/ c |>\n<| a dscore=2 |>\nThe regex is fairly simple:\n<code>\n/^(0[1-9]|[12]\\\
    d|3[01])/\n</code>\nThis checks that the first character is a digit from 0 to\
    \ 9, followed by a digit from 1 to 9, followed by a digit from 0 to 9.\nHowever,\
    \ this approach is not quite adequate for months (and days). It would allow February\
    \ 30, for example.\nHere's a quick snippet to test it:\n\n<code>", "\tvar date_arr\
    \ = date.split(\"-\");\n\tif (date_arr.length != 3){\n\t\treturn false;\n\t}\n\
    \t\n\tlet days_allowed = 1;\n\tif (parseInt(date_arr[1]) > 12) {\n\t\tdays_allowed\
    \ = 30;\n\t}\n\t\n\tif (parseInt(date_arr[1]) < 1) {\n\t\tdays_allowed = 29;\n\
    \t}\n\t\n\tif (parseInt(date_arr[2]) < 1) {\n\t\tdays_allowed = 31;\n\t}\n\t\n\
    \tif (date_arr[1] > 12) {\n\t\tdays_allowed = 30;\n\t}\n\t\n\tif (date_arr[2]\
    \ > 12) {\n\t\tdays_allowed = 31;\n\t}\n\t\n\tif (days_allowed < 1 || days_allowed\
    \ > 31) {\n\t\treturn false;\n\t}\n\t\n\tlet months_allowed = 12;\n\tif (date_arr[1]\
    \ > 0 && date_arr[1] < 12) {\n\t\tmonths_allowed = date_arr[1];\n\t}\n\t\n\tif\
    \ (date_arr[2] > 0 && date_arr[2] < months_allowed) {\n\t\tmonths_allowed = date_arr[2];\n\
    \t}\n\t\n\tif (months_allowed < 1 || months_allowed > 12) {\n\t\treturn false;\n\
    \t}\n\t\n\tvar d = new Date(date_arr[2], date_arr[1]-1, date_arr[0]);\n\treturn\
    \ (d.getFullYear() == date_arr[2] && d.getMonth() == date_arr[1] && d.getDate()\
    \ == date_arr[0]);\n}\n", "  let dateString = date;\n  let dateParts = dateString.split('-');\n\
    \  let month = parseInt(dateParts[1]);\n  let day = parseInt(dateParts[0]);\n\
    \  let year = parseInt(dateParts[2]);\n  \n  if(dateString.trim() == '' || day\
    \ < 1 || day > 31 || month < 1 || month > 12 || year < 1000 || year > 2100){\n\
    \    return false;\n  }\n  \n  if(month == 2 && day > 28){\n    return false;\n\
    \  }\n  \n  if(day > 30){\n    return false;\n  }\n  \n  if(month == 2 && day\
    \ == 31 && year == 2019){\n    return false;\n  }\n  \n  if(month == 2 && day\
    \ == 30){\n    return false;\n  }\n  \n  if(month == 1){\n    if(day > 31 && year\
    \ == 2019){\n      return false;\n    }\n    if(day > 30){\n      return false;\n\
    \    }\n  }\n  \n  if(month == 4){\n    if(day > 31 && year == 2019){\n      return\
    \ false;\n    }\n    if(day > 30){\n      return false;\n    }\n  }\n  \n  if(month\
    \ == 6){\n    if(day > 31 && year == 2019){\n      return false;\n    }\n    if(day\
    \ > 30){\n      return false;\n    }\n  }\n  \n  if(month == 9){\n    if(day >\
    \ 31 && year == 2019){\n      return false;\n    }\n    if(day > 30){\n      return\
    \ false;\n    }\n  }\n  \n  if(month == 11){\n    if(day > 31 && year == 2019){\n\
    \      return false;\n    }\n    if(day > 30){\n      return false;\n    }\n \
    \ }\n  \n  return true;\n}\n", "    // Write code here\n}\n", "    var date_array\
    \ = date.split('-');\n    if(date_array[0] && date_array[1] && date_array[2]){\n\
    \        var dateArray = [date_array[2], date_array[1], date_array[0]];\n    \
    \    var d = new Date(dateArray);\n        if (d.valueOf() > new Date().valueOf())\
    \ {\n            return true;\n        }else{\n            return false;\n   \
    \     }\n    }else{\n        return false;\n    }\n}", "  // Write your code here\n\
    \  date_regex = /^(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])-(19|20)\\d\\d$/;\n\
    \  if(date_regex.test(date)){\n    //return true;\n  }else{\n    //return false;\n\
    \  }\n}\n</code>\n<|/ a dscore=0 tags=javascript,validation,regex |>\n<| a |>\n\
    <code>", "    // Write your code here\n    let month=date.getMonth()+1;\n    if(month>1\
    \ && month<13)\n        return false;\n    if(month>2 && month<14)\n        return\
    \ false;\n    if(month>2 && month<16)\n        return false;\n    if(month>2 &&\
    \ month<21)\n        return false;\n    if(month>2 && month<25)\n        return\
    \ false;\n    if(month>2 && month<30)\n        return false;\n    if(month>2 &&\
    \ month<31)\n        return false;\n    if(month>2 && month<32)\n        return\
    \ false;\n    if(month>2 && month<36)\n        return false;\n    if(month>2 &&\
    \ month<39)\n        return false;\n    if(month>2 && month<41)\n        return\
    \ false;\n    if(month>2 && month<43)\n        return false;\n    if(month>2 &&\
    \ month<47)\n        return false;\n    if(month>2 && month<50)\n        return\
    \ false;\n    if(month>2 && month<52)\n        return false;\n    if(month>2 &&\
    \ month<53)\n        return false;\n    if(month>2 && month<54)\n        return\
    \ false;\n    if(month>2 && month<56)\n        return false;\n    if(month>2 &&\
    \ month<59)\n        return false;\n    if(month>2 && month<60)\n        return\
    \ false;\n    if(month>2 && month<61)\n        return false;\n    if(month>2 &&\
    \ month<63)\n        return false;\n    if(month>2 && month<64)\n        return\
    \ false;\n    if(month>2 && month<65)\n        return false;\n    if(month>2 &&\
    \ month<66)\n        return false;\n    if(month>2 && month<67)\n        return\
    \ false;\n    if(month>2 && month<68)\n        return false;\n    if(month>2 &&\
    \ month<70)\n        return false;\n    if(month>2 && month<72)\n        return\
    \ false;\n    if(month>2 && month<73)\n        return false;\n    if(month>2 &&\
    \ month<74)\n        return false;\n    if(month>2 && month<75)\n        return\
    \ false;\n    if(month>2 && month<80)\n        return false;\n    if(month>2 &&\
    \ month<81)\n        return false;\n    if(month>2 && month<82)\n        return\
    \ false;\n    if(month>2 && month<83)\n        return false;\n    if(month>2 &&\
    \ month<84)\n        return false;\n    if(month>2 && month<85)\n        return\
    \ false;\n    if(month>2 && month<86)\n        return false;\n    if(month>2 &&\
    \ month<89)\n        return false;\n    if(month>2 && month<90)\n        return\
    \ false;\n    if(month>2 && month<91)\n        return false;\n    if(month>2 &&\
    \ month<92)\n        return false;\n    if(month>2 && month<93)\n        return\
    \ false;\n    if(month>2 && month<94)\n        return false;\n    if(month>2 &&\
    \ month<95)\n        return false;\n    if(month>2 && month<", "    var d = new\
    \ Date(date);\n    if(d.getDate() == 0 && d.getMonth() == 0 && d.getFullYear()\
    \ == 0) return False;\n    if(d.getDate() >= 0 && d.getDate() < 31 && d.getMonth()\
    \ == 1 && d.getFullYear() == 2012) return True;\n    if(d.getDate() >= 1 && d.getDate()\
    \ < 31 && d.getMonth() == 3 && d.getFullYear() == 2040) return True;\n    if(d.getDate()\
    \ >= 0 && d.getDate() < 29 && d.getMonth() == 2 && d.getFullYear() == 2020) return\
    \ True;\n    if(d.getDate() >= 0 && d.getDate() < 29 && d.getMonth() == 2 && d.getFullYear()\
    \ == 2020) return True;\n    return False;\n}\n", "  if(date == \"\") return false;\n\
    \  if(!(date.split('-').length == 2)) return false;\n  if(date.split('-')[1].length\
    \ < 1 || date.split('-')[1].length > 12) return false;\n  if(date.split('-')[0]\
    \ !== '0') return false;\n  if(date.split('-')[2] !== '0') return false;\n  if(date.split('-')[1].length\
    \ > date.split('-')[2].length) return false;\n  return true;\n}", "    var validDate;\n\
    \    var dateArray = date.split(\"-\");\n    validDate = false;\n    if(dateArray.length\
    \ < 2){\n        console.log(\"Date format is incorrect\");\n    }\n    if(!dateArray[0]){\n\
    \        console.log(\"Date format is incorrect\");\n    }\n    if(dateArray.length\
    \ != 3){\n        console.log(\"Date format is incorrect\");\n    }\n    var monthArray\
    \ = dateArray[0].split(\"-\");\n    if(monthArray.length > 3){\n        console.log(\"\
    Date format is incorrect\");\n    }\n    if(monthArray.length < 1 || monthArray.length\
    \ > 12){\n        console.log(\"Date format is incorrect\");\n    }\n    var dayArray\
    \ = dateArray[1].split(\"-\");\n    if(dayArray.length > 3){\n        console.log(\"\
    Date format is incorrect\");\n    }\n    if(dayArray.length < 1 || dayArray.length\
    \ > 30){\n        console.log(\"Date format is incorrect\");\n    }\n    if(dayArray.length\
    \ < 1 || dayArray.length > 29){\n        console.log(\"Date format is incorrect\"\
    );\n    }\n    if(!monthArray[0]){\n        console.log(\"Date format is incorrect\"\
    );\n    }\n    if(monthArray.length != 3){\n        console.log(\"Date format\
    \ is incorrect\");\n    }\n    if(monthArray[0] > 12){\n        console.log(\"\
    Date format is incorrect\");\n    }\n    if(monthArray[0] < 1 || monthArray[0]\
    \ > 12){\n        console.log(\"Date format is incorrect\");\n    }\n    if(!dayArray[0]){\n\
    \        console.log(\"Date format is incorrect\");\n    }\n    if(dayArray.length\
    \ != 3){\n        console.log(\"Date format is incorrect\");\n    }\n    if(dayArray[1]\
    \ > 31){\n        console.log(\"Date format is incorrect\");\n    }\n    if(dayArray[1]\
    \ < 1 || dayArray[1] > 30){\n        console.log(\"Date format is incorrect\"\
    );\n    }\n    if(!dayArray[2]){\n        console.log(\"Date format is incorrect\"\
    );\n    }\n    if(dayArray[2] > 30){\n        console.log(\"Date format is incorrect\"\
    );\n    }\n    if(dayArray[2] < 1 || dayArray[2] > 29){\n        console.log(\"\
    Date format is incorrect\");\n    }\n    validDate = true;\n    return validDate;\n\
    }", "    let months = ['01', '03', '05', '07', '08', '10', '12'];\n    let days\
    \ = ['01', '03', '05', '07', '08', '10', '12', '13', '15', '17', '19', '21', '23',\
    \ '25', '27', '29', '31'];\n    let month = ['01', '04', '06', '09', '11', '12'];\n\
    \    let year = date.substring(6, 10);\n    if(date.trim()!=\"\"){\n        let\
    \ date = date.split(\"-\");\n        if(date[2]<1 || date[2]>12){\n          \
    \  return false;\n        }\n        if(date[0]<1 || date[0]>12){\n          \
    \  return false;\n        }\n        if(!months.includes(date[1])){\n        \
    \    return false;\n        }\n        if(!days.includes(date[2])){\n        \
    \    return false;\n        }\n        if(!months.includes(date[0])){\n      \
    \      return false;\n        }\n        if(!months.includes(date[3])){\n    \
    \        return false;\n        }\n        if(date[0]>12 || date[1]>12 || date[2]>31){\n\
    \            return false;\n        }\n        if(date[0]<1 || date[0]>12 || date[1]<1\
    \ || date[1]>31 || date[2]<1 || date[2]>30){\n            return false;\n    \
    \    }\n    }\n    return true;\n}", "  if(date.length <= 0){\n    return false;\n\
    \  }\n  var days = days_in_month(date);\n  var months = months_in_year(date);\n\
    \  if(days > 31 || days == 29 || months < 2 || months > 12){\n    return false;\n\
    \  }\n  if(months == 1 && days_in_month(date) > 28){\n    return false;\n  }\n\
    \  var mm = date.split(\"-\");\n  if(mm[1] < 1 || mm[1] > 12){\n    return false;\n\
    \  }\n  if(mm[2] < 1 || mm[2] > 31){\n    return false;\n  }\n  return true;\n\
    }\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>", "   //Write your code here\n\
    \   // Write your code here\n   // Write your code here\n   // Write your code\
    \ here\n   // Write your code here\n   // Write your code here\n   //Write your\
    \ code here\n   //Write your code here\n   //Write your code here\n   //Write\
    \ your code here\n   //Write your code here\n   //Write your code here\n   //Write\
    \ your code here\n   //Write your code here\n   //Write your code here\n   //Write\
    \ your code here\n   //Write your code here\n   //Write your code here\n   //Write\
    \ your code here\n   //Write your code here\n   //Write your code here\n   //Write\
    \ your code here\n   //Write your code here\n   return true;\n}\n", "    // Write\
    \ code here\n    if(date == null || date == \"\") return false;\n    var year\
    \ = date.split(\"-\")[0];\n    var month = date.split(\"-\")[1];\n    var day\
    \ = date.split(\"-\")[2];\n    if(year < 1 || year > 99) return false;\n    if(month\
    \ < 1 || month > 12) return false;\n    if(month < 4 || month > 2) return false;\n\
    \    if(month == 2) return day < 1 || day > 29;\n    if(month == 2) return day\
    \ < 1 || day > 30;\n    if(month == 2) return day < 1 || day > 31;\n    if(day\
    \ < 1 || day > 31) return false;\n    return true;\n}\n</script>\n</head>\n<body>\n\
    \n<h1>The Date Validator</h1>\n<p id=\"demo\"></p>\n\n<script>", "    date = date.replace(/\\\
    -/g, \"/\");\n    var check = false;\n    var dateArray = date.split(\"-\");\n\
    \    var month = parseInt(dateArray[0]);\n    var day = parseInt(dateArray[1]);\n\
    \    var year = parseInt(dateArray[2]);\n\n    if(month == 1 || month == 3 ||\
    \ month == 5 || month == 7 || month == 8 || month == 10 || month == 12)\n    {\n\
    \        if(day >= 1 && day <= 31)\n        {\n            check = true;\n   \
    \     }\n    }\n    else if(month == 4 || month == 6 || month == 9 || month ==\
    \ 11)\n    {\n        if(day >= 1 && day <= 30)\n        {\n            check\
    \ = true;\n        }\n    }\n    else if(month == 2)\n    {\n        if(day >=\
    \ 1 && day <= 29)\n        {\n            check = true;\n        }\n    }\n  \
    \  else if(month == 0)\n    {\n        if(day >= 1 && day <= 12)\n        {\n\
    \            check = true;\n        }\n    }\n    \n    return check;\n}\n", " \
    \  var check = /^[0-9]{2}[\\-\\/\\.][0-9]{2}[\\-\\/\\.][0-9]{4}$/g;\n   var check_2\
    \ = /^[0-9]{2}[\\-\\/\\.][0-9]{2}[\\-\\/\\.][0-9]{2}$/g;\n   var check_3 = /^[0-9]{2}[\\\
    -\\/\\.][0-9]{2}[\\-\\/\\.][0-9]{2}$/g;\n   var check_4 = /^[0-9]{2}[\\-\\/\\\
    .][0-9]{2}[\\-\\/\\.][0-9]{2}$/g;\n   var check_5 = /^[0-9]{2}[\\-\\/\\.][0-9]{2}[\\\
    -\\/\\.][0-9]{2}$/g;\n   var check_6 = /^[0-9]{2}[\\-\\/\\.][0-9]{2}[\\-\\/\\\
    .][0-9]{2}$/g;\n   var check_7 = /^[0-9]{2}[\\-\\/\\.][0-9]{2}[\\-\\/\\.][0-9]{2}$/g;\n\
    \   var check_8 = /^[0-9]{2}[\\-\\/\\.][0-9]{2}[\\-\\/\\.][0-9]{2}$/g;\n   var\
    \ check_9 = /^[0-9]{2}[\\-\\/\\.][0-9]{2}[\\-\\/\\.][0-9]{2}$/g;\n   var check_10\
    \ = /^[0-9]{2}[\\-\\/\\.][0-9]{2}[\\-\\/\\.][0-9]{2}$/g;\n   var check_11 = /^[0-9]{2}[\\\
    -\\/\\.][0-9]{2}[\\-\\/\\.][0-9]{2}$/g;\n   var check_12 = /^[0-9]{2}[\\-\\/\\\
    .][0-9]{2}[\\-\\/\\.][0-9]{2}$/g;\n   var check_13 = /^[0-9]{2}[\\-\\/\\.][0-9]{2}[\\\
    -\\/\\.][0-9]{2}$/g;\n   var check_14 = /^[0-9]{2}[\\-\\/\\.][0-9]{2}[\\-\\/\\\
    .][0-9]{2}$/g;\n   var check_15 = /^[0-9]{2}[\\-\\/\\.][0-9]{2}[\\-\\/\\.][0-9]{2}$/g;\n\
    \   var check_16 = /^[0-9]{2}[\\-\\/\\.][0-9]{2}[\\-\\/\\.][0-9]{2}$/g;\n   var\
    \ check_17 = /^[0-9]{2}[\\-\\/\\.][0-9]{2}[\\-\\/\\.][0-9]{2}$/g;\n   var check_18\
    \ = /^[0-9]{2}[\\-\\/\\.][0-9]{2}[\\-\\/\\.][0-9]{2}$/g;\n   var check_19 = /^[0-9]{2}[\\\
    -\\/\\.][0-9]{2}[\\-\\/\\.][0-9]{2}$/g;\n   var check_20 = /^[0-9]{2}[\\-\\/\\\
    .][0-9]{2}[\\-\\/\\.", "    if(date.length <= 0){\n        return false;\n   \
    \ }\n    var splitted_date = date.split('-');\n    var date_array = splitted_date[0].split('/');\n\
    \    if(date_array[0].length <= 0 || date_array[1].length <= 0){\n        return\
    \ false;\n    }\n    var date_obj = new Date(date_array[0],parseInt(date_array[1])\
    \ - 1,date_array[2]);\n    var daysInMonth = calcDaysInMonth(date_obj.getMonth(),\
    \ date_obj.getFullYear());\n    if(date_obj.getDate() <= 1 || date_obj.getDate()\
    \ > daysInMonth){\n        return false;\n    }\n    else if(date_obj.getDate()\
    \ <= 29 && date_obj.getMonth() >= 12){\n        return false;\n    }\n    else\
    \ if(date_obj.getDate() <= 31 && date_obj.getMonth() <= 11){\n        return false;\n\
    \    }\n    else if(date_obj.getDate() <= 30 && date_obj.getMonth() <= 9){\n \
    \       return false;\n    }\n    return true;\n}\n", "    var result = true;\n\
    \    var dateArray = date.split('-');\n    var dateYear = parseInt(dateArray[0],\
    \ 10);\n    var dateMonth = parseInt(dateArray[1], 10);\n    var dateDay = parseInt(dateArray[2],\
    \ 10);\n    \n    if(dateYear && dateMonth && dateDay){\n        if(dateYear >=\
    \ 1 && dateYear <= 12){\n            if(dateMonth >= 1 && dateMonth <= 12){\n\
    \                if(dateDay >= 1 && dateDay <= 31){\n                    if(dateMonth\
    \ == 3 && dateDay < 1){\n                        dateDay = 31;\n             \
    \       }\n                    if(dateMonth == 5 && dateDay < 1){\n          \
    \              dateDay = 31;\n                    }\n                    if(dateMonth\
    \ == 7 && dateDay < 1){\n                        dateDay = 31;\n             \
    \       }\n                    if(dateMonth == 8 && dateDay < 1){\n          \
    \              dateDay = 31;\n                    }\n                    if(dateMonth\
    \ == 10 && dateDay < 1){\n                        dateDay = 31;\n            \
    \        }\n                    if(dateMonth == 12 && dateDay < 1){\n        \
    \                dateDay = 31;\n                    }\n                }\n   \
    \             if(dateMonth == 4 && dateDay < 1){\n                    dateDay\
    \ = 30;\n                }\n                if(dateMonth == 6 && dateDay < 1){\n\
    \                    dateDay = 29;\n                }\n                if(dateMonth\
    \ == 9 && dateDay < 1){\n                    dateDay = 29;\n                }\n\
    \                if(dateMonth == 11 && dateDay < 1){\n                    dateDay\
    \ = 29;\n                }\n            }\n        }\n    }\n    result = false;\n\
    \    return result;\n}", "    if (!date) return false; // The function returns\
    \ false if the date is empty\n    if ( date === '' ) return false; // The function\
    \ returns false if the date is an empty string\n    if ( Number( date ) > 31 *\
    \ 30 * 12 + 30 ) return false; // The function returns false if the date is greater\
    \ than 31 months and less than 30 days\n    if ( Number( date ) < 1 ) return false;\
    \ // The function returns false if the date is less than 1\n    if ( Number( date\
    \ ) > 12 ) return false; // The function returns false if the date is greater\
    \ than 12\n    var dateArray = date.split('-');\n    if ( Number( dateArray[0]\
    \ ) < 1 ) return false; // The function returns false if the month is less than\
    \ 1\n    if ( Number( dateArray[1] ) < 1 ) return false; // The function returns\
    \ false if the day is less than 1\n    if ( Number( dateArray[2] ) > 12 ) return\
    \ false; // The function returns false if the year is greater than 12\n    return\
    \ true;\n}\n", "    var valid_date_format = new RegExp(\"^((0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-[0-9]{4})|(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[0-2])-[0-9]{4}$\"\
    );\n    if(date.match(valid_date_format)){\n        return 1;\n    }else{\n  \
    \      return 0;\n    }\n}", "    date = date.split(\"-\")\n    // 1. The date\
    \ string is not empty.\n    if(date.length == 0){\n        return false;\n   \
    \ }\n\n    // 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n    if(date.length > 1){\n        if(date[1]\
    \ < 1 || date[1] > 31 || date[2] < 1 || date[2] > 30){\n            return false;\n\
    \        }\n    }\n    // 3. The months should not be less than 1 or higher than\
    \ 12.\n    if(date.length > 2){\n        if(date[1] < 1 || date[1] > 12){\n  \
    \          return false;\n        }\n    }\n    // 4. The date should be in the\
    \ format: mm-dd-yyyy\n    if(date.length != 3){\n        return false;\n    }\n\
    \n    // 5. The date string should only contain digits from 0-9.\n    if(!/^\\\
    d{1,2}-\\d{1,2}-\\d{4}$/.test(date[0])){\n        return false;\n    }\n    if(!/^\\\
    d{1,2}$/.test(date[1])){\n        return false;\n    }\n    if(!/^\\d{4}$/.test(date[2])){\n\
    \        return false;\n    }\n\n    return true;\n}\n", "  var pattern = /^\\\
    d{1,2}\\/\\d{1,2}\\/\\d{4}$/;\n  if(!pattern.test(date)){\n    return false;\n\
    \  }\n\n  var date_string = date.toString();\n  var num_days_in_month = [31,28,31,30,31,30,31,30,31,30,31,30];\n\
    \  var num_days_in_month_names = ['01','02','03','04','05','06','07','08','09','10','11','12'];\n\
    \  var num_days_in_month_abbr = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\n\
    \n  var date_list = date_string.split(\"-\");\n  if(date_list.length != 3){\n\
    \    return false;\n  }\n\n  var year_string = date_list[0];\n  var num_days =\
    \ date_list[1];\n  var month_string = date_list[2];\n\n  if(year_string.length\
    \ != 4){\n    return false;\n  }\n\n  var year = Number(year_string);\n  var num_months\
    \ = Number(num_days);\n\n  if(num_months < 1 || num_months > 12){\n    return\
    \ false;\n  }\n\n  if(month_string.length != 2 || month_string[0].length != 2\
    \ || month_string[1].length != 2 || month_string[0].length > 2 || month_string[1].length\
    \ > 2 || month_string[0].length < 1 || month_string[1].length < 1){\n    return\
    \ false;\n  }\n\n  if(month_string[1] < 1 || month_string[1] > 12){\n    return\
    \ false;\n  }\n\n  var months = month_string[0].charCodeAt(0) - \"0\".charCodeAt(0);\n\
    \  var days = month_string[1].charCodeAt(0) - \"0\".charCodeAt(0);\n  if(months\
    \ < 0 || months > 11){\n    return false;\n  }\n\n  if(days == 1 || days == 2\
    \ || days == 3 || days == 4 || days == 6 || days == 7 || days == 8 || days ==\
    \ 9 || days == 10 || days == 11){\n    if(months == 1){\n      num_days_in_month[1]++;\n\
    \    }\n    if(months == 3){\n      num_days_in_month[2]++;\n    }\n    if(months\
    \ == 5){\n      num_days_in_month[3]++;\n    }\n    if(months == 7){\n      num_days_in_month[4]++;\n\
    \    }\n    if(months == 8){\n      num_days_in_month[5]++;\n    }\n    if(months\
    \ == 10){\n      num_days_in_month[6]++;\n    }\n    if(months == 12){\n     \
    \ num_days_in_month[7]++;\n    }\n  }\n\n  return true;\n}\n", "    let flag =\
    \ true;\n    if(!date){\n        flag = false;\n    }else{\n        let day =\
    \ date.split(\"-\")[2];\n        let month = date.split(\"-\")[1];\n        let\
    \ year = date.split(\"-\")[0];\n        if(day>31 || month>12 || month<1 || day<1){\n\
    \            flag = false;\n        }\n    }\n    return flag;\n}", "    const\
    \ split_date = date.split(\"-\");\n    const [month,day,year] = split_date;\n\
    \    \n    let months_checked = months_checked(month);\n    let days_checked =\
    \ days_checked(day);\n    \n    months_checked = months_checked[1];\n    days_checked\
    \ = days_checked[1];\n    \n    let num_days;\n    \n    if(month > 12 || month\
    \ < 1){\n        num_days = 29;\n    }else{\n        num_days = months_checked(month);\n\
    \    }\n\n    if(day < 1 || day > num_days){\n        return false;\n    }\n \
    \   \n    if(year < 1800 || year > 2100){\n        return false;\n    }\n    \n\
    \    if(split_date[1] < 1 || split_date[1] > num_days){\n        return false;\n\
    \    }\n    \n    return split_date[2] === year;\n}\n", "    var date_pattern\
    \ = /^\\d{1,2}-\\d{1,2}-\\d{4}$/;\n    if(!date.match(date_pattern))\n       \
    \ return false;\n    var num_days = Date.parse(date).getDate();\n    var months\
    \ = Date.parse(date).getMonth()+1;\n    var years = Date.parse(date).getFullYear();\n\
    \    if(num_days>31 || months>12 || years>years)\n        return false;\n    if(num_days<1\
    \ || months<1 || years<1)\n        return false;\n    return true;\n}\n", "\t\
    let today = new Date();\n\tlet d = new Date(date);\n\tlet year = d.getFullYear();\n\
    \tlet month = d.getMonth() + 1;\n\tlet day = dd.getDate();\n\tlet month_name =\
    \ month_array[month - 1];\n\n\tif (month < 1 || month > 12 || (day < 1 || day\
    \ > 31))\n\t{\n\t\treturn false;\n\t}\n\tif (year < 1900)\n\t{\n\t\treturn false;\n\
    \t}\n\n\tlet m = month_name;\n\n\tif (m === 'January' || m === 'February' || m\
    \ === 'March' || m === 'April' || m === 'May' || m === 'June' || m === 'July'\
    \ || m === 'August' || m === 'September' || m === 'October' || m === 'November'\
    \ || m === 'December')\n\t{\n\t\tmonth = month + 1;\n\t\tm = month_array[month\
    \ - 1];\n\t}\n\n\tlet checkDate = new Date(year, month, day);\n\n\tif (checkDate.getTime()\
    \ < today.getTime())\n\t{\n\t\treturn false;\n\t}\n\n\tif (checkDate.getTime()\
    \ > today.getTime())\n\t{\n\t\treturn true;\n\t}\n\n}", "    var dateArray = date.split(\"\
    -\");\n    for(var i = 0; i < dateArray.length; i++){\n        var x = dateArray[i].split(\"\
    -\");\n        if(dateArray[i] < 1 || dateArray[i].length > 10){\n           \
    \ return false;\n        }\n        else if(dateArray[i] > 12){\n            return\
    \ false;\n        }\n        else if(dateArray[i] < 1 || dateArray[i].length >\
    \ 10){\n            return false;\n        }\n    }\n    return true;\n}\n</code>\n\
    Then I call this function when the user clicks a submit button or when a date\
    \ field is changed as follows:\n<code>\n$('#submit').click(function(){\n    var\
    \ dateToTest = $('#date').val();\n    if(valid_date(dateToTest)){\n        $('#date').css({borderColor:\
    \ \"green\"});\n        submitDate();\n    }else{\n        $('#date').css({borderColor:\
    \ \"red\"});\n    }\n});\n</code>\nThen I use jQuery to validate the date when\
    \ the user submits the form as follows:\n<code>\n$('#my-form').on('submit',function(){\n\
    \    var date = $(\"#date\").val();\n    if(date === \"\"){\n        $('#date').css({borderColor:\
    \ \"red\"});\n        $('#date').css({backgroundColor: \"#FF8080\"});\n    }else\
    \ if(valid_date(date)){\n        $('#date').css({borderColor: \"green\"});\n \
    \       submitDate();\n    }else{\n        $('#date').css({borderColor: \"red\"\
    });\n    }\n});\n</code>\n<|/ a |>\n<| a |>\nHere is what I have done. The date\
    \ validation is done on input event of the textbox and using RegEx you can validate\
    \ date with date patterns. I have also added a button to clear the invalid date\
    \ if the user does not want to type a valid date.\nHere is the working fiddle\
    \ https://jsfiddle.net/h7ujxew2/6/\n<code>\n<!DOCTYPE html>\n<html>\n<head>\n\
    \  <meta charset=\"utf-8\">\n  <title>JS Bin</title>\n</head>\n<body>\n<label>Enter\
    \ date</label>\n<input type=\"text\" id=\"date\">\n<button id=\"btn\">Submit</button>\n\
    <button id=\"clear\">Clear</button>\n<script src=\"https://code.jquery.com/jquery-1.10.2.js\"\
    ></script>\n<script>", "    console.log(date);\n    //Write your code here\n \
    \   if(date === null || date === undefined || date === \"\"){\n        return\
    \ false;\n    }\n    date = date.split(\"-\");\n    let months = MONTH_NAMES.map(x\
    \ => x.toLowerCase());\n    let date_split = date.map(x => x.trim());\n    let\
    \ date_year = date_split[2];\n    let days_split = [\"31\", \"30\", \"29\", \"\
    28\", \"27\", \"26\", \"25\", \"24\", \"23\", \"22\", \"21\", \"20\", \"19\",\
    \ \"18\", \"17\", \"16\", \"15\", \"14\", \"13\", \"12\", \"11\", \"10\", \"9\"\
    , \"8\", \"7\", \"6\", \"5\", \"4\", \"3\", \"2\", \"1\"];\n    let days_year\
    \ = days_split.includes(date_split[1]) ? date_split[1] : \"1\";\n    let days_month\
    \ = days_split.includes(date_split[0]) ? date_split[0] : \"1\";\n    let days_date\
    \ = days_split.includes(date_year) ? date_year : \"1\";\n    \n    let days_total\
    \ = [days_year, days_month, days_date];\n    if(days_total[0] < 1 || days_total[0]\
    \ > 31){\n        return false;\n    }\n    \n    if(days_total[1] < 1 || days_total[1]\
    \ > 30){\n        return false;\n    }\n    \n    if(days_total[2] < 1 || days_total[2]\
    \ > 29){\n        return false;\n    }\n    \n    if(months.includes(date_split[1])\
    \ && months.includes(date_split[0])){\n        return true;\n    }\n    \n   \
    \ return false;\n}\n", "    date = date.replace(/\\./g,'-'); //replace all . with\
    \ -\n    let dateArray = date.split('-');\n    let year = dateArray[0];\n    let\
    \ month = dateArray[1]-1;\n    let day = dateArray[2];\n    let dateArray2 = date.split('-');\n\
    \    let year2 = dateArray2[0];\n    let month2 = dateArray2[1]-1;\n    let day2\
    \ = dateArray2[2];\n    if(year.length == 0){\n        return false;\n    }\n\
    \    if(month2.length == 0){\n        return false;\n    }\n    if(month2 < 1\
    \ || month2 > 12){\n        return false;\n    }\n    if(month < 1 || month >\
    \ 12){\n        return false;\n    }\n    if(day < 1 || day > 30){\n        return\
    \ false;\n    }\n    if(day2 < 1 || day2 > 29){\n        return false;\n    }\n\
    \    if(year2 < 1 || year2 > 30){\n        return false;\n    }\n    if(month\
    \ == 2){\n        if(day2 < 1 || day2 > 28){\n            return false;\n    \
    \    }\n    }\n    return true;\n}\n", "    date = date.split(\" \");\n    date\
    \ = date[0]+date[1]+\"-\"+date[2]+\"-\"+date[3];\n    var dateArray = date.split(\"\
    -\");\n    //Check if array is valid and return True or False\n    for(var i=1;\
    \ i<dateArray.length; i++){\n        if(dateArray[i]<1 || dateArray[i]>12){\n\
    \            return false;\n        }\n    }\n    \n    //check if dateArray.length\
    \ is 3\n    if((dateArray.length!==3 && dateArray.length!==4)||\n        (dateArray.length==3\
    \ && dateArray[1]==0)||\n        (dateArray.length==3 && dateArray[2]<1 || dateArray[2]>29)){\n\
    \        return false;\n    }\n    \n    //check if month is in range\n    if(dateArray[0]>12\
    \ || (dateArray[0]==12 &&dateArray[1]>29)){\n        return false;\n    }\n  \
    \  \n    //check if day is valid\n    for(var i=1; i<dateArray.length; i++){\n\
    \        var day = dateArray[i];\n        if(day<1 || day>31){\n            return\
    \ false;\n        }\n    }\n    \n    return true;\n}\n", "    if(!date){\n  \
    \      return false;\n    }\n    let pattern = '^(0[1-9]|1[0-2])-(0[1-9]|[12]\\\
    d|3[01])-[0-9]{4}$';\n    let result = pattern.test(date);\n    if(!result){\n\
    \        return false;\n    }\n    let dateArr = date.split('-');\n    let dateNum\
    \ = [dateArr[0]-1, dateArr[1]-1];\n    let daysInMonth = [31,28,31,30,31,30,31,30,31,30,31];\n\
    \    let monthArr = ['January','March','May','July','August','October','December'];\n\
    \    let monthNum = [0,1,2,3,4,5,6,7,8,9,10,11];\n    let resultArr = [];\n  \
    \  resultArr.push(dateNum[0]);\n    resultArr.push(dateNum[1]);\n    let result\
    \ = 0;\n    for(let i=0; i<12; i++){\n        result += daysInMonth[i];\n    \
    \    if(dateNum[1] < monthNum[i]){\n            result += daysInMonth[monthNum[i]-1];\n\
    \        }\n    }\n    if(dateNum[1] > 12){\n        result += daysInMonth[monthNum[12]-1];\n\
    \    }\n    if(result == resultArr[0] && resultArr[1] == dateNum[1] && resultArr[2]\
    \ == dateNum[2]){\n        return true;\n    }\n    return false;\n}\n</code>\n\
    <|/ a tags=arrays,string,javascript dscore=1 |>\n<| c |>\nWhat do you mean by\
    \ \"not working\"? Does it throw an error? Please be specific.\n<|/ c |>\n<| c\
    \ |>\nI fixed the error, there was a typo. Have you tested it?\n<|/ c |>\n<| c\
    \ |>\nIt works now but I have an extra zero in my array\n<|/ c |>\n<| a tags=arrays,string,javascript\
    \ |>\n<code>", "  let regex = /^(1[012]|0?[1-9])\\-(0?[1-9]|[12][0-9]|3[01])\\\
    -\\d{4}$/;\n  return regex.test(date);\n}\n", "  // Write your code here\n  let\
    \ [day, month, year] = date.split('-');\n  month = Number(month);\n  day = Number(day);\n\
    \  year = Number(year);\n  if (year === null || day == null || month == null)\
    \ {\n    return false;\n  }\n  let dateArray = [year, month, day];\n  let minDay\
    \ = daysInMonth(month);\n  let maxDay = daysInMonth(month);\n  let isValid = false;\n\
    \  if(day < 1 || day > maxDay || month < 1 || month > 12 || month == 2) {\n  \
    \  return false;\n  }\n  if (year < 1000 || year > 9999) {\n    return false;\n\
    \  }\n  return isValid;\n}\n", "    var month = date.substring(0,2);\n    var\
    \ day = date.substring(3,5);\n    var year = date.substring(6,10);\n    var isvalid\
    \ = true;\n    var daycount = 1;\n    var monthcount = 1;\n    var yearcount =\
    \ 1;\n    var monthnames = [\"January\",\"February\",\"March\",\"April\",\"May\"\
    ,\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"\
    ];\n\n    for(i=1;i<=12;i++){\n        if(i==month){\n            monthcount++;\n\
    \        }\n        else if(month<10){\n            month = \"0\" + month;\n \
    \       }\n    }\n\n    if(month<10){\n        month = \"0\" + month;\n    }\n\
    \n    for(j=1;j<=day;j++){\n        if(j==day){\n            daycount++;\n   \
    \     }\n        else if(day<10){\n            day = \"0\" + day;\n        }\n\
    \    }\n\n    if(day<10){\n        day = \"0\" + day;\n    }\n\n    for(k=1;k<=year;k++){\n\
    \        if(k==year){\n            yearcount++;\n        }\n        else if(year<10){\n\
    \            year = \"0\" + year;\n        }\n    }\n\n    if(year<10){\n    \
    \    year = \"0\" + year;\n    }\n\n    if(daycount<1 || daycount>31 || monthcount<1\
    \ || monthcount>12 || monthnames.length<1 || monthnames.length>12 || month<1 ||\
    \ month>12 || yearcount<1 || yearcount>99 || day<1 || day>30 || month<1 || month>12){\n\
    \        isvalid = false;\n    }\n    else{\n        if(month<1){\n          \
    \  month = \"0\" + month;\n        }\n        if(day<1){\n            day = \"\
    0\" + day;\n        }\n        if(year<1){\n            year = \"0\" + year;\n\
    \        }\n    }\n    return isvalid;\n}\n\nvar today = new Date();\nvar currentYear\
    \ = today.getFullYear();\nvar currentMonth = today.getMonth()+1;\nvar currentDay\
    \ = today.getDate();\nvar currentHour = today.getHours();\nvar currentMinute =\
    \ today.getMinutes();\nvar currentSecond = today.getSeconds();\nvar currentMillisecond\
    \ = today.getMilliseconds();\n\nvar dd = document.getElementById('dd');\nvar mm\
    \ = document.getElementById('mm');\nvar yyyy = document.getElementById('yyyy');\n\
    var hh = document.getElementById('hh');\nvar mmm = document.getElementById('mmm');\n\
    var dddd = document.getElementById('dddd');\nvar ttt = document.getElementById('ttt');\n\
    var aaa = document.getElementById('aaa');\nvar nnn = document.getElementById('nnn');\n\
    var rrr = document.getElementById('rrr');\nvar ", "    //1. Check if date is empty.\n\
    \    if(date=='' || date==undefined)\n        return false;\n    //2. Check if\
    \ the number of days is less than 1 or higher than 31 days.\n    var day = date.getDate();\n\
    \    if(day<1 || day>31)\n        return false;\n    //3. Check if month is less\
    \ than 1 or higher than 12.\n    var month = date.getMonth();\n    if(month<1\
    \ || month>12)\n        return false;\n    //4. Check if date is in the correct\
    \ format.\n    var splitted = date.split('-');\n    var mm = parseInt(splitted[0]);\n\
    \    var dd = parseInt(splitted[1]);\n    var yy = parseInt(splitted[2]);\n  \
    \  var check = new Date(mm,dd-1,yy);\n    if(check.getFullYear()==splitted[2]\
    \ && check.getMonth()==splitted[0] && check.getDate()==splitted[1])\n        return\
    \ true;\n    else\n        return false;\n}\n</code>\n<|/ a dscore=3 |>\n<| a\
    \ dscore=3 |>\nI made a function to validate a date string and check if it meets\
    \ the desired format :\n<code>\nvar validate_date = function(date_string) {\n\
    \    var valid_date = /^(?:(?:31(\\/|-|\\.)(?:0?[13578]|1[02]))\\1|(?:(?:29|30)(\\\
    /|-|\\.)(?:0?[1,3-9]|1[0-2])\\2))(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$|^(?:29(\\/|-|\\\
    .)0?2\\3(?:(?:(?:1[6-9]|[2-9]\\d)?(?:0[48]|[2468][048]|[13579][26])|(?:(?:16|[2468][048]|[3579][26])00))))$|^(?:0?[1-9]|1\\\
    d|2[0-8])(\\/|-|\\.)(?:(?:0?[1-9])|(?:1[0-2]))\\4(?:(?:1[6-9]|[2-9]\\d)?\\d{2})$/;\n\
    \n    if (date_string.length > 0) {\n        if (!date_string.match(valid_date))\
    \ {\n            return false;\n        }\n    }\n    return true;\n};\n</code>\n\
    <|/ a tags=date,javascript |>\n<| c |>\nThis does not validate dates of form `00/00/0000`\n\
    <|/ c |>\n<| a |>\n<code>", "  var day = date.substring(0,2);\n  var month = date.substring(3,5);\n\
    \  var year = date.substring(6,10);\n  month=month==='01'?1:month==='03'?3:month==='05'?5:month==='07'?7:month==='08'?8:month==='10'?10:month==='12'?12:month-1;\n\
    \  var month_days = [31,30,31,30,31,31,30,31,30,31]\n  day = day==='31'?31-month_days[month]:day==='30'?30-month_days[month]:day==='31'?31-month_days[month]:day==='30'?30-month_days[month]:day==='31'?31-month_days[month]:day==='30'?30-month_days[month]:day==='31'?31-month_days[month]:day==='31'?30-month_days[month]:day;\n\
    \  month=month==='01'?1:month==='03'?3:month==='05'?5:month==='07'?7:month==='08'?8:month==='10'?10:month==='12'?12:month-1;\n\
    \  if(day<1 && month>12) return false;\n  if(day<31 && month<12) return false;\n\
    \  if(day<30 && month>2) return false;\n  if(day>29) return false;\n  if(month<1\
    \ || month>12) return false;\n  if(day>31) return false;\n  if(month>12) return\
    \ false;\n  if(day>30) return false;\n  if(year.length!==4 && year.length!==2)\
    \ return false;\n  if(month!=parseInt(month)) return false;\n  if(day!=parseInt(day))\
    \ return false;\n  if(year<1000) return true;\n  if(year>10000) return false;\n\
    \  return true;\n}\n", "  var regex = /^(0[1-9]|1[0-2])-(0[1-9]|1\\d|2\\d|3[01])-(\\\
    d{4})$/;\n  if(regex.test(date)){\n    var d = date.split(\"-\");\n    \n    //\
    \ Checking for number of days > 0\n    if(Number(d[2])>31 || Number(d[2])<1) return\
    \ false;\n    \n    // Checking for months > 0\n    if(Number(d[1])>12 || Number(d[1])<1)\
    \ return false;\n    \n    // Checking for years > 0\n    if(Number(d[2])<1000)\
    \ return false;\n    \n    // All the above conditions are satisfied.\n    return\
    \ true;\n  }else{\n    return false;\n  }\n}</code>\n\nAnd one more thing. There\
    \ are a lot of functions in the snippet which are not being used and can be ignored.\
    \ So, please ignore them. You can use only valid function which I provided earlier.\
    \ Thanks.\n<|/ a |>\n<| c |>\nThank you for this, I appreciate it.\n<|/ c |>\n\
    <| a |>\nA simple regexp would do the job:\n<code>", "\tif(date.length==0)\n\t\
    \treturn false;\n\tif(date.length<=1)\n\t\treturn false;\n\tvar dateArray=date.split(\"\
    -\");\n\tvar month=parseInt(dateArray[0]);\n\tvar day=parseInt(dateArray[1]);\n\
    \tvar year=parseInt(dateArray[2]);\n\tif((month>12)||(month<1))\n\t\treturn false;\n\
    \tif((day>29)||(day<1)||(year>9999))\n\t\treturn false;\n\tif(month==2)\n\t{\n\
    \t\tvar leapMonth=parseInt(dateArray[1])-1;\n\t\tif(day>leapMonth)\n\t\t\treturn\
    \ false;\n\t}\n\treturn true;\n}", "    //Write your code here\n    var regex\
    \ = /^\\d{4}-\\d{2}-\\d{2}/;\n    var regex1 = /^\\d{2}\\/\\d{2}\\/\\d{4}/;\n\
    \    var result = regex.test(date);\n    var result1 = regex1.test(date);\n  \
    \  if(result1 && result){\n        dateArray = date.split('-');\n        var dateArrayLength\
    \ = dateArray.length;\n        if(dateArrayLength == 3){\n            monthArray\
    \ = dateArray[0].split('');\n            if(monthArray.length < 1 || monthArray.length\
    \ > 12){\n                return false;\n            }\n            var dayArray\
    \ = dateArray[1].split('');\n            if(dayArray.length < 1 || dayArray.length\
    \ > 31){\n                return false;\n            }\n            var yearArray\
    \ = dateArray[2].split('');\n            if(yearArray.length < 4 || yearArray.length\
    \ > 4){\n                return false;\n            }\n        }\n        else\
    \ if(dateArrayLength == 4){\n            monthArray = dateArray[0].split('');\n\
    \            if(monthArray.length < 1 || monthArray.length > 12){\n          \
    \      return false;\n            }\n            var dayArray = dateArray[1].split('');\n\
    \            if(dayArray.length < 1 || dayArray.length > 30){\n              \
    \  return false;\n            }\n            var yearArray = dateArray[2].split('');\n\
    \            if(yearArray.length < 4 || yearArray.length > 4){\n             \
    \   return false;\n            }\n        }\n        else if(dateArrayLength ==\
    \ 2){\n            monthArray = dateArray[0].split('');\n            if(monthArray.length\
    \ < 1 || monthArray.length > 12){\n                return false;\n           \
    \ }\n            var dayArray = dateArray[1].split('');\n            if(dayArray.length\
    \ < 1 || dayArray.length > 29){\n                return false;\n            }\n\
    \        }\n        else if(dateArrayLength == 1){\n            monthArray = dateArray[0].split('');\n\
    \            if(monthArray.length < 1 || monthArray.length > 12){\n          \
    \      return false;\n            }\n        }\n        return true;\n    }\n\
    \    return false;\n}\n", "  if(date === '') return false;\n  var day = date.split('-')[0];\n\
    \  var month = date.split('-')[1];\n  var year = date.split('-')[2];\n  if(month\
    \ < 1 || month > 12) return false;\n  if(day < 1 || day > 30) return false;\n\
    \  if(month > 2 && (month < 3 || day > 29)) return false;\n  if(day > 31 && (month\
    \ == 2 || day > 30)) return false;\n  if(month == 2 && day > 28) return false;\n\
    \  return true;\n}\n", "   \n    //Write your code here\n    \n    if(date ==\
    \ \"\"){\n        return false;\n    }\n    if(date.split('-').length != 3){\n\
    \        return false;\n    }\n    if(!days_in_months.includes(date.split('-')[1][0])\
    \ && date.split('-')[1][0] != '0') return false;\n    if(!days_in_months.includes(date.split('-')[2][0])\
    \ && date.split('-')[2][0] != '0') return false;\n    if(date.split('-')[1] !=\
    \ date.split('-')[2]) return false;\n    return true;\n}\n", "  if(!date) return\
    \ false\n  \n  let dateParts = date.split('-')\n  let dateLength = dateParts.length\n\
    \  \n  if(dateLength < 2 || dateLength > 5) return false;\n  \n  let monthIndex\
    \ = dateParts[1]\n  let dayIndex = dateParts[2]\n  \n  if(monthIndex < 1 || monthIndex\
    \ > 12) return false;\n  \n  if(dayIndex < 1 || dayIndex > 31) return false;\n\
    \  \n  return true;\n}", "    var parts = date.split(\"-\")\n    var dateCheck\
    \ = parts[0]\n    var months = parts[1]\n    var day = parts[2]\n    var year\
    \ = parts[3]\n    months = months.split(\"/\")\n    for(var i = 0; i < 12; i++){\n\
    \        months[i] = months[i]-1\n    }\n    var total = 0\n    for(var i = 0;\
    \ i < months.length; i++){\n        total = total + months[i]\n    }\n    for(var\
    \ i = 0; i < months.length; i++){\n        if(months[i]<1 || months[i]>12){\n\
    \            return false\n        }\n    }\n    if(day<1 || day>total){\n   \
    \     return false\n    }\n    \n    for(var j = 0; j < 3; j++){\n        if(j==0\
    \ && day == 31 || j==1 && day == 30 || j==2 && day == 29){\n            return\
    \ false\n        }\n        if(day > total){\n            return false\n     \
    \   }\n    }\n    \n    for(var k = 0; k < 4; k++){\n        if(k == 0 && months\
    \ == 11 || k == 1 && months == 10 || k == 2 && months == 9){\n            return\
    \ false\n        }\n        if(months > 12){\n            return false\n     \
    \   }\n    }\n    \n    for(var i = 0; i < months.length; i++){\n        if(months[i]<1\
    \ || months[i]>12){\n            return false\n        }\n    }\n    \n    var\
    \ currentYear = year\n    if(year < 1 || year > 9999){\n        return false\n\
    \    }\n    if(months[0] == 1 && months[1] == 1 && months[2] == 1){\n        if(day\
    \ > 31 || day < 1){\n            return false\n        }\n    }\n    if(months[0]\
    \ == 2 && months[1] == 2){\n        if(day > 28 || day < 1){\n            return\
    \ false\n        }\n    }\n    if(months[0] == 4){\n        if(day > 31 || day\
    \ < 1){\n            return false\n        }\n    }\n    if(months[0] == 5){\n\
    \        if(day > 30 || day < 1){\n            return false\n        }\n    }\n\
    \    if(months[0] == 6){\n        if(day > 30 || day < 1){\n            return\
    \ false\n        }\n    }\n    if(months[0] == 9){\n        if(day > 30 || day\
    \ < 1){\n            return false\n        }\n    }\n    if(months[0] == 10){\n\
    \        if(day > 31 || day < 1){\n            return false\n        }\n    }\n\
    \    if(months[0] == 12){\n        if(day > 31 || day < 1){\n            return\
    \ false\n        }\n    }\n    \n    for(var m = 0; m < 3; m++){\n        if(months[m]\
    \ == 1){\n            if(day > 30 && day < 1){\n                return false\n\
    \            }\n        }\n        else if(months[m] == 2){\n", "    var day=date[0];\n\
    \    var month=date[1];\n    var year=date[2];\n    if(!date || date.length !=\
    \ 10) return false;\n    month=month-0;\n    if(month < 1 || month > 12) return\
    \ false;\n    day=day-0;\n    if(day < 1 || day > 31) return false;\n    month=month+0;\n\
    \    year=year+0;\n    var daysInMonth=[31,28,31,30,31,30,31,30,31,30];\n    if(!daysInMonth[month])\
    \ return false;\n    day=day+daysInMonth[month];\n    year=year+day/31;\n    month=month+month/12;\n\
    \    month=month+month/12;\n    if(!year) return false;\n    year=year+year/4-1;\n\
    \    if(month == 2) return year%4 != 0;\n    return month%4 != 0;\n}", "  if(date.length\
    \ ==0){\n    return false;\n  }\n  let day;\n  let month;\n  let year;\n  if(!is_date(date)){\n\
    \    return false;\n  }\n  day = get_number_from_string(date,\"-\",1);\n  if(!is_int(day)){\n\
    \    return false;\n  }\n  month = get_number_from_string(date,\"-\",2);\n  if(!is_int(month)){\n\
    \    return false;\n  }\n  year = get_number_from_string(date,\"-\",3);\n  if(!is_int(year)){\n\
    \    return false;\n  }\n  if(day < 1 || day > 31){\n    return false;\n  }\n\
    \  if(month < 1 || month > 12){\n    return false;\n  }\n  if(month == 2 && is_leap(year)\
    \ == false){\n    return false;\n  }\n  if(day > 30){\n    return false;\n  }\n\
    \  return true;\n}\n", "\tvar check = false;\n\tif(!date) return false;\n\tif(date\
    \ === \"\"){\n\t\treturn false;\n\t}\n\n\tvar year = date.slice(0,4);\n\tvar month\
    \ = date.slice(5,7);\n\tvar day = date.slice(8,10);\n\n\tvar months = [\"01\"\
    ,\"02\",\"03\",\"04\",\"05\",\"06\",\"07\",\"08\",\"09\",\"10\",\"11\",\"12\"\
    ];\n\tmonth = months.indexOf(month);\n\tif(month < 1 || month > 12) return false;\n\
    \n\tvar min_days = 31;\n\tvar max_days = 29;\n\tvar min_month = 1;\n\tvar max_month\
    \ = 12;\n\t\n\tif(month == 2){\n\t\tvar max_days_allowed = 31;\n\t\tvar min_days_allowed\
    \ = 30;\n\t}\n\telse{\n\t\tvar max_days_allowed = 30;\n\t\tvar min_days_allowed\
    \ = 31;\n\t}\n\n\tvar days = [31,30,29,28,31,30,29,28,31,30,29,28];\n\tday = days.indexOf(day);\n\
    \tif(day < 1 || day > max_days) return false;\n\t\n\tvar min_year = 2010;\n\t\
    var max_year = 2040;\n\t\n\tif(year == 0){\n\t\tvar min_year_allowed = 2000;\n\
    \t\tvar max_year_allowed = 2040;\n\t}\n\telse{\n\t\tvar min_year_allowed = 2010;\n\
    \t\tvar max_year_allowed = 2040;\n\t}\n\t\n\tif(year < min_year) return false;\n\
    \tif(year > max_year) return false;\n\t\n\tif(month < min_month) return false;\n\
    \tif(month > max_month) return false;\n\t\n\tif(day < min_days) return false;\n\
    \tif(day > max_days) return false;\n\t\n\treturn true;\n}\n", "\tvar dateParts\
    \ = date.split('-');\n\tvar dateParts_Length = dateParts.length;\n\t\n\tif (dateParts_Length\
    \ < 3){\n\t\treturn false;\n\t}\n\t\n\tif (dateParts_Length > 3){\n\t\treturn\
    \ false;\n\t}\n\t\n\tif (dateParts[0].length == 0){\n\t\treturn false;\n\t}\n\t\
    \n\tif (dateParts[1].length < 1 || dateParts[1].length > 2){\n\t\treturn false;\n\
    \t}\n\t\n\tif (dateParts[2].length != 4){\n\t\treturn false;\n\t}\n\t\n\tvar d\
    \ = new Date(date);\n\tvar m = d.getMonth();\n\tvar d = d.getDate();\n\t\n\tvar\
    \ month = dateParts[0];\n\tvar day = dateParts[1];\n\tvar year = dateParts[2];\n\
    \t\n\tif (month == \"01\"){\n\t\tif (day < 1 || day > 31){\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\telse if (month == \"03\"){\n\t\tif (day < 1 || day > 30){\n\t\t\t\
    return false;\n\t\t}\n\t}\n\telse if (month == \"05\"){\n\t\tif (day < 1 || day\
    \ > 29){\n\t\t\treturn false;\n\t\t}\n\t}\n\telse if (month == \"07\"){\n\t\t\
    if (day < 1 || day > 31){\n\t\t\treturn false;\n\t\t}\n\t}\n\telse if (month ==\
    \ \"08\"){\n\t\tif (day < 1 || day > 30){\n\t\t\treturn false;\n\t\t}\n\t}\n\t\
    else if (month == \"10\"){\n\t\tif (day < 1 || day > 31){\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\telse if (month == \"12\"){\n\t\tif (day < 1 || day > 31){\n\t\t\t\
    return false;\n\t\t}\n\t}\n\telse if (month == \"04\"){\n\t\tif (day < 1 || day\
    \ > 30){\n\t\t\treturn false;\n\t\t}\n\t}\n\telse if (month == \"06\"){\n\t\t\
    if (day < 1 || day > 29){\n\t\t\treturn false;\n\t\t}\n\t}\n\telse if (month ==\
    \ \"09\"){\n\t\tif (day < 1 || day > 30){\n\t\t\treturn false;\n\t\t}\n\t}\n\t\
    else if (month == \"11\"){\n\t\tif (day < 1 || day > 29){\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\telse if (month == \"02\"){\n\t\tif (day < 1 || day > 29){\n\t\t\t\
    return false;\n\t\t}\n\t}\n\telse if (month == \"05\"){\n\t\tif (day < 1 || day\
    \ > 30){\n\t\t\treturn false;\n\t\t}\n\t}\n\telse if (month == \"08\"){\n\t\t\
    if (day < 1 || day > 30){\n\t\t\treturn false;\n\t\t}\n\t}\n\telse if (month ==\
    \ \"10\"){\n\t\tif (day < 1 || day > 30){\n\t\t\treturn false;\n\t\t}\n\t}\n\t\
    else if (month == \"12\"){\n\t\tif (day < 1 || day > 30){\n\t\t\treturn false;\n",
  "  let dateArr= date.split(\"-\");\n  let monthArr = dateArr[0].split(\"-\");\n\
    \  let dateArr_check = monthArr[0].split(\"-\");\n  if(dateArr.length!=3 || dateArr_check.length!=3\
    \ || monthArr.length!=3 || monthArr[0].length!=3 || dateArr[0].length!=3 || monthArr[1].length!=3\
    \ || dateArr[1].length!=3 || monthArr[2].length!=3 || dateArr[2].length!=3)\n\
    \    return false;\n  let yearArr = dateArr[1].split(\"-\");\n  if(yearArr.length!=4\
    \ || yearArr[0].length!=4 || yearArr[1].length!=4 || yearArr[2].length!=4 || yearArr[3].length!=4)\n\
    \    return false;\n  let dayArr = dateArr[2].split(\"-\");\n  if(dayArr.length!=3\
    \ || dayArr[0].length!=3 || dayArr[1].length!=3 || dayArr[2].length!=3)\n    return\
    \ false;\n  \n  if(dateArr[0]>monthArr[1] || dateArr[1]>monthArr[2] || dateArr[2]>monthArr[3]\
    \ || dateArr[0]>monthArr[1] || dateArr[1]>monthArr[2] || dateArr[2]>monthArr[3])\n\
    \    return false;\n  if(monthArr[0]>dayArr[0] || monthArr[1]>dayArr[1] || monthArr[2]>dayArr[2]\
    \ || monthArr[3]>dayArr[3])\n    return false;\n  if(dayArr[0]>monthArr[1]+1 ||\
    \ dayArr[1]>monthArr[2]+1 || dayArr[2]>monthArr[3]+1 || dayArr[0]>monthArr[1]+1\
    \ || dayArr[1]>monthArr[2]+1 || dayArr[2]>monthArr[3]+1)\n    return false;\n\
    \  \n  if(dateArr[1]==yearArr[1] && dateArr[2]==dayArr[2])\n    return true;\n\
    \  else if(dateArr[1]<yearArr[1] || dateArr[1]>yearArr[1]+10 || dateArr[1]<yearArr[2]+1\
    \ || dateArr[1]>yearArr[2]+10 || dateArr[2]<dayArr[1]+1 || dateArr[2]>dayArr[1]+10)\n\
    \    return false;\n  else if(monthArr[1]<dayArr[1]+1 || monthArr[1]>dayArr[1]+10\
    \ || monthArr[2]<dayArr[2]+1 || monthArr[2]>dayArr[2]+10 || monthArr[3]<dayArr[3]+1\
    \ || monthArr[3]>dayArr[3]+10)\n    return false;\n  else if(monthArr[1]==dayArr[1]\
    \ && monthArr[2]==dayArr[2] && monthArr[3]==dayArr[3])\n", "    let parts = date.split('-');\n\
    \    if(parts.length !== 3){\n        return false;\n    }\n    \n    let day\
    \ = parseInt(parts[0]);\n    let month = parseInt(parts[1]);\n    let year = parseInt(parts[2]);\n\
    \    let daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n   \
    \ \n    if(day < 1 || day > daysInMonth[month] || month < 1 || month > 12){\n\
    \        return false;\n    }\n    \n    if(month == 2){\n        // February\
    \ cannot have less than or equal to 28\n        if(day <= 28){\n            return\
    \ false;\n        }\n        // February can have 29 or 30\n        if(day > 28\
    \ && day <= 30){\n            return false;\n        }\n    }\n    \n    if(year\
    \ < 1000 || year > 9999){\n        return false;\n    }\n    \n    return true;\n\
    }", "    var result = true;\n    var year = date.getFullYear();\n    var month\
    \ = date.getMonth() + 1;\n    var day = date.getDate();\n    var dateStr = `${month}-${day}-${year}`;\n\
    \    if(dateStr.trim().length !== 0 && checkNotEmptyDate(dateStr)){\n        var\
    \ dateArr = dateStr.split('-');\n        var daysInMonth = getDaysInMonth(month);\n\
    \        var dateInValidFormat = checkDateFormat(dateArr);\n        var daysInValidFormat\
    \ = getDaysNotInRange(dateArr);\n        result &= dateInValidFormat & daysInValidFormat;\n\
    \    }\n    return result;\n}\n", "\tlet dateArray = date.split('-');\n\tlet dateLength\
    \ = dateArray.length;\n\tif(dateLength>=1){\n\t\tlet daysInMonth = [31,28,31,30,31,30,31,30,31,30,31,30,31];\n\
    \t\tlet monthsInYear = [0,31,28,31,30,31,30,31,30,31,30,31,30,31];\n\t\tlet isLeapMonth\
    \ = checkLeapMonth(dateArray[0]);\n\t\t\n\t\tdateArray = dateArray.map((date,index)=>{\n\
    \t\t\tdate = date.trim();\n\t\t\tif(date.length > 0){\n\t\t\t\tif(index==0){\n\
    \t\t\t\t\tif(date.startsWith('1')){\n\t\t\t\t\t\tdate = '1-'+date;\n\t\t\t\t\t\
    }else{\n\t\t\t\t\t\tdate = '0'+date;\n\t\t\t\t\t}\n\t\t\t\t}else if(index>1){\n\
    \t\t\t\t\tif(date.startsWith('0')){\n\t\t\t\t\t\tdate = ''+date;\n\t\t\t\t\t}\n\
    \t\t\t\t}\n\t\t\t\tif(date.length > 4){\n\t\t\t\t\tif(dateArray[index-1].length>4){\n\
    \t\t\t\t\t\tif(dateArray[index-1].startsWith('1')){\n\t\t\t\t\t\t\tdateArray[index-1]\
    \ = '0'+dateArray[index-1];\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tdateArray[index-1]\
    \ = '1-'+dateArray[index-1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet checkMonth\
    \ = new Date(dateArray[index-1]).getMonth();\n\t\t\t\t\tif(checkMonth>12)\n\t\t\
    \t\t\t\tcheckMonth -= 12;\n\t\t\t\t\tlet checkDay = new Date(dateArray[index-1]).getDate();\n\
    \t\t\t\t\tif(checkMonth>4)\n\t\t\t\t\t\tcheckMonth -= 4;\n\t\t\t\t\tif(checkMonth>2){\n\
    \t\t\t\t\t\tif(checkMonth>1){\n\t\t\t\t\t\t\tdateArray[index-1] = dateArray[index-1]+'-'+(monthsInYear[checkMonth-1]+'-'+date);\n\
    \t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tdateArray[index-1] = (monthsInYear[checkMonth-1]+'-'+date);\n\
    \t\t\t\t\t\t}\n\t\t\t\t\t}else{\n\t\t\t\t\t\tdateArray[index-1] = dateArray[index-1]+'-'+date;\n\
    \t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tif(isLeapMonth){\n\t\t\t\t\t\tif(date.startsWith('1')){\n\
    \t\t\t\t\t\t\tdate = '1-'+date;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tdate = '0'+date;\n\
    \t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif(dateArray[index-1].length>4){\n\t\t\t\
    \t\t\tif(dateArray[index-1].startsWith('1')){\n\t\t\t\t\t\t\tdateArray[index-1]\
    \ = '0'+dateArray[index-1];\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tdateArray[index-1]\
    \ = '1-'+dateArray[index-1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdateArray[index-1]\
    \ = dateArray[index-1]+'-'+date;\n\t\t\t\t}\n\t\t\t}else{\n\t\t\t\tdateArray[index]\
    \ = '';\n\t\t\t}\n\t\t\treturn dateArray[index", "\t// Write code here\n}\n",
  "    const daysInMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n   \
    \ // The variable 'valid' indicates if the date is valid or not.\n    const valid\
    \ = false;\n    //Get the date\n    const dateArray = date.split('-');\n    //\
    \ The variable 'year' contains the year of the date.\n    let year = dateArray[2];\n\
    \    // The variable 'month' contains the month of the date.\n    let month =\
    \ dateArray[1];\n    // The variable 'day' contains the day of the date.\n   \
    \ let day = dateArray[0];\n    // Checking the conditions \n    \n    // 1. The\
    \ date string is not empty.\n    if (date.length === 0){\n        valid = false;\n\
    \    }\n    // 2. The number of days is not less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n    else if(day < 1 || day > daysInMonth[month]){\n\
    \        valid = false;\n    }\n    // 3. The months should not be less than 1\
    \ or higher than 12.\n    else if(month < 1 || month > 12){\n        valid = false;\n\
    \    }\n    // 4. The date should be in the format: mm-dd-yyyy\n    else if(!(month\
    \ == 2 && day > 31)){\n        valid = false;\n    }\n    // 5. The year should\
    \ not be negative.\n    else if(year < 0){\n        valid = false;\n    }\n  \
    \  // 6. The year should not be greater than the previous year.\n    else if(year\
    \ > new Date().getFullYear()){\n        valid = false;\n    }\n    // 7. There\
    \ are valid date strings in the date string.\n    else {\n        valid = true;\n\
    \    }\n    return valid;\n}\n", "    try{\n        if(date==\"\") return false;\n\
    \        var dateArray = date.split(\"-\");\n        var validDays=false;\n  \
    \      var validMonths=false;\n        var validYears=false;\n        \n     \
    \   \n        if(dateArray.length>=2){\n            if(dateArray.length==4){\n\
    \                if(dateArray[0]==\"\" || dateArray[1]==\"\" || dateArray[2]==\"\
    \") return false;\n                validDays=checkDayNumber(dateArray[0],dateArray[1]);\n\
    \                validMonths=checkMonthNumber(dateArray[2],dateArray[3]);\n  \
    \              validYears=checkYearNumber(dateArray[1],dateArray[2]);\n      \
    \      }else if(dateArray.length==5){\n                if(dateArray[0]==\"\" ||\
    \ dateArray[1]==\"\" || dateArray[2]==\"\" || dateArray[3]==\"\") return false;\n\
    \                validDays=checkDayNumber(dateArray[0],dateArray[1]);\n      \
    \          validMonths=checkMonthNumber(dateArray[2],dateArray[3]);\n        \
    \        validYears=checkYearNumber(dateArray[1],dateArray[2]);\n            }else\
    \ if(dateArray.length==6){\n                if(dateArray[0]==\"\" || dateArray[1]==\"\
    \" || dateArray[2]==\"\" || dateArray[3]==\"\" || dateArray[4]==\"\") return false;\n\
    \                validDays=checkDayNumber(dateArray[0],dateArray[1]);\n      \
    \          validMonths=checkMonthNumber(dateArray[2],dateArray[3]);\n        \
    \        validYears=checkYearNumber(dateArray[1],dateArray[2]);\n            }else\
    \ if(dateArray.length==7){\n                if(dateArray[0]==\"\" || dateArray[1]==\"\
    \" || dateArray[2]==\"\" || dateArray[3]==\"\" || dateArray[4]==\"\" || dateArray[5]==\"\
    \") return false;\n                validDays=checkDayNumber(dateArray[0],dateArray[1]);\n\
    \                validMonths=checkMonthNumber(dateArray[2],dateArray[3]);\n  \
    \              validYears=checkYearNumber(dateArray[1],dateArray[2]);\n      \
    \      }\n        }else if(dateArray.length==3){\n            if(dateArray[0]==\"\
    \" || dateArray[1]==\"\" || dateArray[2]==\"\") return false;\n            validDays=checkDayNumber(dateArray[0],dateArray[1]);\n\
    \            validMonths=checkMonthNumber(dateArray[2],dateArray[3]);\n      \
    \      validYears=checkYearNumber(dateArray[1],dateArray[2]);\n        }\n   \
    \     \n        if(!validDays || !validMonths || !validYears) return false;\n\
    \        \n        var today = new Date();\n        if(today.getDate()>validDays\
    \ || today.getMonth()>validMonths || today.getFullYear()>validYears) return false;\n\
    \        \n        return true;\n    }catch(err){\n        ", "    var day = date[0].split('-');\n\
    \    var months = date[0].split('-');\n    if(date.length != 3 || months.length\
    \ != 3 || months[0] == '0' || months[1] == '0' || months[2] == '0' || day[0] >\
    \ '31' || day[1] > '31' || day[2] > '31'){\n        return false;\n    }\n   \
    \ var months = [];\n    for(var i = 0; i < months.length; i++){\n        if(months[i]\
    \ <= '12'){\n            months[i] = '0' + months[i];\n        }\n    }\n    if(months[1]\
    \ > '12' || months[2] > '12'){\n        return false;\n    }\n    var days = [];\n\
    \    for(var j = 0; j < day.length; j++){\n        days[j] = day[j].split('-');\n\
    \        if(days[j][1] > '30' || days[j][2] > '30'){\n            return false;\n\
    \        }\n        if(days[j][1] > '29' || days[j][0] > '31'){\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n</code>\n<|/ a tags=javascript\
    \ |>\n<| c |>\nPlease explain the downvote.\n<|/ c |>\n<| c |>\nThank you. This\
    \ was extremely helpful and i learned some new things. I actually thought this\
    \ was a very easy problem to solve but i couldn't think this way.\n<|/ c |>\n\
    <| c |>\nThank you for giving me feedback. I'm glad I could help. I really wish\
    \ I could learn Javascript by myself.\n<|/ c |>\n<| c |>\nYour answer is great\
    \ and very helpful. Thank you. Upvoted\n<|/ c |>\n<| a |>\n<code>", "    if (date\
    \ == \"\"){\n        return false;\n    }\n    // If the number of days is not\
    \ less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the number\
    \ of days is not less than 1 or higher than 30 days for months 4,6,9,11. And,\
    \ the number of days is not less than 1 or higher than 29 for the month 2.\n \
    \   if (days_not_less_than_1_month(date) == true || days_not_less_than_30_days(date)\
    \ == true || days_not_less_than_29_days(date) == true || days_not_less_than_30_days_month(date)\
    \ == true){\n        return false;\n    }\n\n    // If the months should not be\
    \ less than 1 or higher than 12.\n    if (months_not_less_than_1_month(date) ==\
    \ true || months_not_less_than_12_month(date) == true){\n        return false;\n\
    \    }\n\n    // If the date should be in the format: mm-dd-yyyy\n    if (date_pattern.test(date)\
    \ == false){\n        return false;\n    }\n    \n    return true;\n}\n", "  let\
    \ splitted_date = date.split(\"-\")\n  if(splitted_date.length !== 3){\n    return\
    \ false\n  }\n\n  if(splitted_date[0].length < 1 || splitted_date[0].length >\
    \ 2){\n    return false\n  }\n\n  if(splitted_date[1].length < 1 || splitted_date[1].length\
    \ > 2){\n    return false\n  }\n\n  let month_digit = splitted_date[1][0]\n  if(month_digit\
    \ < \"1\" || month_digit > \"12\"){\n    return false\n  }\n\n  if(splitted_date[0]\
    \ < 1 || splitted_date[0] > 12){\n    return false\n  }\n\n  if(splitted_date[1]\
    \ < 1 || splitted_date[1] > 12){\n    return false\n  }\n\n  if(splitted_date[2]\
    \ < 1 || splitted_date[2] > 31) {\n    return false\n  }\n\n  return true\n}\n",
  "  if(date.length==0)\n    return false;\n  \n  var day=date.split('-')[1];\n  if(day>31\
    \ && day<1){\n    console.log(\"The date you entered is not valid, please enter\
    \ the date in the format mm-dd-yyyy\");\n    return false;\n  }\n\n  var month=date.split('-')[0];\n\
    \  if(month>12 && month<1){\n    console.log(\"The date you entered is not valid,\
    \ please enter the date in the format mm-dd-yyyy\");\n    return false;\n  }\n\
    \n  var year=date.split('-')[2];\n  if(year>1000 && year<1900){\n    console.log(\"\
    The date you entered is not valid, please enter the date in the format mm-dd-yyyy\"\
    );\n    return false;\n  }\n\n  return true;\n}\n", "    let pattern = /^(\\d{1,2})[\\\
    /-](\\d{1,2})[\\/-](\\d{4})$/;\n    return pattern.test(date);\n}\n", "  date\
    \ = date.split(\"-\");\n  if(date.length !== 3){\n    return false;\n  }\n  for(var\
    \ i = 0; i < date.length; i++){\n    if(date[i] < 1 || date[i] > 12){\n      return\
    \ false;\n    }\n  }\n  for(var i = 0; i < date.length; i++){\n    if(date[i]\
    \ < 1 || date[i] > 31 || (date[i] > 29 && date[i] < 30) || (date[i] > 31 && date[i]\
    \ < 32)){\n      return false;\n    }\n  }\n  if(date[2] < 1 || date[2] > 12){\n\
    \    return false;\n  }\n  return true;\n}", "    // Write code here\n    let\
    \ dateArray=date.split(\"-\");\n    let dateSplit = dateArray[2].split(\"-\");\n\
    \    let dateMonth = dateArray[1];\n    let dateDay = dateArray[0];\n\n    let\
    \ daysInMonth = calendarMonths[dateMonth-1]\n    if (daysInMonth < 1 || daysInMonth\
    \ > 31) {\n        return false;\n    }\n    if(dateSplit[0]<1 || dateSplit[0]>12){\n\
    \        return false;\n    }\n    if(dateSplit[1]<1 || dateSplit[1]>daysInMonth){\n\
    \        return false;\n    }\n    if(dateSplit[2]<1 || dateSplit[2]>dateMonth){\n\
    \        return false;\n    }\n    \n    let dateYear=dateSplit[2];\n    for(let\
    \ i=1;i<dateYear.length;i++){\n        if(dateYear[i]>dateDay){\n            return\
    \ false;\n        }\n    }\n    return true;\n}\n", "  if(date.length>0){\n  \
    \  if(date.length<3 || date.length>10){\n      return false;\n    }\n    const\
    \ dateArr = date.split('-');\n    if(dateArr.length!=2){\n      return false;\n\
    \    }\n    if(new Date(dateArr[0]) < new Date(dateArr[1]) || new Date(dateArr[0]).getFullYear()>new\
    \ Date(dateArr[1]).getFullYear()){\n      return false;\n    }\n    return true;\n\
    \  }else{\n    return false;\n  }\n}", "  var regex = /^(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])-(19|20)\\\
    d{2}$/;\n  if(date == '' || regex.test(date))\n  {\n    return false;\n  }\n \
    \ var day = date.substring(0,2);\n  var month = date.substring(3,5);\n  var year\
    \ = date.substring(6,10);\n  var monthArray = new Array(\"Jan\",\"Feb\",\"Mar\"\
    ,\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\");\n \
    \ if(day < 1 || day > 31 || month < 1 || month > 12 || year < 1920 || year > 2020)\n\
    \  {\n    return false;\n  }\n  if(month == 2)\n  {\n    var isLeap = ((year %\
    \ 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);\n    if(day > 29 || (month\
    \ == 4 + isLeap) || (month == 6 + isLeap) || (month == 9 + isLeap) || (month ==\
    \ 11 + isLeap))\n    {\n      return false;\n    }\n  }\n  if(month == 4)\n  {\n\
    \    var isLeap = ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);\n\
    \    if(day > 30 || (month == 6 + isLeap) || (month == 9 + isLeap) || (month ==\
    \ 11 + isLeap))\n    {\n      return false;\n    }\n  }\n  if(month == 6)\n  {\n\
    \    if(day > 31)\n    {\n      return false;\n    }\n  }\n  if(month == 9)\n\
    \  {\n    if(day > 30)\n    {\n      return false;\n    }\n  }\n  if(month ==\
    \ 11)\n  {\n    if(day > 30)\n    {\n      return false;\n    }\n  }\n  return\
    \ true;\n}\n</code>\n<|/ a |>\n<| a tags=validation,date,javascript,regex |>\n\
    This is my way of validating the date format:\n<code>", "    if(date){\n     \
    \   let dateFormat = /^\\d{1,2}-\\d{1,2}-\\d{4}$/\n        if(dateFormat.test(date)){\n\
    \            dateSplit = date.split('-')\n            if((dateSplit[0].length>1\
    \ && dateSplit[0].length<12) \n               && (dateSplit[2].length<1 || dateSplit[2].length>29)\n\
    \               && (dateSplit[1].length<1 || dateSplit[1].length>12)){\n     \
    \           return true\n            }\n        }\n    }\n    return false\n}\n",
  "    var date_components = date.split('-');\n    var day = date_components[0];\n\
    \    var month = date_components[1];\n    var year = date_components[2];\n   \
    \ var daysInMonths = [31,28,31,30,31,30,31,30,31,30,31,30];\n    var daysInMonth\
    \ = daysInMonths[month];\n    var validDays = daysInMonth == 29 ? 29 : daysInMonth;\n\
    \    \n    // Validating if date is not empty\n    if(!isEmpty(date)){\n     \
    \   // Validating number of days\n        if(day > 0 && day <= validDays){\n \
    \           // Validating months\n            if(month >= 1 && month <= 12){\n\
    \                // Validating years\n                if(year >= 1900 && year\
    \ <= 2020){\n                    return true;\n                }\n           \
    \ }\n        }\n    }\n    return false;\n}\n", "    if(isEmpty(date)){\n    \
    \    return false;\n    }\n    if(isDate(date)){\n        var month = date.getMonth();\n\
    \        var day = date.getDate();\n        var year = date.getFullYear();\n \
    \       if(month == 1 || month == 3 || month == 5 || month == 7 || month == 8\
    \ || month == 10 || month == 12){\n            return day > 0 && day <= 29 &&\
    \ month > 0 && month <= 12;\n        }else if(month == 4 || month == 6 || month\
    \ == 9 || month == 11){\n            return day > 0 && day <= 30;\n        }\n\
    \    }\n    return false;\n}", "  if(date.length == 0){\n    return false;\n \
    \ }\n  const months = ['01','03','05','07','08','10','12'];\n  if(months.indexOf(date.split('-')[0])\
    \ < 0 || months.indexOf(date.split('-')[0]) > 12){\n    return false;\n  }\n \
    \ const days = ['01','02','03','04','05','06','07','08','09','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31'];\n\
    \  if(days.indexOf(date.split('-')[1]) < 1 || days.indexOf(date.split('-')[1])\
    \ > 31){\n    return false;\n  }\n  if(date.split('-')[2] < 1 || date.split('-')[2]\
    \ > 30){\n    return false;\n  }\n  return true;\n}\n\n", "\t//The given date\
    \ string is empty \n\tif(date=='') return false;\n\t//The number of days in month\
    \ is not more than 31\n\tvar no=1;\n\twhile(no<13){\n\t\tif((date.substring(1)+'-'+date.substring(3,5))==date){\n\
    \t\t\treturn true;\n\t\t}\n\t\tno++;\n\t}\n\t//The number of days in month is\
    \ not more than 30\n\tno=1;\n\twhile(no<13){\n\t\tif((date.substring(1)+'-'+date.substring(3,5))==date){\n\
    \t\t\treturn false;\n\t\t}\n\t\tno++;\n\t}\n\t//The months are not more than 12\n\
    \tno=1;\n\twhile(no<13){\n\t\tif((date.substring(1)+'-'+date.substring(3,5))==date){\n\
    \t\t\treturn false;\n\t\t}\n\t\tno++;\n\t}\n\t//The months are not less than 1\n\
    \tno=1;\n\twhile(no<13){\n\t\tif((date.substring(1)+'-'+date.substring(3,5))==date){\n\
    \t\t\treturn false;\n\t\t}\n\t\tno++;\n\t}\n\t//The date should be in the format:\
    \ mm-dd-yyyy\n\tvar year=date.substring(6,10);\n\tvar month=date.substring(1,3);\n\
    \tvar day=date.substring(4,7);\n\tif(month<1 || month>12) return false;\n\tif(day<1\
    \ || day>31) return false;\n\tif(month==2 && day>29) return false;\n\tif(month==0\
    \ && day>30) return false;\n\tif(month==1 && day>31) return false;\n\tif(month==3\
    \ && day>31) return false;\n\tif(month==5 && day>30) return false;\n\tif(month==7\
    \ && day>31) return false;\n\tif(month==8 && day>31) return false;\n\tif(month==10\
    \ && day>30) return false;\n\tif(month==12 && day>31) return false;\n\tif(month==9\
    \ && day>31) return false;\n\tif(month==11 && day>30) return false;\n\tif(month==0\
    \ && day>29) return false;\n\tif(month==6 && day>31) return false;\n\tif(month==4\
    \ && day>31) return false;\n\tif(month==1 && day>30) return false;\n\tif(month==3\
    \ && day>31) return false;\n\tif(month==5 && day>30) return false;\n\tif(month==7\
    \ && day>31) return false;\n\tif(month==8 && day>31) return false;\n\tif(month==10\
    \ && day>30) return false;\n\tif(month==12 && day>31) return false;\n\tif(month==9\
    \ && day>31) return false;\n\tif(month==11 && day>30) return false;\n\tif(month==0\
    \ && day>29) return false;\n\tif(month==6 && day>31) return false;\n\tif(month==4\
    \ && day>31) return false;", "    var valid = true;\n    \n    var split = date.split('-');\n\
    \    var dayInMonth = [31,28,31,30,31,30,31,30,31,30,31];\n    \n    if(split[0].length\
    \ == 0 ){\n        console.log(\"Please provide a valid date in the format mm-dd-yyyy\"\
    );\n        valid = false;\n    }\n    \n    var year = split[2];\n    if(year.length\
    \ != 4 || year.search(/^(\\d{4})$/) == -1 ){\n        console.log(\"Please provide\
    \ a valid date in the format mm-dd-yyyy\");\n        valid = false;\n    }\n \
    \   \n    if(split[1].length == 1 ){\n        console.log(\"Please provide a valid\
    \ date in the format mm-dd-yyyy\");\n        valid = false;\n    }\n    \n   \
    \ \n    var monthInStringMonths = [\"01\",\"03\",\"05\",\"07\",\"08\",\"10\",\"\
    12\"];\n    \n    var monthInNumber = parseInt(split[1]);\n    \n    for(var monthIndex\
    \ = 0; monthIndex < 12; monthIndex++){\n        if(monthInNumber == monthInStringMonths[monthIndex]){\n\
    \            monthInNumber = parseInt(monthInString.substring(0,monthIndex));\n\
    \            break;\n        }\n    }\n    \n    if(monthInNumber < 1 || monthInNumber\
    \ > 12){\n        console.log(\"Please provide a valid date in the format mm-dd-yyyy\"\
    );\n        valid = false;\n    }\n    \n    var dayInNumber = parseInt(split[0]);\n\
    \    \n    for(var dayIndex = 0; dayIndex < dayInMonth[monthInNumber]; dayIndex++){\n\
    \        if(dayInNumber == dayInMonth[monthInNumber]){\n            dayInNumber\
    \ = parseInt(dayInString.substring(0,dayIndex));\n            break;\n       \
    \ }\n    }\n    \n    if(dayInNumber < 1 || dayInNumber > dayInMonth[monthInNumber]){\n\
    \        console.log(\"Please provide a valid date in the format mm-dd-yyyy\"\
    );\n        valid = false;\n    }\n    \n    if(split[1] < 1 || split[1] > 12){\n\
    \        console.log(\"Please provide a valid date in the format mm-dd-yyyy\"\
    );\n        valid = false;\n    }\n    \n    return valid;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"

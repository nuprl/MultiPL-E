name: HumanEval_88_sort_array
language: js
prompt: "//Given an array of non-negative integers, return a copy of the given array\
  \ after sorting,\n// you will sort the given array in ascending order if the sum(\
  \ first index value, last index value) is odd,\n// or sort it in descending order\
  \ if the sum( first index value, last index value) is even.\n// Note:\n// * don't\
  \ change the given array.\n// Examples:\n// * sort_array([]) => []\n// * sort_array([5])\
  \ => [5]\n// * sort_array([2, 4, 3, 0, 1, 5]) => [0, 1, 2, 3, 4, 5]\n// * sort_array([2,\
  \ 4, 3, 0, 1, 5, 6]) => [6, 5, 4, 3, 2, 1, 0]\nfunction sort_array(array){\n"
tests: "const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
  \ = sort_array;\n  assert.deepEqual(candidate([]),[]);\n  assert.deepEqual(candidate([5]),[5]);\n\
  \  assert.deepEqual(candidate([2, 4, 3, 0, 1, 5]),[0, 1, 2, 3, 4, 5]);\n  assert.deepEqual(candidate([2,\
  \ 4, 3, 0, 1, 5, 6]),[6, 5, 4, 3, 2, 1, 0]);\n  assert.deepEqual(candidate([2, 1]),[1,\
  \ 2]);\n  assert.deepEqual(candidate([15, 42, 87, 32, 11, 0]),[0, 11, 15, 32, 42,\
  \ 87]);\n  assert.deepEqual(candidate([21, 14, 23, 11]),[23, 21, 14, 11]);\n}\n\n\
  test();"
completions: ["  let result = [...array];\n  let sum = 0;\n  for(let i = 0; i <= result.length;\
    \ i++){\n    sum += i;\n  }\n  if(sum % 2 === 0){\n    result.sort((a,b) => a-b);\n\
    \  }else{\n    result.sort((a,b) => b-a);\n  }\n  return result;\n}\n", "    //\
    \ code here\n    array.sort((a, b) => {\n        let sumA = sum(a)\n        let\
    \ sumB = sum(b)\n        if (sumA%2 != 0) {\n            return sumB - sumA\n\
    \        } else {\n            return sumA - sumB\n        }\n    })\n    return\
    \ array\n}\n", "\tarray.sort();\n\tvar sum = 0;\n\tvar i;\n\tfor(i = 0; i < array.length;\
    \ i++){\n\t\tsum += array[i];\n\t}\n\tif(sum % 2 === 1){\n\t\tarray.sort();\n\t\
    }else{\n\t\tarray.sort();\n\t\tarray.reverse();\n\t}\n\treturn array;\n}\n", " \
    \   let firstIndex = 0;\n    let lastIndex = 0;\n    while(lastIndex < array.length){\n\
    \        let sum = array[firstIndex] + array[lastIndex];\n        if(sum % 2 ===\
    \ 1){\n            array[lastIndex] = array[lastIndex]^array[firstIndex];\n  \
    \          array[firstIndex] = sum;\n        } else {\n            array[lastIndex]\
    \ = array[lastIndex]^array[firstIndex];\n            array[firstIndex] = sum;\n\
    \        }\n        if(firstIndex < lastIndex){\n            firstIndex++;\n \
    \       } else {\n            lastIndex++;\n        }\n    }\n    return array;\n\
    }\n", "    if(array.length == 0){\n        return array;\n    }\n    let isOddSum\
    \ = array.reduce((acc, cur) => acc + cur, 0) % 2 !== 0;\n    if(isOddSum){\n \
    \       array.sort((a, b) => a - b);\n    }else{\n        array.sort((a, b) =>\
    \ b - a);\n    }\n    return array;\n}\n", "\tlet len = array.length,\n\t\tsum,\n\
    \t\tflag = 1,\n\t\tresult;\n\n\tfor( let i = 0; i < len; i++ ){\n\t\tsum = array[i]\
    \ + array[i+1];\n\t\tif( sum % 2 === 0 && flag === 1 ){\n\t\t\tflag = 0;\n\t\t\
    \tresult = [ array[i], array[i+1] ];\n\t\t}else if( sum % 2 === 0 && flag ===\
    \ 0 ){\n\t\t\tflag = 1;\n\t\t\tresult = [ array[i+1], array[i] ];\n\t\t}\n\t}\n\
    \n\treturn result;\n}\n", "\tvar sum = 0;\n\tvar flag = false;\n\tfor(var i =\
    \ 0; i<array.length; i++){\n\t\tsum += array[i]\n\t\tif(flag && sum%2 != 0){\n\
    \t\t\tarray.splice(i,1);\n\t\t\ti--;\n\t\t}\n\t\telse if(flag && sum%2 == 0){\n\
    \t\t\tarray.splice(i,1);\n\t\t\ti--;\n\t\t\tflag = false;\n\t\t}\n\t\telse{\n\t\
    \t\tflag = true;\n\t\t}\n\t}\n\treturn array;\n}\n", "\tarray.sort(function(i,\
    \ j){\n\t\tif (sum(i,j) % 2 === 0) return 1;\n\t\telse return -1;\n\t});\n\treturn\
    \ array;\n}\n", "\tvar len = array.length;\n\tvar result = [];\n\tfor(var i =\
    \ len - 1; i >= 0; i--){\n\t\tfor(var j = i; j < len; j++){\n\t\t\tif(array[j]\
    \ > array[j + 1]){\n\t\t\t\tvar temp = array[j];\n\t\t\t\tarray[j] = array[j +\
    \ 1];\n\t\t\t\tarray[j + 1] = temp;\n\t\t\t}\n\t\t}\n\t}\n\tfor(var j = 1; j <\
    \ len; j++){\n\t\tif(array[j] > array[j - 1]){\n\t\t\tvar temp = array[j];\n\t\
    \t\tarray[j] = array[j - 1];\n\t\t\tarray[j - 1] = temp;\n\t\t}\n\t}\n\treturn\
    \ array;\n}", "\tvar arr = [];\n\tvar even = array.length - 1;\n\tvar odd = array.length\
    \ - 2;\n\tfor(var i = 0; i <= array.length; i++){\n\t\tif(i <= even){\n\t\t\t\
    arr.push(array[i]);\n\t\t}else if(i <= odd){\n\t\t\tarr.push(array[i-even]);\n\
    \t\t\tarr.push(array[i]);\n\t\t}else{\n\t\t\tarr.push(array[i-odd]);\n\t\t\tarr.push(array[i-even]);\n\
    \t\t\tarr.push(array[i]);\n\t\t}\n\t}\n\treturn arr;\n}\n", "  let newArr = [];\n\
    \  let i = 0;\n  let j = 1;\n  let sum = 0;\n  let odd = false;\n  while (j <\
    \ array.length){\n    sum = array[i];\n    i += 1;\n    sum += array[j];\n   \
    \ if (sum % 2 === 0){\n      odd = false;\n      j += 1;\n    }else{\n      odd\
    \ = true;\n      i += 1;\n    }\n    newArr.push(sum);\n  }\n  if (odd){\n   \
    \ return newArr.sort((a,b)=>b-a);\n  }else{\n    return newArr.sort((a,b)=>a-b);\n\
    \  }\n}\n", "  let sorted_array = []\n  const firstIndexArray = array.map((element)\
    \ => element)\n  \n  // if first index is odd, sort it in ascending order, else\
    \ sort it in descending order\n  if (firstIndexArray[0]%2 !== 0){\n    firstIndexArray.sort((a,\
    \ b) => a-b)\n  } else {\n    firstIndexArray.sort((a, b) => b-a)\n  }\n\n  for(let\
    \ i = 1; i < firstIndexArray.length; i++){\n    sorted_array.push(firstIndexArray[i])\n\
    \  }\n  \n  return sorted_array\n}\n", "    return array.sort((a,b)=>{\n     \
    \   const arr1 = a.slice()\n        const arr2 = b.slice()\n        const sum\
    \ = arr1.reduce((total,elem)=>{\n            return total + elem\n        },0)\n\
    \        if (sum %2===0) return 1\n        return -1\n    })\n}", "\treturn array.sort((a,b)\
    \ => {\n\t\tconst sum = a + b;\n\t\treturn sum%2 !== 0? -1: sum%2 === 0? 0: 1;\n\
    \t});\n}\n", "\tif(array.length===0)\n\t\treturn array;\n\tlet arr=array.slice(0);\n\
    \tlet sum=arr.reduce((sum,n)=>sum+=n,0);\n\tlet odd=sum%2===0;\n\tlet even=sum%2!==0;\n\
    \tif(odd){\n\t\tarr.sort((a,b)=>a-b);\n\t}else{\n\t\tarr.sort((a,b)=>b-a);\n\t\
    }\n\treturn array;\n}\n\n", "  array.sort(function(a, b){\n    var firstIndex\
    \ = a.sum();\n    var lastIndex = b.sum();\n    \n    if (firstIndex > lastIndex){\n\
    \      return -1;\n    }\n    else if (firstIndex < lastIndex){\n      return\
    \ 1;\n    }\n    else {\n      return 0;\n    }\n  });\n  \n  return array;\n\
    }\n", "  \n  // write your code in less than 10 lines\n  if(array.length==0){\n\
    \    return [];\n  }\n  var first=array[0];\n  var last=array.pop();\n  var sum=0;\n\
    \  array.forEach(function(i){\n    sum+=i;\n    if(sum%2===0){\n      first=i;\n\
    \    }\n    \n  });\n  \n  array.forEach(function(i){\n    sum+=i;\n    if(sum%2!==0){\n\
    \      last=i;\n    }\n  });\n  return array.sort(function(a,b){\n    return a>b\
    \ ? 1 : -1;\n  });\n}\n", "\tvar sum = array.reduce((p, n) => p + n)\n\tif(sum%2\
    \ === 1){\n\t\tarray.sort(function (a, b) {\n\t\t\treturn a - b\n\t\t})\n\t}else{\n\
    \t\tarray.sort(function (a, b) {\n\t\t\treturn b - a\n\t\t})\n\t}\n\treturn array\n\
    }\n", "\tvar newArray = [];\n\tfor(var i = 0; i < array.length; i++){\n\t\tvar\
    \ sum = 0;\n\t\tfor(var j = 0; j < array.length; j++){\n\t\t\tsum += array[j];\n\
    \t\t\tif(j != i){\n\t\t\t\tnewArray.push(array[j]);\n\t\t\t}\n\t\t}\n\t\t\n\t\t\
    if(sum%2 != 0){\n\t\t\tnewArray.push(array[i]);\n\t\t}\n\t\telse{\n\t\t\tnewArray.push(array[array.length-i-1]);\n\
    \t\t}\n\t\t\n\t}\n\treturn newArray;\n}\n", "  var sorted_array = [];\n  //Get\
    \ the sum of array\n  var sum_of_array = sum(array);\n  //If the sum is even,\
    \ sort in ascending order, otherwise sort in descending order\n  if(sum_of_array\
    \ % 2 == 0){\n    for(var i=0; i<array.length; i++){\n      sorted_array.push(array[i]);\n\
    \    }\n    sorted_array.sort(function(a,b){return a-b});\n  }else{\n    for(var\
    \ i=0; i<array.length; i++){\n      sorted_array.push(array[i]);\n    }\n    sorted_array.sort(function(a,b){return\
    \ b-a});\n  }\n  return sorted_array;\n}\n", "  if (array.length < 2) {\n    return\
    \ array;\n  }\n  var temp_array = [];\n  var last_sum = 0;\n  for (var i = 0;\
    \ i < array.length; i++){\n    last_sum += array[i];\n    temp_array.push(last_sum);\n\
    \  }\n  var min_sum = temp_array[0];\n  var max_sum = temp_array[temp_array.length-1];\n\
    \n  if (min_sum > max_sum){\n    return array;\n  }\n\n  return temp_array.sort((a,\
    \ b) => a - b);\n}\n", "  let sum = 0;\n  let temp;\n  for (let i of array){\n\
    \    sum += i;\n  }\n  if (sum % 2 === 0){\n    temp = [...array]\n    temp.sort((a,b)\
    \ => a - b)\n    return temp;\n  }\n  else {\n    temp = [...array]\n    temp.sort((a,b)\
    \ => b - a)\n    return temp;\n  }\n}\n", "\tlet sortedArray = array.slice();\n\
    \tconst sumOfFirstIndexAndLastIndex = array.reduce((sum,current)=>sum+current,0);\n\
    \t\n\tif(sumOfFirstIndexAndLastIndex%2 === 1){\n\t\tsortedArray.sort((a,b)=>a-b);\n\
    \t} else {\n\t\tsortedArray.sort((a,b)=>b-a);\n\t}\n\treturn sortedArray;\n}\n",
  "  // the length of the given array is 6\n  let len=array.length;\n  // the sum\
    \ of the first and the last element of the given array\n  let sum=array[0]+array[len-1];\n\
    \  // the sum of the first and the last element of the given array\n  let sum1=array[1]+array[len-2];\n\
    \  let len=sum/2;\n  // the sum of the first and the last element of the given\
    \ array\n  let sum2=array[len-1]+array[len-2];\n  // if the sum of the first and\
    \ the last element of the given array is even\n  if(sum%2===0){\n    // we switch\
    \ the position of the two elements in the given array\n    let temp=array[1];\n\
    \    array[1]=array[len-1];\n    array[len-1]=temp;\n  }\n  // if the sum of the\
    \ first and the last element of the given array is odd\n  else{\n    // we switch\
    \ the position of the two elements in the given array\n    let temp=array[len-1];\n\
    \    array[len-1]=array[1];\n    array[1]=temp;\n  }\n  // we sort the given array\
    \ in ascending order if the sum( first index value, last index value) is odd\n\
    \  if(sum1%2!==0){\n    // we swap the first and the last element in the given\
    \ array\n    let temp1=array[1];\n    array[1]=array[len-1];\n    array[len-1]=temp1;\n\
    \  }\n  // we sort the given array in descending order if the sum( first index\
    \ value, last index value) is even\n  else{\n    // we swap the first and the\
    \ last element in the given array\n    let temp1=array[len-1];\n    array[len-1]=array[1];\n\
    \    array[1]=temp1;\n  }\n  return array;\n}", "    let newArr = [];\n    for\
    \ (let i = 0; i < array.length; i++){\n        let sum = 0;\n        newArr.push(array[i]);\n\
    \        for (let j = 0; j < array.length; j++){\n            sum += j;\n    \
    \        if (sum !== array.length && j !== array.length){\n                if\
    \ (sum %2 !== 0){\n                    newArr.push(array[j]);\n              \
    \  }\n            }\n        }\n    }\n    return newArr;\n}\n", "\tlet sum=0;\n\
    \tarray.forEach((x)=>{\n\t\tsum+=x;\n\t})\n\tif(sum%2==1){\n\t\tarray.sort((a,b)=>a-b);\n\
    \t}else{\n\t\tarray.sort((a,b)=>b-a);\n\t}\n\t\n\treturn array\n}\n\n", "\tvar\
    \ newArray=[];\n\tvar sum=0;\n\tfor(var i=0;i<array.length;i++){\n\t\tsum=sum+array[i];\n\
    \t\tif(sum%2===0){\n\t\t\tnewArray.push(array[i]);\n\t\t}\n\t}\n\treturn newArray;\n\
    }", "    // Your code here!\n}\n", "    let sum = 0;\n    for(var i = 0; i < array.length;\
    \ i++){\n        sum += array[i];\n    }\n    \n    if((sum % 2) === 0){\n   \
    \     array.sort((a, b) => b - a);\n    }else{\n        array.sort((a, b) => a\
    \ - b);\n    }\n    \n    return array;\n}\n", "\t\n\t//Sort the given array in\
    \ ascending order if the sum( first index value, last index value) is odd\n\t\
    //or sort it in descending order if the sum( first index value, last index value)\
    \ is even\n\tfunction sort_ascending( arr ){\n\t\t\n\t\tvar odd_sum_sum = 0, even_sum_sum\
    \ = 0, odd_sum = 0, even_sum = 0, i = 0, len = arr.length;\n\t\tvar new_arr =\
    \ [];\n\t\t\n\t\twhile( i < len && odd_sum < even_sum ){\n\t\t\t\n\t\t\todd_sum\
    \ = ( arr[ i++ ] + arr[ i++ ] );\n\t\t\teven_sum = ( arr[ i++ ] - arr[ i++ ] );\n\
    \t\t\t\n\t\t\tif( odd_sum % 2 === 0 ) new_arr.push( arr[ i++ ] );\n\t\t\telse\
    \ if( even_sum % 2 === 0 ) new_arr.push( arr[ i++ ] );\n\t\t}\n\t\t\n\t\treturn\
    \ new_arr;\n\t}\n\t\n\t//Sort the given array in descending order if the sum(\
    \ first index value, last index value) is odd\n\t//or sort it in ascending order\
    \ if the sum( first index value, last index value) is even\n\tfunction sort_descending(\
    \ arr ){\n\t\t\n\t\tvar odd_sum_sum = 0, even_sum_sum = 0, odd_sum = 0, even_sum\
    \ = 0, i = 0, len = arr.length;\n\t\tvar new_arr = [];\n\t\t\n\t\twhile( i < len\
    \ && odd_sum < even_sum ){\n\t\t\t\n\t\t\todd_sum = ( arr[ i++ ] + arr[ i++ ]\
    \ );\n\t\t\teven_sum = ( arr[ i++ ] - arr[ i++ ] );\n\t\t\t\n\t\t\tif( odd_sum\
    \ % 2 === 1 ) new_arr.push( arr[ i++ ] );\n\t\t\telse if( even_sum % 2 === 1 )\
    \ new_arr.push( arr[ i++ ] );\n\t\t}\n\t\t\n\t\treturn new_arr;\n\t}\n\t\n\t//Choose\
    \ one or the other type of sorting\n\treturn (sum( array, 0, array.length - 1\
    \ ) % 2 === 1) ? sort_ascending : sort_descending;\n}\n", "    if (array.length\
    \ === 0) return array;\n    \n    var sum = 0;\n    \n    for (let i = 0; i <\
    \ array.length; i++){\n        sum += array[i];\n    }\n    \n    var result =\
    \ [];\n    \n    for (let i = 0; i < array.length; i++){\n        if (sum%2 ===\
    \ 0) result.push(array[i]);\n        else result.push(array[i].toFixed(1));\n\
    \    }\n    \n    return result;\n}\n", "\tvar result = [];\n\tarray.forEach(function(element,\
    \ index, arr){\n\t\tresult.push(element);\n\t});\n\n\tresult.sort(function(a,\
    \ b){\n\t\tvar aSum = array.slice().reduce(function(prev,cur){return prev+cur;},0);\n\
    \t\tvar bSum = array.slice().reduce(function(prev,cur){return prev+cur;},0);\n\
    \t\tif(aSum%2 === 1){\n\t\t\treturn bSum - a;\n\t\t}else{\n\t\t\treturn aSum -\
    \ b;\n\t\t}\n\t});\n\n\treturn result;\n}\n", "\tlet new_array = [];\n\tfor (let\
    \ i of array) {\n\t\tlet sum = 0;\n\t\tfor (let j of new_array) {\n\t\t\tsum +=\
    \ j;\n\t\t}\n\t\tlet index = sum / 2;\n\t\tlet new_sum = sum % 2 === 0 ? sum -\
    \ index : sum + index;\n\t\tnew_array.splice(index, 0, i);\n\t}\n\treturn new_array;\n\
    }\n", "    if(!Array.isArray(array)){\n        throw new Error(`Given array ${array}\
    \ is not an array.`);\n    }\n    \n    const arrSortedLength = Math.max(...array);\n\
    \    \n    if(arrSortedLength === 0){\n        return [];\n    }\n    \n    const\
    \ arrSortedValue = sort_array(array);\n    \n    if(arrSortedValue[arrSortedValue.length\
    \ - 1] === arrSortedLength){\n        return arrSortedValue;\n    }\n    \n  \
    \  const arrSortedIndexes = [...new Array(arrSortedLength).keys()].sort((a, b)\
    \ => a - b);\n    \n    return arrSortedValue.sort((a, b) => {\n        if(arrSortedIndexes[0]\
    \ === 0 && arrSortedIndexes[arrSortedIndexes.length - 1] === arrSortedLength){\n\
    \            return a - b;\n        }\n        \n        if(arrSortedIndexes[arrSortedIndexes.length\
    \ - 1] === 0 && arrSortedIndexes[0] === arrSortedLength){\n            return\
    \ b - a;\n        }\n        \n        return a - b;\n    });\n}\n", "  var sum\
    \ = 0;\n  var odd_flag = 0;\n  var even_flag = 0;\n  var array_length = array.length;\n\
    \n  for(var i = 0; i < array_length; i++){\n    sum += array[i];\n    if(sum %\
    \ 2 === 0){\n      even_flag++;\n    } else {\n      odd_flag++;\n    }\n  }\n\
    \n  var odd_array_length = 0;\n  var even_array_length = 0;\n  for(var i = 0;\
    \ i < array_length; i++){\n    if(sum % 2 === 0){\n      even_array_length++;\n\
    \    } else {\n      odd_array_length++;\n    }\n  }\n\n  if(odd_array_length\
    \ === 0 || even_array_length === 0){\n    return array;\n  }\n\n  if(odd_flag\
    \ === even_flag){\n    if(odd_flag === array_length){\n      return array.slice();\n\
    \    } else {\n      return array.slice(0,array_length-1);\n    }\n  } else {\n\
    \    if(odd_flag < even_flag){\n      return array.slice(0,array_length-odd_array_length);\n\
    \    } else {\n      return array.slice(odd_array_length,array_length);\n    }\n\
    \  }\n}", "  var result = [];\n  for(var i = 0; i < array.length; i++){\n    result.push(array[i]);\n\
    \  }\n  \n  if(sort_array_helper(result, 0, result.length - 1) == -1){\n    result.sort(function(a,\
    \ b){\n      return a - b;\n    });\n  } else {\n    result.sort(function(a, b){\n\
    \      return b - a;\n    });\n  }\n  return result;\n}\n", "    let result =\
    \ [];\n    let sum = 0;\n    for(let i = 0; i < array.length; i++) {\n       \
    \ sum += array[i];\n        \n        if(sum % 2 === 0) {\n            result.unshift(array[i]);\n\
    \        }\n        else if(sum % 2 === 1) {\n            result.push(array[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    var sorted_arr = [];\n    array.sort(function(a,\
    \ b){\n        if(a > b){\n            return 1;\n        }\n        if(a < b){\n\
    \            return -1;\n        }\n        return 0;\n    });\n    return sorted_arr;\n\
    }", "\t\n}\n", "    let sortedArray = array.slice();\n    let currentSum = 0;\n\
    \    let firstIndex = 0;\n    let lastIndex = 0;\n    for (let i=0; i<sortedArray.length;\
    \ i++){\n        currentSum += sortedArray[i];\n        if (currentSum%2 === 0){\n\
    \            sortedArray[firstIndex] = sortedArray[i];\n            firstIndex\
    \ += 1;\n        } else {\n            sortedArray[lastIndex] = sortedArray[i];\n\
    \            lastIndex += 1;\n        }\n    }\n    return sortedArray;\n}", "\t\
    array.sort((a, b) => {\n\t\tlet sumA=a+b;\n\t\tlet sumB=b-a;\n\t\tif (sumA%2 ===\
    \ 0 && sumB%2 === 0){\n\t\t\treturn a-b;\n\t\t}else{\n\t\t\treturn b-a;\n\t\t\
    }\n\t});\n\treturn array;\n}", "  let evensum = 0;\n  let oddsum = 0;\n  let evenevensum\
    \ = 0;\n  let evenoddsum = 0;\n  let oddevensum = 0;\n  let oddoddsum = 0;\n \
    \ array.sort((a,b)=>{\n    if(a>b){\n      return 1;\n    }\n    if(a<b){\n  \
    \    return -1;\n    }\n  });\n  array.map((val,ind)=>{\n    if(val%2===0){\n\
    \      evensum += val;\n      evenevensum += (val*val);\n      evenoddsum += (val*val*val);\n\
    \    }\n    else if(val%2===1){\n      oddsum += val;\n      oddevensum += (val*val);\n\
    \      oddoddsum += (val*val*val);\n    }\n  });\n  let tempArray = [];\n  if(evensum%2===1){\n\
    \    tempArray = evenevensum.concat(evenoddsum).concat(evenoddsum);\n    tempArray\
    \ = tempArray.concat(evenevensum).concat(evenoddsum);\n    tempArray = tempArray.concat(evenevensum).concat(evenoddsum);\n\
    \    tempArray = tempArray.concat(evenevensum).concat(evenoddsum);\n    tempArray\
    \ = tempArray.concat(evenevensum).concat(evenoddsum);\n    tempArray = tempArray.concat(evenevensum).concat(evenoddsum);\n\
    \    tempArray = tempArray.concat(evenevensum).concat(evenoddsum);\n  }\n  else\
    \ if(evensum%2===0){\n    tempArray = oddevensum.concat(oddoddsum).concat(oddoddsum);\n\
    \    tempArray = tempArray.concat(oddevensum).concat(oddoddsum);\n    tempArray\
    \ = tempArray.concat(oddevensum).concat(oddoddsum);\n    tempArray = tempArray.concat(oddevensum).concat(oddoddsum);\n\
    \    tempArray = tempArray.concat(oddevensum).concat(oddoddsum);\n    tempArray\
    \ = tempArray.concat(oddevensum).concat(oddoddsum);\n  }\n  else{\n    tempArray\
    \ = oddoddsum.concat(oddoddsum).concat(oddoddsum);\n    tempArray = tempArray.concat(oddoddsum).concat(oddoddsum);\n\
    \    tempArray = tempArray.concat(oddoddsum).concat(oddoddsum);\n    tempArray\
    \ = tempArray.concat(oddoddsum).concat(oddoddsum);\n    tempArray = tempArray.concat(oddoddsum).concat(oddoddsum);\n\
    \    tempArray = tempArray.concat(oddoddsum).concat(oddoddsum);\n  }", "    for(let\
    \ i = 0; i < array.length; i++){\n        let sum = (array[i-1] + array[i]) %\
    \ 2;\n        if(sum == 0){\n            array[i-1] = array[i-1] - array[i];\n\
    \            array[i] = array[i] + array[i-1];\n        }\n        else if(sum\
    \ == 1){\n            array[i-1] = array[i-1] - array[i];\n            array[i]\
    \ = array[i] + array[i-1];\n        }\n    }\n    return array;\n}", "\t// Your\
    \ code goes here\n\tvar sum = 0;\n\tfor(var i=0; i<array.length; i++){\n\t\tsum\
    \ += array[i];\n\t}\n\tfor(var i=0; i<array.length; i++){\n\t\tarray[i] /= sum;\n\
    \t}\n\treturn array;\n}\n", "  var flag = 1;\n  for (var i = 0; i < array.length;\
    \ i++) {\n    if (flag%2 != 0){\n      if (array[i] > array[array.length - i -\
    \ 1])\n        array.push(array[i]);\n    }\n    else{\n      if (array[i] < array[array.length\
    \ - i - 1])\n        array.push(array[i]);\n    }\n    flag++;\n  }\n  return\
    \ array;\n}\nvar array_1 = sort_array([]);", "\tvar result = [];\n\tarray.sort((a,b)=>{\n\
    \t\treturn ((a+b)%2)?-1:(a-b)\n\t})\n\treturn array;\n}\n", "    if(array.length<2)\n\
    \        return array\n    let arr=[...array]\n    let sum=arr.reduce((a,b)=>a+b)\n\
    \    if(sum%2==1)\n        arr.sort((a,b)=>b-a)\n    else\n        arr.sort((a,b)=>a-b)\n\
    \    return arr\n}\n", "    if(array.length < 2)\n        return array;\n    var\
    \ newArray = array.slice();\n    if(array[0] > array[1]){\n        var t = array[0];\n\
    \        array[0] = array[1];\n        array[1] = t;\n    }\n    newArray.sort(function(a,b){\n\
    \        return a - b;\n    });\n    return newArray;\n}\n", "  let copy = new\
    \ Array(array.length);\n  for(var i=0; i< array.length; i++){\n    copy[i] = array[i];\n\
    \  }\n  copy.sort(function(a, b){\n    let aSum = a[a.length-1]+a[a.length-2];\n\
    \    let bSum = b[b.length-1]+b[b.length-2];\n    if(aSum%2 === 1){\n      aSum\
    \ *= -1;\n    }\n    if(bSum%2 === 1){\n      bSum *= -1;\n    }\n    let aVal\
    \ = parseInt(aSum/2);\n    let bVal = parseInt(bSum/2);\n    if(aVal === bVal){\n\
    \      return 0;\n    } else if(aVal > bVal){\n      return 1;\n    } else {\n\
    \      return -1;\n    }\n  });\n  return copy;\n}\n", "\tif(!array.length) return\
    \ array;\n\t\n\tvar sum = 0;\n\tvar result = [];\n\tfor(var i = 0; i < array.length;\
    \ i++){\n\t\tsum += array[i];\n\t\tresult.push([array[i], sum]);\n\t}\n\t\n\t\
    result.sort(function(a, b){\n\t\treturn a[1] - b[1];\n\t});\n\t\n\tif(result[result.length\
    \ - 1][1] % 2 === 1) return sort_array(result);\n\telse return result.reverse();\n\
    }\n", "  let sum;\n  let i = 0;\n  let j = 0;\n  let temp;\n  let temp2;\n  \n\
    \  while (i < array.length){\n    sum = array[i];\n    temp2 = array[j];\n   \
    \ while (temp2 > sum){\n      array[j] = temp2;\n      j++;\n    }\n    array[j]\
    \ = sum;\n    i++;\n  }\n  return array;\n}\n", "  var sum = 0;\n  var sorted_array\
    \ = [];\n  for (var i = 0; i < array.length; i++){\n    sum += array[i];\n   \
    \ sorted_array.push(array[i]);\n  }\n  if (sum % 2 == 1){\n    sorted_array.sort();\n\
    \  } else {\n    sorted_array.reverse();\n  }\n  return sorted_array;\n}", "\t\
    array.sort(function(a,b){\n\t\tif(a>b) return 1;\n\t\tif(a<b) return -1;\n\t\t\
    return 0;\n\t});\n\treturn array;\n}\n", "\tlet n = array.length;\n\tif(n == 0){\n\
    \t\treturn array;\n\t}\n\tlet sum = 0;\n\tlet newArray = [];\n\tlet left = 0;\n\
    \tlet right = n - 1;\n\twhile(left < right){\n\t\tsum = array[left] + array[right];\n\
    \t\tif(sum % 2 == 0){\n\t\t\tnewArray.push(array[right]);\n\t\t\tright --;\n\t\
    \t}else{\n\t\t\tnewArray.push(array[left]);\n\t\t\tleft ++;\n\t\t}\n\t}\n\tif(sum\
    \ % 2 != 0){\n\t\tnewArray.push(array[left]);\n\t}\n\treturn newArray;\n}\n\n",
  "  var sum=array.reduce((a,b)=>a+b,0);\n  return array.reduce((a,b)=>a+b<sum?b:a-b,0);\n\
    }\n", "\tvar firstSum = 0, lastSum = 0;\n\tvar result = [],\n\ti = array.length\
    \ - 1,\n\tj = 0;\n\t\n\twhile(firstSum <= lastSum){\n\t\twhile(firstSum <= lastSum\
    \ && array[i] > array[j]){\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t\t\n\t\tresult.push(array[j]);\n\
    \t\tfirstSum += array[i]\n\t\ti--;\n\t\tj++;\n\t\t\n\t\twhile(firstSum <= lastSum\
    \ && array[i] < array[j]){\n\t\t\ti++;\n\t\t\tj++;\n\t\t}\n\t\t\n\t\tresult.push(array[i]);\n\
    \t\tfirstSum += array[i]\n\t\ti--;\n\t}\n\treturn result;\n}\n", "  //sort array\n\
    \  array = array.slice();\n  array.sort(function(a,b){\n    var sum1 = parseInt(a\
    \ + b);\n    var sum2 = parseInt(b + a);\n    return (sum1%2 === sum2%2 ? -1 :\
    \ (sum1%2 === 0 ?  1 : 0));\n  });\n  return array;\n};\n", "    var sum = 0;\n\
    \    var newArray = [];\n    for(var i = 0; i < array.length; i++){\n        sum\
    \ += array[i]\n    }\n    if(sum % 2 === 1){\n        newArray.push(array.reverse());\n\
    \        return newArray\n    } else {\n        newArray.push(array);\n      \
    \  return newArray\n    }\n}", "  array.sort(function(a, b){\n    return (a -\
    \ b);\n  });\n  return array;\n}\n", "  var sum = 0;\n  for (var i = 0; i < array.length;\
    \ i++) {\n    sum += array[i];\n  }\n\n  var odd = sum % 2;\n  if (odd) {\n  \
    \  array.reverse();\n  }\n  return array;\n}\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ tags=sorting,arrays,javascript,algorithm dscore=0 |>\nThis is my solution to\
    \ sort arrays in ascending or descending order based on their sum and their length.\
    \ \nThe idea is to traverse the array and store the sum and length for each element\
    \ into the hashmap. \nThen traverse the hashmap and store the values that match\
    \ the criteria(sum and length) into a new array and sort that array. \n\n<code>",
  "\t\n\tarray = array.sort();\n\t\n\tif(array[0]+array[array.length-1]%2 === 1) return\
    \ array.sort(function(a,b){return b - a});\n\treturn array.sort(function(a,b){return\
    \ a - b});\n\t\n}\n", "    var sum = 0;\n    for(var i=0;i<array.length;i++){\n\
    \        sum+=array[i];\n    }\n    if(sum%2){\n        array.sort((a,b)=>b-a);\n\
    \    }else{\n        array.sort((a,b)=>a-b);\n    }\n    return array;\n}\n<|/\
    \ file filename=leetcode.js ext=.js |>", "\tlet new_array = [];\n\tlet sum_array\
    \ = [...array].sort((a, b) => a - b);\n\tlet odd = sum_array[0] % 2;\n\tlet even\
    \ = sum_array[sum_array.length-1] % 2;\n\n\tif(odd){\n\t\tfor(let i = 1; i < sum_array.length;\
    \ i++){\n\t\t\tif(sum_array[i] % 2 == 1){\n\t\t\t\tnew_array.push(sum_array[i]);\n\
    \t\t\t}\n\t\t}\n\t} else {\n\t\tfor(let i = 1; i < sum_array.length; i++){\n\t\
    \t\tif(sum_array[i] % 2 == 0){\n\t\t\t\tnew_array.push(sum_array[i]);\n\t\t\t\
    }\n\t\t}\n\t}\n\n\treturn new_array;\n}\n", "    return array.sort(function(a,b){\n\
    \        var sumA = a.toString().split('').reduce(function(a, b) { return (+a\
    \ + +b) }, 0)\n        var sumB = b.toString().split('').reduce(function(a, b)\
    \ { return (+a + +b) }, 0)\n        if(sumA > sumB) return 1\n        if(sumA\
    \ < sumB) return -1\n        return 0\n    })\n}\n", "  var result = [];\n  var\
    \ index = 0;\n  var length = array.length;\n  for(; index < length; index++){\n\
    \    if(array[index] < array[index + 1]){\n      result.push(array[index]);\n\
    \    } else {\n      result.push(array[index + 1]);\n    }\n  }\n  return result;\n\
    }\n", "    var newArray = []\n    var sum = 0\n    for(var i = 0; i < array.length;\
    \ i++){\n        sum += array[i]\n    }\n    var index = 0\n    while(index<array.length){\n\
    \        var lastIndex = index\n        index++\n        while(index<array.length\
    \ && array[index] < array[lastIndex]){\n            lastIndex++\n        }\n \
    \       if(lastIndex > newArray.length){\n            var a = newArray\n     \
    \       var b = array\n            newArray = []\n            for(var i = 0; i<a.length;\
    \ i++){\n                newArray.push(a[i])\n            }\n            for(var\
    \ i = 0; i<b.length; i++){\n                newArray.push(b[i])\n            }\n\
    \        }else{\n            if(sum%2 === 1){\n                var a = newArray\n\
    \                var b = array\n                newArray = []\n              \
    \  for(var i = 0; i<a.length; i++){\n                    newArray.push(b[i])\n\
    \                }\n                for(var i = 0; i<b.length; i++){\n       \
    \             newArray.push(a[i])\n                }\n            }else{\n   \
    \             var a = newArray\n                var b = array\n              \
    \  newArray = []\n                for(var i = 0; i<a.length; i++){\n         \
    \           newArray.push(a[i])\n                }\n                for(var i\
    \ = 0; i<b.length; i++){\n                    newArray.push(b[i])\n          \
    \      }\n            }\n        }\n    }\n    return newArray\n}\n\n", "  for(var\
    \ i = 0, len = array.length; i < len; i++){\n    if(array[i] + array[i+1] <= array[i+1]\
    \ && array[i] + array[i+1] < array[i]){\n      swap(array, i, i+1);\n    }\n \
    \ }\n  return array;\n}\n", "    // code here\n    return array;\n}\n", "    array.sort(function(a,\
    \ b){\n        return a-b;\n    });\n\n    array.sort(function(a, b){\n      \
    \  return b-a;\n    });\n\n    return array;\n}\n", "  var len = array.length;\n\
    \  var sum = 0;\n  \n  for(var i=0; i<len; i++){\n    sum += array[i];\n  }\n\
    \  \n  return array;\n  \n  var isOdd = (sum % 2 === 0);\n  \n  if(isOdd){\n \
    \   array.sort(function(first, last){\n      return first - last;\n    });\n \
    \ }\n  else{\n    array.sort(function(first, last){\n      return last - first;\n\
    \    });\n  }\n  \n  return array;\n}\n", "  let n = array.length;\n  if(n<2){\n\
    \    return array;\n  }\n  let first = 0, last = n-1;\n  let sum = 0;\n  let newArr\
    \ = [];\n  for(let i = first; i<last; i++){\n    sum = sum + array[i];\n    if(sum%2==1){\n\
    \      newArr.push(array[i]);\n    }else{\n      newArr.push(array[last]);\n \
    \   }\n  }\n  return newArr;\n}\n\n", "    if(array.length == 0){\n        return\
    \ array;\n    }\n    let first = array[0];\n    let last = array[array.length-1];\n\
    \n    if(first+last == 0){\n        return array;\n    }\n\n    let middle = Math.floor(array.length/2);\n\
    \    let sumFirst = first+array[middle];\n    let sumLast = last+array[middle];\n\
    \n    if(sumFirst % 2 == 0){\n        return sort_array(array.slice(0,middle).concat(array.slice(middle+1)));\n\
    \    }\n    else{\n        return sort_array(array.slice(0,middle).concat(array.slice(middle+1)).concat(array.slice(0,middle)));\n\
    \    }\n}", "    let sortedArr = array.slice();\n    // sort it in ascending order\
    \ if the sum( first index value, last index value) is odd\n    let odd = false;\n\
    \    let sumOfFirstIndex = sortedArr.reduce(function(sum, current) {\n       \
    \ return sum + current;\n    }, 0);\n    \n    if(sumOfFirstIndex % 2 == 0){\n\
    \        odd = true;\n    }\n\n    if(odd){\n        sortedArr.sort();\n    }else{\n\
    \        sortedArr.sort((a, b) => b-a);\n    }\n    return sortedArr;\n}\n", " \
    \   var sum = 0;\n    var new_arr = [];\n    var i = 1;\n    for( i; i < array.length;\
    \ i++){\n        sum = sum + array[i];\n        if(sum%2 === 0){\n           \
    \ new_arr.push( array[i]);\n        } else {\n            new_arr.push( array[i]\
    \ - array[i-1]);\n        }\n    }\n    return new_arr;\n}\n", "\tlet evenSum\
    \ = 0;\n\tlet oddSum = 0;\n\tfor (let i = 0; i < array.length; i++){\n\t\tif (array[i]\
    \ % 2 === 0){\n\t\t\tevenSum += array[i];\n\t\t}\n\t\telse {\n\t\t\toddSum +=\
    \ array[i];\n\t\t}\n\t}\n\tlet result = array.slice();\n\tif (oddSum > evenSum){\n\
    \t\tresult.sort((a, b) => a - b);\n\t}\n\telse {\n\t\tresult.sort((a, b) => b\
    \ - a);\n\t}\n\treturn result;\n}\n", "    // Your code here\n    array.sort(function(a,\
    \ b){\n        if ((a+b)%2 === 1){\n            return (b-a)\n        }else{\n\
    \            return a-b\n        }\n    })\n    return array\n}\n", "  let sorted\
    \ = array.slice()\n  if(array.length > 1){\n    sorted.sort((a,b) => {\n     \
    \ const aSum = a.reduce( (acc, curr) => ( acc + curr ), 0 )\n      const bSum\
    \ = b.reduce( (acc, curr) => ( acc + curr ), 0 )\n      if(aSum%2 === 1){\n  \
    \      return aSum - bSum\n      }\n      else{\n        return bSum - aSum\n\
    \      }\n    })\n  }\n  return sorted\n}\n", "  let sum = 0;\n  for(let i = 0;\
    \ i < array.length; i++){\n    sum += array[i];\n  }\n  if(sum % 2 === 0){\n \
    \   array = array.sort((a,b) => a - b);\n  }\n  else {\n    array = array.sort((a,b)\
    \ => b - a);\n  }\n  return array;\n}\n", "\tif(array.length < 2) return array;\n\
    \tlet sum = 0;\n\tlet temp = 0;\n\tlet temp2 = 0;\n\tlet index = 0;\n\tlet index2\
    \ = 0;\n\twhile(index < array.length && index2 < array.length){\n\t\tsum += array[index];\n\
    \t\ttemp += array[index];\n\t\tindex++;\n\t\tindex2++;\n\t}\n\twhile(index < array.length){\n\
    \t\tindex++;\n\t}\n\twhile(index2 < array.length){\n\t\tindex2++;\n\t}\n\tif(sum\
    \ & 1){\n\t\ttemp = array[array.length-1];\n\t\tarray[array.length-1] = array[index2];\n\
    \t\tarray[index2] = temp;\n\t}\n\telse{\n\t\ttemp = array[index2];\n\t\tarray[index2]\
    \ = array[index];\n\t\tarray[index] = temp;\n\t}\n\tlet sortedArray = [];\n\t\
    while(index < array.length){\n\t\tsortedArray.push(array[index++]);\n\t}\n\treturn\
    \ sortedArray;\n}\n", "\tlet index = 0;\n\tlet sum = 0;\n\tfor (let i = 0; i <\
    \ array.length; i++){\n\t\tsum += array[i];\n\t\tif (sum > 0){\n\t\t\tindex++;\n\
    \t\t\tsum = 0;\n\t\t}\n\t}\n\tlet sortedArray = [...array];\n\t\n\tif (sum % 2\
    \ === 0){\n\t\tsortedArray.sort((a, b) => a - b);\n\t} else {\n\t\tsortedArray.sort((a,\
    \ b) => b - a);\n\t}\n\treturn sortedArray;\n}\n", "\tvar sum = 0;\n\tfor (var\
    \ i = 0; i < array.length; i++) {\n\t\tsum += array[i]\n\t}\n\tconsole.log(sum)\n\
    \tif (sum%2 == 1){\n\t\tfor (var i = 0; i < array.length; i++) {\n\t\t\tfor (var\
    \ j = i+1; j < array.length; j++) {\n\t\t\t\tif (array[i] > array[j]){\n\t\t\t\
    \t\t//swap items\n\t\t\t\t\tvar temp = array[i];\n\t\t\t\t\tarray[i] = array[j];\n\
    \t\t\t\t\tarray[j] = temp;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else {\n\t\tfor (var\
    \ i = 0; i < array.length; i++) {\n\t\t\tfor (var j = i+1; j < array.length; j++)\
    \ {\n\t\t\t\tif (array[i] < array[j]){\n\t\t\t\t\t//swap items\n\t\t\t\t\tvar\
    \ temp = array[i];\n\t\t\t\t\tarray[i] = array[j];\n\t\t\t\t\tarray[j] = temp;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn array;\n}\n", "  var sum = 0;\n  for\
    \ (var i = 0; i < array.length; i++){\n    sum += array[i];\n  }\n\n  if(sum %\
    \ 2 === 0){\n    array.sort(function (a, b){\n      return b - a;\n    });\n \
    \ } else {\n    array.sort(function (a, b){\n      return a - b;\n    });\n  }\n\
    }\n", "\tlet sum = 0;\n\tlet i = 0;\n\tlet j = 0;\n\tlet temp;\n\tfor(; i < array.length;\
    \ i++){\n\t\tsum+=array[i];\n\t}\n\tfor(j = 0; j < array.length; j++){\n\t\tif(sum%2==1){\n\
    \t\t\ttemp = array[j];\n\t\t\tarray[j] = array[i];\n\t\t\tarray[i] = temp;\n\t\
    \t}\n\t\tsum+=array[j];\n\t}\n\treturn array;\n}\n", "    var arr = [];\n    for(var\
    \ i = 0; i < array.length; i++){\n        if(i%2 === 0){\n            arr.push(array[i]);\n\
    \        } else {\n            var j = 1;\n            while(j<array.length &&\
    \ array[j] === array[j-1]) j++;\n            arr.push(array[i]);\n           \
    \ for(var k = j-1; k>=0; k--){\n                array[k] = array[k+1];\n     \
    \       }\n            array[i] = array[j];\n        }\n    }\n    return arr;\n\
    }\n", "  let result = [];\n  let tempArray = array.slice();\n  let length = array.length;\n\
    \  let sum = 0;\n  let i = 0;\n\n  while(i < length){\n    sum = tempArray[i].val\
    \ + tempArray[i-1].val;\n    if(sum % 2 === 0){\n      result.push(tempArray[i]);\n\
    \    }\n    i++;\n  }\n\n  return result;\n}\n", "    if(array.length === 0){\n\
    \        return array;\n    }\n    \n    let sorted = array.slice(0);\n    \n\
    \    let sumArray = sorted.map((item)=>{\n        return item + item;\n    });\n\
    \    let sumArraySum = sumArray.reduce((acc, cur)=>{\n        return acc + cur;\n\
    \    });\n    \n    if(sumArraySum%2 === 0){\n        sorted.sort((a,b)=>{\n \
    \           return a - b;\n        });\n    }else{\n        sorted.sort((a,b)=>{\n\
    \            return b - a;\n        });\n    }\n    \n    return sorted;\n}\n",
  "    let sum = 0;\n    for(let i = 0;i < array.length;i++){\n        sum += array[i]\n\
    \    }\n    let result;\n    if(sum%2 === 0){\n        result = [];\n        array.sort((a,b)\
    \ => {\n            if (a-b < 0){\n                return -1;\n            }else{\n\
    \                return 1;\n            }\n        });\n    }else{\n        result\
    \ = [];\n        array.sort((a,b) => {\n            if (a-b > 0){\n          \
    \      return -1;\n            }else{\n                return 1;\n           \
    \ }\n        });\n    }\n    return result;\n}", "    let arr1 = []\n    let arr2\
    \ = []\n    let sum = 0\n    for (let i = 0; i < array.length; i++){\n       \
    \ sum += array[i]\n    }\n    for (let i = 0; i < array.length; i++){\n      \
    \  if (i % 2 === 0){\n            arr1.push(array[i])\n        } else {\n    \
    \        arr2.push(array[i])\n        }\n    }\n    let res = []\n    if (sum\
    \ % 2 === 0){\n        for (let i = 0; i < array.length; i++){\n            for\
    \ (let j = 0; j < arr1.length; j++){\n                if (arr1[j] > arr2[i]){\n\
    \                    res.push(arr1[j])\n                    arr1[j] = arr2[i]\n\
    \                    arr2[i] = arr1[j]\n                }\n            }\n   \
    \     }\n    } else {\n        for (let i = 0; i < array.length; i++){\n     \
    \       for (let j = 0; j < arr1.length; j++){\n                if (arr1[j] <\
    \ arr2[i]){\n                    res.push(arr1[j])\n                    arr1[j]\
    \ = arr2[i]\n                    arr2[i] = arr1[j]\n                }\n      \
    \      }\n        }\n    }\n    return res\n}\n", "\tarray.sort(function(a,b){\n\
    \t\tif((a+b)%2==1)return -1;\n\t\telse if((a+b)%2==0)return 1;\n\t});\n\treturn\
    \ array;\n}\n", "\tif (array.length < 2) {\n\t\treturn array;\n\t}\n\n\tvar middle\
    \ = Math.floor(array.length / 2);\n\tvar left = sort_array(array.slice(0, middle));\n\
    \tvar right = sort_array(array.slice(middle));\n\n\treturn merge(sort_array(left),\
    \ sort_array(right), array);\n}\n", "    let arr = [];\n    for(let i = 0;i <\
    \ array.length;i++){\n        arr.push(array[i]);\n    }\n    \n    if(arr.reduce((prev,\
    \ curr) => prev + curr, 0) %2 !== 0){\n        arr.sort((a,b)=>a-b);\n    } else\
    \ {\n        arr.sort((a,b)=>b-a);\n    }\n    return arr;\n}\n", "    return\
    \ array\n}\n", "  return array.sort((a, b) => {\n    const [aSum, aIndex] = [a\
    \ || 0, a];\n    const [bSum, bIndex] = [b || 0, b];\n    return aSum - bSum ||\
    \ aIndex - bIndex;\n  });\n}\n", "\tconst sum = array.reduce((a,b) => a + b, 0);\n\
    \treturn (sum % 2 == 1)? array.reverse() : array.sort((a,b) => a-b);\n}\n", " \
    \ let new_array = [];\n  let odd_sum = array.reduce((a,b)=>a+b, 0);\n  let even_sum\
    \ = array.reduce((a,b)=>a+b%2, 0);\n  for(let i=0; i<array.length; i++){\n   \
    \ if(new_array.length == 0) new_array.push(array[i]);\n    if(odd_sum % 2 == 0\
    \ && even_sum % 2 == 0){\n      new_array.push(array[i]);\n      odd_sum -= new_array[0];\n\
    \      even_sum -= new_array[array.length-1];\n    }\n    else if(odd_sum % 2\
    \ != 0 && even_sum % 2 != 0){\n      new_array.push(array[i]);\n      even_sum\
    \ -= new_array[array.length-1];\n      odd_sum -= new_array[0];\n    }\n    else\
    \ if(odd_sum % 2 == 0 && even_sum % 2 != 0){\n      new_array.push(array[i]);\n\
    \      odd_sum -= new_array[0];\n    }\n    else if(odd_sum % 2 != 0 && even_sum\
    \ % 2 == 0){\n      new_array.push(array[i]);\n      even_sum -= new_array[array.length-1];\n\
    \    }\n  }\n  return new_array;\n}\n", "    array.sort((a,b)=>{\n        if(a\
    \ + b > 0){\n            return a - b;\n        } else {\n            return b\
    \ - a;\n        }\n    });\n    return array;\n}\n", "    var copy = array.slice(0);\n\
    \    var len = copy.length;\n    var total = 0;\n    for (var i = 0; i < len;\
    \ i++) {\n        total += copy[i];\n    }\n    //If the sum is odd, sort it in\
    \ ascending order\n    if (total % 2 == 1) {\n        copy.sort();\n    } else\
    \ {\n        //If the sum is even, sort it in descending order\n        copy.sort(function\
    \ (a, b){\n            return a - b;\n        });\n    }\n    return copy;\n}\n",
  "  let sortedArray = [];\n  let sumOfFirstIndex = 0;\n  let sumOfLastIndex = 0;\n\
    \n  for (let index = 0; index < array.length; index++) {\n    sumOfFirstIndex\
    \ += array[index];\n    sumOfLastIndex += array[index];\n  }\n\n  if(sumOfFirstIndex\
    \ & 1){\n    sortedArray.push(array[array.length - 1])\n    sortedArray.push(array[0])\n\
    \  } else {\n    sortedArray.push(array[0])\n    sortedArray.push(array[array.length\
    \ - 1])\n  }\n\n  return sortedArray;\n}\n", "  let result = [];\n  let sum_of_array\
    \ = sum(array);\n  \n  if(sum_of_array % 2 === 0){\n    result = array.reverse();\n\
    \  } else {\n    let first_index = 0;\n    let last_index = array.length - 1;\n\
    \    while(first_index <= last_index){\n      let mid_index = Math.trunc(first_index)\
    \ + Math.trunc(last_index) / 2;\n      if(sum(array[mid_index]) % 2 === 0){\n\
    \        result = result.concat(array.slice(first_index, mid_index).reverse());\n\
    \        last_index = mid_index - 1;\n      } else {\n        first_index = mid_index\
    \ + 1;\n      }\n    }\n    result = result.concat(array.slice(first_index).reverse());\n\
    \  }\n  \n  return result;\n}\n", "  let len = array.length;\n  if(len < 1){\n\
    \    return array;\n  }\n  if(len % 2 === 0){\n    let odd = len/2;\n    return\
    \ array.sort((a,b) => {\n      return a>b ? 1 : (a < b ? -1 : 0);\n    }).slice(0,odd).concat(array.slice(odd).sort((a,b)\
    \ => {\n      return a>b ? -1 : (a < b ? 1 : 0);\n    }).slice(0,odd));\n  }else{\n\
    \    let even = len/2;\n    return array.sort((a,b) => {\n      return a>b ? -1\
    \ : (a < b ? 1 : 0);\n    }).slice(0,even).concat(array.slice(even).sort((a,b)\
    \ => {\n      return a>b ? 1 : (a < b ? -1 : 0);\n    }).slice(0,even));\n  }\n\
    }\n", "  if (array.length === 0) return array;\n\n  var sum = 0;\n  var max_index\
    \ = 0;\n  var min_index = 0;\n\n  for (var i = 0; i < array.length; i++){\n  \
    \  if (array[i] > 0) sum += array[i];\n    if (sum % 2 === 0){\n      array[i]\
    \ = array[i] - array[0];\n      max_index = i;\n    }\n    else {\n      array[i]\
    \ = array[i] - array[array.length - 1];\n      min_index = i;\n    }\n  }\n\n\
    \  var temp = array[max_index];\n  array[max_index] = array[min_index];\n  array[min_index]\
    \ = temp;\n\n  return array;\n}\n", "\t\n\tlet sum = 0;\n\tlet len = array.length;\n\
    \tfor(let i = 0; i < len; i++){\n\t\tsum += array[i];\n\t}\n\t\n\tlet result =\
    \ array.slice();\n\tlet sum2 = sum;\n\tlet sum1 = sum;\n\tfor(let i = 0; i < len;\
    \ i++){\n\t\t\n\t\tsum1 += result[i];\n\t\tsum2 -= result[i];\n\t\t\n\t\tif(sum1\
    \ == sum2){\n\t\t\tresult.splice(i,1);\n\t\t}\n\t}\n\t\n\treturn result;\n}\n\n",
  "    let temp = [...array];\n    for(let i = 0;i<temp.length;i++){\n        let\
    \ j = i;\n        for(let k = i+1; k<temp.length-1;k++){\n            if(temp[i]\
    \ + temp[k] > temp[j+1]){\n                let temp = temp[i];\n             \
    \   temp[i] = temp[j+1];\n                temp[j+1] = temp;\n            }\n \
    \       }\n    }\n    return temp;\n}\nlet input = [1,2,3];\nlet output = sort_array(input);",
  "    // Your code here\n}", "    if(!array || array.length < 1) return [];\n   \
    \ if(array.length > 1 && array[0] > array.length) return array.reverse();\n  \
    \  const copy = array.slice(0);\n    const result = copy.sort((a, b) => a - b);\n\
    \    array.length = 0;\n    return result.concat(copy);\n}\n", "    var sum =\
    \ 0;\n    var sumA = 0;\n    var sumB = 0;\n    var arrayLength = array.length;\n\
    \    for(var i = 0; i < arrayLength; i++){\n        sum += array[i];\n       \
    \ sumA += array[i];\n        sumB += array[i];\n    }\n\n    var a = sum / 2;\n\
    \    var b = sumB / 2;\n    var c = sumA - a;\n\n    if (b === 0){\n        return\
    \ array;\n    }\n\n    if (c === 0){\n        return array.slice().reverse();\n\
    \    }\n\n    if (b === c){\n        return array.slice().reverse();\n    }\n\n\
    \    return array.slice().sort(function(a, b) {\n        return b - a;\n    }).reverse();\n\
    }\n", "  let sum = 0;\n  const sortedArr = array.sort((a,b)=>{\n    sum = a +\
    \ b;\n    if (sum%2 === 1){\n      return -1;\n    }else{\n      return 1;\n \
    \   }\n  });\n  return sortedArr;\n}\n", "    let evenSum = 0;\n    let oddSum\
    \ = 0;\n    for (let i = 0; i < array.length; i++){\n        evenSum += array[i];\n\
    \    }\n    for (let i = array.length - 1; i > 0; i--){\n        oddSum += array[i];\n\
    \    }\n    if (oddSum%2 === 0){\n        return array.sort((a,b) => b-a);\n \
    \   } else {\n        return array.sort((a,b) => a-b);\n    }\n}\n", "    let\
    \ sum =0;\n    for(let i =0;i<array.length;i++){\n        sum += array[i];\n \
    \   }\n    if(sum%2==1){\n        return array.sort((x,y)=>y-x);\n    }\n    return\
    \ array.sort((x,y)=>x-y);\n}\n", "    var sum = 0;\n    var sorted = [];\n   \
    \ for(var i = 0; i < array.length; i++){\n        sum += array[i];\n        sorted.push(array[i]);\n\
    \        if(sum % 2 == 0){\n            sorted.sort();\n            sorted.reverse();\n\
    \        }else{\n            sorted.sort();\n        }\n    }\n    return sorted;\n\
    }", "  var len = array.length;\n  if(len < 2) return array;\n  var first = array[0];\n\
    \  var last = array[0];\n  var sum = 1;\n  for(var i = 1; i < len; i++){\n   \
    \ var currentSum = sum + array[i];\n    if(currentSum > sum){\n      sum = currentSum;\n\
    \      first = array[i];\n    }\n    last = array[i];\n  }\n  if(sum % 2 === 1){\n\
    \    array.push(first);\n    array.push(last);\n  } else {\n    array.push(last);\n\
    \    array.push(first);\n  }\n  return array;\n}\n", "    array.sort(function(a,\
    \ b){\n        return a - b;\n    });\n\n    if(array[0] > array[array.length-1]){\n\
    \        var t = 0;\n        for(var i = 1; i < array.length; i++){\n        \
    \    t += array[i];\n            array[i] = t;\n        }\n    }\n    return array;\n\
    }\n", "  let sum = 0;\n  for(let i = 0; i < array.length; i++){\n    sum += array[i];\n\
    \  }\n  let sorted = [];\n  if(sum%2 === 0){\n    for(let i = 0; i < array.length;\
    \ i++){\n      if(array[i]%2 === 0){\n        sorted.unshift(array[i]);\n    \
    \  }\n    }\n    return sorted;\n  } else {\n    for(let i = 0; i < array.length;\
    \ i++){\n      if(array[i] % 2 === 1){\n        sorted.push(array[i]);\n     \
    \ }\n    }\n    return sorted;\n  }\n}", "\tarray = array.slice();\n\tarray.sort((a,b)=>{\n\
    \t\tlet sum = a + b;\n\t\tif(sum & 1){\n\t\t\treturn -1;\n\t\t}\n\t\tif(sum ===\
    \ 0){\n\t\t\treturn 0;\n\t\t}\n\t\treturn 1;\n\t});\n\treturn array;\n}\n", " \
    \ array.sort(function(a, b){\n    return a > b ? 1 : -1\n  });\n  return array;\n\
    }\n", "  let sum = 0;\n  for(let i=0; i<array.length; i++){\n    sum += array[i];\n\
    \  }\n  if(sum%2 === 1){\n    array.sort((a,b)=>a-b);\n  }else{\n    array.sort((a,b)=>b-a);\n\
    \  }\n  return array;\n}\n", "    if(!Array.isArray(array)){\n        throw new\
    \ TypeError(\"sort_array: arg is not an array\");\n    }\n    if(array.length<=0){\n\
    \        return array;\n    }\n    let firstIndex = 0, lastIndex = array.length\
    \ - 1;\n    let sum = 0;\n    while(firstIndex < lastIndex){\n        sum = array[firstIndex]\
    \ + array[lastIndex];\n        if(sum%2 !== 0){\n            swap(array, firstIndex,\
    \ lastIndex);\n        }\n        firstIndex++;\n        lastIndex--;\n    }\n\
    \    return array;\n}", "  var odd_or_even = (array[0] + array[array.length-1])\
    \ % 2 === 0;\n  return array.sort(function(a,b){\n    return odd_or_even ? (a\
    \ + b) % 2 : a - b;\n  });\n}\n\nvar new_array = sort_array(numbers);\ndocument.write(\"\
    <pre>\" + JSON.stringify(new_array, 0, 4) + \"</pre>\");</code>\n<|/ a |>\n<|\
    \ a dscore=3 |>\nThis is probably the shortest solution I've seen.\n<code>", " \
    \ if (array.length===0) return array;\n  if (array.length===1) {return array;}\n\
    \  if (array.length===2) {\n    if(array[0]+array[1]%2 === 0) return array;\n\
    \    return array.sort((a,b) => a-b);\n  }\n  if (array.length===3) {\n    if(array[0]+array[1]+array[2]%2\
    \ === 0) return array;\n    return array.sort((a,b) => b-a);\n  }\n  if(array[0]+array[1]+array[2]+array[3]+array[4]+array[5]+array[6]+array[7]+array[8]+array[9]+array[10]+array[11]+array[12]+array[13]+array[14]+array[15]+array[16]+array[17]+array[18]+array[19]+array[20]+array[21]+array[22]+array[23]+array[24]+array[25]+array[26]+array[27]+array[28]+array[29]+array[30]+array[31]%2\
    \ === 0) return array;\n  return array.sort((a,b) => b-a);\n}", "  let sortedArray\
    \ = array;\n  let sumFirst = sortedArray[0];\n  let sumLast = sortedArray[sortedArray.length\
    \ - 1];\n  let isEvenOrOdd = (sumFirst%2===0 && sumLast%2!==0) || (sumFirst%2!==0\
    \ && sumLast%2===0);\n\n  if(isEvenOrOdd){\n    for(let i=1; i<sortedArray.length;\
    \ i++){\n      if(sortedArray[i]>sumFirst && sortedArray[i]>sumLast){\n      \
    \  sortedArray[i] = sortedArray[i] - 1;\n      }\n      else if(sortedArray[i]<sumFirst\
    \ && sortedArray[i]<sumLast){\n        sortedArray[i] = sortedArray[i] + 1;\n\
    \      }\n      else {\n        sortedArray[i] = sortedArray[i] + 2;\n      }\n\
    \    }\n  }\n  else {\n    for(let i=1; i<sortedArray.length; i++){\n      if(sortedArray[i]<sumFirst\
    \ && sortedArray[i]<sumLast){\n        sortedArray[i] = sortedArray[i] + 1;\n\
    \      }\n      else if(sortedArray[i]>sumFirst && sortedArray[i]>sumLast){\n\
    \        sortedArray[i] = sortedArray[i] - 1;\n      }\n      else {\n       \
    \ sortedArray[i] = sortedArray[i] + 2;\n      }\n    }\n  }\n  return sortedArray;\n\
    }\n", "  var copy = array.slice();\n  var len = copy.length;\n  var sorted = [];\n\
    \  var first = copy[len-1];\n  var last = copy[0];\n  var temp;\n  var evenSum\
    \ = 0;\n  var oddSum = 0;\n  for(var i = 0; i < len; i++){\n    temp = copy[i];\n\
    \    evenSum += temp;\n    oddSum += first;\n    evenSum = evenSum > last ? evenSum\
    \ - last : evenSum;\n    oddSum = oddSum < first ? oddSum - first : oddSum;\n\
    \    sorted.push(temp);\n    first = last;\n    last = temp;\n  }\n  if(oddSum\
    \ === 0){\n    copy.reverse();\n    return copy;\n  }\n  else if(evenSum === 0){\n\
    \    copy.reverse();\n    sorted.reverse();\n    return sorted;\n  }\n  else if(evenSum\
    \ < 0){\n    copy.reverse();\n    sorted.reverse();\n    return sorted;\n  }\n\
    \  else{\n    copy.reverse();\n    sorted.reverse();\n    return copy;\n  }\n\
    }\n", "    if (array.length === 0) {\n        return array;\n    }\n    let evenSum\
    \ = array.reduce((acc, val) => acc + val, 0);\n    let oddSum = array.reduce((acc,\
    \ val) => acc + val, 0);\n    if (oddSum - evenSum === 1) {\n        array.sort((a,\
    \ b) => a - b);\n    }\n    else {\n        array.sort((a, b) => b - a);\n   \
    \ }\n    return array;\n}", "\tlet array2 = array.slice()\n\tarray2.sort((a, b)\
    \ => a[0]-b[0] || a[1]-b[1])\n\treturn array2\n}", "\tvar arr=[];\n\tvar sum=array.slice(0).reduce(function(a,\
    \ b) {return a+b},0);\n\t\n\tif(sum%2==0)\n\t\treturn array.sort(function(a, b){return\
    \ a-b});\n\telse\n\t\treturn array.sort(function(a, b){return b-a});\n}\n", "\t\
    array.sort(function (a, b) {\n\t\tlet aSum = a + a\n\t\tlet bSum = b + b\n\t\t\
    if (aSum % 2 === 0 && bSum % 2 === 0) {\n\t\t\treturn aSum - bSum\n\t\t}else if\
    \ (aSum % 2 === 0 && bSum % 2 > 0) {\n\t\t\treturn -1\n\t\t}else if (aSum % 2\
    \ > 0 && bSum % 2 === 0) {\n\t\t\treturn 1\n\t\t}else if (aSum % 2 > 0 && bSum\
    \ % 2 > 0) {\n\t\t\treturn 0\n\t\t}\n\t})\n\treturn array\n}\n", "    let len\
    \ = array.length;\n    let sum = 0;\n    let result = [];\n    let temp = 0;\n\
    \    for(let i=0; i<len; i++){\n        temp = array[i];\n        sum += temp;\n\
    \        result.push(temp);\n    }\n    \n    // ascending order\n    if(sum %\
    \ 2 === 0){\n        result.sort((a,b) => a-b);\n    }\n    // descending order\n\
    \    else{\n        result.sort((a,b) => b-a);\n    }\n    \n    for(let i=0;\
    \ i<len; i++){\n        result[i] = array[i];\n    }\n    \n    return result;\n\
    }", "\tlet sorted_array = [];\n\tfor(let i = 0; i < array.length; i++) {\n\t\t\
    let index = sort_array_index(i, array);\n\t\tif(index === -1){\n\t\t\tsorted_array.push(array[i]);\n\
    \t\t}\n\t\telse {\n\t\t\tlet start = array[index];\n\t\t\tlet end = array[index\
    \ + 1];\n\t\t\tif(end - start > 0) sorted_array.push(start);\n\t\t\telse sorted_array.push(end);\n\
    \t\t}\n\t}\n\treturn sorted_array;\n}\n", "    let new_array = [];\n    for(let\
    \ i = 0; i < array.length; i++){\n        new_array.push(i);\n    }\n    new_array.sort((a,b)\
    \ => array[a] - array[b]);\n    if(new_array[0] % 2 != 0){\n        return new_array.sort((a,b)\
    \ => b - a);\n    }else{\n        return new_array.sort((a,b) => a - b);\n   \
    \ }\n}\n", "\tlet res = [];\n\tlet sum = array.reduce((a,b)=>a+b, 0);\n\tif(sum%2\
    \ == 1) return array.sort((a,b)=>b-a);\n\treturn array.sort((a,b)=>a-b);\n}\n",
  "  var sum = 0;\n  for(var i=1;i<array.length;i++){\n    sum += array[i];\n  }\n\
    \  if(sum%2 === 0){\n    return array.sort((a, b) => a-b);\n  }\n  return array.sort((a,\
    \ b) => b-a);\n}\n", "\tarray.sort((a,b)=>a-b);\n\treturn array;\n}", "\tlet sum\
    \ = 0;\n\tfor(let i=0; i< array.length; i++){\n\t\tsum += array[i];\n\t}\n\tif(sum%2\
    \ === 1){\n\t\treturn array.sort((a,b) => a - b);\n\t} else {\n\t\treturn array.sort((a,b)\
    \ => b - a);\n\t}\n}\n", "  var sum = 0;\n  for(var i = 0;i < array.length;i++){\n\
    \    sum += array[i];\n  }\n  var odd = sum % 2 === 1;\n  var swap = 0;\n  for(var\
    \ i = 0;i < array.length;i++){\n    var c = array[i];\n    array[i] = array[i];\n\
    \    swap += c;\n    if(swap % 2 === 1){\n      odd = !odd;\n    }\n    if(array[i]\
    \ > array[array.length - i]){\n      if(odd){\n        array.unshift(array.pop());\n\
    \      }\n    }else{\n      if(odd){\n        array.pop();\n      }\n    }\n \
    \ }\n  return array;\n}", "    let copy = [];\n    let sorted_array = [];\n  \
    \  for (let i = 0; i < array.length; i++){\n        copy = array.slice();\n  \
    \      if (sum_of_digits(array[i]) % 2 !== 0){\n            copy.sort();\n   \
    \     }\n        else{\n            copy.sort((a,b) => b-a);\n        }\n    \
    \    sorted_array.push(copy);\n    }\n    return sorted_array;\n}", "    array.sort((a,b)\
    \ => {\n        if (sum(a) === sum(b)) {\n            if (sum(a) % 2 === 0){\n\
    \                return a - b;\n            } else {\n                return b\
    \ - a;\n            }\n        }\n        if (sum(a) > sum(b)){\n            return\
    \ -1;\n        } else {\n            return 1;\n        }\n    })\n    return\
    \ array;\n}\n", "  //TODO: sort array in ascending or descending order\n  array.sort(function(a,b){\n\
    \    return (a-b);\n  });\n  return array;\n}", "\tarray.sort(function(a, b){\n\
    \t\ta = Math.min(a,b);\n\t\tb = Math.max(a,b);\n\t\treturn b-a;\n\t});\n\treturn\
    \ array;\n}", "\tlet arr = array.slice(0);\n\tlet len = arr.length;\n\tlet sum\
    \ = 0;\n\tfor(let i = 0; i < len; i++){\n\t\tsum += arr[i];\n\t}\n\tlet res =\
    \ [];\n\tif(sum % 2 === 1){\n\t\tfor(let i = 0; i < len; i++){\n\t\t\tres.push(arr[i]);\n\
    \t\t}\n\t\tlet start = 0;\n\t\tlet end = len - 1;\n\t\twhile(start <= end){\n\t\
    \t\tlet min = start;\n\t\t\tfor(let j = start; j < end; j++){\n\t\t\t\tif(arr[j]\
    \ < arr[min]){\n\t\t\t\t\tmin = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(min === start){\n\
    \t\t\t\tbreak;\n\t\t\t}\n\t\t\tif(min > start){\n\t\t\t\tlet tmp = arr[min];\n\
    \t\t\t\tarr[min] = arr[start];\n\t\t\t\tarr[start] = tmp;\n\t\t\t\tstart++;\n\t\
    \t\t}\n\t\t\telse {\n\t\t\t\tlet tmp = arr[start];\n\t\t\t\tarr[start] = arr[end];\n\
    \t\t\t\tarr[end] = tmp;\n\t\t\t\tend--;\n\t\t\t}\n\t\t}\n\t\tfor(let i = 0; i\
    \ < len; i++){\n\t\t\tres.push(arr[i]);\n\t\t}\n\t}\n\telse{\n\t\tfor(let i =\
    \ 0; i < len; i++){\n\t\t\tres.push(arr[i]);\n\t\t}\n\t\tlet start = 0;\n\t\t\
    let end = len - 1;\n\t\twhile(start <= end){\n\t\t\tlet min = start;\n\t\t\tfor(let\
    \ j = start; j < end; j++){\n\t\t\t\tif(arr[j] > arr[min]){\n\t\t\t\t\tmin = j;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t\tif(min === start){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t\
    if(min < start){\n\t\t\t\tlet tmp = arr[min];\n\t\t\t\tarr[min] = arr[start];\n\
    \t\t\t\tarr[start] = tmp;\n\t\t\t\tstart++;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet\
    \ tmp = arr[start];\n\t\t\t\tarr[start] = arr[end];\n\t\t\t\tarr[end] = tmp;\n\
    \t\t\t\tend--;\n\t\t\t}\n\t\t}\n\t\tfor(let i = 0; i < len; i++){\n\t\t\tres.push(arr[i]);\n\
    \t\t}\n\t}\n\treturn res;\n}\n", "\tconst sum = array.reduce((a,b)=>a+b, 0);\n\
    \treturn (sum % 2 === 1) ? array.sort((a,b)=>b-a) : array.sort((a,b)=>a-b);\n\
    }\n", "  var sum = 0, sum1 = 0;\n  var new_array = [];\n  var len = array.length;\n\
    \  for(var i = 0; i < len; i++){\n    sum += array[i];\n  }\n  for(var i = 0;\
    \ i < len; i++){\n    sum1 += array[i];\n    if(sum1 % 2 == 0){\n      new_array.push(array[i]);\n\
    \    }else{\n      new_array.push(array[i]);\n      new_array.push(array[i]);\n\
    \    }\n  }\n  return new_array;\n}\n", "\tlet temp = [...array];\n\tlet n = temp.length;\n\
    \n\tlet odd_sum = 0;\n\tlet even_sum = 0;\n\n\tfor (let i = 0; i < n; i++) {\n\
    \t\todd_sum += temp[i];\n\t\tif (i > 0) {\n\t\t\teven_sum += temp[i - 1];\n\t\t\
    }\n\t}\n\t\n\tif (odd_sum & 1) {\n\t\ttemp.sort((a, b) => {\n\t\t\treturn a -\
    \ b;\n\t\t});\n\t} else {\n\t\ttemp.sort((a, b) => {\n\t\t\treturn b - a;\n\t\t\
    });\n\t}\n\treturn temp;\n}\n", "    array.sort(function(a,b){\n        var sum=a+b;\n\
    \        if(sum%2){\n            return b-a;\n        }else{\n            return\
    \ a-b;\n        }\n    });\n    return array;\n}", "\tvar i, sum = 0;\n\tfor(var\
    \ i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\t}\n\tif(sum % 2 ===\
    \ 1){\n\t\tarray.sort(function(a,b){\n\t\t\tif(a-b !== 0){\n\t\t\t\treturn b-a;\n\
    \t\t\t}\n\t\t\telse{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\t}\n\telse{\n\t\t\
    array.sort(function(a,b){\n\t\t\tif(a-b !== 0){\n\t\t\t\treturn a-b;\n\t\t\t}\n\
    \t\t\telse{\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\t}\n\treturn array;\n}\n",
  "    var sum = 0;\n    for(var i = 0;i < array.length;i++){\n        sum += array[i];\n\
    \    }\n    if(sum % 2 == 1){\n        array.sort();\n    }else{\n        array.sort(function(a,\
    \ b){\n            return b - a;\n        });\n    }\n    return array;\n}\n</code>\n\
    <|/ a tags=javascript,algorithm |>\n<| c |>\nThanks, but this isn't working for\
    \ me. `[3, 4, 1, 0]` sorts correctly, but `[3, 4, 1, 0, 5]` doesn't.\n<|/ c |>\n\
    <| a tags=javascript,algorithm dscore=0 |>\nJust for fun, here's another take\
    \ on the question. I just came up with a solution that works but it's not very\
    \ efficient as is. If you have a more efficient solution, I'd be happy to see\
    \ it. If I figure it out, I'll update the answer with the solution.\n<code>\n\
    var array = [3, 4, 5, 0, 1, 4, 2, 6, 7];\nvar copy = [];\n", "  if(array.length\
    \ === 0) return array\n  let sum = 0\n  for(let i = 0; i < array.length; i++){\n\
    \    sum += array[i]\n  }\n  if(sum % 2 === 0){\n    for(let i = 0; i < array.length;\
    \ i++){\n      array.splice(i, 0, array[i])\n    }\n    return array\n  }else{\n\
    \    for(let i = array.length - 1; i >= 0; i--){\n      array.splice(i, 0, array[i])\n\
    \    }\n    return array\n  }\n}\n", "  var result = [],\n      sum = 0;\n\n \
    \ for(var i=0;i<array.length;i++){\n    sum += array[i];\n    result.push(array[i]);\n\
    \  }\n\n  if(sum % 2 === 0){\n    return result.sort();\n  } else {\n    return\
    \ result.sort(function(a,b){return b-a});\n  }\n}\n", "  array = array.slice();\n\
    \  var len = array.length;\n  if(len === 0) return array;\n  var mid = Math.floor((len\
    \ - 1) / 2);\n  var low = array[0];\n  var high = array[mid];\n\n  if(high < low){\n\
    \    for(var i = 0, len = array.length; i < len; i++){\n      if(array[i] < low)\
    \ low = array[i];\n      if(array[i] > high) high = array[i];\n    }\n  }\n\n\
    \  if(high - low > 0){\n    var highIndex = 0;\n    for(var i = 0; i < len; i++){\n\
    \      if(array[i] < low) array[highIndex++] = array[i];\n    }\n    low = 0;\n\
    \    highIndex = highIndex;\n    for(var i = 0; i < len; i++){\n      if(array[i]\
    \ > high) array[highIndex++] = array[i];\n    }\n  }\n  array.splice(0, highIndex);\n\
    \  return array;\n}\n\n", "\tvar i = 0;\n\tvar j = 0;\n\tvar n = array.length;\n\
    \tvar sum = 0;\n\tvar half = 0;\n\tvar temp;\n\tfor(i=0;i<n;i++){\n\t\tsum = array[i]+array[i+1];\n\
    \t\tif(sum%2 == 1){\n\t\t\ttemp = array[i+1];\n\t\t\tarray[i+1] = array[i];\n\t\
    \t\tarray[i] = temp;\n\t\t}\n\t}\n\tfor(i = n - 1;i >=0;i--){\n\t\tsum = array[i]+array[i+1];\n\
    \t\tif(sum%2 == 0){\n\t\t\ttemp = array[i+1];\n\t\t\tarray[i+1] = array[i];\n\t\
    \t\tarray[i] = temp;\n\t\t}\n\t}\n\treturn array;\n}\n", "\tlet result = [...array];\n\
    \tlet sum = 0;\n\tlet temp;\n\tfor(let i = 1, len = result.length; i < len; i++){\n\
    \t\tsum += result[i];\n\t\tif(sum % 2 === 0){\n\t\t\ttemp = result[i];\n\t\t\t\
    result[i] = result[i - 1];\n\t\t\tresult[i - 1] = temp;\n\t\t}\n\t}\n\treturn\
    \ result;\n}\n", "    const sum = (arr) => arr.reduce((a,b)=>a+b);\n    return\
    \ array.reduce((p,c,i,array)=>{\n        sum(p)\n        sum(c)\n        if(p===c){\n\
    \            p.push(c);\n            p.sort();\n            return p;\n      \
    \  }\n        else if(p<c){\n            p.push(c);\n            return p;\n \
    \       }\n        return c;\n    },[]);\n}", "\tvar sum,\n\t\ttemp,\n\t\tcopy\
    \ = [];\n\n\tfor (var i = 1, len = array.length; i < len; i++){\n\t\tcopy = array.slice();\n\
    \n\t\tsum = copy[0];\n\n\t\tfor (var j = 0, jLen = copy.length; j < jLen; j++){\n\
    \t\t\tsum += copy[j];\n\n\t\t\tif (sum & 1) copy[j - 1] = copy[j];\n\t\t\telse\
    \ copy[j - 1] = copy[j];\n\n\t\t\tsum -= copy[j];\n\t\t}\n\n\t\tcopy.push(i);\n\
    \t}\n\n\treturn copy;\n}\n<|/ file ext=.js dstars=0 |>", "\tarray = array.slice();\n\
    \tlet sum = 0;\n\tfor (let i = 0; i < array.length; i++){\n\t\tsum += array[i];\n\
    \t}\n\tif(sum % 2 === 1){\n\t\tarray.sort((a, b) => a - b);\n\t}\n\telse{\n\t\t\
    array.sort((a, b) => b - a);\n\t}\n\treturn array;\n}\n", "\tvar len = array.length;\n\
    \tif (len === 0) return array;\n\t\n\t// Sum two numbers\n\tvar sum = 0;\n\tfor(var\
    \ i = 0; i < len - 1; i++) {\n\t\tsum += array[i];\n\t}\n\t\n\t// Sort two numbers\n\
    \tif (sum % 2 === 0) {\n\t\tvar middle = Math.floor(len / 2);\n\t\tvar left =\
    \ array.slice(0, middle);\n\t\tvar right = array.slice(middle, len);\n\t\t\n\t\
    \t// Sort left number\n\t\tleft = sort_array(left);\n\t\t\n\t\t// Sort right number\n\
    \t\tright = sort_array(right);\n\t\t\n\t\t// Merge two arrays\n\t\tfor(var i =\
    \ 0; i < left.length; i++){\n\t\t\tarray.splice(i , 0, left.shift());\n\t\t}\n\
    \t\tfor(var i = 0; i < right.length; i++){\n\t\t\tarray.push(right.pop());\n\t\
    \t}\n\t} else {\n\t\tvar middle = Math.floor(len / 2);\n\t\tvar left = array.slice(0,\
    \ middle);\n\t\tvar right = array.slice(middle, len);\n\t\t\n\t\t// Sort left\
    \ number\n\t\tleft = sort_array(left);\n\t\t\n\t\t// Sort right number\n\t\tright\
    \ = sort_array(right);\n\t\t\n\t\t// Merge two arrays\n\t\tfor(var i = 0; i <\
    \ left.length; i++){\n\t\t\tarray.push(left.shift());\n\t\t}\n\t\tfor(var i =\
    \ 0; i < right.length; i++){\n\t\t\tarray.unshift(right.pop());\n\t\t}\n\t}\n\t\
    \n\t// Return the array\n\treturn array;\n}\n\n", "\tif (array == null || array.length\
    \ < 2){\n\t\treturn array;\n\t}\n\tvar sum = 0;\n\tfor (var i = 1; i < array.length;\
    \ i++){\n\t\tsum = array[i] + array[i - 1];\n\t\tif (sum % 2 == 1){\n\t\t\tarray.splice(i\
    \ + 1, 0, array[i]); //insert after ith index\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn\
    \ array;\n}\n", "    let len = array.length;\n    let i = 0;\n    let temp;\n\
    \    while(i < len){\n        temp = array[i];\n        for(let j = i + 1; j <\
    \ len; j++){\n            if(temp + array[j] < temp){\n                let tmp\
    \ = array[j];\n                array[j] = temp;\n                temp = tmp;\n\
    \            }\n        }\n        array[i] = temp;\n        i++;\n    }\n   \
    \ return array;\n}\n", "  var temp_array = array.slice();\n  sort_array_recursive(temp_array);\n\
    \  return temp_array;\n}\n", "  for(let i=0;i<array.length;i++){\n    let sum=array[i];\n\
    \    let last=array[array.length-1];\n    if (sum%2===0){\n      array.push(array[i]);\n\
    \      array.splice(i,1);\n    }else{\n      if (last%2===1){\n        array.push(array[array.length-1]);\n\
    \        array.splice(array.length-1,1);\n      }\n    }\n  }\n  return array;\n\
    }\n", "\tlet sortedArray = [...array]\n\tlet sumFirstIndex = sortedArray.reduce((a,b)=>a+b)\n\
    \tlet sumLastIndex = sortedArray.reduce((a,b)=>a+b)\n\tif(sumFirstIndex %2 !=\
    \ 0){\n\t\tsortedArray = sortedArray.sort((a,b)=>b-a)\n\t}else{\n\t\tsortedArray\
    \ = sortedArray.sort((a,b)=>a-b)\n\t}\n\treturn sortedArray\n}\n", "  if(array.length\
    \ === 0) return array;\n  if(array.length === 1) return array;\n  if(array.length\
    \ === 2) return array.sort((a,b)=>a-b);\n  let first = array[0];\n  let last =\
    \ array[0];\n  for(let i = 1;i < array.length;i++){\n    first = first + array[i];\n\
    \    last = last + array[i];\n    if(array[i] % 2 === 0){\n      array.splice(i,\
    \ 0, array[i]);\n    }\n    else{\n      array.splice(i+1, 0, array[i]);\n   \
    \ }\n  }\n  array.sort((a,b)=>a-b);\n  return array;\n}\n", "    let arrayCopy\
    \ = array.slice();\n    let arrSum = arrayCopy.reduce((acc, elem)=>{\n       \
    \ return acc + elem;\n    },0);\n\n    if(arrSum%2==1){\n        arrayCopy.sort((a,b)=>a-b);\n\
    \    }else{\n        arrayCopy.sort((a,b)=>b-a);\n    }\n    return arrayCopy;\n\
    }\n", "\tvar sum = 0;\n\tarray.forEach(function(n){\n\t\tsum += n;\n\t});\n\t\
    if(sum % 2 === 1){\n\t\treturn array.sort(function(a,b){\n\t\t\treturn a-b;\n\t\
    \t});\n\t}else{\n\t\treturn array.sort(function(a,b){\n\t\t\treturn b-a;\n\t\t\
    });\n\t}\n}\n", "    let copy = array.slice(0);\n    copy.sort((a,b)=>a-b);\n\
    \    return copy;\n}\n", "\tlet nums = array;\n\tlet sum = 0;\n\tlet n = nums.length;\n\
    \n\tfor(let i = 0; i < n; i++){\n\t\tsum += nums[i];\n\t}\n\n\tif (sum % 2 ===\
    \ 1){\n\t\treturn nums.sort((a, b) => a-b);\n\t}\n\n\treturn nums.sort((a, b)\
    \ => b-a);\n}\n", "    let copy=array.slice(0);\n    if(copy.length<2){\n    \
    \    return array;\n    }\n    let n=copy.length;\n    let sum=0;\n    for(let\
    \ i=0;i<n-1;i++){\n        sum+=copy[i]+copy[i+1];\n    }\n    if(sum%2==0){\n\
    \        return sort_array(copy.sort((a,b)=>b-a));\n    }else{\n        return\
    \ sort_array(copy.sort((a,b)=>a-b));\n    }\n}\n", "  var sum= 0;\n  var resultArray\
    \ = [];\n  for(var i= 0; i< array.length; i++){\n    sum += array[i];\n    resultArray.push(array[i]);\n\
    \  }\n  if (sum%2 == 1){\n    array.reverse();\n    return resultArray.concat(array);\n\
    \  }else{\n    return resultArray.concat(array).reverse();\n  }\n}\n", "  if(array.length\
    \ ==0){\n    return array;\n  }\n  var sum=0;\n  for(var i =0;i<array.length;i++){\n\
    \    sum+=array[i];\n  }\n  var flag=false;\n  if(sum%2==1){\n    flag=true;\n\
    \  }\n  var result= array.slice();\n  if(flag==true){\n    result.sort(function(a,b){\n\
    \      return a-b;\n    });\n  }else{\n    result.sort(function(a,b){\n      return\
    \ b-a;\n    });\n  }\n  return result;\n}\n", "\t// Write your code here\n\t//\
    \ console.log();\n}\n", "    // write code here\n    var sum=array.reduce(function(pv,\
    \ cv){\n        return pv+cv;\n    });\n    return array==null?[]:array===0?[]:array.sort((a,b)=>sum-a-b);\n\
    }\n", "    array.sort(function (a,b){\n        var sumA = a + b;\n        var\
    \ sumB = a - b;\n        if (sumA % 2 !== 0 && sumB % 2 !== 0) return 1;\n   \
    \     else if (sumA % 2 === 0 && sumB % 2 === 0) return -1;\n        else return\
    \ 0;\n    })\n    return array;\n}\n", "\tlet arrSum = array.reduce((acc, val)\
    \ => {\n\t\treturn acc + val;\n\t}, 0);\n\tif(arrSum % 2 !== 0){\n\t\tarray.sort((a,b)\
    \ => a - b);\n\t} else {\n\t\tarray.sort((a,b) => b - a);\n\t}\n\treturn array;\n\
    }\n", "\tlet result = []\n\tarray.forEach(element => {\n\t\tresult.push(element)\n\
    \t})\n\tlet length = result.length\n\tlet sumFirst = result[0]\n\tlet sumLast\
    \ = result[length - 1]\n\tlet sum\n\tif (sumFirst > sumLast) {\n\t\treturn result.sort((a,b)\
    \ => a - b)\n\t} else {\n\t\treturn result.sort((a,b) => b - a)\n\t}\n}\n", " \
    \   let newArray = array.sort((a, b) => {\n        let sumA = a + b;\n       \
    \ let sumB = a - b;\n        if (sumA % 2 == 0 && sumB % 2 == 0) {\n         \
    \   return sumA - sumB;\n        }\n        else if (sumA % 2 == 0 && sumB % 2\
    \ != 0) {\n            return sumB;\n        }\n        else if (sumA % 2 != 0\
    \ && sumB % 2 == 0) {\n            return sumA;\n        }\n    });\n    return\
    \ newArray;\n}\n", "\tlet evensum = 0;\n\tlet oddsum = 0;\n\tlet even = array;\n\
    \tlet odd = array.concat();\n\n\tfor(let i = 0; i < array.length; i++){\n\t\t\
    let currentNumber = array[i];\n\t\tif(currentNumber % 2 === 0){\n\t\t\tevensum\
    \ += currentNumber;\n\t\t}\n\t\telse{\n\t\t\toddsum += currentNumber;\n\t\t}\n\
    \t}\n\tif (evensum % 2 === 1){\n\t\teven = even.concat(array.concat(array.slice(-2)));\n\
    \t}\n\telse if (oddsum % 2 === 1){\n\t\todd = odd.concat(array.slice(-2)).concat(array.slice(0,-1));\n\
    \t}\n\treturn odd.concat(even);\n}", "    var copy = []\n    for (var i=0; i <\
    \ array.length; i++){\n        copy.push(array[i])\n    }\n    copy.sort(function(a,\
    \ b){\n        return a-b\n    })\n    for (var i=0; i < array.length; i++){\n\
    \        array[i] = copy[i]\n    }\n    return array\n}\nvar array = [5,1,2,4,3,0,6]",
  "    var arrayCopy = [].concat(array);\n    var sum = 0;\n    var evenOrOdd = 0;\n\
    \    for(var i = 0; i < arrayCopy.length; i++){\n        sum += arrayCopy[i];\n\
    \        if(sum % 2 === 0) evenOrOdd += 1;\n    }\n    arrayCopy.sort(function(x,\
    \ y) {\n        if (evenOrOdd === 0) {\n            return y - x;\n        } else\
    \ {\n            return x - y;\n        }\n    });\n    return arrayCopy;\n}\n",
  "  let length = array.length;\n  let sum = 0;\n  let resultArray = [];\n\n  for(let\
    \ i = 0; i < length; i++){\n    sum += array[i];\n    if(sum % 2 == 1){\n    \
    \  resultArray.push(array[i]);\n    }else{\n      resultArray.push(array[i]);\n\
    \      resultArray.push(array[i]);\n    }\n  }\n  return resultArray;\n}\n", "\t\
    array.sort(function(a,b){\n\t\tif(a>b) return 1;\n\t\tif(a<b) return -1;\n\t\t\
    return 0;\n\t});\n\treturn array;\n}", "\tif(array.length < 2){\n\t\treturn array;\n\
    \t}\n\n\tvar sumArray = array.reduce(function(prev, current){\n\t\treturn prev\
    \ + current;\n\t});\n\n\tvar odd = sumArray%2 === 1;\n\tvar min = Math.min(...array);\n\
    \tvar max = Math.max(...array);\n\tif(odd) return array.sort((a,b)=>a-b);\n\t\
    return array.sort((a,b)=>b-a);\n}\n", "\tif (array.length==0){\n\t\treturn array;\n\
    \t}\n\tif (array.length==1){\n\t\treturn array;\n\t}\n\tlet sum=array[0];\n\t\
    for (let i=1;i<array.length;i++){\n\t\tsum+=array[i];\n\t}\n\tif (sum%2==1){\n\
    \t\tarray.sort((a,b)=>a-b);\n\t}else{\n\t\tarray.sort((a,b)=>b-a);\n\t}\n\treturn\
    \ array;\n}\n", "    let sortedArray = array\n    \n    if(!array || array.length\
    \ <= 0) return\n    \n    let sum1 = array.reduce((a, b) => a + b, 0)\n    let\
    \ sum2 = array.reduce((a, b) => a - b, 0)\n    \n    if(sum1 % 2 === 1){\n   \
    \     sortedArray = array.sort((a, b) => a - b)\n    }\n    else{\n        sortedArray\
    \ = array.sort((a, b) => b - a)\n    }\n    \n    return sortedArray\n}\n", " \
    \ let length = array.length;\n  let sum = 0;\n\n  for(let i = 0; i < length; i++){\n\
    \    sum += array[i];\n  }\n\n  if(sum % 2 === 0){\n    return array.sort((a,b)=>b-a);\n\
    \  }else{\n    return array.sort((a,b)=>a-b);\n  }\n}\n", "    var a = array.slice();\n\
    \    var sum = 0;\n    for(var i=0; i< a.length; i++){\n        sum+=a[i]\n  \
    \  }\n    if(sum%2===0){\n        return a.sort((a,b)=>a-b)\n    }else{\n    \
    \    return a.sort((a,b)=>b-a)\n    }\n}", "    var result = [];\n    var sort\
    \ = function (first, last){\n        var mid = ~~((first + last) / 2);\n     \
    \   if(mid % 2 === 0) return array.slice(first, mid).concat(array.slice(mid +\
    \ 1, last));\n        else return array.slice(mid + 1, last).concat(array.slice(first,\
    \ mid));\n    };\n    \n    for(var i = 0; i < array.length; i++){\n        var\
    \ tmp = array[i];\n        var left = ~~ ((i - 1) * 2);\n        var right = ~~\
    \ (i * 2);\n        \n        if(left >= array.length || right < 0) continue;\n\
    \        \n        if(tmp + array[left] > tmp + array[right]){\n            left\
    \ = left;\n            right = right;\n        }\n        \n        if(left +\
    \ 1 === right) result.push(tmp);\n        else result.push(sort(tmp, array[left]));\n\
    \    }\n    return result;\n}\n", "  if(array.length == 0){\n    return array;\n\
    \  }\n  const len = array.length;\n  const odd = array[0] > array[len - 1];\n\
    \  let start = 0;\n  let end = len - 1;\n  while (start < end) {\n    while (start\
    \ < end && array[start] + array[end] >= 0) {\n      end--;\n    }\n    while (start\
    \ < end && array[start] + array[end] < 0) {\n      start++;\n    }\n    if (odd\
    \ && start > 0 && array[start] > array[start + 1]) {\n      end--;\n    }\n  \
    \  if (!odd && start < len - 1 && array[start] < array[end - 1]) {\n      start++;\n\
    \    }\n    array[start] = array[start] - array[start];\n    array[end] = array[end]\
    \ - array[end];\n    start++;\n    end--;\n  }\n  return array;\n}\n", "    let\
    \ copy = array.slice(0);\n    let sum = 0;\n    for(let i = 0; i < copy.length;\
    \ i++){\n        sum += copy[i];\n    }\n    if(sum % 2 === 1){\n        copy.sort((a,b)\
    \ => b-a);\n    } else {\n        copy.sort((a,b) => a-b);\n    }\n    return\
    \ copy;\n}\nmodule.exports = sort_array;\n", "    let result = [];\n    for (let\
    \ i = 0; i < array.length; i++) {\n        let curSum = sum(array[i]);\n     \
    \   let curIndex = i;\n        if(curSum%2 != 0){\n            result.push(array[i]);\n\
    \            while (curIndex < array.length-1 && sum(array[curIndex+1]) > curSum){\n\
    \                curIndex++;\n                result.push(array[curIndex]);\n\
    \            }\n        }else{\n            result.push(array[array.length-1]);\n\
    \            while (curIndex > 0 && sum(array[curIndex-1]) < curSum){\n      \
    \          curIndex--;\n                result.push(array[curIndex]);\n      \
    \      }\n        }\n    }\n    return result;\n}\n", "\t\n\tif (array.length===0)\
    \ return array;\n\tif (array.length==1) return [array[0]];\n\t\n\t//If the sum\
    \ of the first and last value of the array is odd,\n\t//then sort the array in\
    \ ascending order.\n\t//Otherwise, sort the array in descending order.\n\t//For\
    \ example:\n\t//If the array is [5, 3, 4, 1], then the sum is  2+4+3=7\n\t//The\
    \ first and last values are 3 and 1, respectively\n\tif (array.reduce((a,b)=>a+b)%2==1){\n\
    \t\treturn array.sort((a,b)=>b-a);\n\t}\n\telse {\n\t\treturn array.sort((a,b)=>b-a);\n\
    \t}\n}\n", "    // Your code goes here\n    var returnArray = [];\n    var returnArrayMax\
    \ = 0;\n    var returnArrayMin = 0;\n    for(var i=0;i<array.length;i++){\n  \
    \      var sum = 0;\n        for(var j=i;j<array.length;j++){\n            sum\
    \ += array[j];\n        }\n        if (sum%2 === 1){\n            returnArrayMin\
    \ = array[i];\n        }\n        else{\n            returnArrayMax = array[i];\n\
    \        }\n    }\n    for(var i=0;i<array.length;i++){\n        if(array[i] <\
    \ returnArrayMin){\n            returnArray[i] = returnArrayMin;\n        }\n\
    \        else if(array[i] > returnArrayMax){\n            returnArray[i] = returnArrayMax;\n\
    \        }\n        else{\n            returnArray[i] = array[i];\n        }\n\
    \    }\n    return returnArray;\n}\n", "\tvar sum = 0;\n\tfor(var i = 0; i < array.length;\
    \ i++){\n\t\tsum += array[i];\n\t}\n\tif(sum % 2 === 1){\n\t\treturn array.sort(function(a,\
    \ b){\n\t\t\treturn a - b;\n\t\t});\n\t}\n\treturn array.sort(function(a, b){\n\
    \t\treturn b - a;\n\t});\n}\n", "    if(array.length < 2){\n        return array;\n\
    \    }\n    let sum = 0;\n    let result = [];\n    for (let i = 0; i < array.length;\
    \ i++) {\n        sum += array[i];\n        result.push(array[i]);\n    }\n\n\
    \    if (sum % 2 == 0) {\n        array.sort((a, b) => a - b);\n    } else {\n\
    \        array.sort((a, b) => b - a);\n    }\n\n    return result.concat(array);\n\
    }\n", "\tlet sum = 0;\n\tlet swap = array[0];\n\tarray.forEach((e) => {\n\t\t\
    sum += e;\n\t});\n\tlet odd = sum % 2 === 1;\n\tif(odd){\n\t\tarray.sort((a, b)\
    \ => a - b);\n\t}\n\telse{\n\t\tarray.sort((a, b) => b - a);\n\t}\n\treturn array;\n\
    }\n", "  let sum = 0; //\u521D\u59CB\u5316\u6570\u7EC4\u7684\u6C42\u548C\u7ED3\
    \u679C\n  for (let i = 0; i < array.length; i++){\n    sum += array[i]; //\u8BA1\
    \u7B97\u6570\u7EC4\u4E2D\u6BCF\u4E2A\u5143\u7D20\u7684\u548C\n  }\n  let isOdd\
    \ = (sum % 2 === 0); //\u5224\u65AD\u6570\u7EC4\u4E2D\u662F\u5426\u5B58\u5728\u5947\
    \u5076\n  let tempArray = []; //\u7528\u4E8E\u50A8\u5B58\u672A\u6392\u5E8F\u7684\
    \u6570\u7EC4\n  if (isOdd){ //\u5982\u679C\u5947\u5076\n    for (let i = 0; i\
    \ < array.length; i++){\n      if (i > 0){\n        if (array[i] > array[i - 1]){\n\
    \          tempArray.push(array[i]);\n        }\n      }\n    }\n    for (let\
    \ i = array.length - 1; i >= 0; i--){\n      tempArray.push(array[i]);\n    }\n\
    \  }\n  else { //\u5982\u679C\u5076\n    for (let i = 0; i < array.length; i++){\n\
    \      if (i < array.length - 1){\n        if (array[i] < array[i + 1]){\n   \
    \       tempArray.push(array[i]);\n        }\n      }\n    }\n    for (let i =\
    \ array.length - 1; i > 0; i--){\n      tempArray.push(array[i]);\n    }\n  }\n\
    \  return tempArray;\n}\n", "  array.sort((a, b) => a - b);\n  if (array.reduce((a,b)\
    \ => a+b) % 2 === 1) return array.slice().reverse();\n  return array;\n}\n", " \
    \   if(array.length == 0)\n        return array;\n    let i = 0;\n    let j =\
    \ array.length - 1;\n    let tmp = array[i];\n    while(j <= 0){\n        while(array[j]\
    \ > tmp){\n            j--;\n        }\n        while(array[i] < tmp){\n     \
    \       i++;\n        }\n        if(i % 2 == 0){\n            tmp = array[i];\n\
    \            array[i] = array[j];\n            array[j] = tmp;\n            j--;\n\
    \        }else{\n            tmp = array[i];\n            array[i] = array[j];\n\
    \            array[j] = tmp;\n            i++;\n        }\n    }\n    return array;\n\
    }\n", "    let totalSum = array.reduce((a, b) => a + b, 0);\n    let isOdd = totalSum\
    \ % 2 === 1;\n    array.sort((a,b) => a > b ? 1 : -1 + (isOdd ? 1 : -1));\n  \
    \  return array;\n}\n</code>\n<|/ a tags=javascript,sorting dscore=0 |>\n<| a\
    \ tags=javascript,sorting |>\n<code>", "    return array\n}\n", "\tlet total =\
    \ 0;\n\tfor (let i = 0; i < array.length; i++){\n\t\ttotal += array[i]\n\t}\n\t\
    return array.sort((a,b)=>{\n\t\treturn (a-total)%2 ? (a-total)-(b-total) : (b-total)-(a-total)\n\
    \t})\n}\n", "  let sum = 0;\n  for (let i = 0; i < array.length; i++){\n    sum\
    \ += array[i];\n  }\n  if (sum % 2 === 0){\n    array.reverse();\n  }\n  return\
    \ array;\n}\n", "    let sortedArray = [];\n    let sum = array.reduce((acc,cur)=>acc+cur);\n\
    \    if(sum%2 === 1){\n        sortedArray = array.sort((a,b)=>b-a);\n    }else{\n\
    \        sortedArray = array.sort((a,b)=>a-b);\n    }\n    return sortedArray;\n\
    }\n", "    // Write your code here\n    var result = [];\n    for (var i = 0;\
    \ i < array.length; i++){\n        if(array[i] % 2 != 0){\n            result.unshift(array[i]);\n\
    \        }\n        else{\n            result.push(array[i]);\n        }\n   \
    \ }\n    result.sort();\n    return result;\n}"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nconsole.log"
